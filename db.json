{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yolog/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/yolog/source/js/script.js","path":"js/script.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/yolog/_config.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535526300918},{"_id":"source/.DS_Store","hash":"367962a20656ed16008bc3c56712d0b467a98842","modified":1539852002774},{"_id":"themes/yolog/.DS_Store","hash":"cbd5084cfc6f250e4c8195fb6537e7b74b050d75","modified":1539850615516},{"_id":"themes/yolog/languages/default.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535527209469},{"_id":"themes/yolog/scripts/temp","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535527689803},{"_id":"source/_posts/1-23-4-.md","hash":"68758521ee44b1730166379dc0d7857b7b83d655","modified":1534831901803},{"_id":"source/_posts/1-23-4.md","hash":"68758521ee44b1730166379dc0d7857b7b83d655","modified":1534831901803},{"_id":"source/_posts/JSON-.md","hash":"1e1b1f288a8067cf46f48af3506cd7ddf9d36140","modified":1534831290535},{"_id":"source/_posts/code-.md","hash":"748850ba6df299924231881fad37eb1e212c3527","modified":1535606438903},{"_id":"source/_posts/JSON.md","hash":"1e1b1f288a8067cf46f48af3506cd7ddf9d36140","modified":1534831290535},{"_id":"source/_posts/code.md","hash":"748850ba6df299924231881fad37eb1e212c3527","modified":1535606438903},{"_id":"source/_posts/hello-world-123-.md","hash":"813c1bc31b5a61de6e645210a4792923b6cc5592","modified":1534829882267},{"_id":"source/_posts/hello-world-123.md","hash":"813c1bc31b5a61de6e645210a4792923b6cc5592","modified":1534829882267},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1539851078320},{"_id":"source/_posts/markdown-.md","hash":"19c95120386bffbfe0dfb0bd3bae32b859dddec1","modified":1534828770417},{"_id":"source/_posts/markdown.md","hash":"19c95120386bffbfe0dfb0bd3bae32b859dddec1","modified":1534828770417},{"_id":"source/_posts/released-.md","hash":"515c7355b91b7406ae1b59b1ddaaf704e4cf7e2a","modified":1538197905214},{"_id":"source/_posts/released.md","hash":"515c7355b91b7406ae1b59b1ddaaf704e4cf7e2a","modified":1538197905214},{"_id":"source/_posts/test-.md","hash":"24e89c1a7b98df2a7e7896478879b0b5f0019c92","modified":1539840436491},{"_id":"source/_posts/test.md","hash":"0ed66804743844412923c0a3721f1460879622cb","modified":1538203838003},{"_id":"themes/yolog/layout/index.pug","hash":"85a9bca8a22a5cdc38ca6ea1d5815158892d8a6a","modified":1539842417401},{"_id":"themes/yolog/layout/_layout.pug","hash":"a552acfc060bb7c92a3a92a3742e06e84d37d5aa","modified":1538975518176},{"_id":"themes/yolog/source/.DS_Store","hash":"7da6a245e0bf6c8e7ad4d30aca501d9df39e9c47","modified":1539851702672},{"_id":"themes/yolog/layout/_partial/header.pug","hash":"800b589e289f6d17d951617647aeac29ec2e6114","modified":1538987718198},{"_id":"themes/yolog/layout/_partial/meta.pug","hash":"aa6f4af04edb3257e3b7f2e1ba7f9eda71454728","modified":1538274960258},{"_id":"themes/yolog/layout/_partial/signature.pug","hash":"df6d35ad432c5e8af521efa72125dd5efa7699ec","modified":1538986648433},{"_id":"themes/yolog/layout/_partial/title.pug","hash":"4c58432443004dcf087b33a5548c0b1368ca1f60","modified":1538276062674},{"_id":"themes/yolog/source/css/_base.styl","hash":"6192fcb62e1eeab318c922ae03fdb469a028530b","modified":1538983093986},{"_id":"themes/yolog/source/css/_responsive.styl","hash":"747944c6b4afc639cd71c1192f5dd117934415c1","modified":1539843146179},{"_id":"themes/yolog/source/css/_variables.styl","hash":"531e428dfbf7796d5a78ef2e39087512ac87f1ae","modified":1539846015595},{"_id":"themes/yolog/source/css/style.styl","hash":"93b0722efaebc133c65bd429be4f9c7b13758df8","modified":1539848019993},{"_id":"themes/yolog/source/css/.DS_Store","hash":"9256cb29179ea689147bb719a02503f0aa54cf57","modified":1537843523879},{"_id":"themes/yolog/source/js/script.js","hash":"302ece64a21eec44ce72d7a00e173633e0eab0e4","modified":1538975814239},{"_id":"themes/yolog/source/css/_partial/article.styl","hash":"60745d712ebbcd3695216b774a6c774dda810643","modified":1539847928170},{"_id":"themes/yolog/source/css/_partial/header.styl","hash":"4ee976c2cbe7703b46f11895971030ca2a56638a","modified":1539840715966},{"_id":"themes/yolog/source/css/_partial/highlight.styl","hash":"c8ff52f1265401e68f03029accebd2d1648face2","modified":1539853521611},{"_id":"themes/yolog/source/css/_partial/list.styl","hash":"d160c47f484fad735a922d3d2c0e0b5c54e4a335","modified":1539841939884},{"_id":"themes/yolog/source/css/_partial/pagination.styl","hash":"02f8c2708c0ca53ae4c4cc10fd058ba6ce6e37d3","modified":1539841203958},{"_id":"themes/yolog/source/css/_partial/signature.styl","hash":"68ee3d64ba28c7ce81e19ae5891e75adbb18e180","modified":1538986785992}],"Category":[{"name":"Hexo","_id":"cjned1zpu0002748i1humo84w"},{"name":"学习","_id":"cjned1zq5000b748iqigvoksu"}],"Data":[],"Page":[],"Post":[{"title":"水电费水电费 水电费","date":"2018-03-21T05:38:35.000Z","_content":"","source":"_posts/1-23-4-.md","raw":"---\ntitle: 水电费水电费 水电费\ndate: 2018-03-21 13:38:35\ncategories: Hexo\n---\n","slug":"1-23-4-","published":1,"updated":"2018-08-21T06:11:41.803Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zpq0000748imijzahbo","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"水电费水电费 水电费","date":"2018-03-21T05:38:35.000Z","_content":"","source":"_posts/1-23-4.md","raw":"---\ntitle: 水电费水电费 水电费\ndate: 2018-03-21 13:38:35\ncategories: Hexo\n---\n","slug":"1-23-4","published":1,"updated":"2018-08-21T06:11:41.803Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zpt0001748iuyi5kdm2","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"JSON格式","date":"2017-03-21T05:07:54.000Z","_content":"","source":"_posts/JSON-.md","raw":"---\ntitle: JSON格式\ndate: 2017-03-21 13:07:54\ntags:\n---\n","slug":"JSON-","published":1,"updated":"2018-08-21T06:01:30.535Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zpw0003748i412q72bu","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"模版","_content":"\n\n模板决定了网站内容的呈现方式，每个主题至少都应包含一个 `index` 模板，以下是各页面相对应的模板名称：\n\n模板 | 用途 | 回调\n--- | --- | ---\n`index` | 首页 |\n`post` | 文章 | `index`\n`page` | 分页 | `index`\n`archive` | 归档 | `index`\n`category` | 分类归档 | `archive`\n`tag` | 标签归档 | `archive`\n\n## 布局（Layout）\n\n如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 `body` 变量的内容，如此一来模板的内容才会被显示，举例来说：\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\n生成：\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\n每个模板都默认使用 `layout` 布局，您可在 front-matter 指定其他布局，或是设为 `false` 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。\n\n## 局部模版（Partial）\n\n局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\n生成：\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n### 局部变量\n\n您可以在局部模板中指定局部变量并使用。\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\n生成：\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## 优化\n\n如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。\n\n本功能借鉴于 [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching)，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。\n\n它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\n如果您使用局部模板的话，可以更简单：\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\n但是，如果您开启了 `relative_link` 参数的话，请勿使用局部缓存功能，因为相对链接在每个页面可能不同。","source":"_posts/code-.md","raw":"---\ntitle: 模版\n---\n\n\n模板决定了网站内容的呈现方式，每个主题至少都应包含一个 `index` 模板，以下是各页面相对应的模板名称：\n\n模板 | 用途 | 回调\n--- | --- | ---\n`index` | 首页 |\n`post` | 文章 | `index`\n`page` | 分页 | `index`\n`archive` | 归档 | `index`\n`category` | 分类归档 | `archive`\n`tag` | 标签归档 | `archive`\n\n## 布局（Layout）\n\n如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 `body` 变量的内容，如此一来模板的内容才会被显示，举例来说：\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\n生成：\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\n每个模板都默认使用 `layout` 布局，您可在 front-matter 指定其他布局，或是设为 `false` 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。\n\n## 局部模版（Partial）\n\n局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\n生成：\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n### 局部变量\n\n您可以在局部模板中指定局部变量并使用。\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\n生成：\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## 优化\n\n如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。\n\n本功能借鉴于 [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching)，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。\n\n它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\n如果您使用局部模板的话，可以更简单：\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\n但是，如果您开启了 `relative_link` 参数的话，请勿使用局部缓存功能，因为相对链接在每个页面可能不同。","slug":"code-","published":1,"date":"2018-08-30T05:20:03.685Z","updated":"2018-08-30T05:20:38.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zpx0004748in87zbh6p","content":"<p>模板决定了网站内容的呈现方式，每个主题至少都应包含一个 <code>index</code> 模板，以下是各页面相对应的模板名称：</p>\n<table>\n<thead>\n<tr>\n<th>模板</th>\n<th>用途</th>\n<th>回调</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>首页</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>文章</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>分页</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>归档</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>分类归档</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>标签归档</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"布局（Layout）\"><a href=\"#布局（Layout）\" class=\"headerlink\" title=\"布局（Layout）\"></a>布局（Layout）</h2><p>如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 <code>body</code> 变量的内容，如此一来模板的内容才会被显示，举例来说：</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">index</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>每个模板都默认使用 <code>layout</code> 布局，您可在 front-matter 指定其他布局，或是设为 <code>false</code> 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。</p>\n<h2 id=\"局部模版（Partial）\"><a href=\"#局部模版（Partial）\" class=\"headerlink\" title=\"局部模版（Partial）\"></a>局部模版（Partial）</h2><p>局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"局部变量\"><a href=\"#局部变量\" class=\"headerlink\" title=\"局部变量\"></a>局部变量</h3><p>您可以在局部模板中指定局部变量并使用。</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><p>如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。</p>\n<p>本功能借鉴于 <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"noopener\">Ruby on Rails</a>，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。</p>\n<p>它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>如果您使用局部模板的话，可以更简单：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>但是，如果您开启了 <code>relative_link</code> 参数的话，请勿使用局部缓存功能，因为相对链接在每个页面可能不同。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>模板决定了网站内容的呈现方式，每个主题至少都应包含一个 <code>index</code> 模板，以下是各页面相对应的模板名称：</p>\n<table>\n<thead>\n<tr>\n<th>模板</th>\n<th>用途</th>\n<th>回调</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>首页</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>文章</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>分页</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>归档</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>分类归档</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>标签归档</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"布局（Layout）\"><a href=\"#布局（Layout）\" class=\"headerlink\" title=\"布局（Layout）\"></a>布局（Layout）</h2><p>如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 <code>body</code> 变量的内容，如此一来模板的内容才会被显示，举例来说：</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">index</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>每个模板都默认使用 <code>layout</code> 布局，您可在 front-matter 指定其他布局，或是设为 <code>false</code> 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。</p>\n<h2 id=\"局部模版（Partial）\"><a href=\"#局部模版（Partial）\" class=\"headerlink\" title=\"局部模版（Partial）\"></a>局部模版（Partial）</h2><p>局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"局部变量\"><a href=\"#局部变量\" class=\"headerlink\" title=\"局部变量\"></a>局部变量</h3><p>您可以在局部模板中指定局部变量并使用。</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><p>如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。</p>\n<p>本功能借鉴于 <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"noopener\">Ruby on Rails</a>，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。</p>\n<p>它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>如果您使用局部模板的话，可以更简单：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>但是，如果您开启了 <code>relative_link</code> 参数的话，请勿使用局部缓存功能，因为相对链接在每个页面可能不同。</p>\n"},{"title":"JSON格式","date":"2017-03-21T05:07:54.000Z","_content":"","source":"_posts/JSON.md","raw":"---\ntitle: JSON格式\ndate: 2017-03-21 13:07:54\ntags:\n---\n","slug":"JSON","published":1,"updated":"2018-08-21T06:01:30.535Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zpy0005748i5nx0wglr","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"模版","_content":"\n\n模板决定了网站内容的呈现方式，每个主题至少都应包含一个 `index` 模板，以下是各页面相对应的模板名称：\n\n模板 | 用途 | 回调\n--- | --- | ---\n`index` | 首页 |\n`post` | 文章 | `index`\n`page` | 分页 | `index`\n`archive` | 归档 | `index`\n`category` | 分类归档 | `archive`\n`tag` | 标签归档 | `archive`\n\n## 布局（Layout）\n\n如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 `body` 变量的内容，如此一来模板的内容才会被显示，举例来说：\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\n生成：\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\n每个模板都默认使用 `layout` 布局，您可在 front-matter 指定其他布局，或是设为 `false` 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。\n\n## 局部模版（Partial）\n\n局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\n生成：\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n### 局部变量\n\n您可以在局部模板中指定局部变量并使用。\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\n生成：\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## 优化\n\n如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。\n\n本功能借鉴于 [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching)，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。\n\n它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\n如果您使用局部模板的话，可以更简单：\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\n但是，如果您开启了 `relative_link` 参数的话，请勿使用局部缓存功能，因为相对链接在每个页面可能不同。","source":"_posts/code.md","raw":"---\ntitle: 模版\n---\n\n\n模板决定了网站内容的呈现方式，每个主题至少都应包含一个 `index` 模板，以下是各页面相对应的模板名称：\n\n模板 | 用途 | 回调\n--- | --- | ---\n`index` | 首页 |\n`post` | 文章 | `index`\n`page` | 分页 | `index`\n`archive` | 归档 | `index`\n`category` | 分类归档 | `archive`\n`tag` | 标签归档 | `archive`\n\n## 布局（Layout）\n\n如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 `body` 变量的内容，如此一来模板的内容才会被显示，举例来说：\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\n生成：\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\n每个模板都默认使用 `layout` 布局，您可在 front-matter 指定其他布局，或是设为 `false` 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。\n\n## 局部模版（Partial）\n\n局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\n生成：\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n### 局部变量\n\n您可以在局部模板中指定局部变量并使用。\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\n生成：\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## 优化\n\n如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。\n\n本功能借鉴于 [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching)，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。\n\n它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\n如果您使用局部模板的话，可以更简单：\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\n但是，如果您开启了 `relative_link` 参数的话，请勿使用局部缓存功能，因为相对链接在每个页面可能不同。","slug":"code","published":1,"date":"2018-08-30T05:20:03.685Z","updated":"2018-08-30T05:20:38.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zq00007748iebkqkpi3","content":"<p>模板决定了网站内容的呈现方式，每个主题至少都应包含一个 <code>index</code> 模板，以下是各页面相对应的模板名称：</p>\n<table>\n<thead>\n<tr>\n<th>模板</th>\n<th>用途</th>\n<th>回调</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>首页</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>文章</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>分页</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>归档</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>分类归档</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>标签归档</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"布局（Layout）\"><a href=\"#布局（Layout）\" class=\"headerlink\" title=\"布局（Layout）\"></a>布局（Layout）</h2><p>如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 <code>body</code> 变量的内容，如此一来模板的内容才会被显示，举例来说：</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">index</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>每个模板都默认使用 <code>layout</code> 布局，您可在 front-matter 指定其他布局，或是设为 <code>false</code> 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。</p>\n<h2 id=\"局部模版（Partial）\"><a href=\"#局部模版（Partial）\" class=\"headerlink\" title=\"局部模版（Partial）\"></a>局部模版（Partial）</h2><p>局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"局部变量\"><a href=\"#局部变量\" class=\"headerlink\" title=\"局部变量\"></a>局部变量</h3><p>您可以在局部模板中指定局部变量并使用。</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><p>如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。</p>\n<p>本功能借鉴于 <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"noopener\">Ruby on Rails</a>，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。</p>\n<p>它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>如果您使用局部模板的话，可以更简单：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>但是，如果您开启了 <code>relative_link</code> 参数的话，请勿使用局部缓存功能，因为相对链接在每个页面可能不同。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>模板决定了网站内容的呈现方式，每个主题至少都应包含一个 <code>index</code> 模板，以下是各页面相对应的模板名称：</p>\n<table>\n<thead>\n<tr>\n<th>模板</th>\n<th>用途</th>\n<th>回调</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>首页</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>文章</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>分页</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>归档</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>分类归档</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>标签归档</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"布局（Layout）\"><a href=\"#布局（Layout）\" class=\"headerlink\" title=\"布局（Layout）\"></a>布局（Layout）</h2><p>如果页面结构类似，例如两个模板都有页首（Header）和页脚（Footer），您可考虑通过「布局」让两个模板共享相同的结构。一个布局文件必须要能显示 <code>body</code> 变量的内容，如此一来模板的内容才会被显示，举例来说：</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">index</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>每个模板都默认使用 <code>layout</code> 布局，您可在 front-matter 指定其他布局，或是设为 <code>false</code> 来关闭布局功能，您甚至可在布局中再使用其他布局来建立嵌套布局。</p>\n<h2 id=\"局部模版（Partial）\"><a href=\"#局部模版（Partial）\" class=\"headerlink\" title=\"局部模版（Partial）\"></a>局部模版（Partial）</h2><p>局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"局部变量\"><a href=\"#局部变量\" class=\"headerlink\" title=\"局部变量\"></a>局部变量</h3><p>您可以在局部模板中指定局部变量并使用。</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><p>如果您的主题太过于复杂，或是需要生成的文件量太过于庞大，可能会大幅降低性能，除了简化主题外，您可以考虑 Hexo 2.7 新增的局部缓存（Fragment Caching） 功能。</p>\n<p>本功能借鉴于 <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"noopener\">Ruby on Rails</a>，它储存局部内容，下次便能直接使用缓存内容，可以减少文件夹查询并使生成速度更快。</p>\n<p>它可用于页首、页脚、侧边栏等文件不常变动的位置，举例来说：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>如果您使用局部模板的话，可以更简单：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p>但是，如果您开启了 <code>relative_link</code> 参数的话，请勿使用局部缓存功能，因为相对链接在每个页面可能不同。</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world-123-.md","raw":"---\ntitle: Hello World\ncategories: 学习\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world-123-","published":1,"date":"2018-08-15T10:05:08.895Z","updated":"2018-08-21T05:38:02.267Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zq20008748iz9abk8ae","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world-123.md","raw":"---\ntitle: Hello World\ncategories: 学习\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world-123","published":1,"date":"2018-08-15T10:05:08.895Z","updated":"2018-08-21T05:38:02.267Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zq3000a748ijmh96rww","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-10-18T08:24:38.320Z","updated":"2018-10-18T08:24:38.320Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zq5000c748i68eh73hq","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"markdown语法","date":"2018-08-19T10:05:51.000Z","_content":"\n[https://hexo.io/zh-cn/](https://hexo.io/zh-cn/)\n\n[https://guides.github.com/features/mastering-markdown/](https://guides.github.com/features/mastering-markdown/)\n\n# This is an <h1> tag\n## This is an <h2> tag\n###### This is an <h6> tag\n\n*This text will be italic*\n_This will also be italic_\n\n**This text will be bold**\n__This will also be bold__\n\n_You **can** combine them_\n\n* Item 1\n* Item 2\n  * Item 2a\n  * Item 2b\n\n1. Item 1\n1. Item 2\n1. Item 3\n  1. Item 3a\n  1. Item 3b\n\n![Image of Yaktocat](https://octodex.github.com/images/yaktocat.png)\n\n[GitHub](http://github.com)\n\nIf you'd like to quote someone, use the > character before the line:\n\n> Coffee. The finest organic suspension ever devised... I beat the Borg with it.\n> - Captain Janeway\n\n    if (isAwesome){\n      return true\n    }\n\n\n```javascript\nif (isAwesome){\n  return true\n}\n```\n\nI think you should use an\n`<addr>` element here instead.\n\n\n<table>\n\t<tr>\n\t\t<td>1</td>\n\t\t<td>2</td>\n\t</tr>\n</table>\n\n","source":"_posts/markdown-.md","raw":"---\ntitle: markdown语法\ndate: 2018-08-19 18:05:51\ntags:\n---\n\n[https://hexo.io/zh-cn/](https://hexo.io/zh-cn/)\n\n[https://guides.github.com/features/mastering-markdown/](https://guides.github.com/features/mastering-markdown/)\n\n# This is an <h1> tag\n## This is an <h2> tag\n###### This is an <h6> tag\n\n*This text will be italic*\n_This will also be italic_\n\n**This text will be bold**\n__This will also be bold__\n\n_You **can** combine them_\n\n* Item 1\n* Item 2\n  * Item 2a\n  * Item 2b\n\n1. Item 1\n1. Item 2\n1. Item 3\n  1. Item 3a\n  1. Item 3b\n\n![Image of Yaktocat](https://octodex.github.com/images/yaktocat.png)\n\n[GitHub](http://github.com)\n\nIf you'd like to quote someone, use the > character before the line:\n\n> Coffee. The finest organic suspension ever devised... I beat the Borg with it.\n> - Captain Janeway\n\n    if (isAwesome){\n      return true\n    }\n\n\n```javascript\nif (isAwesome){\n  return true\n}\n```\n\nI think you should use an\n`<addr>` element here instead.\n\n\n<table>\n\t<tr>\n\t\t<td>1</td>\n\t\t<td>2</td>\n\t</tr>\n</table>\n\n","slug":"markdown-","published":1,"updated":"2018-08-21T05:19:30.417Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zq6000e748i54pffk1i","content":"<p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/</a></p>\n<p><a href=\"https://guides.github.com/features/mastering-markdown/\" target=\"_blank\" rel=\"noopener\">https://guides.github.com/features/mastering-markdown/</a></p>\n<h1 id=\"This-is-an-tag\"><a href=\"#This-is-an-tag\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h1> tag</h1><h2 id=\"This-is-an-tag-1\"><a href=\"#This-is-an-tag-1\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h2> tag</h2><h6 id=\"This-is-an-tag-2\"><a href=\"#This-is-an-tag-2\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h6> tag</h6><p><em>This text will be italic</em><br><em>This will also be italic</em></p>\n<p><strong>This text will be bold</strong><br><strong>This will also be bold</strong></p>\n<p><em>You <strong>can</strong> combine them</em></p>\n<ul>\n<li>Item 1</li>\n<li>Item 2<ul>\n<li>Item 2a</li>\n<li>Item 2b</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3<ol>\n<li>Item 3a</li>\n<li>Item 3b</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://octodex.github.com/images/yaktocat.png\" alt=\"Image of Yaktocat\"></p>\n<p><a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">GitHub</a></p>\n<p>If you’d like to quote someone, use the &gt; character before the line:</p>\n<blockquote>\n<p>Coffee. The finest organic suspension ever devised… I beat the Borg with it.</p>\n<ul>\n<li>Captain Janeway</li>\n</ul>\n</blockquote>\n<pre><code>if (isAwesome){\n  return true\n}\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (isAwesome)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>I think you should use an<br><code>&lt;addr&gt;</code> element here instead.</p>\n<table><br>    <tr><br>        <td>1</td><br>        <td>2</td><br>    </tr><br></table>\n\n</h6></h2></h1>","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/</a></p>\n<p><a href=\"https://guides.github.com/features/mastering-markdown/\" target=\"_blank\" rel=\"noopener\">https://guides.github.com/features/mastering-markdown/</a></p>\n<h1 id=\"This-is-an-tag\"><a href=\"#This-is-an-tag\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h1> tag</h1><h2 id=\"This-is-an-tag-1\"><a href=\"#This-is-an-tag-1\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h2> tag</h2><h6 id=\"This-is-an-tag-2\"><a href=\"#This-is-an-tag-2\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h6> tag</h6><p><em>This text will be italic</em><br><em>This will also be italic</em></p>\n<p><strong>This text will be bold</strong><br><strong>This will also be bold</strong></p>\n<p><em>You <strong>can</strong> combine them</em></p>\n<ul>\n<li>Item 1</li>\n<li>Item 2<ul>\n<li>Item 2a</li>\n<li>Item 2b</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3<ol>\n<li>Item 3a</li>\n<li>Item 3b</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://octodex.github.com/images/yaktocat.png\" alt=\"Image of Yaktocat\"></p>\n<p><a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">GitHub</a></p>\n<p>If you’d like to quote someone, use the &gt; character before the line:</p>\n<blockquote>\n<p>Coffee. The finest organic suspension ever devised… I beat the Borg with it.</p>\n<ul>\n<li>Captain Janeway</li>\n</ul>\n</blockquote>\n<pre><code>if (isAwesome){\n  return true\n}\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (isAwesome)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>I think you should use an<br><code>&lt;addr&gt;</code> element here instead.</p>\n<table><br>    <tr><br>        <td>1</td><br>        <td>2</td><br>    </tr><br></table>\n\n</h6></h2></h1>"},{"title":"markdown语法","date":"2018-08-19T10:05:51.000Z","_content":"\n[https://hexo.io/zh-cn/](https://hexo.io/zh-cn/)\n\n[https://guides.github.com/features/mastering-markdown/](https://guides.github.com/features/mastering-markdown/)\n\n# This is an <h1> tag\n## This is an <h2> tag\n###### This is an <h6> tag\n\n*This text will be italic*\n_This will also be italic_\n\n**This text will be bold**\n__This will also be bold__\n\n_You **can** combine them_\n\n* Item 1\n* Item 2\n  * Item 2a\n  * Item 2b\n\n1. Item 1\n1. Item 2\n1. Item 3\n  1. Item 3a\n  1. Item 3b\n\n![Image of Yaktocat](https://octodex.github.com/images/yaktocat.png)\n\n[GitHub](http://github.com)\n\nIf you'd like to quote someone, use the > character before the line:\n\n> Coffee. The finest organic suspension ever devised... I beat the Borg with it.\n> - Captain Janeway\n\n    if (isAwesome){\n      return true\n    }\n\n\n```javascript\nif (isAwesome){\n  return true\n}\n```\n\nI think you should use an\n`<addr>` element here instead.\n\n\n<table>\n\t<tr>\n\t\t<td>1</td>\n\t\t<td>2</td>\n\t</tr>\n</table>\n\n","source":"_posts/markdown.md","raw":"---\ntitle: markdown语法\ndate: 2018-08-19 18:05:51\ntags:\n---\n\n[https://hexo.io/zh-cn/](https://hexo.io/zh-cn/)\n\n[https://guides.github.com/features/mastering-markdown/](https://guides.github.com/features/mastering-markdown/)\n\n# This is an <h1> tag\n## This is an <h2> tag\n###### This is an <h6> tag\n\n*This text will be italic*\n_This will also be italic_\n\n**This text will be bold**\n__This will also be bold__\n\n_You **can** combine them_\n\n* Item 1\n* Item 2\n  * Item 2a\n  * Item 2b\n\n1. Item 1\n1. Item 2\n1. Item 3\n  1. Item 3a\n  1. Item 3b\n\n![Image of Yaktocat](https://octodex.github.com/images/yaktocat.png)\n\n[GitHub](http://github.com)\n\nIf you'd like to quote someone, use the > character before the line:\n\n> Coffee. The finest organic suspension ever devised... I beat the Borg with it.\n> - Captain Janeway\n\n    if (isAwesome){\n      return true\n    }\n\n\n```javascript\nif (isAwesome){\n  return true\n}\n```\n\nI think you should use an\n`<addr>` element here instead.\n\n\n<table>\n\t<tr>\n\t\t<td>1</td>\n\t\t<td>2</td>\n\t</tr>\n</table>\n\n","slug":"markdown","published":1,"updated":"2018-08-21T05:19:30.417Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zq8000f748ihsn3cgeo","content":"<p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/</a></p>\n<p><a href=\"https://guides.github.com/features/mastering-markdown/\" target=\"_blank\" rel=\"noopener\">https://guides.github.com/features/mastering-markdown/</a></p>\n<h1 id=\"This-is-an-tag\"><a href=\"#This-is-an-tag\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h1> tag</h1><h2 id=\"This-is-an-tag-1\"><a href=\"#This-is-an-tag-1\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h2> tag</h2><h6 id=\"This-is-an-tag-2\"><a href=\"#This-is-an-tag-2\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h6> tag</h6><p><em>This text will be italic</em><br><em>This will also be italic</em></p>\n<p><strong>This text will be bold</strong><br><strong>This will also be bold</strong></p>\n<p><em>You <strong>can</strong> combine them</em></p>\n<ul>\n<li>Item 1</li>\n<li>Item 2<ul>\n<li>Item 2a</li>\n<li>Item 2b</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3<ol>\n<li>Item 3a</li>\n<li>Item 3b</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://octodex.github.com/images/yaktocat.png\" alt=\"Image of Yaktocat\"></p>\n<p><a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">GitHub</a></p>\n<p>If you’d like to quote someone, use the &gt; character before the line:</p>\n<blockquote>\n<p>Coffee. The finest organic suspension ever devised… I beat the Borg with it.</p>\n<ul>\n<li>Captain Janeway</li>\n</ul>\n</blockquote>\n<pre><code>if (isAwesome){\n  return true\n}\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (isAwesome)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>I think you should use an<br><code>&lt;addr&gt;</code> element here instead.</p>\n<table><br>    <tr><br>        <td>1</td><br>        <td>2</td><br>    </tr><br></table>\n\n</h6></h2></h1>","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/</a></p>\n<p><a href=\"https://guides.github.com/features/mastering-markdown/\" target=\"_blank\" rel=\"noopener\">https://guides.github.com/features/mastering-markdown/</a></p>\n<h1 id=\"This-is-an-tag\"><a href=\"#This-is-an-tag\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h1> tag</h1><h2 id=\"This-is-an-tag-1\"><a href=\"#This-is-an-tag-1\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h2> tag</h2><h6 id=\"This-is-an-tag-2\"><a href=\"#This-is-an-tag-2\" class=\"headerlink\" title=\"This is an  tag\"></a>This is an <h6> tag</h6><p><em>This text will be italic</em><br><em>This will also be italic</em></p>\n<p><strong>This text will be bold</strong><br><strong>This will also be bold</strong></p>\n<p><em>You <strong>can</strong> combine them</em></p>\n<ul>\n<li>Item 1</li>\n<li>Item 2<ul>\n<li>Item 2a</li>\n<li>Item 2b</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3<ol>\n<li>Item 3a</li>\n<li>Item 3b</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"https://octodex.github.com/images/yaktocat.png\" alt=\"Image of Yaktocat\"></p>\n<p><a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">GitHub</a></p>\n<p>If you’d like to quote someone, use the &gt; character before the line:</p>\n<blockquote>\n<p>Coffee. The finest organic suspension ever devised… I beat the Borg with it.</p>\n<ul>\n<li>Captain Janeway</li>\n</ul>\n</blockquote>\n<pre><code>if (isAwesome){\n  return true\n}\n</code></pre><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (isAwesome)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>I think you should use an<br><code>&lt;addr&gt;</code> element here instead.</p>\n<table><br>    <tr><br>        <td>1</td><br>        <td>2</td><br>    </tr><br></table>\n\n</h6></h2></h1>"},{"title":"Hexo 3.2 Released","date":"2018-09-29T10:05:51.000Z","_content":"\nIt has been a long time that Hexo is poor at handling large website. ([#710], [#1124], [#283], [#1187], [#550], [#1769], etc.) We tried hard to solve this problem and there're several improvements in Hexo 3.2.\n\n## It's all about speed\n\n### Caching rendered contents\n\nRendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) **1.7x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold processing | 6.094s | 6.454s\nHot processing | 5.154s | 3.002s\n\n### Lazy load language files of highlight.js\n\n[highlight.js is slow][#1036]. Especially when it try to detect the language. Lazy load language files make processing faster and don't have to load bunch of unused language files. However there're some limitations:\n\n- Auto detect must be disabled.\n- You have to specify language in code block.\n\nYou can set auto detect disabled in `_config.yml`.\n\n``` yaml\nhighlight:\n  auto_detect: false\n```\n\n### Templates precompilation\n\nTheme templates are precompiled if possible. It makes generation speed **2x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold generation | 27.2s | 13.6s\nHot generation | 24.4s | 12.6s\n\nThe following renderers have already supported this feature.\n\n- [hexo-renderer-ejs]\n- [hexo-renderer-jade]\n- [hexo-renderer-swig]\n\nAnd it's easy to implement precompilation for renderers. Just add a `compile` function to the renderer. Take EJS renderer for example:\n\n``` js\nvar ejs = require('ejs');\nvar assign = require('object-assign');\n\nfunction ejsRenderer(data, locals) {\n  return ejs.render(data.text, assign({filename: data.path}, locals));\n}\n\nejsRenderer.compile = function(data) {\n  return ejs.compile(data.text, {\n    filename: data.path\n  });\n};\n\nmodule.exports = ejsRenderer;\n```\n\n## Include/exclude source files\n\nYou can include/exclude specified source files in `_config.yml`.\n\n``` yaml\ninclude:\n  - .htaccess\n\nexclude:\n  - tmp/**/*\n```\n\nMore info: [changelog], [benchmark results].\n\n[#710]: https://github.com/hexojs/hexo/issues/710\n[#1124]: https://github.com/hexojs/hexo/issues/1124\n[#283]: https://github.com/hexojs/hexo/issues/283\n[#1187]: https://github.com/hexojs/hexo/issues/1187\n[#550]: https://github.com/hexojs/hexo/issues/550\n[#1769]: https://github.com/hexojs/hexo/issues/1769\n[#1036]: https://github.com/hexojs/hexo/issues/1036\n[hexo-renderer-ejs]: https://github.com/hexojs/hexo-renderer-ejs\n[hexo-renderer-jade]: https://github.com/hexojs/hexo-renderer-jade\n[hexo-renderer-swig]: https://github.com/hexojs/hexo-renderer-swig\n[changelog]: https://github.com/hexojs/hexo/releases\n[benchmark results]: https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing","source":"_posts/released-.md","raw":"---\ntitle: Hexo 3.2 Released\ndate: 2018-09-29 18:05:51\ncategories: 学习\n---\n\nIt has been a long time that Hexo is poor at handling large website. ([#710], [#1124], [#283], [#1187], [#550], [#1769], etc.) We tried hard to solve this problem and there're several improvements in Hexo 3.2.\n\n## It's all about speed\n\n### Caching rendered contents\n\nRendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) **1.7x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold processing | 6.094s | 6.454s\nHot processing | 5.154s | 3.002s\n\n### Lazy load language files of highlight.js\n\n[highlight.js is slow][#1036]. Especially when it try to detect the language. Lazy load language files make processing faster and don't have to load bunch of unused language files. However there're some limitations:\n\n- Auto detect must be disabled.\n- You have to specify language in code block.\n\nYou can set auto detect disabled in `_config.yml`.\n\n``` yaml\nhighlight:\n  auto_detect: false\n```\n\n### Templates precompilation\n\nTheme templates are precompiled if possible. It makes generation speed **2x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold generation | 27.2s | 13.6s\nHot generation | 24.4s | 12.6s\n\nThe following renderers have already supported this feature.\n\n- [hexo-renderer-ejs]\n- [hexo-renderer-jade]\n- [hexo-renderer-swig]\n\nAnd it's easy to implement precompilation for renderers. Just add a `compile` function to the renderer. Take EJS renderer for example:\n\n``` js\nvar ejs = require('ejs');\nvar assign = require('object-assign');\n\nfunction ejsRenderer(data, locals) {\n  return ejs.render(data.text, assign({filename: data.path}, locals));\n}\n\nejsRenderer.compile = function(data) {\n  return ejs.compile(data.text, {\n    filename: data.path\n  });\n};\n\nmodule.exports = ejsRenderer;\n```\n\n## Include/exclude source files\n\nYou can include/exclude specified source files in `_config.yml`.\n\n``` yaml\ninclude:\n  - .htaccess\n\nexclude:\n  - tmp/**/*\n```\n\nMore info: [changelog], [benchmark results].\n\n[#710]: https://github.com/hexojs/hexo/issues/710\n[#1124]: https://github.com/hexojs/hexo/issues/1124\n[#283]: https://github.com/hexojs/hexo/issues/283\n[#1187]: https://github.com/hexojs/hexo/issues/1187\n[#550]: https://github.com/hexojs/hexo/issues/550\n[#1769]: https://github.com/hexojs/hexo/issues/1769\n[#1036]: https://github.com/hexojs/hexo/issues/1036\n[hexo-renderer-ejs]: https://github.com/hexojs/hexo-renderer-ejs\n[hexo-renderer-jade]: https://github.com/hexojs/hexo-renderer-jade\n[hexo-renderer-swig]: https://github.com/hexojs/hexo-renderer-swig\n[changelog]: https://github.com/hexojs/hexo/releases\n[benchmark results]: https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing","slug":"released-","published":1,"updated":"2018-09-29T05:11:45.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zq9000h748i6nb8h4wb","content":"<p>It has been a long time that Hexo is poor at handling large website. (<a href=\"https://github.com/hexojs/hexo/issues/710\" target=\"_blank\" rel=\"noopener\">#710</a>, <a href=\"https://github.com/hexojs/hexo/issues/1124\" target=\"_blank\" rel=\"noopener\">#1124</a>, <a href=\"https://github.com/hexojs/hexo/issues/283\" target=\"_blank\" rel=\"noopener\">#283</a>, <a href=\"https://github.com/hexojs/hexo/issues/1187\" target=\"_blank\" rel=\"noopener\">#1187</a>, <a href=\"https://github.com/hexojs/hexo/issues/550\" target=\"_blank\" rel=\"noopener\">#550</a>, <a href=\"https://github.com/hexojs/hexo/issues/1769\" target=\"_blank\" rel=\"noopener\">#1769</a>, etc.) We tried hard to solve this problem and there’re several improvements in Hexo 3.2.</p>\n<h2 id=\"It’s-all-about-speed\"><a href=\"#It’s-all-about-speed\" class=\"headerlink\" title=\"It’s all about speed\"></a>It’s all about speed</h2><h3 id=\"Caching-rendered-contents\"><a href=\"#Caching-rendered-contents\" class=\"headerlink\" title=\"Caching rendered contents\"></a>Caching rendered contents</h3><p>Rendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) <strong>1.7x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold processing</td>\n<td>6.094s</td>\n<td>6.454s</td>\n</tr>\n<tr>\n<td>Hot processing</td>\n<td>5.154s</td>\n<td>3.002s</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Lazy-load-language-files-of-highlight-js\"><a href=\"#Lazy-load-language-files-of-highlight-js\" class=\"headerlink\" title=\"Lazy load language files of highlight.js\"></a>Lazy load language files of highlight.js</h3><p><a href=\"https://github.com/hexojs/hexo/issues/1036\" target=\"_blank\" rel=\"noopener\">highlight.js is slow</a>. Especially when it try to detect the language. Lazy load language files make processing faster and don’t have to load bunch of unused language files. However there’re some limitations:</p>\n<ul>\n<li>Auto detect must be disabled.</li>\n<li>You have to specify language in code block.</li>\n</ul>\n<p>You can set auto detect disabled in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\"><span class=\"attr\">  auto_detect:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Templates-precompilation\"><a href=\"#Templates-precompilation\" class=\"headerlink\" title=\"Templates precompilation\"></a>Templates precompilation</h3><p>Theme templates are precompiled if possible. It makes generation speed <strong>2x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold generation</td>\n<td>27.2s</td>\n<td>13.6s</td>\n</tr>\n<tr>\n<td>Hot generation</td>\n<td>24.4s</td>\n<td>12.6s</td>\n</tr>\n</tbody>\n</table>\n<p>The following renderers have already supported this feature.</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"noopener\">hexo-renderer-ejs</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"noopener\">hexo-renderer-jade</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-swig\" target=\"_blank\" rel=\"noopener\">hexo-renderer-swig</a></li>\n</ul>\n<p>And it’s easy to implement precompilation for renderers. Just add a <code>compile</code> function to the renderer. Take EJS renderer for example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> assign = <span class=\"built_in\">require</span>(<span class=\"string\">'object-assign'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ejsRenderer</span>(<span class=\"params\">data, locals</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, assign(&#123;<span class=\"attr\">filename</span>: data.path&#125;, locals));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ejsRenderer.compile = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.compile(data.text, &#123;</span><br><span class=\"line\">    filename: data.path</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = ejsRenderer;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-exclude-source-files\"><a href=\"#Include-exclude-source-files\" class=\"headerlink\" title=\"Include/exclude source files\"></a>Include/exclude source files</h2><p>You can include/exclude specified source files in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">include:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.htaccess</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">exclude:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">tmp/**/*</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://github.com/hexojs/hexo/releases\" target=\"_blank\" rel=\"noopener\">changelog</a>, <a href=\"https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing\" target=\"_blank\" rel=\"noopener\">benchmark results</a>.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>It has been a long time that Hexo is poor at handling large website. (<a href=\"https://github.com/hexojs/hexo/issues/710\" target=\"_blank\" rel=\"noopener\">#710</a>, <a href=\"https://github.com/hexojs/hexo/issues/1124\" target=\"_blank\" rel=\"noopener\">#1124</a>, <a href=\"https://github.com/hexojs/hexo/issues/283\" target=\"_blank\" rel=\"noopener\">#283</a>, <a href=\"https://github.com/hexojs/hexo/issues/1187\" target=\"_blank\" rel=\"noopener\">#1187</a>, <a href=\"https://github.com/hexojs/hexo/issues/550\" target=\"_blank\" rel=\"noopener\">#550</a>, <a href=\"https://github.com/hexojs/hexo/issues/1769\" target=\"_blank\" rel=\"noopener\">#1769</a>, etc.) We tried hard to solve this problem and there’re several improvements in Hexo 3.2.</p>\n<h2 id=\"It’s-all-about-speed\"><a href=\"#It’s-all-about-speed\" class=\"headerlink\" title=\"It’s all about speed\"></a>It’s all about speed</h2><h3 id=\"Caching-rendered-contents\"><a href=\"#Caching-rendered-contents\" class=\"headerlink\" title=\"Caching rendered contents\"></a>Caching rendered contents</h3><p>Rendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) <strong>1.7x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold processing</td>\n<td>6.094s</td>\n<td>6.454s</td>\n</tr>\n<tr>\n<td>Hot processing</td>\n<td>5.154s</td>\n<td>3.002s</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Lazy-load-language-files-of-highlight-js\"><a href=\"#Lazy-load-language-files-of-highlight-js\" class=\"headerlink\" title=\"Lazy load language files of highlight.js\"></a>Lazy load language files of highlight.js</h3><p><a href=\"https://github.com/hexojs/hexo/issues/1036\" target=\"_blank\" rel=\"noopener\">highlight.js is slow</a>. Especially when it try to detect the language. Lazy load language files make processing faster and don’t have to load bunch of unused language files. However there’re some limitations:</p>\n<ul>\n<li>Auto detect must be disabled.</li>\n<li>You have to specify language in code block.</li>\n</ul>\n<p>You can set auto detect disabled in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\"><span class=\"attr\">  auto_detect:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Templates-precompilation\"><a href=\"#Templates-precompilation\" class=\"headerlink\" title=\"Templates precompilation\"></a>Templates precompilation</h3><p>Theme templates are precompiled if possible. It makes generation speed <strong>2x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold generation</td>\n<td>27.2s</td>\n<td>13.6s</td>\n</tr>\n<tr>\n<td>Hot generation</td>\n<td>24.4s</td>\n<td>12.6s</td>\n</tr>\n</tbody>\n</table>\n<p>The following renderers have already supported this feature.</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"noopener\">hexo-renderer-ejs</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"noopener\">hexo-renderer-jade</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-swig\" target=\"_blank\" rel=\"noopener\">hexo-renderer-swig</a></li>\n</ul>\n<p>And it’s easy to implement precompilation for renderers. Just add a <code>compile</code> function to the renderer. Take EJS renderer for example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> assign = <span class=\"built_in\">require</span>(<span class=\"string\">'object-assign'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ejsRenderer</span>(<span class=\"params\">data, locals</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, assign(&#123;<span class=\"attr\">filename</span>: data.path&#125;, locals));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ejsRenderer.compile = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.compile(data.text, &#123;</span><br><span class=\"line\">    filename: data.path</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = ejsRenderer;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-exclude-source-files\"><a href=\"#Include-exclude-source-files\" class=\"headerlink\" title=\"Include/exclude source files\"></a>Include/exclude source files</h2><p>You can include/exclude specified source files in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">include:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.htaccess</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">exclude:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">tmp/**/*</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://github.com/hexojs/hexo/releases\" target=\"_blank\" rel=\"noopener\">changelog</a>, <a href=\"https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing\" target=\"_blank\" rel=\"noopener\">benchmark results</a>.</p>\n"},{"title":"Hexo 3.2 Released","date":"2018-09-29T10:05:51.000Z","_content":"\nIt has been a long time that Hexo is poor at handling large website. ([#710], [#1124], [#283], [#1187], [#550], [#1769], etc.) We tried hard to solve this problem and there're several improvements in Hexo 3.2.\n\n## It's all about speed\n\n### Caching rendered contents\n\nRendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) **1.7x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold processing | 6.094s | 6.454s\nHot processing | 5.154s | 3.002s\n\n### Lazy load language files of highlight.js\n\n[highlight.js is slow][#1036]. Especially when it try to detect the language. Lazy load language files make processing faster and don't have to load bunch of unused language files. However there're some limitations:\n\n- Auto detect must be disabled.\n- You have to specify language in code block.\n\nYou can set auto detect disabled in `_config.yml`.\n\n``` yaml\nhighlight:\n  auto_detect: false\n```\n\n### Templates precompilation\n\nTheme templates are precompiled if possible. It makes generation speed **2x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold generation | 27.2s | 13.6s\nHot generation | 24.4s | 12.6s\n\nThe following renderers have already supported this feature.\n\n- [hexo-renderer-ejs]\n- [hexo-renderer-jade]\n- [hexo-renderer-swig]\n\nAnd it's easy to implement precompilation for renderers. Just add a `compile` function to the renderer. Take EJS renderer for example:\n\n``` js\nvar ejs = require('ejs');\nvar assign = require('object-assign');\n\nfunction ejsRenderer(data, locals) {\n  return ejs.render(data.text, assign({filename: data.path}, locals));\n}\n\nejsRenderer.compile = function(data) {\n  return ejs.compile(data.text, {\n    filename: data.path\n  });\n};\n\nmodule.exports = ejsRenderer;\n```\n\n## Include/exclude source files\n\nYou can include/exclude specified source files in `_config.yml`.\n\n``` yaml\ninclude:\n  - .htaccess\n\nexclude:\n  - tmp/**/*\n```\n\nMore info: [changelog], [benchmark results].\n\n[#710]: https://github.com/hexojs/hexo/issues/710\n[#1124]: https://github.com/hexojs/hexo/issues/1124\n[#283]: https://github.com/hexojs/hexo/issues/283\n[#1187]: https://github.com/hexojs/hexo/issues/1187\n[#550]: https://github.com/hexojs/hexo/issues/550\n[#1769]: https://github.com/hexojs/hexo/issues/1769\n[#1036]: https://github.com/hexojs/hexo/issues/1036\n[hexo-renderer-ejs]: https://github.com/hexojs/hexo-renderer-ejs\n[hexo-renderer-jade]: https://github.com/hexojs/hexo-renderer-jade\n[hexo-renderer-swig]: https://github.com/hexojs/hexo-renderer-swig\n[changelog]: https://github.com/hexojs/hexo/releases\n[benchmark results]: https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing","source":"_posts/released.md","raw":"---\ntitle: Hexo 3.2 Released\ndate: 2018-09-29 18:05:51\ncategories: 学习\n---\n\nIt has been a long time that Hexo is poor at handling large website. ([#710], [#1124], [#283], [#1187], [#550], [#1769], etc.) We tried hard to solve this problem and there're several improvements in Hexo 3.2.\n\n## It's all about speed\n\n### Caching rendered contents\n\nRendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) **1.7x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold processing | 6.094s | 6.454s\nHot processing | 5.154s | 3.002s\n\n### Lazy load language files of highlight.js\n\n[highlight.js is slow][#1036]. Especially when it try to detect the language. Lazy load language files make processing faster and don't have to load bunch of unused language files. However there're some limitations:\n\n- Auto detect must be disabled.\n- You have to specify language in code block.\n\nYou can set auto detect disabled in `_config.yml`.\n\n``` yaml\nhighlight:\n  auto_detect: false\n```\n\n### Templates precompilation\n\nTheme templates are precompiled if possible. It makes generation speed **2x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold generation | 27.2s | 13.6s\nHot generation | 24.4s | 12.6s\n\nThe following renderers have already supported this feature.\n\n- [hexo-renderer-ejs]\n- [hexo-renderer-jade]\n- [hexo-renderer-swig]\n\nAnd it's easy to implement precompilation for renderers. Just add a `compile` function to the renderer. Take EJS renderer for example:\n\n``` js\nvar ejs = require('ejs');\nvar assign = require('object-assign');\n\nfunction ejsRenderer(data, locals) {\n  return ejs.render(data.text, assign({filename: data.path}, locals));\n}\n\nejsRenderer.compile = function(data) {\n  return ejs.compile(data.text, {\n    filename: data.path\n  });\n};\n\nmodule.exports = ejsRenderer;\n```\n\n## Include/exclude source files\n\nYou can include/exclude specified source files in `_config.yml`.\n\n``` yaml\ninclude:\n  - .htaccess\n\nexclude:\n  - tmp/**/*\n```\n\nMore info: [changelog], [benchmark results].\n\n[#710]: https://github.com/hexojs/hexo/issues/710\n[#1124]: https://github.com/hexojs/hexo/issues/1124\n[#283]: https://github.com/hexojs/hexo/issues/283\n[#1187]: https://github.com/hexojs/hexo/issues/1187\n[#550]: https://github.com/hexojs/hexo/issues/550\n[#1769]: https://github.com/hexojs/hexo/issues/1769\n[#1036]: https://github.com/hexojs/hexo/issues/1036\n[hexo-renderer-ejs]: https://github.com/hexojs/hexo-renderer-ejs\n[hexo-renderer-jade]: https://github.com/hexojs/hexo-renderer-jade\n[hexo-renderer-swig]: https://github.com/hexojs/hexo-renderer-swig\n[changelog]: https://github.com/hexojs/hexo/releases\n[benchmark results]: https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing","slug":"released","published":1,"updated":"2018-09-29T05:11:45.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zqa000i748imudx66rk","content":"<p>It has been a long time that Hexo is poor at handling large website. (<a href=\"https://github.com/hexojs/hexo/issues/710\" target=\"_blank\" rel=\"noopener\">#710</a>, <a href=\"https://github.com/hexojs/hexo/issues/1124\" target=\"_blank\" rel=\"noopener\">#1124</a>, <a href=\"https://github.com/hexojs/hexo/issues/283\" target=\"_blank\" rel=\"noopener\">#283</a>, <a href=\"https://github.com/hexojs/hexo/issues/1187\" target=\"_blank\" rel=\"noopener\">#1187</a>, <a href=\"https://github.com/hexojs/hexo/issues/550\" target=\"_blank\" rel=\"noopener\">#550</a>, <a href=\"https://github.com/hexojs/hexo/issues/1769\" target=\"_blank\" rel=\"noopener\">#1769</a>, etc.) We tried hard to solve this problem and there’re several improvements in Hexo 3.2.</p>\n<h2 id=\"It’s-all-about-speed\"><a href=\"#It’s-all-about-speed\" class=\"headerlink\" title=\"It’s all about speed\"></a>It’s all about speed</h2><h3 id=\"Caching-rendered-contents\"><a href=\"#Caching-rendered-contents\" class=\"headerlink\" title=\"Caching rendered contents\"></a>Caching rendered contents</h3><p>Rendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) <strong>1.7x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold processing</td>\n<td>6.094s</td>\n<td>6.454s</td>\n</tr>\n<tr>\n<td>Hot processing</td>\n<td>5.154s</td>\n<td>3.002s</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Lazy-load-language-files-of-highlight-js\"><a href=\"#Lazy-load-language-files-of-highlight-js\" class=\"headerlink\" title=\"Lazy load language files of highlight.js\"></a>Lazy load language files of highlight.js</h3><p><a href=\"https://github.com/hexojs/hexo/issues/1036\" target=\"_blank\" rel=\"noopener\">highlight.js is slow</a>. Especially when it try to detect the language. Lazy load language files make processing faster and don’t have to load bunch of unused language files. However there’re some limitations:</p>\n<ul>\n<li>Auto detect must be disabled.</li>\n<li>You have to specify language in code block.</li>\n</ul>\n<p>You can set auto detect disabled in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\"><span class=\"attr\">  auto_detect:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Templates-precompilation\"><a href=\"#Templates-precompilation\" class=\"headerlink\" title=\"Templates precompilation\"></a>Templates precompilation</h3><p>Theme templates are precompiled if possible. It makes generation speed <strong>2x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold generation</td>\n<td>27.2s</td>\n<td>13.6s</td>\n</tr>\n<tr>\n<td>Hot generation</td>\n<td>24.4s</td>\n<td>12.6s</td>\n</tr>\n</tbody>\n</table>\n<p>The following renderers have already supported this feature.</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"noopener\">hexo-renderer-ejs</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"noopener\">hexo-renderer-jade</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-swig\" target=\"_blank\" rel=\"noopener\">hexo-renderer-swig</a></li>\n</ul>\n<p>And it’s easy to implement precompilation for renderers. Just add a <code>compile</code> function to the renderer. Take EJS renderer for example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> assign = <span class=\"built_in\">require</span>(<span class=\"string\">'object-assign'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ejsRenderer</span>(<span class=\"params\">data, locals</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, assign(&#123;<span class=\"attr\">filename</span>: data.path&#125;, locals));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ejsRenderer.compile = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.compile(data.text, &#123;</span><br><span class=\"line\">    filename: data.path</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = ejsRenderer;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-exclude-source-files\"><a href=\"#Include-exclude-source-files\" class=\"headerlink\" title=\"Include/exclude source files\"></a>Include/exclude source files</h2><p>You can include/exclude specified source files in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">include:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.htaccess</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">exclude:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">tmp/**/*</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://github.com/hexojs/hexo/releases\" target=\"_blank\" rel=\"noopener\">changelog</a>, <a href=\"https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing\" target=\"_blank\" rel=\"noopener\">benchmark results</a>.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>It has been a long time that Hexo is poor at handling large website. (<a href=\"https://github.com/hexojs/hexo/issues/710\" target=\"_blank\" rel=\"noopener\">#710</a>, <a href=\"https://github.com/hexojs/hexo/issues/1124\" target=\"_blank\" rel=\"noopener\">#1124</a>, <a href=\"https://github.com/hexojs/hexo/issues/283\" target=\"_blank\" rel=\"noopener\">#283</a>, <a href=\"https://github.com/hexojs/hexo/issues/1187\" target=\"_blank\" rel=\"noopener\">#1187</a>, <a href=\"https://github.com/hexojs/hexo/issues/550\" target=\"_blank\" rel=\"noopener\">#550</a>, <a href=\"https://github.com/hexojs/hexo/issues/1769\" target=\"_blank\" rel=\"noopener\">#1769</a>, etc.) We tried hard to solve this problem and there’re several improvements in Hexo 3.2.</p>\n<h2 id=\"It’s-all-about-speed\"><a href=\"#It’s-all-about-speed\" class=\"headerlink\" title=\"It’s all about speed\"></a>It’s all about speed</h2><h3 id=\"Caching-rendered-contents\"><a href=\"#Caching-rendered-contents\" class=\"headerlink\" title=\"Caching rendered contents\"></a>Caching rendered contents</h3><p>Rendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) <strong>1.7x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold processing</td>\n<td>6.094s</td>\n<td>6.454s</td>\n</tr>\n<tr>\n<td>Hot processing</td>\n<td>5.154s</td>\n<td>3.002s</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Lazy-load-language-files-of-highlight-js\"><a href=\"#Lazy-load-language-files-of-highlight-js\" class=\"headerlink\" title=\"Lazy load language files of highlight.js\"></a>Lazy load language files of highlight.js</h3><p><a href=\"https://github.com/hexojs/hexo/issues/1036\" target=\"_blank\" rel=\"noopener\">highlight.js is slow</a>. Especially when it try to detect the language. Lazy load language files make processing faster and don’t have to load bunch of unused language files. However there’re some limitations:</p>\n<ul>\n<li>Auto detect must be disabled.</li>\n<li>You have to specify language in code block.</li>\n</ul>\n<p>You can set auto detect disabled in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\"><span class=\"attr\">  auto_detect:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Templates-precompilation\"><a href=\"#Templates-precompilation\" class=\"headerlink\" title=\"Templates precompilation\"></a>Templates precompilation</h3><p>Theme templates are precompiled if possible. It makes generation speed <strong>2x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold generation</td>\n<td>27.2s</td>\n<td>13.6s</td>\n</tr>\n<tr>\n<td>Hot generation</td>\n<td>24.4s</td>\n<td>12.6s</td>\n</tr>\n</tbody>\n</table>\n<p>The following renderers have already supported this feature.</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"noopener\">hexo-renderer-ejs</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"noopener\">hexo-renderer-jade</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-swig\" target=\"_blank\" rel=\"noopener\">hexo-renderer-swig</a></li>\n</ul>\n<p>And it’s easy to implement precompilation for renderers. Just add a <code>compile</code> function to the renderer. Take EJS renderer for example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> assign = <span class=\"built_in\">require</span>(<span class=\"string\">'object-assign'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ejsRenderer</span>(<span class=\"params\">data, locals</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, assign(&#123;<span class=\"attr\">filename</span>: data.path&#125;, locals));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ejsRenderer.compile = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ejs.compile(data.text, &#123;</span><br><span class=\"line\">    filename: data.path</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = ejsRenderer;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Include-exclude-source-files\"><a href=\"#Include-exclude-source-files\" class=\"headerlink\" title=\"Include/exclude source files\"></a>Include/exclude source files</h2><p>You can include/exclude specified source files in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">include:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">.htaccess</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">exclude:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">tmp/**/*</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://github.com/hexojs/hexo/releases\" target=\"_blank\" rel=\"noopener\">changelog</a>, <a href=\"https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing\" target=\"_blank\" rel=\"noopener\">benchmark results</a>.</p>\n"},{"title":"但在像JavaScript这些高级语言中这些高级语言中这些高级语言中这些高级语言中这些高级语言中这些高级语言中这些高级语言中","date":"2018-08-19T10:05:51.000Z","keywords":"1,2,3","description":"高级语言中高级语言中高级语言中高级语言中高级语言中高级语言中高级语言中高级语言中","_content":"\nOnce Hexo is installed, run the following commands to initialise Hexo in the target `<folder>`.\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\nOnce initialised, here's what your project folder will look like:\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\nSite [configuration](configuration.html) file. You can configure most settings here.\n\n### package.json\n\nApplication data. The [EJS](http://embeddedjs.com/), [Stylus](http://learnboost.github.io/stylus/) and [Markdown](http://daringfireball.net/projects/markdown/) renderers are installed by default. If you want, you can uninstall them later.\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\n[Scaffold](writing.html#Scaffolds) folder. When you create a new post, Hexo bases the new file on the scaffold.\n\n### source\n\nSource folder. This is where you put your site's content. Hexo ignores hidden files and files or folders whose names are prefixed with `_` (underscore) - except the `_posts` folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the `public` folder, while other files will simply be copied.\n\n### themes\n\n[Theme](themes.html) folder. Hexo generates a static website by combining the site contents with the theme.","source":"_posts/test-.md","raw":"---\ntitle: 但在像JavaScript这些高级语言中这些高级语言中这些高级语言中这些高级语言中这些高级语言中这些高级语言中这些高级语言中\ndate: 2018-08-19 18:05:51\ncategories: 学习\nkeywords: 1,2,3\ndescription: 高级语言中高级语言中高级语言中高级语言中高级语言中高级语言中高级语言中高级语言中\n---\n\nOnce Hexo is installed, run the following commands to initialise Hexo in the target `<folder>`.\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\nOnce initialised, here's what your project folder will look like:\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\nSite [configuration](configuration.html) file. You can configure most settings here.\n\n### package.json\n\nApplication data. The [EJS](http://embeddedjs.com/), [Stylus](http://learnboost.github.io/stylus/) and [Markdown](http://daringfireball.net/projects/markdown/) renderers are installed by default. If you want, you can uninstall them later.\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\n[Scaffold](writing.html#Scaffolds) folder. When you create a new post, Hexo bases the new file on the scaffold.\n\n### source\n\nSource folder. This is where you put your site's content. Hexo ignores hidden files and files or folders whose names are prefixed with `_` (underscore) - except the `_posts` folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the `public` folder, while other files will simply be copied.\n\n### themes\n\n[Theme](themes.html) folder. Hexo generates a static website by combining the site contents with the theme.","slug":"test-","published":1,"updated":"2018-10-18T05:27:16.491Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zqb000k748i4ms4mx3g","content":"<p>Once Hexo is installed, run the following commands to initialise Hexo in the target <code>&lt;folder&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>Once initialised, here’s what your project folder will look like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Site <a href=\"configuration.html\">configuration</a> file. You can configure most settings here.</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>Application data. The <a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a> and <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> renderers are installed by default. If you want, you can uninstall them later.</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><a href=\"writing.html#Scaffolds\">Scaffold</a> folder. When you create a new post, Hexo bases the new file on the scaffold.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Source folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with <code>_</code> (underscore) - except the <code>_posts</code> folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the <code>public</code> folder, while other files will simply be copied.</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><a href=\"themes.html\">Theme</a> folder. Hexo generates a static website by combining the site contents with the theme.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Once Hexo is installed, run the following commands to initialise Hexo in the target <code>&lt;folder&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>Once initialised, here’s what your project folder will look like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Site <a href=\"configuration.html\">configuration</a> file. You can configure most settings here.</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>Application data. The <a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a> and <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> renderers are installed by default. If you want, you can uninstall them later.</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><a href=\"writing.html#Scaffolds\">Scaffold</a> folder. When you create a new post, Hexo bases the new file on the scaffold.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Source folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with <code>_</code> (underscore) - except the <code>_posts</code> folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the <code>public</code> folder, while other files will simply be copied.</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><a href=\"themes.html\">Theme</a> folder. Hexo generates a static website by combining the site contents with the theme.</p>\n"},{"title":"但在像JavaScript这些高级语言中","date":"2018-08-19T10:05:51.000Z","keywords":"1,2,3","description":null,"_content":"\nOnce Hexo is installed, run the following commands to initialise Hexo in the target `<folder>`.\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\nOnce initialised, here's what your project folder will look like:\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\nSite [configuration](configuration.html) file. You can configure most settings here.\n\n### package.json\n\nApplication data. The [EJS](http://embeddedjs.com/), [Stylus](http://learnboost.github.io/stylus/) and [Markdown](http://daringfireball.net/projects/markdown/) renderers are installed by default. If you want, you can uninstall them later.\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\n[Scaffold](writing.html#Scaffolds) folder. When you create a new post, Hexo bases the new file on the scaffold.\n\n### source\n\nSource folder. This is where you put your site's content. Hexo ignores hidden files and files or folders whose names are prefixed with `_` (underscore) - except the `_posts` folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the `public` folder, while other files will simply be copied.\n\n### themes\n\n[Theme](themes.html) folder. Hexo generates a static website by combining the site contents with the theme.","source":"_posts/test.md","raw":"---\ntitle: 但在像JavaScript这些高级语言中\ndate: 2018-08-19 18:05:51\ncategories: 学习\nkeywords: 1,2,3\ndescription: \n---\n\nOnce Hexo is installed, run the following commands to initialise Hexo in the target `<folder>`.\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\nOnce initialised, here's what your project folder will look like:\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\nSite [configuration](configuration.html) file. You can configure most settings here.\n\n### package.json\n\nApplication data. The [EJS](http://embeddedjs.com/), [Stylus](http://learnboost.github.io/stylus/) and [Markdown](http://daringfireball.net/projects/markdown/) renderers are installed by default. If you want, you can uninstall them later.\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\n[Scaffold](writing.html#Scaffolds) folder. When you create a new post, Hexo bases the new file on the scaffold.\n\n### source\n\nSource folder. This is where you put your site's content. Hexo ignores hidden files and files or folders whose names are prefixed with `_` (underscore) - except the `_posts` folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the `public` folder, while other files will simply be copied.\n\n### themes\n\n[Theme](themes.html) folder. Hexo generates a static website by combining the site contents with the theme.","slug":"test","published":1,"updated":"2018-09-29T06:50:38.003Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjned1zqd000l748is7edfr49","content":"<p>Once Hexo is installed, run the following commands to initialise Hexo in the target <code>&lt;folder&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>Once initialised, here’s what your project folder will look like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Site <a href=\"configuration.html\">configuration</a> file. You can configure most settings here.</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>Application data. The <a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a> and <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> renderers are installed by default. If you want, you can uninstall them later.</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><a href=\"writing.html#Scaffolds\">Scaffold</a> folder. When you create a new post, Hexo bases the new file on the scaffold.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Source folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with <code>_</code> (underscore) - except the <code>_posts</code> folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the <code>public</code> folder, while other files will simply be copied.</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><a href=\"themes.html\">Theme</a> folder. Hexo generates a static website by combining the site contents with the theme.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Once Hexo is installed, run the following commands to initialise Hexo in the target <code>&lt;folder&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>Once initialised, here’s what your project folder will look like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Site <a href=\"configuration.html\">configuration</a> file. You can configure most settings here.</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>Application data. The <a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"noopener\">EJS</a>, <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"noopener\">Stylus</a> and <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> renderers are installed by default. If you want, you can uninstall them later.</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><a href=\"writing.html#Scaffolds\">Scaffold</a> folder. When you create a new post, Hexo bases the new file on the scaffold.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Source folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with <code>_</code> (underscore) - except the <code>_posts</code> folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the <code>public</code> folder, while other files will simply be copied.</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><a href=\"themes.html\">Theme</a> folder. Hexo generates a static website by combining the site contents with the theme.</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjned1zpq0000748imijzahbo","category_id":"cjned1zpu0002748i1humo84w","_id":"cjned1zq20009748ib88w9qjh"},{"post_id":"cjned1zpt0001748iuyi5kdm2","category_id":"cjned1zpu0002748i1humo84w","_id":"cjned1zq6000d748iq782s6dj"},{"post_id":"cjned1zq20008748iz9abk8ae","category_id":"cjned1zq5000b748iqigvoksu","_id":"cjned1zqb000j748i707d964l"},{"post_id":"cjned1zq9000h748i6nb8h4wb","category_id":"cjned1zq5000b748iqigvoksu","_id":"cjned1zqd000m748i3wc0lux5"},{"post_id":"cjned1zq3000a748ijmh96rww","category_id":"cjned1zq5000b748iqigvoksu","_id":"cjned1zqe000n748iwrlrf7xz"},{"post_id":"cjned1zqa000i748imudx66rk","category_id":"cjned1zq5000b748iqigvoksu","_id":"cjned1zqe000o748iyh9tjovl"},{"post_id":"cjned1zqb000k748i4ms4mx3g","category_id":"cjned1zq5000b748iqigvoksu","_id":"cjned1zqe000p748ik77dyfq6"},{"post_id":"cjned1zqd000l748is7edfr49","category_id":"cjned1zq5000b748iqigvoksu","_id":"cjned1zqe000q748iv22rm93n"}],"PostTag":[],"Tag":[]}}