{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/404.html","path":"404.html","modified":0,"renderable":0},{"_id":"source/scripts/highlight.js","path":"scripts/highlight.js","modified":0,"renderable":0},{"_id":"source/scripts/imagesloaded.pkgd.min.js","path":"scripts/imagesloaded.pkgd.min.js","modified":0,"renderable":0},{"_id":"source/scripts/splitText.js","path":"scripts/splitText.js","modified":0,"renderable":0},{"_id":"source/scripts/TweenMax.min.js","path":"scripts/TweenMax.min.js","modified":0,"renderable":0},{"_id":"source/scripts/lodash.min.js","path":"scripts/lodash.min.js","modified":0,"renderable":0},{"_id":"source/scripts/snap.svg-min.js","path":"scripts/snap.svg-min.js","modified":0,"renderable":0},{"_id":"source/scripts/vue.min.js","path":"scripts/vue.min.js","modified":0,"renderable":0},{"_id":"source/demo/speedy-transition-effect/index.html","path":"demo/speedy-transition-effect/index.html","modified":0,"renderable":0},{"_id":"source/demo/speedy-transition-effect/4.jpg","path":"demo/speedy-transition-effect/4.jpg","modified":0,"renderable":0},{"_id":"source/demo/speedy-transition-effect/noise.png","path":"demo/speedy-transition-effect/noise.png","modified":0,"renderable":0},{"_id":"source/demo/speedy-transition-effect/5.jpg","path":"demo/speedy-transition-effect/5.jpg","modified":0,"renderable":0},{"_id":"source/demo/speedy-transition-effect/style.css","path":"demo/speedy-transition-effect/style.css","modified":0,"renderable":0},{"_id":"source/demo/speedy-transition-effect/script.js","path":"demo/speedy-transition-effect/script.js","modified":0,"renderable":0},{"_id":"source/demo/vue-drag-drop/index.html","path":"demo/vue-drag-drop/index.html","modified":0,"renderable":0},{"_id":"source/images/else/datong0.jpg","path":"images/else/datong0.jpg","modified":0,"renderable":0},{"_id":"source/images/else/class.gif","path":"images/else/class.gif","modified":0,"renderable":0},{"_id":"source/images/else/xinyuefei.jpg","path":"images/else/xinyuefei.jpg","modified":0,"renderable":0},{"_id":"source/images/else/kid-s.jpg","path":"images/else/kid-s.jpg","modified":0,"renderable":0},{"_id":"source/images/flash/flash11.jpg","path":"images/flash/flash11.jpg","modified":0,"renderable":0},{"_id":"source/images/flash/flash12.jpg","path":"images/flash/flash12.jpg","modified":0,"renderable":0},{"_id":"source/images/labview/input2.gif","path":"images/labview/input2.gif","modified":0,"renderable":0},{"_id":"source/images/flash/flash42.jpg","path":"images/flash/flash42.jpg","modified":0,"renderable":0},{"_id":"source/images/flash/flash51.jpg","path":"images/flash/flash51.jpg","modified":0,"renderable":0},{"_id":"source/images/labview/subtract.gif","path":"images/labview/subtract.gif","modified":0,"renderable":0},{"_id":"source/images/matlab/PD.gif","path":"images/matlab/PD.gif","modified":0,"renderable":0},{"_id":"source/images/matlab/P.gif","path":"images/matlab/P.gif","modified":0,"renderable":0},{"_id":"source/images/labview/labviewfft.gif","path":"images/labview/labviewfft.gif","modified":0,"renderable":0},{"_id":"source/images/matlab/PI.gif","path":"images/matlab/PI.gif","modified":0,"renderable":0},{"_id":"source/images/matlab/PID.gif","path":"images/matlab/PID.gif","modified":0,"renderable":0},{"_id":"source/images/matlab/fft.gif","path":"images/matlab/fft.gif","modified":0,"renderable":0},{"_id":"source/images/mcu/mcu11.gif","path":"images/mcu/mcu11.gif","modified":0,"renderable":0},{"_id":"source/images/mcu/mcu21.jpg","path":"images/mcu/mcu21.jpg","modified":0,"renderable":0},{"_id":"source/images/mcu/mcu22.jpg","path":"images/mcu/mcu22.jpg","modified":0,"renderable":0},{"_id":"source/images/parallax/layer3.png","path":"images/parallax/layer3.png","modified":0,"renderable":0},{"_id":"source/images/parallax/layer1.png","path":"images/parallax/layer1.png","modified":0,"renderable":0},{"_id":"source/images/parallax/layer2.png","path":"images/parallax/layer2.png","modified":0,"renderable":0},{"_id":"source/images/parallax/layer4.png","path":"images/parallax/layer4.png","modified":0,"renderable":0},{"_id":"source/images/parallax/layer5.png","path":"images/parallax/layer5.png","modified":0,"renderable":0},{"_id":"source/images/parallax/layer6.png","path":"images/parallax/layer6.png","modified":0,"renderable":0},{"_id":"source/images/proe/tulun1.jpg","path":"images/proe/tulun1.jpg","modified":0,"renderable":0},{"_id":"source/images/proe/tulun3.gif","path":"images/proe/tulun3.gif","modified":0,"renderable":0},{"_id":"source/images/proe/tulun4.gif","path":"images/proe/tulun4.gif","modified":0,"renderable":0},{"_id":"source/images/proe/tulun5.gif","path":"images/proe/tulun5.gif","modified":0,"renderable":0},{"_id":"source/images/robot/robot11.jpg","path":"images/robot/robot11.jpg","modified":0,"renderable":0},{"_id":"source/images/robot/robot31.jpg","path":"images/robot/robot31.jpg","modified":0,"renderable":0},{"_id":"source/images/robot/robot41.jpg","path":"images/robot/robot41.jpg","modified":0,"renderable":0},{"_id":"source/images/robot/robot32.jpg","path":"images/robot/robot32.jpg","modified":0,"renderable":0},{"_id":"source/images/robot/robot51.jpg","path":"images/robot/robot51.jpg","modified":0,"renderable":0},{"_id":"source/images/robot/robot52.jpg","path":"images/robot/robot52.jpg","modified":0,"renderable":0},{"_id":"source/images/robot/robot62.jpg","path":"images/robot/robot62.jpg","modified":0,"renderable":0},{"_id":"source/images/robot/robot61.jpg","path":"images/robot/robot61.jpg","modified":0,"renderable":0},{"_id":"source/images/robot/robot73.gif","path":"images/robot/robot73.gif","modified":0,"renderable":0},{"_id":"source/images/robot/robot71.jpg","path":"images/robot/robot71.jpg","modified":0,"renderable":0},{"_id":"source/images/robot/walk1.gif","path":"images/robot/walk1.gif","modified":0,"renderable":0},{"_id":"source/images/robot/walk2.gif","path":"images/robot/walk2.gif","modified":0,"renderable":0},{"_id":"source/images/robot/walk3.gif","path":"images/robot/walk3.gif","modified":0,"renderable":0},{"_id":"themes/yolog/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yolog/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/yolog/source/img/touch-icon.png","path":"img/touch-icon.png","modified":0,"renderable":1},{"_id":"themes/yolog/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"source/demo/speedy-transition-effect/1.jpg","path":"demo/speedy-transition-effect/1.jpg","modified":0,"renderable":0},{"_id":"source/demo/speedy-transition-effect/2.jpg","path":"demo/speedy-transition-effect/2.jpg","modified":0,"renderable":0},{"_id":"source/images/else/kid-l.jpg","path":"images/else/kid-l.jpg","modified":0,"renderable":0},{"_id":"source/images/flash/flash31.gif","path":"images/flash/flash31.gif","modified":0,"renderable":0},{"_id":"source/images/proe/tulun2.gif","path":"images/proe/tulun2.gif","modified":0,"renderable":0},{"_id":"source/demo/speedy-transition-effect/3.jpg","path":"demo/speedy-transition-effect/3.jpg","modified":0,"renderable":0},{"_id":"source/demo/vue-drag-drop/css/app.cdb68e9f.css","path":"demo/vue-drag-drop/css/app.cdb68e9f.css","modified":0,"renderable":0},{"_id":"source/demo/vue-drag-drop/js/app.66a7b144.js","path":"demo/vue-drag-drop/js/app.66a7b144.js","modified":0,"renderable":0},{"_id":"source/images/mold/1/dz.jpg","path":"images/mold/1/dz.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/1/dom.jpg","path":"images/mold/1/dom.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/10/chpmini.jpg","path":"images/mold/10/chpmini.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/13/gwz.jpg","path":"images/mold/13/gwz.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/3/2D1.jpg","path":"images/mold/3/2D1.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/3/2D2.jpg","path":"images/mold/3/2D2.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/3/chp.jpg","path":"images/mold/3/chp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/3/3D.jpg","path":"images/mold/3/3D.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/4/2D.jpg","path":"images/mold/4/2D.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/4/tuzhi.jpg","path":"images/mold/4/tuzhi.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/4/xd.jpg","path":"images/mold/4/xd.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/5/chp.jpg","path":"images/mold/5/chp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/5/jk.jpg","path":"images/mold/5/jk.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/5/ld.jpg","path":"images/mold/5/ld.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/11.jpg","path":"images/mold/6/11.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/14.jpg","path":"images/mold/6/14.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/12.jpg","path":"images/mold/6/12.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/13.jpg","path":"images/mold/6/13.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/15.jpg","path":"images/mold/6/15.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/17.jpg","path":"images/mold/6/17.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/16.jpg","path":"images/mold/6/16.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/21.jpg","path":"images/mold/6/21.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/24.jpg","path":"images/mold/6/24.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/23.jpg","path":"images/mold/6/23.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/25.jpg","path":"images/mold/6/25.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/26.jpg","path":"images/mold/6/26.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/27.jpg","path":"images/mold/6/27.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/28.jpg","path":"images/mold/6/28.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/29.jpg","path":"images/mold/6/29.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/31.jpg","path":"images/mold/6/31.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/32.jpg","path":"images/mold/6/32.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/33.jpg","path":"images/mold/6/33.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/34.jpg","path":"images/mold/6/34.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/35.jpg","path":"images/mold/6/35.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/36.jpg","path":"images/mold/6/36.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/38.jpg","path":"images/mold/6/38.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/39.jpg","path":"images/mold/6/39.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/41.jpg","path":"images/mold/6/41.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/40.jpg","path":"images/mold/6/40.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/42.jpg","path":"images/mold/6/42.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/face.jpg","path":"images/mold/6/face.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/7/2D.jpg","path":"images/mold/7/2D.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/7/zhp.jpg","path":"images/mold/7/zhp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/9/chp.jpg","path":"images/mold/9/chp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/9/dh.gif","path":"images/mold/9/dh.gif","modified":0,"renderable":0},{"_id":"source/images/mold/8/xj.jpg","path":"images/mold/8/xj.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/8/mini.jpg","path":"images/mold/8/mini.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/8/chp.jpg","path":"images/mold/8/chp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/8/zp.jpg","path":"images/mold/8/zp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/11/dc.jpg","path":"images/mold/11/dc.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/11/gj.jpg","path":"images/mold/11/gj.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/11/lg.jpg","path":"images/mold/11/lg.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/11/mj.jpg","path":"images/mold/11/mj.jpg","modified":0,"renderable":0},{"_id":"source/scripts/d3.v5.min.js","path":"scripts/d3.v5.min.js","modified":0,"renderable":0},{"_id":"source/images/flash/flash41.gif","path":"images/flash/flash41.gif","modified":0,"renderable":0},{"_id":"source/images/mold/10/chp.jpg","path":"images/mold/10/chp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/1/2D.jpg","path":"images/mold/1/2D.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/10/2D.jpg","path":"images/mold/10/2D.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/10/dom.jpg","path":"images/mold/10/dom.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/10/zhp.jpg","path":"images/mold/10/zhp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/10/dim.jpg","path":"images/mold/10/dim.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/12/4.jpg","path":"images/mold/12/4.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/12/2.jpg","path":"images/mold/12/2.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/13/jiaokou.jpg","path":"images/mold/13/jiaokou.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/13/grp.jpg","path":"images/mold/13/grp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/13/zhp.jpg","path":"images/mold/13/zhp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/4/chp.jpg","path":"images/mold/4/chp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/5/dim.jpg","path":"images/mold/5/dim.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/22.jpg","path":"images/mold/6/22.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/6/37.jpg","path":"images/mold/6/37.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/7/chp.jpg","path":"images/mold/7/chp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/7/3D.jpg","path":"images/mold/7/3D.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/9/2D1.jpg","path":"images/mold/9/2D1.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/9/2D2.jpg","path":"images/mold/9/2D2.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/9/dc.jpg","path":"images/mold/9/dc.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/11/2D.jpg","path":"images/mold/11/2D.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/11/dimdom.jpg","path":"images/mold/11/dimdom.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/11/chp.jpg","path":"images/mold/11/chp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/12/1.jpg","path":"images/mold/12/1.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/13/wt.jpg","path":"images/mold/13/wt.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/8/dim.gif","path":"images/mold/8/dim.gif","modified":0,"renderable":0},{"_id":"source/images/robot/walk4.gif","path":"images/robot/walk4.gif","modified":0,"renderable":0},{"_id":"source/images/mold/12/3.jpg","path":"images/mold/12/3.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/13/chp.jpg","path":"images/mold/13/chp.jpg","modified":0,"renderable":0},{"_id":"source/images/mold/2/mj.jpg","path":"images/mold/2/mj.jpg","modified":0,"renderable":0},{"_id":"source/demo/vue-drag-drop/js/chunk-vendors.ca022210.js","path":"demo/vue-drag-drop/js/chunk-vendors.ca022210.js","modified":0,"renderable":0},{"_id":"source/images/mold/13/dimdom.jpg","path":"images/mold/13/dimdom.jpg","modified":0,"renderable":0},{"_id":"source/images/robot/robot72.gif","path":"images/robot/robot72.gif","modified":0,"renderable":0},{"_id":"source/images/flash/flash32.gif","path":"images/flash/flash32.gif","modified":0,"renderable":0}],"Cache":[{"_id":"themes/yolog/_config.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535526300918},{"_id":"source/.DS_Store","hash":"62fadfc5450b81cab0da13abcd71fcc5e6348392","modified":1569823488748},{"_id":"source/404.html","hash":"64a290a947401e458b54f95c9f413281ac5f53cf","modified":1544580737360},{"_id":"themes/yolog/.DS_Store","hash":"e01a82943971fbc925f13de19e681a6524cd8e3d","modified":1555412761900},{"_id":"themes/yolog/languages/default.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535527209469},{"_id":"source/_drafts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1569823474614},{"_id":"source/_drafts/lodash.md","hash":"ce2a87c68f702181b9e27caecf148266dd4637ca","modified":1544773807624},{"_id":"source/_drafts/snapsvg1.md","hash":"1a645c460bf701a0cc022d59ca2742621ba990ac","modified":1555566646139},{"_id":"source/_drafts/svg.md","hash":"de154ab4e601784a5b9fa85b521e6af1e6e72560","modified":1545019933811},{"_id":"source/_drafts/gear.html","hash":"ba79d55c1b484518741b84bd881659da6b1dd691","modified":1544442082810},{"_id":"source/_drafts/table.md","hash":"ce91dd6aa5a075d4282456d3aeaf3f83364e5933","modified":1544779774990},{"_id":"source/demo/.DS_Store","hash":"ba850e9f92f8a7904d74f65386f47b0bd6cad4d9","modified":1555488101074},{"_id":"source/images/.DS_Store","hash":"67471ab191a9e0eeaeb3901dfa938766f64c519a","modified":1562567821942},{"_id":"source/_posts/.DS_Store","hash":"9327d816cfb4d3d8a3cb03fbbf97cdc9cad8eec2","modified":1545901082835},{"_id":"source/_posts/about.md","hash":"5a06ce9a958ff729820534fcad1f98dd44b1fd97","modified":1569742833973},{"_id":"source/_posts/add-subtract-multiply-divide.md","hash":"ae75ad8d1bf226176ddbfc3b84bc79185ec1f835","modified":1545044252361},{"_id":"source/_posts/canvas-grain.md","hash":"e211b18ba6f41cc9a6a89220bf0c7189251406e5","modified":1551265817640},{"_id":"source/_posts/es5-class.md","hash":"cb4a96620d9387716085daa4c87b2e7d35d9083d","modified":1552024901360},{"_id":"source/_posts/cubic-bezier.md","hash":"a6172c2d101d239479edb90bf2ed4de82746d1c9","modified":1546239371319},{"_id":"source/_posts/color-darken-lighten.md","hash":"f73f3e07b9a9122271caed589805c47f6de2f422","modified":1545044011167},{"_id":"source/_posts/es5-inheritance.md","hash":"01380ba8b756c24f55a9c8d2487a59d820282141","modified":1561957023078},{"_id":"source/_posts/event-emitter.md","hash":"f02e820f90e2ce01dec8b930a4c8d5256cf1eeee","modified":1554087585250},{"_id":"source/_posts/flash0.md","hash":"18bfc82d99a51e1b5523347d446a17b87404485d","modified":1543804132771},{"_id":"source/_posts/event-loop.md","hash":"408b548872ecc13fadc292036f000446186067c3","modified":1561970227908},{"_id":"source/_posts/flash1.md","hash":"81d134ca701378106a46396ea28ce9653d3a13e5","modified":1543804132772},{"_id":"source/_posts/flash2.md","hash":"9bef047cc76159ca3879a5a53a2bab19c179722d","modified":1543804132772},{"_id":"source/_posts/flash3.md","hash":"eba36b61274961ed9ce11d4eab93398697892120","modified":1543804132773},{"_id":"source/_posts/flash4.md","hash":"5803cae9f04582a7de81435c22cd110308148193","modified":1543804132773},{"_id":"source/_posts/flash5.md","hash":"b2f052331f406eed6a4a5e7a1950eb9c5e60e9dc","modified":1543804132773},{"_id":"source/_posts/flash6.md","hash":"d4a5f0e2f0cb75f10ddce0b847dbea7d02f24717","modified":1543804132773},{"_id":"source/_posts/json.md","hash":"abb34184c1be40903d9fab4265e9729994e05535","modified":1552024925185},{"_id":"source/_posts/labview1.md","hash":"6568413287a6cdac7a92c2dc31ab46b8f023db98","modified":1543487154789},{"_id":"source/_posts/floyd-steinberg-dithering.md","hash":"33508e3dc8b7154d4bec2a12a962fe64821cb141","modified":1553251144099},{"_id":"source/_posts/labview2.md","hash":"4395e06fef54c50b2545f6949053758873719f57","modified":1543487098823},{"_id":"source/_posts/labview3.md","hash":"b41f95e02ff641613706ab4abff79eee24450b05","modified":1546566892454},{"_id":"source/_posts/matlab1.md","hash":"5a5d934c7cbd591ea1d1d6231dbf315e7b721aa6","modified":1543804132774},{"_id":"source/_posts/mcu1.md","hash":"7d5f688456b098c2fd77aacf3f7ec759177a7dd4","modified":1543804132775},{"_id":"source/_posts/matlab2.md","hash":"78440543697b2704baa53cc0681b548f20531fe8","modified":1543804132775},{"_id":"source/_posts/mcu2.md","hash":"5a34ca4072fe058af436c4c527a53b5497e67c3a","modified":1543804132775},{"_id":"source/_posts/mold1.md","hash":"a50552f619151c44ec0e2b675abe04d058d9b45a","modified":1542603305603},{"_id":"source/_posts/mockjs.md","hash":"909713aeac11492b757b624f8bd9a7220d2e4cfd","modified":1551859366471},{"_id":"source/_posts/mold10.md","hash":"a0fbbd8a548a50a672a2903534b6a4560551e2e9","modified":1542603248942},{"_id":"source/_posts/mold11.md","hash":"0fe8ee47a2c4a3a33f7aace6d5cef04a0cd1c74d","modified":1542617128144},{"_id":"source/_posts/mold12.md","hash":"7bd775bd7126df133346f5ca61ee54838054181b","modified":1542615986254},{"_id":"source/_posts/mold13.md","hash":"6ccbb0af561d520914940c2ee58b657362e6f1f9","modified":1542616004140},{"_id":"source/_posts/mold2.md","hash":"004ce180e88554dd24a98abe6e20ea894c69d02f","modified":1542792059128},{"_id":"source/_posts/mold3.md","hash":"b795ba51df2badbebbad6e582240876a4211b2c3","modified":1542615866855},{"_id":"source/_posts/mold7.md","hash":"b8c3959aa076bdf3b121bb16badccc57fd935b47","modified":1542616439301},{"_id":"source/_posts/mold4.md","hash":"20b21d0513efd7859d234c6c585ea193d19cb265","modified":1542594928360},{"_id":"source/_posts/mold6.md","hash":"a5867777146da99ec49ac11dd2dbd68f27cb354a","modified":1542617203336},{"_id":"source/_posts/mold5.md","hash":"082999dfbe0c1acddd1f03941dcd000c7930626c","modified":1542616824026},{"_id":"source/_posts/mold8.md","hash":"b091e602daa7095d4a23d6983e760fc387b83dfd","modified":1542616686566},{"_id":"source/_posts/mold9.md","hash":"cf182620ef8e1ced526117a221704ab2c97aec36","modified":1542603093800},{"_id":"source/_posts/parallax.md","hash":"3b9e3448548e1622735eccf8a09515c05cc5d39b","modified":1562652301407},{"_id":"source/_posts/point-in-triangle-test.md","hash":"8ed744b3529ec53e35e1af1f93220a3487921e42","modified":1555918540745},{"_id":"source/_posts/proe1.md","hash":"5129c02ade27760b4ad28f9675835d4e32aa2c7d","modified":1543804132776},{"_id":"source/_posts/proe2.md","hash":"fa24e123a3ee48459dad908ca9799a6d2a809d5b","modified":1543804132776},{"_id":"source/_posts/poisson-disc.md","hash":"6d305bbe74e7992d8a9b7f6c2733593bc462a3f6","modified":1544875563584},{"_id":"source/_posts/proe3.md","hash":"84ecae783c277b746d3840bffba0f6d680cac859","modified":1543804132777},{"_id":"source/_posts/proe4.md","hash":"bec4c732aa6a229251b9058831dc7ac6510464e0","modified":1543804132777},{"_id":"source/_posts/proe5.md","hash":"ed1231f69789cb5a398fc930891c08372bbc37b0","modified":1543804132777},{"_id":"source/_posts/robot2.md","hash":"5e1631c3a5eb10d7cac841e706c1905bb4c19c53","modified":1543804132778},{"_id":"source/_posts/promise.md","hash":"2bed4f1ead35d1b74a30adbccdb2e55a86aa3b01","modified":1552294815136},{"_id":"source/_posts/robot3.md","hash":"ac29311df05b107566ad77199b176d5d163eac41","modified":1543804132778},{"_id":"source/_posts/robot4.md","hash":"49be4d7805e549a67041e1eb3ac1a6e3cab483e2","modified":1546566939753},{"_id":"source/_posts/robot1.md","hash":"71dfecfafece62b4d4c00468e0bdb730945499a2","modified":1543804132777},{"_id":"source/_posts/robot5.md","hash":"6c6c6f29d96f67a77c908114b4c2d5f6a6613774","modified":1543804132779},{"_id":"source/_posts/robot6.md","hash":"026a0d75a7a14f3944b2f97744051877f0f65b83","modified":1543804132779},{"_id":"source/_posts/robot7.md","hash":"ebf812235f617a7b18e8007347be9c7f30fb1434","modified":1543804132779},{"_id":"source/_posts/robot8.md","hash":"7295abaf8962938de572f2e67a18e522da7930ac","modified":1543804132780},{"_id":"source/_posts/speedy-transition-effect.md","hash":"e4b27bc6d13b64964de90323ec8354884fa5c8c2","modified":1554965628961},{"_id":"source/_posts/split-text.md","hash":"ee09df639e489f933df08437f529ca7ff4516c51","modified":1554283648959},{"_id":"source/_posts/webpack.md","hash":"d43abcd6420a64f2ed83497e7448529a9eafa33b","modified":1570862872545},{"_id":"source/_posts/vue-drag-drop.md","hash":"f3a823272ebc4dc25a0890b9287810218596d4d6","modified":1555487690912},{"_id":"source/_posts/tree-cluster.md","hash":"bc32936e2f96cd39dfaf521a2f588e7b0cd779e4","modified":1553251218430},{"_id":"source/_posts/textures.md","hash":"193635e4205c1388524ace7a7ef8539d2c84da6a","modified":1546138763927},{"_id":"source/scripts/highlight.js","hash":"78e54bb9d2539b867b84c819c430d271d314778e","modified":1544754846074},{"_id":"source/scripts/imagesloaded.pkgd.min.js","hash":"6d3e11174e22668e69df236e5c4542168f7cbfec","modified":1514854414000},{"_id":"source/scripts/splitText.js","hash":"b822a59f4317b2b59cbf3e6173698cbb6a3de7c1","modified":1554795693730},{"_id":"themes/yolog/layout/.DS_Store","hash":"bb919d31138efb719569d5bf443138ccfc5c33fd","modified":1546070130619},{"_id":"themes/yolog/layout/_layout.pug","hash":"4a9736bb82f884dc5bfddcfed14c24dc3a04e34a","modified":1551340375272},{"_id":"themes/yolog/layout/index.pug","hash":"123d9421ffa3ad95fccfe2e791648ce276954738","modified":1554966396315},{"_id":"themes/yolog/scripts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1544754271433},{"_id":"themes/yolog/source/.DS_Store","hash":"d31562387f8220609a083ebcffc8d681afb024e4","modified":1555412761900},{"_id":"source/scripts/TweenMax.min.js","hash":"38cb690397f9eef5a9592efc9ce9e936e4e863cb","modified":1551552062000},{"_id":"source/scripts/lodash.min.js","hash":"dce5d3dbc9bbecf2ca748de381b483eb9080e4fa","modified":1544248235525},{"_id":"source/scripts/snap.svg-min.js","hash":"0b6a0fcc9bb5b82f90736176599f3830ccca0ee7","modified":1506892072000},{"_id":"source/scripts/vue.min.js","hash":"28bb1c91e37b53f4ebb48ce482dccb240003e078","modified":1520979244000},{"_id":"source/demo/speedy-transition-effect/.DS_Store","hash":"98dd5a7556237e7d259ff3f8dd54cf4522c8ba63","modified":1554939956271},{"_id":"source/demo/speedy-transition-effect/index.html","hash":"990a40b3b3597e8c0f3e9417e0fcf98ee44abbab","modified":1554947708379},{"_id":"source/demo/speedy-transition-effect/4.jpg","hash":"9dac8fcdd58eec7863f0b23cbb132e63cda89120","modified":1544469184000},{"_id":"source/demo/speedy-transition-effect/noise.png","hash":"7b5ff7c8dc6153da241b12ad6d033db329cffcff","modified":1544469184000},{"_id":"source/demo/speedy-transition-effect/5.jpg","hash":"d239171c1b8b901e2177cec2e861eee8d5a19b9f","modified":1544469184000},{"_id":"source/demo/speedy-transition-effect/style.css","hash":"f2a164b970df31497ce17aa11e8946a1d5144ba4","modified":1554974253451},{"_id":"source/demo/vue-drag-drop/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1555488106806},{"_id":"source/demo/speedy-transition-effect/script.js","hash":"08403ef8d9bd9be5bb9c0f16529c517e33538e5f","modified":1554951045291},{"_id":"source/demo/vue-drag-drop/index.html","hash":"d90cc0a0d278ea97898965de792b430022fd463a","modified":1555488075441},{"_id":"source/images/else/datong0.jpg","hash":"5e356dc7b1afcf1b9faf0c83ba94053319930e17","modified":1543804132780},{"_id":"source/images/else/class.gif","hash":"3199671dd4d58cb2869641d148fef5613ef545bc","modified":1547874510160},{"_id":"source/images/else/xinyuefei.jpg","hash":"fb3d00a6130e9d9c5dbfc8fabb539bcdd6f0ccc0","modified":1542790893141},{"_id":"source/images/else/kid-s.jpg","hash":"84ba54f4d372f4166978de628a0e994d2a507710","modified":1546326564807},{"_id":"source/images/flash/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542948069455},{"_id":"source/images/flash/flash11.jpg","hash":"5f7680e435c86cc93ad2e46f8f2159b9ee316c17","modified":1542790893120},{"_id":"source/images/flash/flash12.jpg","hash":"c6f23dbfc9f4a75ee5cdc0e72d50b3b6b9bded0a","modified":1542790893120},{"_id":"source/images/labview/input2.gif","hash":"57a821a296c4af6b71d10270857e67c427a8ffef","modified":1542790893128},{"_id":"source/images/flash/flash42.jpg","hash":"521b31b845a1e4fea2ecce432e75e6fd780e70ba","modified":1542790893127},{"_id":"source/images/flash/flash51.jpg","hash":"590ed826ec92d0a8c1ee64c88d895c50bcd710ed","modified":1542790893128},{"_id":"source/images/labview/subtract.gif","hash":"e39343804c24efd6b2a57a7117b08c232f64236f","modified":1542790893136},{"_id":"source/images/matlab/PD.gif","hash":"bfc3215714e902c18b4d2a53926cd8e8dc54c41d","modified":1542790893119},{"_id":"source/images/matlab/P.gif","hash":"c1ce48a3418e6a1c1c672060bca3679acd9d6103","modified":1542790893118},{"_id":"source/images/labview/labviewfft.gif","hash":"090e9064bc5b55330d516bffe190ea6a752bd444","modified":1542790893128},{"_id":"source/images/matlab/PI.gif","hash":"e498f7294cf901ccdfca4ba9a2039ae851901e96","modified":1542790893119},{"_id":"source/images/matlab/PID.gif","hash":"02a3c161a36add706f427a80a2642686d6f8ee75","modified":1542790893119},{"_id":"source/images/mcu/.DS_Store","hash":"8e00f3af385077963c472b36cfb5fdf216e106e8","modified":1562567711508},{"_id":"source/images/matlab/fft.gif","hash":"a8a162d6dab6bb6cbeb94ca0d37c5b91399f157e","modified":1542790893119},{"_id":"source/images/mcu/mcu11.gif","hash":"702ff26152494c1b521aa2db0ae911f40577524e","modified":1542790893129},{"_id":"source/images/mcu/mcu21.jpg","hash":"6e8ae38391655ce28eeb318e3c4f708ac20935d6","modified":1542790893129},{"_id":"source/images/mcu/mcu22.jpg","hash":"86f4854362f0811aa212764f16b13afacc61eacb","modified":1542790893130},{"_id":"source/images/mold/.DS_Store","hash":"4d8e8486aab2a999984ffea9a67ab2facc7a5e10","modified":1542948135436},{"_id":"source/images/parallax/layer3.png","hash":"51bd11ce2df14a0f30ee5a1a9fbe9816f7532493","modified":1510384828000},{"_id":"source/images/parallax/layer1.png","hash":"139d90c6cc30b3debd7df3d0a812999d00c14d92","modified":1510384828000},{"_id":"source/images/parallax/layer2.png","hash":"233dff2aeee4133f29abde0213db5ee6660dc0e7","modified":1510384828000},{"_id":"source/images/parallax/layer4.png","hash":"8762e885f5ccf4795d064ee81a8f78ff167031e9","modified":1510384828000},{"_id":"source/images/parallax/layer5.png","hash":"cf5e9af4ee7b4aed70b2296143527e25c9b8eaea","modified":1510384828000},{"_id":"source/images/parallax/layer6.png","hash":"0c29db20f879579985ce8009f25ec108886c71c9","modified":1510384828000},{"_id":"source/images/proe/tulun1.jpg","hash":"cde336d9ecf428a68876979893755ca5d81f8618","modified":1542790893136},{"_id":"source/images/proe/tulun3.gif","hash":"f952f3cdcb29bbf6e28f7611b6b650b0ee57f1d5","modified":1542790893137},{"_id":"source/images/proe/tulun4.gif","hash":"62740dc6f304e19229eb89b0a04bf25ad6c1e17b","modified":1542790893138},{"_id":"source/images/proe/tulun5.gif","hash":"0b67dea091572fdf9fcb740d723cb59d3f60fa08","modified":1542790893138},{"_id":"source/images/robot/robot11.jpg","hash":"dcf5c115ad57743df84d2965b4839e091af12977","modified":1543374728041},{"_id":"source/images/robot/robot31.jpg","hash":"242a70b813d67553f1a7cbd644e1da358222147b","modified":1543374728042},{"_id":"source/images/robot/robot41.jpg","hash":"cc19664a54a356521988efe5b1de51a849f89cae","modified":1543374728044},{"_id":"source/images/robot/robot32.jpg","hash":"64a1b8d9679c9582ed7babc77d7fca87c2af7dd7","modified":1543374728043},{"_id":"source/images/robot/robot51.jpg","hash":"7a1681e5113bbe63af702736ff0d973659592ab6","modified":1543374728045},{"_id":"source/images/robot/robot52.jpg","hash":"17abd32a64d7b742c027964067af68e07b18316e","modified":1543374728046},{"_id":"source/images/robot/robot62.jpg","hash":"5d81bf00055713f44cc1a3c87ee66d88d532cd8f","modified":1543374728048},{"_id":"source/images/robot/robot61.jpg","hash":"22d33c250988c659e68076fadb8c70b3e4bf6990","modified":1543374728047},{"_id":"source/images/robot/robot73.gif","hash":"61c46dc00ae2717c60c10b6d7f66cc0d55e374db","modified":1543374728054},{"_id":"source/images/robot/robot71.jpg","hash":"884085eba4c9c57e4a6d1a8d6ff98b8301b98ba3","modified":1543374728049},{"_id":"source/images/robot/walk1.gif","hash":"c5894a7a2547738fe2498ff49a0a91907b1b3e1c","modified":1543374728055},{"_id":"source/images/robot/walk2.gif","hash":"c69394149649141533be9a637eac91f74dde86ba","modified":1543374728056},{"_id":"source/images/robot/walk3.gif","hash":"e8346f6688d637725b85a5b5c7c341a459e1f52c","modified":1543374728057},{"_id":"themes/yolog/layout/_partial/header.pug","hash":"800b589e289f6d17d951617647aeac29ec2e6114","modified":1538987718198},{"_id":"themes/yolog/layout/_partial/meta.pug","hash":"fbd1ce101d4b9781888d6b5066d16e85fe00981b","modified":1542094715851},{"_id":"themes/yolog/layout/_partial/signature.pug","hash":"df6d35ad432c5e8af521efa72125dd5efa7699ec","modified":1538986648433},{"_id":"themes/yolog/layout/_partial/title.pug","hash":"4c58432443004dcf087b33a5548c0b1368ca1f60","modified":1538276062674},{"_id":"themes/yolog/source/css/.DS_Store","hash":"9c56ef476c1174f6e0ce29f98705e236277859a0","modified":1546427310831},{"_id":"themes/yolog/source/css/_base.styl","hash":"8ca1c435b264b29ce50d8f19fb24d8c7834ba4e0","modified":1554970203625},{"_id":"themes/yolog/source/css/_responsive.styl","hash":"a9db4f4a914d613ab49d4dbd0cd1c323328a2263","modified":1542096112776},{"_id":"themes/yolog/source/css/_variables.styl","hash":"c2972e3a39d5a6f6b0c587a07098dca96d8ad69b","modified":1539931858312},{"_id":"themes/yolog/source/css/style.styl","hash":"7c25ddc84b9c874b96469a3a2cda2832f89371c6","modified":1554096916257},{"_id":"themes/yolog/source/img/.DS_Store","hash":"cbe3a960a7c626d992d11125fce09f182a184957","modified":1542095682578},{"_id":"themes/yolog/source/img/favicon.png","hash":"baff38ac44ce8b76ee1c5d592dc7839410a6cd40","modified":1542095767632},{"_id":"themes/yolog/source/img/touch-icon.png","hash":"48fa008bb60fc01c14607e83603090e3632439fc","modified":1542095779431},{"_id":"themes/yolog/source/js/script.js","hash":"ada90af13f1246ac2e4e2f4344d2f0125d6a3521","modified":1554973204603},{"_id":"source/demo/speedy-transition-effect/1.jpg","hash":"5174b5fcc473cf93374eafedf6a9079287d1389c","modified":1544469184000},{"_id":"source/demo/speedy-transition-effect/2.jpg","hash":"e0b25b0a31623500eb3c0242eeac6922dacc9e0e","modified":1544469184000},{"_id":"source/images/else/kid-l.jpg","hash":"71b4505d28679b1b8d39fd574a7f5ec4d07fa9b0","modified":1546326599043},{"_id":"source/images/flash/flash31.gif","hash":"4e1ae970469ff68be21e4af02948a42d35892c61","modified":1542790893121},{"_id":"source/images/proe/tulun2.gif","hash":"7e97c5b2ac5466c626e9558960f158873d74000f","modified":1542790893137},{"_id":"source/demo/speedy-transition-effect/3.jpg","hash":"b72e43b1100b85e0fa4a930f9f0753151b93e479","modified":1544469184000},{"_id":"source/demo/vue-drag-drop/css/app.cdb68e9f.css","hash":"a030fcf2706a1943d24a8988deb33e4b3ce7ea95","modified":1555488075443},{"_id":"source/demo/vue-drag-drop/js/app.66a7b144.js","hash":"59503dcf0f990559127f70db2d2a0798d8118148","modified":1555488075443},{"_id":"source/images/mold/1/dz.jpg","hash":"f4c432cadb6eccfe45a2ce30b358125267eb9590","modified":1247295600000},{"_id":"source/images/mold/1/dom.jpg","hash":"a2329ddfa492e1a4653f4c8ed8e99598aa2f5b7c","modified":1247295600000},{"_id":"source/images/mold/10/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443830042},{"_id":"source/images/mold/1/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443814322},{"_id":"source/images/mold/10/chpmini.jpg","hash":"ac7aeb1ec2cdeea694491c4da138d6e24a64d379","modified":1247295600000},{"_id":"source/images/mold/12/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443928446},{"_id":"source/images/mold/13/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443962876},{"_id":"source/images/mold/13/gwz.jpg","hash":"491cff4eed81fa2842c5940d4805a95f64af3183","modified":1247295600000},{"_id":"source/images/mold/2/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443941286},{"_id":"source/images/mold/3/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443844570},{"_id":"source/images/mold/3/2D1.jpg","hash":"9204bc39d187ff2197913b3c30cc2320566ceb44","modified":1247295600000},{"_id":"source/images/mold/3/2D2.jpg","hash":"2ed12c8baed0b984153634e9fa9e139cd0a66405","modified":1247295600000},{"_id":"source/images/mold/3/chp.jpg","hash":"3ec0ee6b33ee72344f4e63d7567ed7b8d90053b5","modified":1247295600000},{"_id":"source/images/mold/3/3D.jpg","hash":"8ea6c7146ee929de41978f62f1f7ac2f9627c5e6","modified":1247295600000},{"_id":"source/images/mold/4/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443837681},{"_id":"source/images/mold/4/2D.jpg","hash":"8217b667df00bfda565798a6fa15f36652eb5501","modified":1247295600000},{"_id":"source/images/mold/4/tuzhi.jpg","hash":"7a167cb0b481a2a9f265e5161e9387de757834a9","modified":1247295600000},{"_id":"source/images/mold/4/xd.jpg","hash":"d3794a9cadfc0f98d5d9d818dd55af5900dfdfdb","modified":1247295600000},{"_id":"source/images/mold/5/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443971045},{"_id":"source/images/mold/5/chp.jpg","hash":"a6050d1185c843998b601d887d36417070a598c1","modified":1247295600000},{"_id":"source/images/mold/5/jk.jpg","hash":"818f4c2d5b22b9b1ea3c051e9ffb2a550193f6d6","modified":1247295600000},{"_id":"source/images/mold/5/ld.jpg","hash":"00bf9f2a0f3efa45f4d409f5d2fb74ac9816a42e","modified":1247295600000},{"_id":"source/images/mold/6/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443822413},{"_id":"source/images/mold/6/11.jpg","hash":"a5e4f3b1489d443937cee9f10b481bcb88c98337","modified":1247295600000},{"_id":"source/images/mold/6/14.jpg","hash":"b49a3b9c4c1e2a752c03869d3c98c7f0404e16dd","modified":1247295600000},{"_id":"source/images/mold/6/12.jpg","hash":"c9e48b626fe7eeb2748a5063fe412246a52a37fa","modified":1247295600000},{"_id":"source/images/mold/6/13.jpg","hash":"af127e0a7b1ff9026c8ed380f9a99f63bd9701b7","modified":1247295600000},{"_id":"source/images/mold/6/15.jpg","hash":"615d50566e96b19f204dd9f7b9656bba418fc6fc","modified":1247295600000},{"_id":"source/images/mold/6/17.jpg","hash":"fd696c1c6bee444064ae172025a6e30cbec87f56","modified":1247295600000},{"_id":"source/images/mold/6/16.jpg","hash":"e7fcffd29cfbae2c6bac87f6f90e253d17ce38b9","modified":1247295600000},{"_id":"source/images/mold/6/21.jpg","hash":"92b0b024905c9e915f0d18a63dbc5d3ba7aa6b5d","modified":1247295600000},{"_id":"source/images/mold/6/24.jpg","hash":"2b67af15002d932b689fd312bbaa7cdece0c5613","modified":1247295600000},{"_id":"source/images/mold/6/23.jpg","hash":"9168d6c3455638267f357b280942dff8c186252a","modified":1247295600000},{"_id":"source/images/mold/6/25.jpg","hash":"9abb31155285b7fe383ab9b4f8607ca8bfd7f205","modified":1247295600000},{"_id":"source/images/mold/6/26.jpg","hash":"1cee20cf81b1319dc11fd8fb6e1e5cafb63f78c6","modified":1247295600000},{"_id":"source/images/mold/6/27.jpg","hash":"735e3f8a7e05e7b43eb244a6b23148ec7ba02522","modified":1247295600000},{"_id":"source/images/mold/6/28.jpg","hash":"3d58ce242c078a062c50aa390e553682857b2ae1","modified":1247295600000},{"_id":"source/images/mold/6/29.jpg","hash":"44b2e08c083975573b5912b72a142e150970ff56","modified":1247295600000},{"_id":"source/images/mold/6/31.jpg","hash":"a84574a1120bd41b70ea1e1e655b30f162d22f8a","modified":1247295600000},{"_id":"source/images/mold/6/32.jpg","hash":"3dee454af62fe8437319ae6e5fca7f0a86a6beca","modified":1247295600000},{"_id":"source/images/mold/6/33.jpg","hash":"2b3121e6f1b777f1747bd6a1db717c60ea9b8392","modified":1247295600000},{"_id":"source/images/mold/6/34.jpg","hash":"7f5b6608fc802a0fed703ad3c00aec966216bc10","modified":1247295600000},{"_id":"source/images/mold/6/35.jpg","hash":"1c29ce382087ba0a7f3f886c8385ca6ffcb855d7","modified":1247295600000},{"_id":"source/images/mold/6/36.jpg","hash":"da91c5135a1ccfcc1e52862557f93244c7190758","modified":1247295600000},{"_id":"source/images/mold/6/38.jpg","hash":"a1a0502ecf0da5a1bf873de0d9046264d162e68e","modified":1247295600000},{"_id":"source/images/mold/6/39.jpg","hash":"5ed8587acf894a058f45459e8e1267a6f933130c","modified":1247295600000},{"_id":"source/images/mold/6/41.jpg","hash":"986e74d40f8a4a3778c2581785cff712617c964f","modified":1247295600000},{"_id":"source/images/mold/6/40.jpg","hash":"883dfd0f7bdb4cf3652bbc7b0cf16b9a4565341c","modified":1247295600000},{"_id":"source/images/mold/6/42.jpg","hash":"cb0da030ad3f43d38c61d7c49cca7810510c3edb","modified":1247295600000},{"_id":"source/images/mold/6/face.jpg","hash":"c991500e38223b1cb312a69bf0e63082a75783f6","modified":1247295600000},{"_id":"source/images/mold/7/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443981096},{"_id":"source/images/mold/7/2D.jpg","hash":"09affc815cc3e7063e083a3b58cc441d66e9e829","modified":1247295600000},{"_id":"source/images/mold/7/zhp.jpg","hash":"b6db106bf47bc32503160948bee3e648d94c0e6e","modified":1247295600000},{"_id":"source/images/mold/9/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443952344},{"_id":"source/images/mold/9/chp.jpg","hash":"c37285376a9881edec72538169b633cd5e8eb8fb","modified":1247295600000},{"_id":"source/images/mold/8/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443850988},{"_id":"source/images/mold/9/dh.gif","hash":"9c78a66c59ecccc8bfe9da7aaab943d4aea27d27","modified":1247295600000},{"_id":"source/images/mold/8/xj.jpg","hash":"c429d545e29477b53ac2fcfebc198da20127f5d7","modified":1247295600000},{"_id":"source/images/mold/8/mini.jpg","hash":"e99646f1d50009f8f9e1d608d5e03d7a6c96eecd","modified":1247295600000},{"_id":"source/images/mold/8/chp.jpg","hash":"b89f8b65b64469423800c7be3a8f6f99b867a074","modified":1247295600000},{"_id":"source/images/mold/11/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542443946296},{"_id":"source/images/mold/8/zp.jpg","hash":"24c0777e92c87c71950a4bf7dcd72a66a40c9bbc","modified":1247295600000},{"_id":"source/images/mold/11/dc.jpg","hash":"7cfd5a4f9a1321bd72e73c42b7c5bbba9425a630","modified":1247295600000},{"_id":"source/images/mold/11/gj.jpg","hash":"a442fd460c99cfcf40f3d097b26fdf02f49e4f16","modified":1247295600000},{"_id":"source/images/mold/11/lg.jpg","hash":"b243bae6ff5c9e669c039da233da44cfff65f280","modified":1247295600000},{"_id":"source/images/mold/11/mj.jpg","hash":"47308868abc1643b52314f223344b5b7b4510a5a","modified":1247295600000},{"_id":"source/scripts/d3.v5.min.js","hash":"c9621d5935dd9214b55e14e9a38d0858ae1ffebe","modified":1544248374939},{"_id":"themes/yolog/source/css/_partial/header.styl","hash":"4ee976c2cbe7703b46f11895971030ca2a56638a","modified":1539942022517},{"_id":"themes/yolog/source/css/_partial/article.styl","hash":"6bf00e447c19b95dee14056184ce4cb093616e0a","modified":1551263654751},{"_id":"themes/yolog/source/css/_partial/list.styl","hash":"d160c47f484fad735a922d3d2c0e0b5c54e4a335","modified":1539841939884},{"_id":"themes/yolog/source/css/_partial/highlight.styl","hash":"286559029158b40179870717279fde5e1a83916d","modified":1554950828680},{"_id":"themes/yolog/source/css/_partial/iframe.styl","hash":"59ab6c199547951b681bf61f0d00d2b9f54d6f70","modified":1554969243212},{"_id":"themes/yolog/source/css/_partial/signature.styl","hash":"68ee3d64ba28c7ce81e19ae5891e75adbb18e180","modified":1538986785992},{"_id":"themes/yolog/source/css/_partial/pagination.styl","hash":"e6bf0e419176f11592527938f3588e0324041fb7","modified":1539855150556},{"_id":"source/images/flash/flash41.gif","hash":"d469ad18d9ef52ba81f672a58470514044d796c4","modified":1542790893127},{"_id":"source/images/mold/10/chp.jpg","hash":"4bfeb851380e7c4ac995b3bfaeb7b0df4273c0ce","modified":1247295600000},{"_id":"source/images/mold/1/2D.jpg","hash":"218fd527fdf6ffa7f03f4ab8bc4f784f465d14da","modified":1247295600000},{"_id":"source/images/mold/10/2D.jpg","hash":"d16603f225b2cc5e60e0ab46c8b1ba7ae991b55b","modified":1247295600000},{"_id":"source/images/mold/10/dom.jpg","hash":"d55f8ed2234d2ec6cbfa176c35e24681de7ba8ca","modified":1247295600000},{"_id":"source/images/mold/10/zhp.jpg","hash":"90e1078a42c5b4458559aa256a3fd7eafc977b9a","modified":1247295600000},{"_id":"source/images/mold/10/dim.jpg","hash":"eb7c949e6576ce525f8cac48da568ab622f494ab","modified":1247295600000},{"_id":"source/images/mold/12/4.jpg","hash":"9893a9eddc35c564823b333a67c319bc7a64f445","modified":1247295600000},{"_id":"source/images/mold/12/2.jpg","hash":"387fdbe9e215e32ccb7b17e3f207867d1939cf9f","modified":1247295600000},{"_id":"source/images/mold/13/jiaokou.jpg","hash":"4186453ddf9ed3be56f9eb93cf24937695ab55f7","modified":1247295600000},{"_id":"source/images/mold/13/grp.jpg","hash":"787d8cf160bf35ab8e457bb9cdb6d17a305a5e09","modified":1247295600000},{"_id":"source/images/mold/13/zhp.jpg","hash":"fc5366dbe5e2987794236f24d35339db49ef48b1","modified":1247295600000},{"_id":"source/images/mold/4/chp.jpg","hash":"86094543fce97047ba1c7637e592072dcffe566e","modified":1247295600000},{"_id":"source/images/mold/5/dim.jpg","hash":"4402eec494069a09bd267fb7b335bebb78c577fd","modified":1247295600000},{"_id":"source/images/mold/6/22.jpg","hash":"0c44cbf155c6a171686678b632dd5fd0ae3f20ca","modified":1247295600000},{"_id":"source/images/mold/6/37.jpg","hash":"a7f41a901cd1c8c3504ac5e58175257336cb769c","modified":1247295600000},{"_id":"source/images/mold/7/chp.jpg","hash":"5f2294f4eb04edcf13cfc39f6daf625fc4e43250","modified":1247295600000},{"_id":"source/images/mold/7/3D.jpg","hash":"f9c1d350bf67ec8af95d241e613c8562ef5e345e","modified":1247295600000},{"_id":"source/images/mold/9/2D1.jpg","hash":"58c23176efca8aebedefc68767932f4dab1d4ddc","modified":1247295600000},{"_id":"source/images/mold/9/2D2.jpg","hash":"d67390837b70c31aadbbd2dd7a607a11d382e0e5","modified":1247295600000},{"_id":"source/images/mold/9/dc.jpg","hash":"6c3b6c8c29909d9357fe3218ac6958a798727fe4","modified":1247295600000},{"_id":"source/images/mold/11/2D.jpg","hash":"7c628fb4446a7c09373af54f371b7da1e5c3ea97","modified":1247295600000},{"_id":"source/images/mold/11/dimdom.jpg","hash":"27c323c52fcb50922f843369ddafba2bbc62811a","modified":1247295600000},{"_id":"source/images/mold/11/chp.jpg","hash":"2df5d74001fd60bcc37ad11a1e8b8b3070644b70","modified":1247295600000},{"_id":"source/images/mold/12/1.jpg","hash":"4e4473620a8394fa7558e9d3c51a396d27df7933","modified":1247295600000},{"_id":"source/images/mold/13/wt.jpg","hash":"52ff6029541e181e6cd4b8e7dc00a26bf711995f","modified":1247295600000},{"_id":"source/images/mold/8/dim.gif","hash":"e1435702b4b75e1d7fbd73963fa9ab16723924d8","modified":1247295600000},{"_id":"source/images/robot/walk4.gif","hash":"e5a9da5c4df6406a71dbe7d7e6612e4df151a875","modified":1543374728061},{"_id":"source/images/mold/12/3.jpg","hash":"1ea4393149cde77a3d6d973605c0de1af0544422","modified":1247295600000},{"_id":"source/images/mold/13/chp.jpg","hash":"93cbbda5583223b799bb949bdb71b24566d56385","modified":1247295600000},{"_id":"source/images/mold/2/mj.jpg","hash":"7435926211a2207f1d39a555e2c55dc21ffba200","modified":1247295600000},{"_id":"source/demo/vue-drag-drop/js/chunk-vendors.ca022210.js","hash":"53895f469535b95525237c728d5aeab0e608bd0c","modified":1555488075443},{"_id":"source/images/mold/13/dimdom.jpg","hash":"46d6cdc225dd1d15ed1e2c19f19e3bf7a63b6078","modified":1247295600000},{"_id":"source/images/robot/robot72.gif","hash":"14f2b12e59ba0245304add8bd63b256ccc526b75","modified":1543374728053},{"_id":"source/images/flash/flash32.gif","hash":"a86f79d1abfd015f3aef1a617fe6cb864751303d","modified":1542790893126},{"_id":"public/uncategorized/point-in-triangle-test.html","hash":"cd6bf0ccfcd097e0d62e390c5b53ef694097b882","modified":1569823545102},{"_id":"public/vue/vue-drag-drop.html","hash":"9cbc09162e2571030892b4575e3d6d46eddf9f92","modified":1569823545102},{"_id":"public/uncategorized/speedy-transition-effect.html","hash":"6e6a159a54cdf15d1865e5fdd7ed83ad1b8bf318","modified":1569823545102},{"_id":"public/uncategorized/split-text.html","hash":"3e9e298be902cb38a5c5b2a1cdecde539eec044c","modified":1569823545102},{"_id":"public/code-snippets/event-emitter.html","hash":"c40a7784a45f9bac885c5ad0483e7e7a63c04da0","modified":1569823545103},{"_id":"public/vue/mockjs.html","hash":"11b8ff1f966852830d0c37b8bf09f0b9fd9d09cc","modified":1569823545103},{"_id":"public/uncategorized/canvas-grain.html","hash":"09e6d6e22098fa0c261b8231b7bb06a52448afb0","modified":1569823545103},{"_id":"public/uncategorized/floyd-steinberg-dithering.html","hash":"916e7d192b01fdcdadbac8967b8d28858175e2bc","modified":1569823545103},{"_id":"public/code-snippets/add-subtract-multiply-divide.html","hash":"8639a4c3b4bcb32ff33b39b744bb391fa35c79e8","modified":1569823545103},{"_id":"public/d3/poisson-disc.html","hash":"b0e2859084ba2c772be23415e7980181a3b20f17","modified":1569823545103},{"_id":"public/code-snippets/color-darken-lighten.html","hash":"9692447fb3dae8dfc62900974823eaf9b40a2965","modified":1569823545103},{"_id":"public/uncategorized/labview1.html","hash":"28f501dd63c6356bb101313fd9af215015f22503","modified":1569823545103},{"_id":"public/uncategorized/labview2.html","hash":"79af95402de5237100cbb626d01a5e66372caee5","modified":1569823545103},{"_id":"public/uncategorized/matlab1.html","hash":"3bc4aef58585de47fee9a869445498fbb3b71092","modified":1569823545103},{"_id":"public/uncategorized/labview3.html","hash":"835bd0daed15bdc8f87eb4264a8620c0a0abb6e3","modified":1569823545103},{"_id":"public/uncategorized/robot8.html","hash":"7a80f7a52350552c917e367a34556c2c8d9a70e0","modified":1569823545103},{"_id":"public/uncategorized/matlab2.html","hash":"445a50b595addd9626df197652eb0984d1180d7a","modified":1569823545103},{"_id":"public/uncategorized/robot7.html","hash":"f1d3c2c682ce8c5bdd37261539f54d8c9db70c4e","modified":1569823545103},{"_id":"public/uncategorized/proe5.html","hash":"75366bb1e781dcdbc3584aaf46aa6306e5b773d4","modified":1569823545103},{"_id":"public/js/json.html","hash":"3e339e0825a28851d5842f768d3111efc062860a","modified":1569823545103},{"_id":"public/uncategorized/robot6.html","hash":"872c808c7f40611153d4f02101c422cb002e611e","modified":1569823545103},{"_id":"public/uncategorized/mcu2.html","hash":"fe48e62d8f16965fe749686c3f162d0f99ba6517","modified":1569823545103},{"_id":"public/uncategorized/robot5.html","hash":"a9c9e2bd55c474da4b601c5641167688d0a3859c","modified":1569823545103},{"_id":"public/uncategorized/proe4.html","hash":"f2e6c05fc26c1c4bd81fc6dd0be4d5df0b77605e","modified":1569823545103},{"_id":"public/uncategorized/robot4.html","hash":"583d26723053ced5ac0c15719cfc066285119aea","modified":1569823545103},{"_id":"public/uncategorized/proe3.html","hash":"a3ced9f21781a9765dbd9d0110141609137c1de6","modified":1569823545104},{"_id":"public/uncategorized/proe2.html","hash":"6c65b10ebd837fd4fabbd2bbbf673033f978e88c","modified":1569823545104},{"_id":"public/uncategorized/proe1.html","hash":"8d6c9dd8835cd7767b56b9913e6e68112389a851","modified":1569823545104},{"_id":"public/uncategorized/mcu1.html","hash":"9a1de5dbd40a3c5b532448c34f4bb6a879e4fe82","modified":1569823545104},{"_id":"public/uncategorized/robot3.html","hash":"de8db49efa26a3bf9fcaf10d576c56e168d1f8cb","modified":1569823545104},{"_id":"public/uncategorized/robot2.html","hash":"b7121937edc887101b10fbfc3d392aca693865cf","modified":1569823545104},{"_id":"public/uncategorized/robot1.html","hash":"8c807e8381dab91082c4bb463337f73b8a27309f","modified":1569823545104},{"_id":"public/uncategorized/flash6.html","hash":"48b5d231667d7fad9beb9573c961bacc5c7a2374","modified":1569823545104},{"_id":"public/uncategorized/flash5.html","hash":"646e919dfd1050cc415b1b1e7d099a06a4ec5881","modified":1569823545104},{"_id":"public/uncategorized/flash4.html","hash":"6199478111b56885e2c894f2778b57d75a7b761d","modified":1569823545104},{"_id":"public/uncategorized/flash3.html","hash":"0aa7e44dd2e83504f67121f81a56ceab3f39945c","modified":1569823545104},{"_id":"public/uncategorized/flash2.html","hash":"029b8a40d4cb68bb65db7c03edbe3c32bff25f86","modified":1569823545104},{"_id":"public/uncategorized/flash1.html","hash":"aedbd7051167c41c56ab3b4e681952658cbf48cf","modified":1569823545104},{"_id":"public/uncategorized/flash0.html","hash":"56a7aa65dced7c474c46932e02c4f0046b342172","modified":1569823545105},{"_id":"public/uncategorized/mold13.html","hash":"1093f2d4cca433c07d2611cbf4cbeddc6dd55bfb","modified":1569823545105},{"_id":"public/uncategorized/mold12.html","hash":"46d2364a1e63723936edb83e318b35ca1a67c70f","modified":1569823545105},{"_id":"public/uncategorized/mold11.html","hash":"4ffca54c187b37cd538edcb2af2032dadafce25b","modified":1569823545105},{"_id":"public/uncategorized/mold10.html","hash":"fb20f432cdb377aad82c04adbaa923e9555c6f4d","modified":1569823545105},{"_id":"public/uncategorized/mold9.html","hash":"c4996f07db650f9d7a277cb60f35422f7a637e41","modified":1569823545105},{"_id":"public/uncategorized/mold8.html","hash":"46eb3d987ec3ba663b41ac59752f5155a801669e","modified":1569823545105},{"_id":"public/uncategorized/mold7.html","hash":"4f274324264d3ea8e670be7c7a48a50cef82fd6f","modified":1569823545105},{"_id":"public/uncategorized/mold6.html","hash":"322b0d621ad076e416cf36d6ae1cfe650867d2c5","modified":1569823545105},{"_id":"public/uncategorized/mold5.html","hash":"73ea620e42dd14500f6a4774a368f615b1e3e3cb","modified":1569823545105},{"_id":"public/uncategorized/mold4.html","hash":"52ad2d10d7c68f7a63a51da788a9c9ec24dc8a59","modified":1569823545105},{"_id":"public/uncategorized/mold3.html","hash":"733f1c638ad4ca8007551f3da67968a2c0b47b9a","modified":1569823545105},{"_id":"public/uncategorized/mold2.html","hash":"db07cdf97a09c7f21b7c44e1a9b5a4e93a0095f0","modified":1569823545105},{"_id":"public/uncategorized/mold1.html","hash":"a73bbefb369ea8b3e816c8c4b497d3d3a4ed1c0d","modified":1569823545105},{"_id":"public/uncategorized/about.html","hash":"afee4aaa0a4c5a78a8809f4404a8f611130e0fc3","modified":1569823545105},{"_id":"public/categories/code-snippets/index.html","hash":"a0464b0c18b7245aac975dce06715be4505fdbcb","modified":1569823545106},{"_id":"public/categories/uncategorized/index.html","hash":"e3dbe802d8f65d28a8a0ea80ba4f821ff536630f","modified":1569823545106},{"_id":"public/categories/uncategorized/page/2/index.html","hash":"002080e085124195df64393be93cbf031037b1e9","modified":1569823545106},{"_id":"public/categories/uncategorized/page/3/index.html","hash":"236e9e813ed36ef2ddaae59a4d8e9666a3b42b3a","modified":1569823545106},{"_id":"public/categories/uncategorized/page/4/index.html","hash":"cf4cfb9d491a33d09f448696be761ee8aa910426","modified":1569823545106},{"_id":"public/categories/uncategorized/page/5/index.html","hash":"f97759ff9bc2fc74f163d52f1a7483f869f80836","modified":1569823545106},{"_id":"public/categories/js/index.html","hash":"62dd0374f7d3667458c7511753bd12ad1a6fbb70","modified":1569823545106},{"_id":"public/categories/vue/index.html","hash":"7f07a435f61fa5581024a49f9ab95598f80a43e6","modified":1569823545106},{"_id":"public/categories/d3/index.html","hash":"6af957a8b1948316378fffea280e376331f8b0f8","modified":1569823545106},{"_id":"public/categories/svg/index.html","hash":"fefaed818ec1b46bc8afbbd2344f129e53b26a31","modified":1569823545106},{"_id":"public/index.html","hash":"e6f662324a11e6f9b37fe29affae1b1935a4cd52","modified":1569823545106},{"_id":"public/page/2/index.html","hash":"1f4d92ef08574bed713e8ff906e948da1d40cfc7","modified":1569823545106},{"_id":"public/page/3/index.html","hash":"c41a9d1278b627c038a96d105686fb9758ee03db","modified":1569823545106},{"_id":"public/page/4/index.html","hash":"b0c8c8fc49c9bfead18aa522a513914651cf32b5","modified":1569823545106},{"_id":"public/page/5/index.html","hash":"245b89a2a76ff77d645a1fffd4c4a1187a7fe7f9","modified":1569823545106},{"_id":"public/page/6/index.html","hash":"d9c7a8aa40a8d88a93e8083f4d26ab9f5dd77614","modified":1569823545106},{"_id":"public/page/7/index.html","hash":"9ca231c915efc8e150432e5114aeec5300be2158","modified":1569823545106},{"_id":"public/uncategorized/webpack.html","hash":"25ae6c49dda35a0a1900487e66e43beaa2bbb928","modified":1569823545106},{"_id":"public/uncategorized/parallax.html","hash":"fc57641399dca7036f31e40edbbc1d01e5affeb6","modified":1569823545106},{"_id":"public/js/event-loop.html","hash":"330ae6d6a9b9cb9a8de544ee29272a3c2ff79968","modified":1569823545106},{"_id":"public/js/promise.html","hash":"eef7cf154e5e595aa276d0fccb69ad36906f9a78","modified":1569823545106},{"_id":"public/js/es5-inheritance.html","hash":"754a59a772b25f06650c723aeea387270d600f09","modified":1569823545106},{"_id":"public/js/es5-class.html","hash":"a33060619a55f1eab73123f1f742decb4dd89e9e","modified":1569823545106},{"_id":"public/uncategorized/cubic-bezier.html","hash":"eb72d7f2c4b5110a8ba6c7f9471d167357d9290c","modified":1569823545106},{"_id":"public/svg/textures.html","hash":"8ff9af9ec976766b3e4ad8ad9c3ac2819712f522","modified":1569823545106},{"_id":"public/d3/tree-cluster.html","hash":"0660acffbc71783ddb12b068fe171a55d8ff03f6","modified":1569823545106},{"_id":"public/404.html","hash":"64a290a947401e458b54f95c9f413281ac5f53cf","modified":1569823545125},{"_id":"public/scripts/highlight.js","hash":"78e54bb9d2539b867b84c819c430d271d314778e","modified":1569823545125},{"_id":"public/scripts/imagesloaded.pkgd.min.js","hash":"6d3e11174e22668e69df236e5c4542168f7cbfec","modified":1569823545125},{"_id":"public/scripts/splitText.js","hash":"b822a59f4317b2b59cbf3e6173698cbb6a3de7c1","modified":1569823545125},{"_id":"public/demo/speedy-transition-effect/index.html","hash":"990a40b3b3597e8c0f3e9417e0fcf98ee44abbab","modified":1569823545125},{"_id":"public/demo/speedy-transition-effect/4.jpg","hash":"9dac8fcdd58eec7863f0b23cbb132e63cda89120","modified":1569823545125},{"_id":"public/demo/speedy-transition-effect/noise.png","hash":"7b5ff7c8dc6153da241b12ad6d033db329cffcff","modified":1569823545125},{"_id":"public/demo/speedy-transition-effect/style.css","hash":"f2a164b970df31497ce17aa11e8946a1d5144ba4","modified":1569823545125},{"_id":"public/demo/speedy-transition-effect/script.js","hash":"08403ef8d9bd9be5bb9c0f16529c517e33538e5f","modified":1569823545125},{"_id":"public/demo/vue-drag-drop/index.html","hash":"d90cc0a0d278ea97898965de792b430022fd463a","modified":1569823545125},{"_id":"public/images/else/datong0.jpg","hash":"5e356dc7b1afcf1b9faf0c83ba94053319930e17","modified":1569823545126},{"_id":"public/images/else/class.gif","hash":"3199671dd4d58cb2869641d148fef5613ef545bc","modified":1569823545126},{"_id":"public/images/else/xinyuefei.jpg","hash":"fb3d00a6130e9d9c5dbfc8fabb539bcdd6f0ccc0","modified":1569823545126},{"_id":"public/images/labview/input2.gif","hash":"57a821a296c4af6b71d10270857e67c427a8ffef","modified":1569823545126},{"_id":"public/images/flash/flash11.jpg","hash":"5f7680e435c86cc93ad2e46f8f2159b9ee316c17","modified":1569823545126},{"_id":"public/images/flash/flash42.jpg","hash":"521b31b845a1e4fea2ecce432e75e6fd780e70ba","modified":1569823545126},{"_id":"public/images/labview/subtract.gif","hash":"e39343804c24efd6b2a57a7117b08c232f64236f","modified":1569823545126},{"_id":"public/images/matlab/PD.gif","hash":"bfc3215714e902c18b4d2a53926cd8e8dc54c41d","modified":1569823545126},{"_id":"public/images/matlab/P.gif","hash":"c1ce48a3418e6a1c1c672060bca3679acd9d6103","modified":1569823545126},{"_id":"public/images/labview/labviewfft.gif","hash":"090e9064bc5b55330d516bffe190ea6a752bd444","modified":1569823545126},{"_id":"public/images/matlab/PI.gif","hash":"e498f7294cf901ccdfca4ba9a2039ae851901e96","modified":1569823545126},{"_id":"public/images/matlab/fft.gif","hash":"a8a162d6dab6bb6cbeb94ca0d37c5b91399f157e","modified":1569823545126},{"_id":"public/images/mcu/mcu11.gif","hash":"702ff26152494c1b521aa2db0ae911f40577524e","modified":1569823545126},{"_id":"public/images/parallax/layer3.png","hash":"51bd11ce2df14a0f30ee5a1a9fbe9816f7532493","modified":1569823545126},{"_id":"public/images/parallax/layer1.png","hash":"139d90c6cc30b3debd7df3d0a812999d00c14d92","modified":1569823545126},{"_id":"public/images/parallax/layer2.png","hash":"233dff2aeee4133f29abde0213db5ee6660dc0e7","modified":1569823545126},{"_id":"public/images/parallax/layer4.png","hash":"8762e885f5ccf4795d064ee81a8f78ff167031e9","modified":1569823545126},{"_id":"public/images/parallax/layer5.png","hash":"cf5e9af4ee7b4aed70b2296143527e25c9b8eaea","modified":1569823545127},{"_id":"public/images/parallax/layer6.png","hash":"0c29db20f879579985ce8009f25ec108886c71c9","modified":1569823545127},{"_id":"public/images/proe/tulun3.gif","hash":"f952f3cdcb29bbf6e28f7611b6b650b0ee57f1d5","modified":1569823545127},{"_id":"public/images/proe/tulun4.gif","hash":"62740dc6f304e19229eb89b0a04bf25ad6c1e17b","modified":1569823545127},{"_id":"public/images/proe/tulun5.gif","hash":"0b67dea091572fdf9fcb740d723cb59d3f60fa08","modified":1569823545127},{"_id":"public/images/robot/robot31.jpg","hash":"242a70b813d67553f1a7cbd644e1da358222147b","modified":1569823545127},{"_id":"public/images/robot/robot62.jpg","hash":"5d81bf00055713f44cc1a3c87ee66d88d532cd8f","modified":1569823545127},{"_id":"public/images/robot/robot61.jpg","hash":"22d33c250988c659e68076fadb8c70b3e4bf6990","modified":1569823545127},{"_id":"public/images/robot/robot73.gif","hash":"61c46dc00ae2717c60c10b6d7f66cc0d55e374db","modified":1569823545127},{"_id":"public/images/robot/robot71.jpg","hash":"884085eba4c9c57e4a6d1a8d6ff98b8301b98ba3","modified":1569823545127},{"_id":"public/images/robot/walk1.gif","hash":"c5894a7a2547738fe2498ff49a0a91907b1b3e1c","modified":1569823545127},{"_id":"public/images/robot/walk2.gif","hash":"c69394149649141533be9a637eac91f74dde86ba","modified":1569823545127},{"_id":"public/images/robot/walk3.gif","hash":"e8346f6688d637725b85a5b5c7c341a459e1f52c","modified":1569823545127},{"_id":"public/img/touch-icon.png","hash":"48fa008bb60fc01c14607e83603090e3632439fc","modified":1569823545127},{"_id":"public/img/favicon.png","hash":"baff38ac44ce8b76ee1c5d592dc7839410a6cd40","modified":1569823545127},{"_id":"public/demo/vue-drag-drop/css/app.cdb68e9f.css","hash":"a030fcf2706a1943d24a8988deb33e4b3ce7ea95","modified":1569823545127},{"_id":"public/demo/vue-drag-drop/js/app.66a7b144.js","hash":"59503dcf0f990559127f70db2d2a0798d8118148","modified":1569823545127},{"_id":"public/images/mold/1/dz.jpg","hash":"f4c432cadb6eccfe45a2ce30b358125267eb9590","modified":1569823545127},{"_id":"public/images/mold/1/dom.jpg","hash":"a2329ddfa492e1a4653f4c8ed8e99598aa2f5b7c","modified":1569823545127},{"_id":"public/images/mold/10/chpmini.jpg","hash":"ac7aeb1ec2cdeea694491c4da138d6e24a64d379","modified":1569823545127},{"_id":"public/images/mold/3/chp.jpg","hash":"3ec0ee6b33ee72344f4e63d7567ed7b8d90053b5","modified":1569823545127},{"_id":"public/images/mold/3/3D.jpg","hash":"8ea6c7146ee929de41978f62f1f7ac2f9627c5e6","modified":1569823545127},{"_id":"public/images/mold/4/2D.jpg","hash":"8217b667df00bfda565798a6fa15f36652eb5501","modified":1569823545127},{"_id":"public/images/mold/4/tuzhi.jpg","hash":"7a167cb0b481a2a9f265e5161e9387de757834a9","modified":1569823545127},{"_id":"public/images/mold/4/xd.jpg","hash":"d3794a9cadfc0f98d5d9d818dd55af5900dfdfdb","modified":1569823545127},{"_id":"public/images/mold/5/chp.jpg","hash":"a6050d1185c843998b601d887d36417070a598c1","modified":1569823545127},{"_id":"public/images/mold/5/jk.jpg","hash":"818f4c2d5b22b9b1ea3c051e9ffb2a550193f6d6","modified":1569823545128},{"_id":"public/images/mold/5/ld.jpg","hash":"00bf9f2a0f3efa45f4d409f5d2fb74ac9816a42e","modified":1569823545128},{"_id":"public/images/mold/6/11.jpg","hash":"a5e4f3b1489d443937cee9f10b481bcb88c98337","modified":1569823545128},{"_id":"public/images/mold/6/14.jpg","hash":"b49a3b9c4c1e2a752c03869d3c98c7f0404e16dd","modified":1569823545128},{"_id":"public/images/mold/6/12.jpg","hash":"c9e48b626fe7eeb2748a5063fe412246a52a37fa","modified":1569823545128},{"_id":"public/images/mold/6/13.jpg","hash":"af127e0a7b1ff9026c8ed380f9a99f63bd9701b7","modified":1569823545128},{"_id":"public/images/mold/6/15.jpg","hash":"615d50566e96b19f204dd9f7b9656bba418fc6fc","modified":1569823545128},{"_id":"public/images/mold/6/17.jpg","hash":"fd696c1c6bee444064ae172025a6e30cbec87f56","modified":1569823545128},{"_id":"public/images/mold/6/16.jpg","hash":"e7fcffd29cfbae2c6bac87f6f90e253d17ce38b9","modified":1569823545128},{"_id":"public/images/mold/6/21.jpg","hash":"92b0b024905c9e915f0d18a63dbc5d3ba7aa6b5d","modified":1569823545128},{"_id":"public/images/mold/6/24.jpg","hash":"2b67af15002d932b689fd312bbaa7cdece0c5613","modified":1569823545128},{"_id":"public/images/mold/6/23.jpg","hash":"9168d6c3455638267f357b280942dff8c186252a","modified":1569823545128},{"_id":"public/images/mold/6/25.jpg","hash":"9abb31155285b7fe383ab9b4f8607ca8bfd7f205","modified":1569823545128},{"_id":"public/images/mold/6/26.jpg","hash":"1cee20cf81b1319dc11fd8fb6e1e5cafb63f78c6","modified":1569823545128},{"_id":"public/images/mold/6/27.jpg","hash":"735e3f8a7e05e7b43eb244a6b23148ec7ba02522","modified":1569823545128},{"_id":"public/images/mold/6/28.jpg","hash":"3d58ce242c078a062c50aa390e553682857b2ae1","modified":1569823545128},{"_id":"public/images/mold/6/29.jpg","hash":"44b2e08c083975573b5912b72a142e150970ff56","modified":1569823545128},{"_id":"public/images/mold/6/31.jpg","hash":"a84574a1120bd41b70ea1e1e655b30f162d22f8a","modified":1569823545128},{"_id":"public/images/mold/6/32.jpg","hash":"3dee454af62fe8437319ae6e5fca7f0a86a6beca","modified":1569823545128},{"_id":"public/images/mold/6/33.jpg","hash":"2b3121e6f1b777f1747bd6a1db717c60ea9b8392","modified":1569823545129},{"_id":"public/images/mold/6/34.jpg","hash":"7f5b6608fc802a0fed703ad3c00aec966216bc10","modified":1569823545129},{"_id":"public/images/mold/6/35.jpg","hash":"1c29ce382087ba0a7f3f886c8385ca6ffcb855d7","modified":1569823545129},{"_id":"public/images/mold/6/36.jpg","hash":"da91c5135a1ccfcc1e52862557f93244c7190758","modified":1569823545129},{"_id":"public/images/mold/6/38.jpg","hash":"a1a0502ecf0da5a1bf873de0d9046264d162e68e","modified":1569823545129},{"_id":"public/images/mold/6/39.jpg","hash":"5ed8587acf894a058f45459e8e1267a6f933130c","modified":1569823545129},{"_id":"public/images/mold/6/41.jpg","hash":"986e74d40f8a4a3778c2581785cff712617c964f","modified":1569823545129},{"_id":"public/images/mold/6/40.jpg","hash":"883dfd0f7bdb4cf3652bbc7b0cf16b9a4565341c","modified":1569823545129},{"_id":"public/images/mold/6/42.jpg","hash":"cb0da030ad3f43d38c61d7c49cca7810510c3edb","modified":1569823545129},{"_id":"public/images/mold/6/face.jpg","hash":"c991500e38223b1cb312a69bf0e63082a75783f6","modified":1569823545129},{"_id":"public/images/mold/7/2D.jpg","hash":"09affc815cc3e7063e083a3b58cc441d66e9e829","modified":1569823545129},{"_id":"public/images/mold/7/zhp.jpg","hash":"b6db106bf47bc32503160948bee3e648d94c0e6e","modified":1569823545129},{"_id":"public/images/mold/9/chp.jpg","hash":"c37285376a9881edec72538169b633cd5e8eb8fb","modified":1569823545129},{"_id":"public/images/mold/9/dh.gif","hash":"9c78a66c59ecccc8bfe9da7aaab943d4aea27d27","modified":1569823545129},{"_id":"public/images/mold/8/xj.jpg","hash":"c429d545e29477b53ac2fcfebc198da20127f5d7","modified":1569823545129},{"_id":"public/images/mold/8/mini.jpg","hash":"e99646f1d50009f8f9e1d608d5e03d7a6c96eecd","modified":1569823545129},{"_id":"public/images/mold/8/chp.jpg","hash":"b89f8b65b64469423800c7be3a8f6f99b867a074","modified":1569823545130},{"_id":"public/images/mold/8/zp.jpg","hash":"24c0777e92c87c71950a4bf7dcd72a66a40c9bbc","modified":1569823545130},{"_id":"public/images/mold/11/dc.jpg","hash":"7cfd5a4f9a1321bd72e73c42b7c5bbba9425a630","modified":1569823545130},{"_id":"public/images/mold/11/gj.jpg","hash":"a442fd460c99cfcf40f3d097b26fdf02f49e4f16","modified":1569823545130},{"_id":"public/images/mold/11/lg.jpg","hash":"b243bae6ff5c9e669c039da233da44cfff65f280","modified":1569823545130},{"_id":"public/images/mold/11/mj.jpg","hash":"47308868abc1643b52314f223344b5b7b4510a5a","modified":1569823545130},{"_id":"public/images/mold/1/2D.jpg","hash":"218fd527fdf6ffa7f03f4ab8bc4f784f465d14da","modified":1569823545130},{"_id":"public/images/mold/10/dim.jpg","hash":"eb7c949e6576ce525f8cac48da568ab622f494ab","modified":1569823545130},{"_id":"public/images/mold/12/4.jpg","hash":"9893a9eddc35c564823b333a67c319bc7a64f445","modified":1569823545130},{"_id":"public/images/mold/6/22.jpg","hash":"0c44cbf155c6a171686678b632dd5fd0ae3f20ca","modified":1569823545130},{"_id":"public/images/mold/6/37.jpg","hash":"a7f41a901cd1c8c3504ac5e58175257336cb769c","modified":1569823545130},{"_id":"public/scripts/lodash.min.js","hash":"dce5d3dbc9bbecf2ca748de381b483eb9080e4fa","modified":1569823545365},{"_id":"public/scripts/snap.svg-min.js","hash":"0b6a0fcc9bb5b82f90736176599f3830ccca0ee7","modified":1569823545365},{"_id":"public/scripts/vue.min.js","hash":"28bb1c91e37b53f4ebb48ce482dccb240003e078","modified":1569823545365},{"_id":"public/demo/speedy-transition-effect/5.jpg","hash":"d239171c1b8b901e2177cec2e861eee8d5a19b9f","modified":1569823545365},{"_id":"public/images/else/kid-s.jpg","hash":"84ba54f4d372f4166978de628a0e994d2a507710","modified":1569823545365},{"_id":"public/images/flash/flash12.jpg","hash":"c6f23dbfc9f4a75ee5cdc0e72d50b3b6b9bded0a","modified":1569823545365},{"_id":"public/images/flash/flash51.jpg","hash":"590ed826ec92d0a8c1ee64c88d895c50bcd710ed","modified":1569823545365},{"_id":"public/images/matlab/PID.gif","hash":"02a3c161a36add706f427a80a2642686d6f8ee75","modified":1569823545365},{"_id":"public/images/mcu/mcu21.jpg","hash":"6e8ae38391655ce28eeb318e3c4f708ac20935d6","modified":1569823545365},{"_id":"public/images/mcu/mcu22.jpg","hash":"86f4854362f0811aa212764f16b13afacc61eacb","modified":1569823545365},{"_id":"public/images/proe/tulun1.jpg","hash":"cde336d9ecf428a68876979893755ca5d81f8618","modified":1569823545365},{"_id":"public/images/robot/robot11.jpg","hash":"dcf5c115ad57743df84d2965b4839e091af12977","modified":1569823545365},{"_id":"public/images/robot/robot32.jpg","hash":"64a1b8d9679c9582ed7babc77d7fca87c2af7dd7","modified":1569823545365},{"_id":"public/images/robot/robot41.jpg","hash":"cc19664a54a356521988efe5b1de51a849f89cae","modified":1569823545366},{"_id":"public/images/robot/robot52.jpg","hash":"17abd32a64d7b742c027964067af68e07b18316e","modified":1569823545366},{"_id":"public/images/robot/robot51.jpg","hash":"7a1681e5113bbe63af702736ff0d973659592ab6","modified":1569823545366},{"_id":"public/demo/speedy-transition-effect/2.jpg","hash":"e0b25b0a31623500eb3c0242eeac6922dacc9e0e","modified":1569823545366},{"_id":"public/images/else/kid-l.jpg","hash":"71b4505d28679b1b8d39fd574a7f5ec4d07fa9b0","modified":1569823545366},{"_id":"public/demo/speedy-transition-effect/1.jpg","hash":"5174b5fcc473cf93374eafedf6a9079287d1389c","modified":1569823545366},{"_id":"public/images/proe/tulun2.gif","hash":"7e97c5b2ac5466c626e9558960f158873d74000f","modified":1569823545366},{"_id":"public/images/mold/13/gwz.jpg","hash":"491cff4eed81fa2842c5940d4805a95f64af3183","modified":1569823545366},{"_id":"public/images/mold/3/2D1.jpg","hash":"9204bc39d187ff2197913b3c30cc2320566ceb44","modified":1569823545366},{"_id":"public/images/mold/3/2D2.jpg","hash":"2ed12c8baed0b984153634e9fa9e139cd0a66405","modified":1569823545366},{"_id":"public/images/mold/10/chp.jpg","hash":"4bfeb851380e7c4ac995b3bfaeb7b0df4273c0ce","modified":1569823545366},{"_id":"public/images/mold/10/2D.jpg","hash":"d16603f225b2cc5e60e0ab46c8b1ba7ae991b55b","modified":1569823545366},{"_id":"public/images/mold/10/dom.jpg","hash":"d55f8ed2234d2ec6cbfa176c35e24681de7ba8ca","modified":1569823545366},{"_id":"public/images/mold/10/zhp.jpg","hash":"90e1078a42c5b4458559aa256a3fd7eafc977b9a","modified":1569823545366},{"_id":"public/images/mold/12/2.jpg","hash":"387fdbe9e215e32ccb7b17e3f207867d1939cf9f","modified":1569823545366},{"_id":"public/images/mold/13/jiaokou.jpg","hash":"4186453ddf9ed3be56f9eb93cf24937695ab55f7","modified":1569823545367},{"_id":"public/images/mold/13/grp.jpg","hash":"787d8cf160bf35ab8e457bb9cdb6d17a305a5e09","modified":1569823545367},{"_id":"public/images/mold/13/zhp.jpg","hash":"fc5366dbe5e2987794236f24d35339db49ef48b1","modified":1569823545367},{"_id":"public/images/mold/4/chp.jpg","hash":"86094543fce97047ba1c7637e592072dcffe566e","modified":1569823545367},{"_id":"public/images/mold/5/dim.jpg","hash":"4402eec494069a09bd267fb7b335bebb78c577fd","modified":1569823545367},{"_id":"public/images/mold/7/chp.jpg","hash":"5f2294f4eb04edcf13cfc39f6daf625fc4e43250","modified":1569823545367},{"_id":"public/images/mold/7/3D.jpg","hash":"f9c1d350bf67ec8af95d241e613c8562ef5e345e","modified":1569823545367},{"_id":"public/images/mold/9/2D1.jpg","hash":"58c23176efca8aebedefc68767932f4dab1d4ddc","modified":1569823545367},{"_id":"public/images/mold/9/2D2.jpg","hash":"d67390837b70c31aadbbd2dd7a607a11d382e0e5","modified":1569823545367},{"_id":"public/images/mold/9/dc.jpg","hash":"6c3b6c8c29909d9357fe3218ac6958a798727fe4","modified":1569823545367},{"_id":"public/images/mold/11/2D.jpg","hash":"7c628fb4446a7c09373af54f371b7da1e5c3ea97","modified":1569823545367},{"_id":"public/images/mold/11/dimdom.jpg","hash":"27c323c52fcb50922f843369ddafba2bbc62811a","modified":1569823545367},{"_id":"public/images/mold/11/chp.jpg","hash":"2df5d74001fd60bcc37ad11a1e8b8b3070644b70","modified":1569823545367},{"_id":"public/images/mold/12/1.jpg","hash":"4e4473620a8394fa7558e9d3c51a396d27df7933","modified":1569823545368},{"_id":"public/images/mold/13/wt.jpg","hash":"52ff6029541e181e6cd4b8e7dc00a26bf711995f","modified":1569823545368},{"_id":"public/images/mold/12/3.jpg","hash":"1ea4393149cde77a3d6d973605c0de1af0544422","modified":1569823545368},{"_id":"public/images/mold/13/chp.jpg","hash":"93cbbda5583223b799bb949bdb71b24566d56385","modified":1569823545368},{"_id":"public/images/mold/2/mj.jpg","hash":"7435926211a2207f1d39a555e2c55dc21ffba200","modified":1569823545368},{"_id":"public/css/style.css","hash":"357a0b0885c62558e90217927dd42e28ac1b92b3","modified":1569823545376},{"_id":"public/js/script.js","hash":"ada90af13f1246ac2e4e2f4344d2f0125d6a3521","modified":1569823545376},{"_id":"public/scripts/TweenMax.min.js","hash":"38cb690397f9eef5a9592efc9ce9e936e4e863cb","modified":1569823545376},{"_id":"public/images/flash/flash31.gif","hash":"4e1ae970469ff68be21e4af02948a42d35892c61","modified":1569823545376},{"_id":"public/images/mold/8/dim.gif","hash":"e1435702b4b75e1d7fbd73963fa9ab16723924d8","modified":1569823545383},{"_id":"public/demo/vue-drag-drop/js/chunk-vendors.ca022210.js","hash":"53895f469535b95525237c728d5aeab0e608bd0c","modified":1569823545383},{"_id":"public/images/flash/flash41.gif","hash":"d469ad18d9ef52ba81f672a58470514044d796c4","modified":1569823545390},{"_id":"public/images/mold/13/dimdom.jpg","hash":"46d6cdc225dd1d15ed1e2c19f19e3bf7a63b6078","modified":1569823545390},{"_id":"public/demo/speedy-transition-effect/3.jpg","hash":"b72e43b1100b85e0fa4a930f9f0753151b93e479","modified":1569823545400},{"_id":"public/scripts/d3.v5.min.js","hash":"c9621d5935dd9214b55e14e9a38d0858ae1ffebe","modified":1569823545402},{"_id":"public/images/robot/walk4.gif","hash":"e5a9da5c4df6406a71dbe7d7e6612e4df151a875","modified":1569823545411},{"_id":"public/images/robot/robot72.gif","hash":"14f2b12e59ba0245304add8bd63b256ccc526b75","modified":1569823545415},{"_id":"public/images/flash/flash32.gif","hash":"a86f79d1abfd015f3aef1a617fe6cb864751303d","modified":1569823545430}],"Category":[{"name":"Code Snippets","_id":"ck160emxo00023a8iop15n588"},{"name":"Snap.svg","_id":"ck160emxs00063a8ivpufg767"},{"name":"Uncategorized","_id":"ck160emxw000a3a8ipthxfcgz"},{"name":"JavaScript","_id":"ck160emy5000k3a8iebq30996"},{"name":"Vue","_id":"ck160emyu001l3a8i44gfxxbw"},{"name":"D3.js","_id":"ck160emzb002i3a8i5t6ukz2m"},{"name":"SVG","_id":"ck160en1h003t3a8ih1x1i8n6"}],"Data":[],"Page":[],"Post":[{"title":"Lodash常用命令","keywords":"Lodash","description":"Lodash常用命令","date":"2018-12-14T07:24:00.000Z","_content":"\n\n在Vue中使用Lodash：\n\n``` JavaScript\n// 全局引用\nimport Vue from 'vue'\nimport _ from 'lodash'\nVue.prototype._ = _\n\n// 组件中使用\nthis._.VERSION\n```\n\n``` JavaScript\n_.intersection\n_.intersection(this.path, routerMap.correct.path).length\n```\n\n``` JavaScript\n_.keys\n```\n\n_.get\n_.findIndex\n","source":"_drafts/lodash.md","raw":"---\ntitle: Lodash常用命令\ncategories: Code Snippets\nkeywords: Lodash\ndescription: Lodash常用命令\ndate: 2018-12-14 15:24:00\ntags:\n---\n\n\n在Vue中使用Lodash：\n\n``` JavaScript\n// 全局引用\nimport Vue from 'vue'\nimport _ from 'lodash'\nVue.prototype._ = _\n\n// 组件中使用\nthis._.VERSION\n```\n\n``` JavaScript\n_.intersection\n_.intersection(this.path, routerMap.correct.path).length\n```\n\n``` JavaScript\n_.keys\n```\n\n_.get\n_.findIndex\n","slug":"lodash","published":0,"updated":"2018-12-14T07:50:07.624Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emxj00003a8i8xl8wjp7","content":"<p>在Vue中使用Lodash：</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// 全局引用</span></div><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'lodash'</span></div><div class=\"line\">Vue.prototype._ = _</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 组件中使用</span></div><div class=\"line\"><span class=\"keyword\">this</span>._.VERSION</div></pre></figure>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">_.intersection</div><div class=\"line\">_.intersection(<span class=\"keyword\">this</span>.path, routerMap.correct.path).length</div></pre></figure>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">_.keys</div></pre></figure>\n<p>_.get<br>_.findIndex</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在Vue中使用Lodash：</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// 全局引用</span></div><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'lodash'</span></div><div class=\"line\">Vue.prototype._ = _</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 组件中使用</span></div><div class=\"line\"><span class=\"keyword\">this</span>._.VERSION</div></pre></figure>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">_.intersection</div><div class=\"line\">_.intersection(<span class=\"keyword\">this</span>.path, routerMap.correct.path).length</div></pre></figure>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">_.keys</div></pre></figure>\n<p>_.get<br>_.findIndex</p>\n"},{"title":"Snap","date":"2018-12-22T16:00:00.000Z","keywords":"Snap, Snap.svg","description":null,"_content":"\n## `Snap()`\n\n创建SVG画布或者封装已有的SVG元素，返回值为Element对象\n\n- 参数为width, height，指定创建画布的尺寸\n- 参数为SVG DOM，指定Snap封装对象\n- 参数为CSS query selector，通过CSS查询选择封装对象\n- 参数为Element数组，将元素组合成集合队列\n- 参数留空，相当于width=100%, height=100%\n\n## `Snap.acos()`\n\n求反余弦值，与Math.acos()返回弧度值不同的是，它返回角度值\n\n## `Snap.ajax()`\n\n参数为url, postData, callback, scope\npostData可选，传值发送POST请求，否则为GET；scope为回调函数的作用域\n\n## `Snap.angle()`\n\n参数为x1, y1, x2, y2, [x3], [y3]\n只传两个点时，表示x坐标轴顺时针旋转到点2指向点1的向量的角度值\n传入三个点，表示点3指向点2的向量顺时针旋转到点3指向点1的向量的角度值\n\n## `Snap.animate()`\n\n将一个/组数字缓动到另一个/组数字\n\n参数为from, to, setter, duration, [easing], [callback]\nfrom, to为动画起始和结束数值或数组；setter是参数为各个数值或数组中间值的动画执行函数；duration为动画持续毫秒时间；easing为缓动函数；callback动画结束时候执行的回调\n\n``` JavaScript\nconst rect = Snap().rect(0, 0, 10, 10)\nSnap.animate(0, 10, val => {\n    rect.attr({\n        x: val\n    })\n}, 1000)\n// 等同于\nrect.animate({x: 10}, 1000)\n```\n<!-- ## `Snap.animation()` -->\n\n## `Snap.asin()`\n\n求反正弦值，与Math.asin()返回弧度值不同的是，它返回角度值\n\n## `Snap.atan()`\n\n求反正切值，与Math.atan()返回弧度值不同的是，它返回角度值\n\n## `Snap.atan2()`\n\n求反正切值，与Math.atan2()返回弧度值不同的是，它返回角度值\n\n## `Snap.closestPoint()`\n\nReturns closest point to a given one on a given path.\n\nParameters\npathElementpath element\nxnumberx coord of a point\nynumbery coord of a point\nReturns:objectin format\n\n## `Snap.color()`\n\n## `Snap.cos()`\n\n## `Snap.deg()`\n\n## `Snap.deurl()`\n\n## `Snap.filter`\n\n## ``\n\n## ``\n\n## `Snap.set()`\n\n创建集合并为其设定元素值\n\n``` JavaScript\nconst r = paper.rect(0, 0, 10, 10),\n    s1 = Snap.set(), // 空set\n    s2 = Snap.set(r, paper.circle(100, 100, 20)) // 预设定值的set\n```\n\n## `Snap.sin()`\n\n求正弦值，与Math.sin()返回弧度值不同的是，它返回角度值\n\n## `Snap.snapTo()`\n\n将数值取整到参考网格，类似于绘图软件中的对齐到网格\n\n参数为values, value, tolerance\nvalues为网格数值数组或网格步长；value为待调整数值；tolerance是触发调整的距离目标值的最大值，默认为10\n\n## `Snap.tan()`\n\n求正切值，与Math.tan()返回弧度值不同的是，它返回角度值\n\n## `Snap.url()`\n\n``` JavaScript\nSnap.url('yophee') // 返回 \"url('#yophee')\"\n```\n\n","source":"_drafts/snapsvg1.md","raw":"---\ntitle: Snap\ndate: 2018-12-23 00:00:00\ncategories: Snap.svg\nkeywords: Snap, Snap.svg\ndescription: \n---\n\n## `Snap()`\n\n创建SVG画布或者封装已有的SVG元素，返回值为Element对象\n\n- 参数为width, height，指定创建画布的尺寸\n- 参数为SVG DOM，指定Snap封装对象\n- 参数为CSS query selector，通过CSS查询选择封装对象\n- 参数为Element数组，将元素组合成集合队列\n- 参数留空，相当于width=100%, height=100%\n\n## `Snap.acos()`\n\n求反余弦值，与Math.acos()返回弧度值不同的是，它返回角度值\n\n## `Snap.ajax()`\n\n参数为url, postData, callback, scope\npostData可选，传值发送POST请求，否则为GET；scope为回调函数的作用域\n\n## `Snap.angle()`\n\n参数为x1, y1, x2, y2, [x3], [y3]\n只传两个点时，表示x坐标轴顺时针旋转到点2指向点1的向量的角度值\n传入三个点，表示点3指向点2的向量顺时针旋转到点3指向点1的向量的角度值\n\n## `Snap.animate()`\n\n将一个/组数字缓动到另一个/组数字\n\n参数为from, to, setter, duration, [easing], [callback]\nfrom, to为动画起始和结束数值或数组；setter是参数为各个数值或数组中间值的动画执行函数；duration为动画持续毫秒时间；easing为缓动函数；callback动画结束时候执行的回调\n\n``` JavaScript\nconst rect = Snap().rect(0, 0, 10, 10)\nSnap.animate(0, 10, val => {\n    rect.attr({\n        x: val\n    })\n}, 1000)\n// 等同于\nrect.animate({x: 10}, 1000)\n```\n<!-- ## `Snap.animation()` -->\n\n## `Snap.asin()`\n\n求反正弦值，与Math.asin()返回弧度值不同的是，它返回角度值\n\n## `Snap.atan()`\n\n求反正切值，与Math.atan()返回弧度值不同的是，它返回角度值\n\n## `Snap.atan2()`\n\n求反正切值，与Math.atan2()返回弧度值不同的是，它返回角度值\n\n## `Snap.closestPoint()`\n\nReturns closest point to a given one on a given path.\n\nParameters\npathElementpath element\nxnumberx coord of a point\nynumbery coord of a point\nReturns:objectin format\n\n## `Snap.color()`\n\n## `Snap.cos()`\n\n## `Snap.deg()`\n\n## `Snap.deurl()`\n\n## `Snap.filter`\n\n## ``\n\n## ``\n\n## `Snap.set()`\n\n创建集合并为其设定元素值\n\n``` JavaScript\nconst r = paper.rect(0, 0, 10, 10),\n    s1 = Snap.set(), // 空set\n    s2 = Snap.set(r, paper.circle(100, 100, 20)) // 预设定值的set\n```\n\n## `Snap.sin()`\n\n求正弦值，与Math.sin()返回弧度值不同的是，它返回角度值\n\n## `Snap.snapTo()`\n\n将数值取整到参考网格，类似于绘图软件中的对齐到网格\n\n参数为values, value, tolerance\nvalues为网格数值数组或网格步长；value为待调整数值；tolerance是触发调整的距离目标值的最大值，默认为10\n\n## `Snap.tan()`\n\n求正切值，与Math.tan()返回弧度值不同的是，它返回角度值\n\n## `Snap.url()`\n\n``` JavaScript\nSnap.url('yophee') // 返回 \"url('#yophee')\"\n```\n\n","slug":"snapsvg1","published":0,"updated":"2019-04-18T05:50:46.139Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emxm00013a8ix8mxv919","content":"<h2 id=\"Snap\"><a href=\"#Snap\" class=\"headerlink\" title=\"Snap()\"></a><code>Snap()</code></h2><p>创建SVG画布或者封装已有的SVG元素，返回值为Element对象</p>\n<ul>\n<li>参数为width, height，指定创建画布的尺寸</li>\n<li>参数为SVG DOM，指定Snap封装对象</li>\n<li>参数为CSS query selector，通过CSS查询选择封装对象</li>\n<li>参数为Element数组，将元素组合成集合队列</li>\n<li>参数留空，相当于width=100%, height=100%</li>\n</ul>\n<h2 id=\"Snap-acos\"><a href=\"#Snap-acos\" class=\"headerlink\" title=\"Snap.acos()\"></a><code>Snap.acos()</code></h2><p>求反余弦值，与Math.acos()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-ajax\"><a href=\"#Snap-ajax\" class=\"headerlink\" title=\"Snap.ajax()\"></a><code>Snap.ajax()</code></h2><p>参数为url, postData, callback, scope<br>postData可选，传值发送POST请求，否则为GET；scope为回调函数的作用域</p>\n<h2 id=\"Snap-angle\"><a href=\"#Snap-angle\" class=\"headerlink\" title=\"Snap.angle()\"></a><code>Snap.angle()</code></h2><p>参数为x1, y1, x2, y2, [x3], [y3]<br>只传两个点时，表示x坐标轴顺时针旋转到点2指向点1的向量的角度值<br>传入三个点，表示点3指向点2的向量顺时针旋转到点3指向点1的向量的角度值</p>\n<h2 id=\"Snap-animate\"><a href=\"#Snap-animate\" class=\"headerlink\" title=\"Snap.animate()\"></a><code>Snap.animate()</code></h2><p>将一个/组数字缓动到另一个/组数字</p>\n<p>参数为from, to, setter, duration, [easing], [callback]<br>from, to为动画起始和结束数值或数组；setter是参数为各个数值或数组中间值的动画执行函数；duration为动画持续毫秒时间；easing为缓动函数；callback动画结束时候执行的回调</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> rect = Snap().rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>)</div><div class=\"line\">Snap.animate(<span class=\"number\">0</span>, <span class=\"number\">10</span>, val =&gt; &#123;</div><div class=\"line\">    rect.attr(&#123;</div><div class=\"line\">        x: val</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;, <span class=\"number\">1000</span>)</div><div class=\"line\"><span class=\"comment\">// 等同于</span></div><div class=\"line\">rect.animate(&#123;<span class=\"attr\">x</span>: <span class=\"number\">10</span>&#125;, <span class=\"number\">1000</span>)</div></pre></figure>\n<!-- ## `Snap.animation()` -->\n<h2 id=\"Snap-asin\"><a href=\"#Snap-asin\" class=\"headerlink\" title=\"Snap.asin()\"></a><code>Snap.asin()</code></h2><p>求反正弦值，与Math.asin()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-atan\"><a href=\"#Snap-atan\" class=\"headerlink\" title=\"Snap.atan()\"></a><code>Snap.atan()</code></h2><p>求反正切值，与Math.atan()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-atan2\"><a href=\"#Snap-atan2\" class=\"headerlink\" title=\"Snap.atan2()\"></a><code>Snap.atan2()</code></h2><p>求反正切值，与Math.atan2()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-closestPoint\"><a href=\"#Snap-closestPoint\" class=\"headerlink\" title=\"Snap.closestPoint()\"></a><code>Snap.closestPoint()</code></h2><p>Returns closest point to a given one on a given path.</p>\n<p>Parameters<br>pathElementpath element<br>xnumberx coord of a point<br>ynumbery coord of a point<br>Returns:objectin format</p>\n<h2 id=\"Snap-color\"><a href=\"#Snap-color\" class=\"headerlink\" title=\"Snap.color()\"></a><code>Snap.color()</code></h2><h2 id=\"Snap-cos\"><a href=\"#Snap-cos\" class=\"headerlink\" title=\"Snap.cos()\"></a><code>Snap.cos()</code></h2><h2 id=\"Snap-deg\"><a href=\"#Snap-deg\" class=\"headerlink\" title=\"Snap.deg()\"></a><code>Snap.deg()</code></h2><h2 id=\"Snap-deurl\"><a href=\"#Snap-deurl\" class=\"headerlink\" title=\"Snap.deurl()\"></a><code>Snap.deurl()</code></h2><h2 id=\"Snap-filter\"><a href=\"#Snap-filter\" class=\"headerlink\" title=\"Snap.filter\"></a><code>Snap.filter</code></h2><h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><code></code></h2><h2 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a><code></code></h2><h2 id=\"Snap-set\"><a href=\"#Snap-set\" class=\"headerlink\" title=\"Snap.set()\"></a><code>Snap.set()</code></h2><p>创建集合并为其设定元素值</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> r = paper.rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>),</div><div class=\"line\">    s1 = Snap.set(), <span class=\"comment\">// 空set</span></div><div class=\"line\">    s2 = Snap.set(r, paper.circle(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">20</span>)) <span class=\"comment\">// 预设定值的set</span></div></pre></figure>\n<h2 id=\"Snap-sin\"><a href=\"#Snap-sin\" class=\"headerlink\" title=\"Snap.sin()\"></a><code>Snap.sin()</code></h2><p>求正弦值，与Math.sin()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-snapTo\"><a href=\"#Snap-snapTo\" class=\"headerlink\" title=\"Snap.snapTo()\"></a><code>Snap.snapTo()</code></h2><p>将数值取整到参考网格，类似于绘图软件中的对齐到网格</p>\n<p>参数为values, value, tolerance<br>values为网格数值数组或网格步长；value为待调整数值；tolerance是触发调整的距离目标值的最大值，默认为10</p>\n<h2 id=\"Snap-tan\"><a href=\"#Snap-tan\" class=\"headerlink\" title=\"Snap.tan()\"></a><code>Snap.tan()</code></h2><p>求正切值，与Math.tan()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-url\"><a href=\"#Snap-url\" class=\"headerlink\" title=\"Snap.url()\"></a><code>Snap.url()</code></h2><figure class=\"highlight javascript\"><pre><div class=\"line\">Snap.url(<span class=\"string\">'yophee'</span>) <span class=\"comment\">// 返回 \"url('#yophee')\"</span></div></pre></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Snap\"><a href=\"#Snap\" class=\"headerlink\" title=\"Snap()\"></a><code>Snap()</code></h2><p>创建SVG画布或者封装已有的SVG元素，返回值为Element对象</p>\n<ul>\n<li>参数为width, height，指定创建画布的尺寸</li>\n<li>参数为SVG DOM，指定Snap封装对象</li>\n<li>参数为CSS query selector，通过CSS查询选择封装对象</li>\n<li>参数为Element数组，将元素组合成集合队列</li>\n<li>参数留空，相当于width=100%, height=100%</li>\n</ul>\n<h2 id=\"Snap-acos\"><a href=\"#Snap-acos\" class=\"headerlink\" title=\"Snap.acos()\"></a><code>Snap.acos()</code></h2><p>求反余弦值，与Math.acos()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-ajax\"><a href=\"#Snap-ajax\" class=\"headerlink\" title=\"Snap.ajax()\"></a><code>Snap.ajax()</code></h2><p>参数为url, postData, callback, scope<br>postData可选，传值发送POST请求，否则为GET；scope为回调函数的作用域</p>\n<h2 id=\"Snap-angle\"><a href=\"#Snap-angle\" class=\"headerlink\" title=\"Snap.angle()\"></a><code>Snap.angle()</code></h2><p>参数为x1, y1, x2, y2, [x3], [y3]<br>只传两个点时，表示x坐标轴顺时针旋转到点2指向点1的向量的角度值<br>传入三个点，表示点3指向点2的向量顺时针旋转到点3指向点1的向量的角度值</p>\n<h2 id=\"Snap-animate\"><a href=\"#Snap-animate\" class=\"headerlink\" title=\"Snap.animate()\"></a><code>Snap.animate()</code></h2><p>将一个/组数字缓动到另一个/组数字</p>\n<p>参数为from, to, setter, duration, [easing], [callback]<br>from, to为动画起始和结束数值或数组；setter是参数为各个数值或数组中间值的动画执行函数；duration为动画持续毫秒时间；easing为缓动函数；callback动画结束时候执行的回调</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> rect = Snap().rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>)</div><div class=\"line\">Snap.animate(<span class=\"number\">0</span>, <span class=\"number\">10</span>, val =&gt; &#123;</div><div class=\"line\">    rect.attr(&#123;</div><div class=\"line\">        x: val</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;, <span class=\"number\">1000</span>)</div><div class=\"line\"><span class=\"comment\">// 等同于</span></div><div class=\"line\">rect.animate(&#123;<span class=\"attr\">x</span>: <span class=\"number\">10</span>&#125;, <span class=\"number\">1000</span>)</div></pre></figure>\n<!-- ## `Snap.animation()` -->\n<h2 id=\"Snap-asin\"><a href=\"#Snap-asin\" class=\"headerlink\" title=\"Snap.asin()\"></a><code>Snap.asin()</code></h2><p>求反正弦值，与Math.asin()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-atan\"><a href=\"#Snap-atan\" class=\"headerlink\" title=\"Snap.atan()\"></a><code>Snap.atan()</code></h2><p>求反正切值，与Math.atan()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-atan2\"><a href=\"#Snap-atan2\" class=\"headerlink\" title=\"Snap.atan2()\"></a><code>Snap.atan2()</code></h2><p>求反正切值，与Math.atan2()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-closestPoint\"><a href=\"#Snap-closestPoint\" class=\"headerlink\" title=\"Snap.closestPoint()\"></a><code>Snap.closestPoint()</code></h2><p>Returns closest point to a given one on a given path.</p>\n<p>Parameters<br>pathElementpath element<br>xnumberx coord of a point<br>ynumbery coord of a point<br>Returns:objectin format</p>\n<h2 id=\"Snap-color\"><a href=\"#Snap-color\" class=\"headerlink\" title=\"Snap.color()\"></a><code>Snap.color()</code></h2><h2 id=\"Snap-cos\"><a href=\"#Snap-cos\" class=\"headerlink\" title=\"Snap.cos()\"></a><code>Snap.cos()</code></h2><h2 id=\"Snap-deg\"><a href=\"#Snap-deg\" class=\"headerlink\" title=\"Snap.deg()\"></a><code>Snap.deg()</code></h2><h2 id=\"Snap-deurl\"><a href=\"#Snap-deurl\" class=\"headerlink\" title=\"Snap.deurl()\"></a><code>Snap.deurl()</code></h2><h2 id=\"Snap-filter\"><a href=\"#Snap-filter\" class=\"headerlink\" title=\"Snap.filter\"></a><code>Snap.filter</code></h2><h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><code></code></h2><h2 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a><code></code></h2><h2 id=\"Snap-set\"><a href=\"#Snap-set\" class=\"headerlink\" title=\"Snap.set()\"></a><code>Snap.set()</code></h2><p>创建集合并为其设定元素值</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> r = paper.rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">10</span>, <span class=\"number\">10</span>),</div><div class=\"line\">    s1 = Snap.set(), <span class=\"comment\">// 空set</span></div><div class=\"line\">    s2 = Snap.set(r, paper.circle(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">20</span>)) <span class=\"comment\">// 预设定值的set</span></div></pre></figure>\n<h2 id=\"Snap-sin\"><a href=\"#Snap-sin\" class=\"headerlink\" title=\"Snap.sin()\"></a><code>Snap.sin()</code></h2><p>求正弦值，与Math.sin()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-snapTo\"><a href=\"#Snap-snapTo\" class=\"headerlink\" title=\"Snap.snapTo()\"></a><code>Snap.snapTo()</code></h2><p>将数值取整到参考网格，类似于绘图软件中的对齐到网格</p>\n<p>参数为values, value, tolerance<br>values为网格数值数组或网格步长；value为待调整数值；tolerance是触发调整的距离目标值的最大值，默认为10</p>\n<h2 id=\"Snap-tan\"><a href=\"#Snap-tan\" class=\"headerlink\" title=\"Snap.tan()\"></a><code>Snap.tan()</code></h2><p>求正切值，与Math.tan()返回弧度值不同的是，它返回角度值</p>\n<h2 id=\"Snap-url\"><a href=\"#Snap-url\" class=\"headerlink\" title=\"Snap.url()\"></a><code>Snap.url()</code></h2><figure class=\"highlight javascript\"><pre><div class=\"line\">Snap.url(<span class=\"string\">'yophee'</span>) <span class=\"comment\">// 返回 \"url('#yophee')\"</span></div></pre></figure>\n"},{"title":"svg","_content":"\nvar path = document.querySelector('.squiggle-container path');\npath.getTotalLength(); // 988.0062255859375\n","source":"_drafts/svg.md","raw":"---\ntitle: svg\ntags:\n---\n\nvar path = document.querySelector('.squiggle-container path');\npath.getTotalLength(); // 988.0062255859375\n","slug":"svg","published":0,"date":"2018-12-17T04:11:57.574Z","updated":"2018-12-17T04:12:13.811Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emxo00033a8imv51axcy","content":"<p>var path = document.querySelector(‘.squiggle-container path’);<br>path.getTotalLength(); // 988.0062255859375</p>\n","site":{"data":{}},"excerpt":"","more":"<p>var path = document.querySelector(‘.squiggle-container path’);<br>path.getTotalLength(); // 988.0062255859375</p>\n"},{"_content":"<!DOCTYPE html>\n<html lang='en'>\n<head>\n\t<meta charset='UTF-8'>\n\t<title>Document</title>\n</head>\n<body>\n\n<svg></svg>\n\n<script src='https://d3js.org/d3.v5.min.js'></script>\n<script>\n// <select>\n//     <option value=\"225\">Annulus</option>\n//     <option value=\"Infinity\" selected=\"\">Planets</option>\n//     <option value=\"-45\">Sun</option>\n// </select>\n\nconst frameRadius = Infinity\n\nconst speed = 2\nconst holeRadius = 10\nconst toothRadius = 4\nconst radius = 45\n\nfunction gear({\n    teeth,\n    radius,\n    annulus\n}) {\n    const n = teeth\n    let r2 = Math.abs(radius)\n    let r0 = r2 - toothRadius\n    let r1 = r2 + toothRadius\n    let r3 = holeRadius\n    if (annulus) r3 = r0, r0 = r1, r1 = r3, r3 = r2 + toothRadius * 3;\n    const da = Math.PI / n;\n    let a0 = -Math.PI / 2 + (annulus ? Math.PI / n : 0);\n    const path = [\"M\", r0 * Math.cos(a0), \",\", r0 * Math.sin(a0)];\n    let i = -1;\n    while (++i < n) { // TODO Template literal.\n        path.push(\n            \"A\", r0, \",\", r0, \" 0 0,1 \", r0 * Math.cos(a0 += da), \",\", r0 * Math.sin(a0),\n            \"L\", r2 * Math.cos(a0), \",\", r2 * Math.sin(a0),\n            \"L\", r1 * Math.cos(a0 += da / 3), \",\", r1 * Math.sin(a0),\n            \"A\", r1, \",\", r1, \" 0 0,1 \", r1 * Math.cos(a0 += da / 3), \",\", r1 * Math.sin(a0),\n            \"L\", r2 * Math.cos(a0 += da / 3), \",\", r2 * Math.sin(a0),\n            \"L\", r0 * Math.cos(a0), \",\", r0 * Math.sin(a0)\n        );\n    }\n    path.push(\"M0,\", -r3, \"A\", r3, \",\", r3, \" 0 0,0 0,\", r3, \"A\", r3, \",\", r3, \" 0 0,0 0,\", -r3, \"Z\");\n    return path.join(\"\");\n}\n\n\n\nconst width = 500;\nconst height = 500;\nconst x = Math.sin(2 * Math.PI / 3);\nconst y = Math.cos(2 * Math.PI / 3);\nlet start = Date.now();\n\nconst svg = d3.select('svg')\n\t.attr('width', width)\n\t.attr('height', height)\n\nconst frame = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\")\n    .append(\"g\")\n    .datum({\n        radius: +frameRadius\n    });\n\nconst path = frame.selectAll(\"g\")\n    .data([{\n        fill: \"#c6dbef\",\n        teeth: 80,\n        radius: -radius * 5,\n        origin: [0, 0],\n        annulus: true\n    }, {\n        fill: \"#6baed6\",\n        teeth: 16,\n        radius: radius,\n        origin: [0, 0]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [0, -radius * 3]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [-radius * 3 * x, -radius * 3 * y]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [radius * 3 * x, -radius * 3 * y]\n    }])\n    .enter().append(\"g\")\n    .attr(\"transform\", d => `translate(${d.origin})`)\n    .append(\"path\")\n    .attr(\"stroke\", \"black\")\n    .attr(\"fill\", d => d.fill)\n    .attr(\"d\", gear);\n\n// while (true) {\nsetTimeout(() => {\n\tconst now = Date.now()\n    const angle = (now - start) * speed;\n    const transform = d => `rotate(${angle / d.radius})`;\n    path.attr(\"transform\", transform);\n    frame.attr(\"transform\", transform);\n    start = now\n}, 500)\n\n</script>\n</body>\n</html>","source":"_drafts/gear.html","raw":"<!DOCTYPE html>\n<html lang='en'>\n<head>\n\t<meta charset='UTF-8'>\n\t<title>Document</title>\n</head>\n<body>\n\n<svg></svg>\n\n<script src='https://d3js.org/d3.v5.min.js'></script>\n<script>\n// <select>\n//     <option value=\"225\">Annulus</option>\n//     <option value=\"Infinity\" selected=\"\">Planets</option>\n//     <option value=\"-45\">Sun</option>\n// </select>\n\nconst frameRadius = Infinity\n\nconst speed = 2\nconst holeRadius = 10\nconst toothRadius = 4\nconst radius = 45\n\nfunction gear({\n    teeth,\n    radius,\n    annulus\n}) {\n    const n = teeth\n    let r2 = Math.abs(radius)\n    let r0 = r2 - toothRadius\n    let r1 = r2 + toothRadius\n    let r3 = holeRadius\n    if (annulus) r3 = r0, r0 = r1, r1 = r3, r3 = r2 + toothRadius * 3;\n    const da = Math.PI / n;\n    let a0 = -Math.PI / 2 + (annulus ? Math.PI / n : 0);\n    const path = [\"M\", r0 * Math.cos(a0), \",\", r0 * Math.sin(a0)];\n    let i = -1;\n    while (++i < n) { // TODO Template literal.\n        path.push(\n            \"A\", r0, \",\", r0, \" 0 0,1 \", r0 * Math.cos(a0 += da), \",\", r0 * Math.sin(a0),\n            \"L\", r2 * Math.cos(a0), \",\", r2 * Math.sin(a0),\n            \"L\", r1 * Math.cos(a0 += da / 3), \",\", r1 * Math.sin(a0),\n            \"A\", r1, \",\", r1, \" 0 0,1 \", r1 * Math.cos(a0 += da / 3), \",\", r1 * Math.sin(a0),\n            \"L\", r2 * Math.cos(a0 += da / 3), \",\", r2 * Math.sin(a0),\n            \"L\", r0 * Math.cos(a0), \",\", r0 * Math.sin(a0)\n        );\n    }\n    path.push(\"M0,\", -r3, \"A\", r3, \",\", r3, \" 0 0,0 0,\", r3, \"A\", r3, \",\", r3, \" 0 0,0 0,\", -r3, \"Z\");\n    return path.join(\"\");\n}\n\n\n\nconst width = 500;\nconst height = 500;\nconst x = Math.sin(2 * Math.PI / 3);\nconst y = Math.cos(2 * Math.PI / 3);\nlet start = Date.now();\n\nconst svg = d3.select('svg')\n\t.attr('width', width)\n\t.attr('height', height)\n\nconst frame = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\")\n    .append(\"g\")\n    .datum({\n        radius: +frameRadius\n    });\n\nconst path = frame.selectAll(\"g\")\n    .data([{\n        fill: \"#c6dbef\",\n        teeth: 80,\n        radius: -radius * 5,\n        origin: [0, 0],\n        annulus: true\n    }, {\n        fill: \"#6baed6\",\n        teeth: 16,\n        radius: radius,\n        origin: [0, 0]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [0, -radius * 3]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [-radius * 3 * x, -radius * 3 * y]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [radius * 3 * x, -radius * 3 * y]\n    }])\n    .enter().append(\"g\")\n    .attr(\"transform\", d => `translate(${d.origin})`)\n    .append(\"path\")\n    .attr(\"stroke\", \"black\")\n    .attr(\"fill\", d => d.fill)\n    .attr(\"d\", gear);\n\n// while (true) {\nsetTimeout(() => {\n\tconst now = Date.now()\n    const angle = (now - start) * speed;\n    const transform = d => `rotate(${angle / d.radius})`;\n    path.attr(\"transform\", transform);\n    frame.attr(\"transform\", transform);\n    start = now\n}, 500)\n\n</script>\n</body>\n</html>","slug":"gear","published":0,"date":"2018-12-03T06:30:31.417Z","updated":"2018-12-10T11:41:22.810Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emxp00043a8i176pyeuj","content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Document</title>\n</head>\n<body>\n\n<svg/>\n\n<script src=\"https://d3js.org/d3.v5.min.js\"></script>\n<script>\n// <select>\n//     <option value=\"225\">Annulus</option>\n//     <option value=\"Infinity\" selected=\"\">Planets</option>\n//     <option value=\"-45\">Sun</option>\n// </select>\n\nconst frameRadius = Infinity\n\nconst speed = 2\nconst holeRadius = 10\nconst toothRadius = 4\nconst radius = 45\n\nfunction gear({\n    teeth,\n    radius,\n    annulus\n}) {\n    const n = teeth\n    let r2 = Math.abs(radius)\n    let r0 = r2 - toothRadius\n    let r1 = r2 + toothRadius\n    let r3 = holeRadius\n    if (annulus) r3 = r0, r0 = r1, r1 = r3, r3 = r2 + toothRadius * 3;\n    const da = Math.PI / n;\n    let a0 = -Math.PI / 2 + (annulus ? Math.PI / n : 0);\n    const path = [\"M\", r0 * Math.cos(a0), \",\", r0 * Math.sin(a0)];\n    let i = -1;\n    while (++i < n) { // TODO Template literal.\n        path.push(\n            \"A\", r0, \",\", r0, \" 0 0,1 \", r0 * Math.cos(a0 += da), \",\", r0 * Math.sin(a0),\n            \"L\", r2 * Math.cos(a0), \",\", r2 * Math.sin(a0),\n            \"L\", r1 * Math.cos(a0 += da / 3), \",\", r1 * Math.sin(a0),\n            \"A\", r1, \",\", r1, \" 0 0,1 \", r1 * Math.cos(a0 += da / 3), \",\", r1 * Math.sin(a0),\n            \"L\", r2 * Math.cos(a0 += da / 3), \",\", r2 * Math.sin(a0),\n            \"L\", r0 * Math.cos(a0), \",\", r0 * Math.sin(a0)\n        );\n    }\n    path.push(\"M0,\", -r3, \"A\", r3, \",\", r3, \" 0 0,0 0,\", r3, \"A\", r3, \",\", r3, \" 0 0,0 0,\", -r3, \"Z\");\n    return path.join(\"\");\n}\n\n\n\nconst width = 500;\nconst height = 500;\nconst x = Math.sin(2 * Math.PI / 3);\nconst y = Math.cos(2 * Math.PI / 3);\nlet start = Date.now();\n\nconst svg = d3.select('svg')\n\t.attr('width', width)\n\t.attr('height', height)\n\nconst frame = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\")\n    .append(\"g\")\n    .datum({\n        radius: +frameRadius\n    });\n\nconst path = frame.selectAll(\"g\")\n    .data([{\n        fill: \"#c6dbef\",\n        teeth: 80,\n        radius: -radius * 5,\n        origin: [0, 0],\n        annulus: true\n    }, {\n        fill: \"#6baed6\",\n        teeth: 16,\n        radius: radius,\n        origin: [0, 0]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [0, -radius * 3]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [-radius * 3 * x, -radius * 3 * y]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [radius * 3 * x, -radius * 3 * y]\n    }])\n    .enter().append(\"g\")\n    .attr(\"transform\", d => `translate(${d.origin})`)\n    .append(\"path\")\n    .attr(\"stroke\", \"black\")\n    .attr(\"fill\", d => d.fill)\n    .attr(\"d\", gear);\n\n// while (true) {\nsetTimeout(() => {\n\tconst now = Date.now()\n    const angle = (now - start) * speed;\n    const transform = d => `rotate(${angle / d.radius})`;\n    path.attr(\"transform\", transform);\n    frame.attr(\"transform\", transform);\n    start = now\n}, 500)\n\n</script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Document</title>\n</head>\n<body>\n\n<svg/>\n\n<script src=\"https://d3js.org/d3.v5.min.js\"></script>\n<script>\n// <select>\n//     <option value=\"225\">Annulus</option>\n//     <option value=\"Infinity\" selected=\"\">Planets</option>\n//     <option value=\"-45\">Sun</option>\n// </select>\n\nconst frameRadius = Infinity\n\nconst speed = 2\nconst holeRadius = 10\nconst toothRadius = 4\nconst radius = 45\n\nfunction gear({\n    teeth,\n    radius,\n    annulus\n}) {\n    const n = teeth\n    let r2 = Math.abs(radius)\n    let r0 = r2 - toothRadius\n    let r1 = r2 + toothRadius\n    let r3 = holeRadius\n    if (annulus) r3 = r0, r0 = r1, r1 = r3, r3 = r2 + toothRadius * 3;\n    const da = Math.PI / n;\n    let a0 = -Math.PI / 2 + (annulus ? Math.PI / n : 0);\n    const path = [\"M\", r0 * Math.cos(a0), \",\", r0 * Math.sin(a0)];\n    let i = -1;\n    while (++i < n) { // TODO Template literal.\n        path.push(\n            \"A\", r0, \",\", r0, \" 0 0,1 \", r0 * Math.cos(a0 += da), \",\", r0 * Math.sin(a0),\n            \"L\", r2 * Math.cos(a0), \",\", r2 * Math.sin(a0),\n            \"L\", r1 * Math.cos(a0 += da / 3), \",\", r1 * Math.sin(a0),\n            \"A\", r1, \",\", r1, \" 0 0,1 \", r1 * Math.cos(a0 += da / 3), \",\", r1 * Math.sin(a0),\n            \"L\", r2 * Math.cos(a0 += da / 3), \",\", r2 * Math.sin(a0),\n            \"L\", r0 * Math.cos(a0), \",\", r0 * Math.sin(a0)\n        );\n    }\n    path.push(\"M0,\", -r3, \"A\", r3, \",\", r3, \" 0 0,0 0,\", r3, \"A\", r3, \",\", r3, \" 0 0,0 0,\", -r3, \"Z\");\n    return path.join(\"\");\n}\n\n\n\nconst width = 500;\nconst height = 500;\nconst x = Math.sin(2 * Math.PI / 3);\nconst y = Math.cos(2 * Math.PI / 3);\nlet start = Date.now();\n\nconst svg = d3.select('svg')\n\t.attr('width', width)\n\t.attr('height', height)\n\nconst frame = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\")\n    .append(\"g\")\n    .datum({\n        radius: +frameRadius\n    });\n\nconst path = frame.selectAll(\"g\")\n    .data([{\n        fill: \"#c6dbef\",\n        teeth: 80,\n        radius: -radius * 5,\n        origin: [0, 0],\n        annulus: true\n    }, {\n        fill: \"#6baed6\",\n        teeth: 16,\n        radius: radius,\n        origin: [0, 0]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [0, -radius * 3]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [-radius * 3 * x, -radius * 3 * y]\n    }, {\n        fill: \"#9ecae1\",\n        teeth: 32,\n        radius: -radius * 2,\n        origin: [radius * 3 * x, -radius * 3 * y]\n    }])\n    .enter().append(\"g\")\n    .attr(\"transform\", d => `translate(${d.origin})`)\n    .append(\"path\")\n    .attr(\"stroke\", \"black\")\n    .attr(\"fill\", d => d.fill)\n    .attr(\"d\", gear);\n\n// while (true) {\nsetTimeout(() => {\n\tconst now = Date.now()\n    const angle = (now - start) * speed;\n    const transform = d => `rotate(${angle / d.radius})`;\n    path.attr(\"transform\", transform);\n    frame.attr(\"transform\", transform);\n    start = now\n}, 500)\n\n</script>\n</body>\n</html>"},{"title":"table","_content":"","source":"_drafts/table.md","raw":"---\ntitle: table\ntags:\n---\n","slug":"table","published":0,"date":"2018-12-14T09:29:34.990Z","updated":"2018-12-14T09:29:34.990Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emxr00053a8ivcgv13q4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于","date":"1984-04-29T16:00:00.000Z","keywords":"辛跃飞","description":"辛跃飞的个人网站","_content":"\nwechat: &#x79;&#111;&#112;&#x68;&#101;&#101;\n\nemail: &#109;&#97;&#105;&#108;&#64;&#120;&#105;&#110;&#121;&#117;&#101;&#102;&#101;&#105;&#46;&#99;&#111;&#109;\n\ninstagram: <a href=\"https://www.instagram.com/insticket/\" target=\"_blank\">INSTICKET</a>\n\nplus:\n\n<a href=\"http://datong0.com/\" target=\"_blank\" alt=\"网站建设\"><img src=\"/images/else/datong0.jpg\" style=\"width: 104px; margin: 0\" /></a>\n\n\n{% raw %}\n<style>\n.title .info,\n.pagination {\n\tvisibility: hidden;\n}\n.title .info {\n\theight: 0;\n\tmargin-top: 0;\n}\n</style>\n{% endraw %}\n","source":"_posts/about.md","raw":"---\ntitle: 关于\ndate: 1984-04-30 00:00:00\ncategories: Uncategorized\nkeywords: 辛跃飞\ndescription: 辛跃飞的个人网站\n---\n\nwechat: &#x79;&#111;&#112;&#x68;&#101;&#101;\n\nemail: &#109;&#97;&#105;&#108;&#64;&#120;&#105;&#110;&#121;&#117;&#101;&#102;&#101;&#105;&#46;&#99;&#111;&#109;\n\ninstagram: <a href=\"https://www.instagram.com/insticket/\" target=\"_blank\">INSTICKET</a>\n\nplus:\n\n<a href=\"http://datong0.com/\" target=\"_blank\" alt=\"网站建设\"><img src=\"/images/else/datong0.jpg\" style=\"width: 104px; margin: 0\" /></a>\n\n\n{% raw %}\n<style>\n.title .info,\n.pagination {\n\tvisibility: hidden;\n}\n.title .info {\n\theight: 0;\n\tmargin-top: 0;\n}\n</style>\n{% endraw %}\n","slug":"about","published":1,"updated":"2019-09-29T07:40:33.973Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emxt00073a8igwlnhpus","content":"<p>wechat: &#x79;&#111;&#112;&#x68;&#101;&#101;</p>\n<p>email: &#109;&#97;&#105;&#108;&#64;&#120;&#105;&#110;&#121;&#117;&#101;&#102;&#101;&#105;&#46;&#99;&#111;&#109;</p>\n<p>instagram: <a href=\"https://www.instagram.com/insticket/\" target=\"_blank\">INSTICKET</a></p>\n<p>plus:</p>\n<p><a href=\"http://datong0.com/\" target=\"_blank\" alt=\"网站建设\"><img src=\"/images/else/datong0.jpg\" style=\"width: 104px; margin: 0\"></a></p>\n\n<style>\n.title .info,\n.pagination {\n\tvisibility: hidden;\n}\n.title .info {\n\theight: 0;\n\tmargin-top: 0;\n}\n</style>\n\n","site":{"data":{}},"excerpt":"","more":"<p>wechat: &#x79;&#111;&#112;&#x68;&#101;&#101;</p>\n<p>email: &#109;&#97;&#105;&#108;&#64;&#120;&#105;&#110;&#121;&#117;&#101;&#102;&#101;&#105;&#46;&#99;&#111;&#109;</p>\n<p>instagram: <a href=\"https://www.instagram.com/insticket/\" target=\"_blank\">INSTICKET</a></p>\n<p>plus:</p>\n<p><a href=\"http://datong0.com/\" target=\"_blank\" alt=\"网站建设\"><img src=\"/images/else/datong0.jpg\" style=\"width: 104px; margin: 0\"></a></p>\n\n<style>\n.title .info,\n.pagination {\n\tvisibility: hidden;\n}\n.title .info {\n\theight: 0;\n\tmargin-top: 0;\n}\n</style>\n\n"},{"title":"JavaScript四则运算","date":"2018-12-16T16:00:00.000Z","keywords":"JavaScript, add, subtract, multiply, divide","description":"JavaScript加减乘除四则运算","_content":"\n``` JavaScript\nfunction mathAdd(a, b) {\n    if (!a) a = 0\n    if (!b) b = 0\n    let c = d = 0, e\n    try {\n        c = a.toString().split('.')[1].length\n    } catch (f) {}\n    try {\n        d = b.toString().split('.')[1].length\n    } catch (f) {}\n    e = Math.pow(10, Math.max(c, d))\n    return (mathMultiply(a, e) + mathMultiply(b, e)) / e\n}\n\nfunction mathSubtract(a, b) {\n    return mathAdd(a, -b)\n}\n\nfunction mathMultiply(a, b) {\n    if (!a) a = 0\n    if (!b) b = 0\n    let c = 0, d = a.toString(), e = b.toString()\n    try {\n        c += d.split('.')[1].length\n    } catch (f) {}\n    try {\n        c += e.split('.')[1].length\n    } catch (f) {}\n    return Number(d.replace('.', '')) * Number(e.replace('.', '')) / Math.pow(10, c)\n}\n\nfunction mathDivide(a, b) {\n    if (!a) a = 0\n    if (!b) b = 0\n    let c, d, e = f = 0\n    try {\n        e = a.toString().split('.')[1].length\n    } catch (g) {}\n    try {\n        f = b.toString().split('.')[1].length\n    } catch (g) {}\n    c = Number(a.toString().replace('.', ''))\n    d = Number(b.toString().replace('.', ''))\n    return mathMultiply(c / d, Math.pow(10, f - e))\n}\n\n/*\n    const num = 200.3\n    num * 3 //600.9000000000001\n    mathMultiply(num, 3) //600.9\n*/\n```\n","source":"_posts/add-subtract-multiply-divide.md","raw":"---\ntitle: JavaScript四则运算\ndate: 2018-12-17 00:00:00\ncategories: Code Snippets\nkeywords: JavaScript, add, subtract, multiply, divide\ndescription: JavaScript加减乘除四则运算\n---\n\n``` JavaScript\nfunction mathAdd(a, b) {\n    if (!a) a = 0\n    if (!b) b = 0\n    let c = d = 0, e\n    try {\n        c = a.toString().split('.')[1].length\n    } catch (f) {}\n    try {\n        d = b.toString().split('.')[1].length\n    } catch (f) {}\n    e = Math.pow(10, Math.max(c, d))\n    return (mathMultiply(a, e) + mathMultiply(b, e)) / e\n}\n\nfunction mathSubtract(a, b) {\n    return mathAdd(a, -b)\n}\n\nfunction mathMultiply(a, b) {\n    if (!a) a = 0\n    if (!b) b = 0\n    let c = 0, d = a.toString(), e = b.toString()\n    try {\n        c += d.split('.')[1].length\n    } catch (f) {}\n    try {\n        c += e.split('.')[1].length\n    } catch (f) {}\n    return Number(d.replace('.', '')) * Number(e.replace('.', '')) / Math.pow(10, c)\n}\n\nfunction mathDivide(a, b) {\n    if (!a) a = 0\n    if (!b) b = 0\n    let c, d, e = f = 0\n    try {\n        e = a.toString().split('.')[1].length\n    } catch (g) {}\n    try {\n        f = b.toString().split('.')[1].length\n    } catch (g) {}\n    c = Number(a.toString().replace('.', ''))\n    d = Number(b.toString().replace('.', ''))\n    return mathMultiply(c / d, Math.pow(10, f - e))\n}\n\n/*\n    const num = 200.3\n    num * 3 //600.9000000000001\n    mathMultiply(num, 3) //600.9\n*/\n```\n","slug":"add-subtract-multiply-divide","published":1,"updated":"2018-12-17T10:57:32.361Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emxv00083a8i76nvofsx","content":"<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mathAdd</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!a) a = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!b) b = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">let</span> c = d = <span class=\"number\">0</span>, e</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        c = a.toString().split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (f) &#123;&#125;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        d = b.toString().split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (f) &#123;&#125;</div><div class=\"line\">    e = <span class=\"built_in\">Math</span>.pow(<span class=\"number\">10</span>, <span class=\"built_in\">Math</span>.max(c, d))</div><div class=\"line\">    <span class=\"keyword\">return</span> (mathMultiply(a, e) + mathMultiply(b, e)) / e</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mathSubtract</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> mathAdd(a, -b)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mathMultiply</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!a) a = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!b) b = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">let</span> c = <span class=\"number\">0</span>, d = a.toString(), e = b.toString()</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        c += d.split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (f) &#123;&#125;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        c += e.split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (f) &#123;&#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Number</span>(d.replace(<span class=\"string\">'.'</span>, <span class=\"string\">''</span>)) * <span class=\"built_in\">Number</span>(e.replace(<span class=\"string\">'.'</span>, <span class=\"string\">''</span>)) / <span class=\"built_in\">Math</span>.pow(<span class=\"number\">10</span>, c)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mathDivide</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!a) a = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!b) b = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">let</span> c, d, e = f = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        e = a.toString().split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (g) &#123;&#125;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        f = b.toString().split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (g) &#123;&#125;</div><div class=\"line\">    c = <span class=\"built_in\">Number</span>(a.toString().replace(<span class=\"string\">'.'</span>, <span class=\"string\">''</span>))</div><div class=\"line\">    d = <span class=\"built_in\">Number</span>(b.toString().replace(<span class=\"string\">'.'</span>, <span class=\"string\">''</span>))</div><div class=\"line\">    <span class=\"keyword\">return</span> mathMultiply(c / d, <span class=\"built_in\">Math</span>.pow(<span class=\"number\">10</span>, f - e))</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\">    const num = 200.3</span></div><div class=\"line\"><span class=\"comment\">    num * 3 //600.9000000000001</span></div><div class=\"line\"><span class=\"comment\">    mathMultiply(num, 3) //600.9</span></div><div class=\"line\"><span class=\"comment\">*/</span></div></pre></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mathAdd</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!a) a = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!b) b = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">let</span> c = d = <span class=\"number\">0</span>, e</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        c = a.toString().split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (f) &#123;&#125;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        d = b.toString().split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (f) &#123;&#125;</div><div class=\"line\">    e = <span class=\"built_in\">Math</span>.pow(<span class=\"number\">10</span>, <span class=\"built_in\">Math</span>.max(c, d))</div><div class=\"line\">    <span class=\"keyword\">return</span> (mathMultiply(a, e) + mathMultiply(b, e)) / e</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mathSubtract</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> mathAdd(a, -b)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mathMultiply</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!a) a = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!b) b = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">let</span> c = <span class=\"number\">0</span>, d = a.toString(), e = b.toString()</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        c += d.split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (f) &#123;&#125;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        c += e.split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (f) &#123;&#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Number</span>(d.replace(<span class=\"string\">'.'</span>, <span class=\"string\">''</span>)) * <span class=\"built_in\">Number</span>(e.replace(<span class=\"string\">'.'</span>, <span class=\"string\">''</span>)) / <span class=\"built_in\">Math</span>.pow(<span class=\"number\">10</span>, c)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mathDivide</span>(<span class=\"params\">a, b</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!a) a = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!b) b = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">let</span> c, d, e = f = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        e = a.toString().split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (g) &#123;&#125;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        f = b.toString().split(<span class=\"string\">'.'</span>)[<span class=\"number\">1</span>].length</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (g) &#123;&#125;</div><div class=\"line\">    c = <span class=\"built_in\">Number</span>(a.toString().replace(<span class=\"string\">'.'</span>, <span class=\"string\">''</span>))</div><div class=\"line\">    d = <span class=\"built_in\">Number</span>(b.toString().replace(<span class=\"string\">'.'</span>, <span class=\"string\">''</span>))</div><div class=\"line\">    <span class=\"keyword\">return</span> mathMultiply(c / d, <span class=\"built_in\">Math</span>.pow(<span class=\"number\">10</span>, f - e))</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\">    const num = 200.3</span></div><div class=\"line\"><span class=\"comment\">    num * 3 //600.9000000000001</span></div><div class=\"line\"><span class=\"comment\">    mathMultiply(num, 3) //600.9</span></div><div class=\"line\"><span class=\"comment\">*/</span></div></pre></figure>\n"},{"title":"canvas动态随机纹理","date":"2019-02-26T16:00:00.000Z","keywords":"canvas, createImageData, putImageData, createPattern","description":"使用重复平铺模式给canvas图像填充动态随机纹理","_content":"\n{% raw %}\n<div class=\"scrollable-wrapper\"><canvas id=\"grain\"></canvas></div>\n<p style=\"margin-top:-1.25em; text-align:center; color:#83887c\">点击图片启/停动态</p>\n{% endraw %}\n\n配置参数，包括重复平铺元素的尺寸、背景的放大系数、纹理的透明度、动态重绘频率。\n\n``` JavaScript\nconst config = {\n    size: 150,\n    scaleX: 1,\n    scaleY: 1,\n    alpha: 20,\n    interval: 8\n}\n```\n\n背景画布，scale方法可对绘图进行缩放。\n\n``` JavaScript\nlet bgCanvas, viewW, viewH, bgCtx\n\nbgCanvas = document.getElementById('grain')\nviewW = bgCanvas.width = bgCanvas.parentNode.clientWidth\nviewH = bgCanvas.height = Math.round(viewW * 0.4)\nbgCtx = bgCanvas.getContext('2d')\nbgCtx.scale(config.scaleX, config.scaleY)\n```\n\n创建重复平铺元素，使用createImageData方法创建空白ImageData对象，ImageData对象的data是一个Uint8ClampedArray数组，图像的每个像素信息占4个元素储存，其中：\n\n- R - 红色 (0-255)\n- G - 绿色 (0-255)\n- B - 蓝色 (0-255)\n- A - alpha通道 (0-255 0透明 255完全可见)\n\n这里空白ImageData对象data的所有像素初始值均为0。\n\n``` JavaScript\nlet ptCanvas, ptCtx, ptData, ptDataLength\n\nptCanvas = document.createElement('canvas')\nptCanvas.width = ptCanvas.height = config.size\nptCtx = ptCanvas.getContext('2d')\nptData = ptCtx.createImageData(config.size, config.size)\nptDataLength = config.size * config.size * 4\n```\n\n绘图，给ImageData设置随机像素值，使用putImageData方法将图像数据放入平铺元素画布，擦除背景上的纹理图像，然后设置用于填充绘画的重复平铺模式，最后矩形填充背景。\n\n``` JavaScript\nfunction draw() {\n    for (let i = 0; i < ptDataLength; i += 4) {\n        const v = (Math.random() * 255) | 0\n        ptData.data[i] = v\n        ptData.data[i + 1] = v\n        ptData.data[i + 2] = v\n        ptData.data[i + 3] = config.alpha\n    }\n    ptCtx.putImageData(ptData, 0, 0)\n\n    bgCtx.clearRect(0, 0, viewW, viewH)\n    bgCtx.fillStyle = bgCtx.createPattern(ptCanvas, 'repeat')\n    bgCtx.fillRect(0, 0, viewW, viewH)\n}\ndraw()\n```\n\n以一定的频率动态重绘。\n\n``` JavaScript\nlet frame = 0, play = false\n\nfunction loop() {\n    if (++frame % config.interval === 0) draw()\n    play && requestAnimationFrame(loop)\n}\n\nbgCanvas.addEventListener('click', () => {\n    play = !play\n    play && loop()\n})\n```\n\n\n{% raw %}\n<script>\n!function() {\n    const config = {\n        size: 150,\n        scaleX: 1,\n        scaleY: 1,\n        alpha: 20,\n        interval: 8\n    }\n\n    let bgCanvas, viewW, viewH, bgCtx\n\n    bgCanvas = document.getElementById('grain')\n    viewW = bgCanvas.width = bgCanvas.parentNode.clientWidth\n    viewH = bgCanvas.height = Math.round(viewW * 0.4)\n    bgCtx = bgCanvas.getContext('2d')\n    bgCtx.scale(config.scaleX, config.scaleY)\n\n    let ptCanvas, ptCtx, ptData, ptDataLength\n\n    ptCanvas = document.createElement('canvas')\n    ptCanvas.width = ptCanvas.height = config.size\n    ptCtx = ptCanvas.getContext('2d')\n    ptData = ptCtx.createImageData(config.size, config.size)\n    ptDataLength = config.size * config.size * 4\n\n    function draw() {\n        for (let i = 0; i < ptDataLength; i += 4) {\n            const v = (Math.random() * 255) | 0\n            ptData.data[i] = v\n            ptData.data[i + 1] = v\n            ptData.data[i + 2] = v\n            ptData.data[i + 3] = config.alpha\n        }\n        ptCtx.putImageData(ptData, 0, 0)\n\n        bgCtx.clearRect(0, 0, viewW, viewH)\n        bgCtx.fillStyle = bgCtx.createPattern(ptCanvas, 'repeat')\n        bgCtx.fillRect(0, 0, viewW, viewH)\n    }\n    draw()\n\n    let frame = 0, play = false\n\n    function loop() {\n        if (++frame % config.interval === 0) draw()\n        play && requestAnimationFrame(loop)\n    }\n\n    bgCanvas.addEventListener('click', () => {\n        play = !play\n        play && loop()\n    })\n}()\n</script>\n{% endraw %}\n","source":"_posts/canvas-grain.md","raw":"---\ntitle: canvas动态随机纹理\ndate: 2019-02-27 00:00:00\ncategories: Uncategorized\nkeywords: canvas, createImageData, putImageData, createPattern\ndescription: 使用重复平铺模式给canvas图像填充动态随机纹理\n---\n\n{% raw %}\n<div class=\"scrollable-wrapper\"><canvas id=\"grain\"></canvas></div>\n<p style=\"margin-top:-1.25em; text-align:center; color:#83887c\">点击图片启/停动态</p>\n{% endraw %}\n\n配置参数，包括重复平铺元素的尺寸、背景的放大系数、纹理的透明度、动态重绘频率。\n\n``` JavaScript\nconst config = {\n    size: 150,\n    scaleX: 1,\n    scaleY: 1,\n    alpha: 20,\n    interval: 8\n}\n```\n\n背景画布，scale方法可对绘图进行缩放。\n\n``` JavaScript\nlet bgCanvas, viewW, viewH, bgCtx\n\nbgCanvas = document.getElementById('grain')\nviewW = bgCanvas.width = bgCanvas.parentNode.clientWidth\nviewH = bgCanvas.height = Math.round(viewW * 0.4)\nbgCtx = bgCanvas.getContext('2d')\nbgCtx.scale(config.scaleX, config.scaleY)\n```\n\n创建重复平铺元素，使用createImageData方法创建空白ImageData对象，ImageData对象的data是一个Uint8ClampedArray数组，图像的每个像素信息占4个元素储存，其中：\n\n- R - 红色 (0-255)\n- G - 绿色 (0-255)\n- B - 蓝色 (0-255)\n- A - alpha通道 (0-255 0透明 255完全可见)\n\n这里空白ImageData对象data的所有像素初始值均为0。\n\n``` JavaScript\nlet ptCanvas, ptCtx, ptData, ptDataLength\n\nptCanvas = document.createElement('canvas')\nptCanvas.width = ptCanvas.height = config.size\nptCtx = ptCanvas.getContext('2d')\nptData = ptCtx.createImageData(config.size, config.size)\nptDataLength = config.size * config.size * 4\n```\n\n绘图，给ImageData设置随机像素值，使用putImageData方法将图像数据放入平铺元素画布，擦除背景上的纹理图像，然后设置用于填充绘画的重复平铺模式，最后矩形填充背景。\n\n``` JavaScript\nfunction draw() {\n    for (let i = 0; i < ptDataLength; i += 4) {\n        const v = (Math.random() * 255) | 0\n        ptData.data[i] = v\n        ptData.data[i + 1] = v\n        ptData.data[i + 2] = v\n        ptData.data[i + 3] = config.alpha\n    }\n    ptCtx.putImageData(ptData, 0, 0)\n\n    bgCtx.clearRect(0, 0, viewW, viewH)\n    bgCtx.fillStyle = bgCtx.createPattern(ptCanvas, 'repeat')\n    bgCtx.fillRect(0, 0, viewW, viewH)\n}\ndraw()\n```\n\n以一定的频率动态重绘。\n\n``` JavaScript\nlet frame = 0, play = false\n\nfunction loop() {\n    if (++frame % config.interval === 0) draw()\n    play && requestAnimationFrame(loop)\n}\n\nbgCanvas.addEventListener('click', () => {\n    play = !play\n    play && loop()\n})\n```\n\n\n{% raw %}\n<script>\n!function() {\n    const config = {\n        size: 150,\n        scaleX: 1,\n        scaleY: 1,\n        alpha: 20,\n        interval: 8\n    }\n\n    let bgCanvas, viewW, viewH, bgCtx\n\n    bgCanvas = document.getElementById('grain')\n    viewW = bgCanvas.width = bgCanvas.parentNode.clientWidth\n    viewH = bgCanvas.height = Math.round(viewW * 0.4)\n    bgCtx = bgCanvas.getContext('2d')\n    bgCtx.scale(config.scaleX, config.scaleY)\n\n    let ptCanvas, ptCtx, ptData, ptDataLength\n\n    ptCanvas = document.createElement('canvas')\n    ptCanvas.width = ptCanvas.height = config.size\n    ptCtx = ptCanvas.getContext('2d')\n    ptData = ptCtx.createImageData(config.size, config.size)\n    ptDataLength = config.size * config.size * 4\n\n    function draw() {\n        for (let i = 0; i < ptDataLength; i += 4) {\n            const v = (Math.random() * 255) | 0\n            ptData.data[i] = v\n            ptData.data[i + 1] = v\n            ptData.data[i + 2] = v\n            ptData.data[i + 3] = config.alpha\n        }\n        ptCtx.putImageData(ptData, 0, 0)\n\n        bgCtx.clearRect(0, 0, viewW, viewH)\n        bgCtx.fillStyle = bgCtx.createPattern(ptCanvas, 'repeat')\n        bgCtx.fillRect(0, 0, viewW, viewH)\n    }\n    draw()\n\n    let frame = 0, play = false\n\n    function loop() {\n        if (++frame % config.interval === 0) draw()\n        play && requestAnimationFrame(loop)\n    }\n\n    bgCanvas.addEventListener('click', () => {\n        play = !play\n        play && loop()\n    })\n}()\n</script>\n{% endraw %}\n","slug":"canvas-grain","published":1,"updated":"2019-02-27T11:10:17.640Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emxw000b3a8ivmrenvji","content":"\n<div class=\"scrollable-wrapper\"><canvas id=\"grain\"></canvas></div>\n<p style=\"margin-top:-1.25em; text-align:center; color:#83887c\">点击图片启/停动态</p>\n\n<p>配置参数，包括重复平铺元素的尺寸、背景的放大系数、纹理的透明度、动态重绘频率。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> config = &#123;</div><div class=\"line\">    size: <span class=\"number\">150</span>,</div><div class=\"line\">    scaleX: <span class=\"number\">1</span>,</div><div class=\"line\">    scaleY: <span class=\"number\">1</span>,</div><div class=\"line\">    alpha: <span class=\"number\">20</span>,</div><div class=\"line\">    interval: <span class=\"number\">8</span></div><div class=\"line\">&#125;</div></pre></figure>\n<p>背景画布，scale方法可对绘图进行缩放。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> bgCanvas, viewW, viewH, bgCtx</div><div class=\"line\"><br></div><div class=\"line\">bgCanvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'grain'</span>)</div><div class=\"line\">viewW = bgCanvas.width = bgCanvas.parentNode.clientWidth</div><div class=\"line\">viewH = bgCanvas.height = <span class=\"built_in\">Math</span>.round(viewW * <span class=\"number\">0.4</span>)</div><div class=\"line\">bgCtx = bgCanvas.getContext(<span class=\"string\">'2d'</span>)</div><div class=\"line\">bgCtx.scale(config.scaleX, config.scaleY)</div></pre></figure>\n<p>创建重复平铺元素，使用createImageData方法创建空白ImageData对象，ImageData对象的data是一个Uint8ClampedArray数组，图像的每个像素信息占4个元素储存，其中：</p>\n<ul>\n<li>R - 红色 (0-255)</li>\n<li>G - 绿色 (0-255)</li>\n<li>B - 蓝色 (0-255)</li>\n<li>A - alpha通道 (0-255 0透明 255完全可见)</li>\n</ul>\n<p>这里空白ImageData对象data的所有像素初始值均为0。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> ptCanvas, ptCtx, ptData, ptDataLength</div><div class=\"line\"><br></div><div class=\"line\">ptCanvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>)</div><div class=\"line\">ptCanvas.width = ptCanvas.height = config.size</div><div class=\"line\">ptCtx = ptCanvas.getContext(<span class=\"string\">'2d'</span>)</div><div class=\"line\">ptData = ptCtx.createImageData(config.size, config.size)</div><div class=\"line\">ptDataLength = config.size * config.size * <span class=\"number\">4</span></div></pre></figure>\n<p>绘图，给ImageData设置随机像素值，使用putImageData方法将图像数据放入平铺元素画布，擦除背景上的纹理图像，然后设置用于填充绘画的重复平铺模式，最后矩形填充背景。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; ptDataLength; i += <span class=\"number\">4</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> v = (<span class=\"built_in\">Math</span>.random() * <span class=\"number\">255</span>) | <span class=\"number\">0</span></div><div class=\"line\">        ptData.data[i] = v</div><div class=\"line\">        ptData.data[i + <span class=\"number\">1</span>] = v</div><div class=\"line\">        ptData.data[i + <span class=\"number\">2</span>] = v</div><div class=\"line\">        ptData.data[i + <span class=\"number\">3</span>] = config.alpha</div><div class=\"line\">    &#125;</div><div class=\"line\">    ptCtx.putImageData(ptData, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</div><div class=\"line\"><br></div><div class=\"line\">    bgCtx.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, viewW, viewH)</div><div class=\"line\">    bgCtx.fillStyle = bgCtx.createPattern(ptCanvas, <span class=\"string\">'repeat'</span>)</div><div class=\"line\">    bgCtx.fillRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, viewW, viewH)</div><div class=\"line\">&#125;</div><div class=\"line\">draw()</div></pre></figure>\n<p>以一定的频率动态重绘。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> frame = <span class=\"number\">0</span>, play = <span class=\"literal\">false</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loop</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (++frame % config.interval === <span class=\"number\">0</span>) draw()</div><div class=\"line\">    play &amp;&amp; requestAnimationFrame(loop)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">bgCanvas.addEventListener(<span class=\"string\">'click'</span>, () =&gt; &#123;</div><div class=\"line\">    play = !play</div><div class=\"line\">    play &amp;&amp; loop()</div><div class=\"line\">&#125;)</div></pre></figure>\n\n<script>\n!function() {\n    const config = {\n        size: 150,\n        scaleX: 1,\n        scaleY: 1,\n        alpha: 20,\n        interval: 8\n    }\n\n    let bgCanvas, viewW, viewH, bgCtx\n\n    bgCanvas = document.getElementById('grain')\n    viewW = bgCanvas.width = bgCanvas.parentNode.clientWidth\n    viewH = bgCanvas.height = Math.round(viewW * 0.4)\n    bgCtx = bgCanvas.getContext('2d')\n    bgCtx.scale(config.scaleX, config.scaleY)\n\n    let ptCanvas, ptCtx, ptData, ptDataLength\n\n    ptCanvas = document.createElement('canvas')\n    ptCanvas.width = ptCanvas.height = config.size\n    ptCtx = ptCanvas.getContext('2d')\n    ptData = ptCtx.createImageData(config.size, config.size)\n    ptDataLength = config.size * config.size * 4\n\n    function draw() {\n        for (let i = 0; i < ptDataLength; i += 4) {\n            const v = (Math.random() * 255) | 0\n            ptData.data[i] = v\n            ptData.data[i + 1] = v\n            ptData.data[i + 2] = v\n            ptData.data[i + 3] = config.alpha\n        }\n        ptCtx.putImageData(ptData, 0, 0)\n\n        bgCtx.clearRect(0, 0, viewW, viewH)\n        bgCtx.fillStyle = bgCtx.createPattern(ptCanvas, 'repeat')\n        bgCtx.fillRect(0, 0, viewW, viewH)\n    }\n    draw()\n\n    let frame = 0, play = false\n\n    function loop() {\n        if (++frame % config.interval === 0) draw()\n        play && requestAnimationFrame(loop)\n    }\n\n    bgCanvas.addEventListener('click', () => {\n        play = !play\n        play && loop()\n    })\n}()\n</script>\n\n","site":{"data":{}},"excerpt":"","more":"\n<div class=\"scrollable-wrapper\"><canvas id=\"grain\"></canvas></div>\n<p style=\"margin-top:-1.25em; text-align:center; color:#83887c\">点击图片启/停动态</p>\n\n<p>配置参数，包括重复平铺元素的尺寸、背景的放大系数、纹理的透明度、动态重绘频率。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> config = &#123;</div><div class=\"line\">    size: <span class=\"number\">150</span>,</div><div class=\"line\">    scaleX: <span class=\"number\">1</span>,</div><div class=\"line\">    scaleY: <span class=\"number\">1</span>,</div><div class=\"line\">    alpha: <span class=\"number\">20</span>,</div><div class=\"line\">    interval: <span class=\"number\">8</span></div><div class=\"line\">&#125;</div></pre></figure>\n<p>背景画布，scale方法可对绘图进行缩放。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> bgCanvas, viewW, viewH, bgCtx</div><div class=\"line\"><br></div><div class=\"line\">bgCanvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'grain'</span>)</div><div class=\"line\">viewW = bgCanvas.width = bgCanvas.parentNode.clientWidth</div><div class=\"line\">viewH = bgCanvas.height = <span class=\"built_in\">Math</span>.round(viewW * <span class=\"number\">0.4</span>)</div><div class=\"line\">bgCtx = bgCanvas.getContext(<span class=\"string\">'2d'</span>)</div><div class=\"line\">bgCtx.scale(config.scaleX, config.scaleY)</div></pre></figure>\n<p>创建重复平铺元素，使用createImageData方法创建空白ImageData对象，ImageData对象的data是一个Uint8ClampedArray数组，图像的每个像素信息占4个元素储存，其中：</p>\n<ul>\n<li>R - 红色 (0-255)</li>\n<li>G - 绿色 (0-255)</li>\n<li>B - 蓝色 (0-255)</li>\n<li>A - alpha通道 (0-255 0透明 255完全可见)</li>\n</ul>\n<p>这里空白ImageData对象data的所有像素初始值均为0。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> ptCanvas, ptCtx, ptData, ptDataLength</div><div class=\"line\"><br></div><div class=\"line\">ptCanvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>)</div><div class=\"line\">ptCanvas.width = ptCanvas.height = config.size</div><div class=\"line\">ptCtx = ptCanvas.getContext(<span class=\"string\">'2d'</span>)</div><div class=\"line\">ptData = ptCtx.createImageData(config.size, config.size)</div><div class=\"line\">ptDataLength = config.size * config.size * <span class=\"number\">4</span></div></pre></figure>\n<p>绘图，给ImageData设置随机像素值，使用putImageData方法将图像数据放入平铺元素画布，擦除背景上的纹理图像，然后设置用于填充绘画的重复平铺模式，最后矩形填充背景。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; ptDataLength; i += <span class=\"number\">4</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> v = (<span class=\"built_in\">Math</span>.random() * <span class=\"number\">255</span>) | <span class=\"number\">0</span></div><div class=\"line\">        ptData.data[i] = v</div><div class=\"line\">        ptData.data[i + <span class=\"number\">1</span>] = v</div><div class=\"line\">        ptData.data[i + <span class=\"number\">2</span>] = v</div><div class=\"line\">        ptData.data[i + <span class=\"number\">3</span>] = config.alpha</div><div class=\"line\">    &#125;</div><div class=\"line\">    ptCtx.putImageData(ptData, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</div><div class=\"line\"><br></div><div class=\"line\">    bgCtx.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, viewW, viewH)</div><div class=\"line\">    bgCtx.fillStyle = bgCtx.createPattern(ptCanvas, <span class=\"string\">'repeat'</span>)</div><div class=\"line\">    bgCtx.fillRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, viewW, viewH)</div><div class=\"line\">&#125;</div><div class=\"line\">draw()</div></pre></figure>\n<p>以一定的频率动态重绘。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> frame = <span class=\"number\">0</span>, play = <span class=\"literal\">false</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loop</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (++frame % config.interval === <span class=\"number\">0</span>) draw()</div><div class=\"line\">    play &amp;&amp; requestAnimationFrame(loop)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">bgCanvas.addEventListener(<span class=\"string\">'click'</span>, () =&gt; &#123;</div><div class=\"line\">    play = !play</div><div class=\"line\">    play &amp;&amp; loop()</div><div class=\"line\">&#125;)</div></pre></figure>\n\n<script>\n!function() {\n    const config = {\n        size: 150,\n        scaleX: 1,\n        scaleY: 1,\n        alpha: 20,\n        interval: 8\n    }\n\n    let bgCanvas, viewW, viewH, bgCtx\n\n    bgCanvas = document.getElementById('grain')\n    viewW = bgCanvas.width = bgCanvas.parentNode.clientWidth\n    viewH = bgCanvas.height = Math.round(viewW * 0.4)\n    bgCtx = bgCanvas.getContext('2d')\n    bgCtx.scale(config.scaleX, config.scaleY)\n\n    let ptCanvas, ptCtx, ptData, ptDataLength\n\n    ptCanvas = document.createElement('canvas')\n    ptCanvas.width = ptCanvas.height = config.size\n    ptCtx = ptCanvas.getContext('2d')\n    ptData = ptCtx.createImageData(config.size, config.size)\n    ptDataLength = config.size * config.size * 4\n\n    function draw() {\n        for (let i = 0; i < ptDataLength; i += 4) {\n            const v = (Math.random() * 255) | 0\n            ptData.data[i] = v\n            ptData.data[i + 1] = v\n            ptData.data[i + 2] = v\n            ptData.data[i + 3] = config.alpha\n        }\n        ptCtx.putImageData(ptData, 0, 0)\n\n        bgCtx.clearRect(0, 0, viewW, viewH)\n        bgCtx.fillStyle = bgCtx.createPattern(ptCanvas, 'repeat')\n        bgCtx.fillRect(0, 0, viewW, viewH)\n    }\n    draw()\n\n    let frame = 0, play = false\n\n    function loop() {\n        if (++frame % config.interval === 0) draw()\n        play && requestAnimationFrame(loop)\n    }\n\n    bgCanvas.addEventListener('click', () => {\n        play = !play\n        play && loop()\n    })\n}()\n</script>\n\n"},{"title":"颜色加深或减淡","date":"2018-10-19T06:26:28.000Z","keywords":"JavaScript, 颜色加深代码, 颜色减淡代码","description":"JavaScript颜色加深或减淡","_content":"\n``` JavaScript\nclass Color {\n    HexToRgb(str) {\n        str = str.replace('#', '')\n        const hxs = str.match(/../g)\n        for (let i = 0; i < 3; i++) {\n            hxs[i] = parseInt(hxs[i], 16)\n        }\n        return hxs\n    }\n    RgbToHex(a, b, c) {\n        const hexs = [a.toString(16), b.toString(16), c.toString(16)]\n        for (let i = 0; i < 3; i++) {\n            if (hexs[i].length === 1) hexs[i] = '0' + hexs[i]\n        }\n        return '#' + hexs.join('')\n    }\n    getDarkColor(color, level) {\n        const rgbc = this.HexToRgb(color)\n        for (let i = 0; i < 3; i++) {\n            rgbc[i] = Math.floor(rgbc[i] * (1 - level))\n        }\n        return this.RgbToHex(rgbc[0], rgbc[1], rgbc[2])\n    }\n    getLightColor(color, level) {\n        const rgbc = this.HexToRgb(color)\n        for (let i = 0; i < 3; i++) {\n            rgbc[i] = Math.floor((255 - rgbc[i]) * level + rgbc[i])\n        }\n        return this.RgbToHex(rgbc[0], rgbc[1], rgbc[2])\n    }\n}\n\nconst colorFn = new Color()\n\n//colorFn.getDarkColor('#6CA3EF', 0.1)\n```\n","source":"_posts/color-darken-lighten.md","raw":"---\ntitle: 颜色加深或减淡\ndate: 2018-10-19 14:26:28\ncategories: Code Snippets\nkeywords: JavaScript, 颜色加深代码, 颜色减淡代码\ndescription: JavaScript颜色加深或减淡\n---\n\n``` JavaScript\nclass Color {\n    HexToRgb(str) {\n        str = str.replace('#', '')\n        const hxs = str.match(/../g)\n        for (let i = 0; i < 3; i++) {\n            hxs[i] = parseInt(hxs[i], 16)\n        }\n        return hxs\n    }\n    RgbToHex(a, b, c) {\n        const hexs = [a.toString(16), b.toString(16), c.toString(16)]\n        for (let i = 0; i < 3; i++) {\n            if (hexs[i].length === 1) hexs[i] = '0' + hexs[i]\n        }\n        return '#' + hexs.join('')\n    }\n    getDarkColor(color, level) {\n        const rgbc = this.HexToRgb(color)\n        for (let i = 0; i < 3; i++) {\n            rgbc[i] = Math.floor(rgbc[i] * (1 - level))\n        }\n        return this.RgbToHex(rgbc[0], rgbc[1], rgbc[2])\n    }\n    getLightColor(color, level) {\n        const rgbc = this.HexToRgb(color)\n        for (let i = 0; i < 3; i++) {\n            rgbc[i] = Math.floor((255 - rgbc[i]) * level + rgbc[i])\n        }\n        return this.RgbToHex(rgbc[0], rgbc[1], rgbc[2])\n    }\n}\n\nconst colorFn = new Color()\n\n//colorFn.getDarkColor('#6CA3EF', 0.1)\n```\n","slug":"color-darken-lighten","published":1,"updated":"2018-12-17T10:53:31.167Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emxy000c3a8i6tc3cx4e","content":"<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Color</span> </span>&#123;</div><div class=\"line\">    HexToRgb(str) &#123;</div><div class=\"line\">        str = str.replace(<span class=\"string\">'#'</span>, <span class=\"string\">''</span>)</div><div class=\"line\">        <span class=\"keyword\">const</span> hxs = str.match(<span class=\"regexp\">/../g</span>)</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</div><div class=\"line\">            hxs[i] = <span class=\"built_in\">parseInt</span>(hxs[i], <span class=\"number\">16</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> hxs</div><div class=\"line\">    &#125;</div><div class=\"line\">    RgbToHex(a, b, c) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> hexs = [a.toString(<span class=\"number\">16</span>), b.toString(<span class=\"number\">16</span>), c.toString(<span class=\"number\">16</span>)]</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (hexs[i].length === <span class=\"number\">1</span>) hexs[i] = <span class=\"string\">'0'</span> + hexs[i]</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'#'</span> + hexs.join(<span class=\"string\">''</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">    getDarkColor(color, level) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> rgbc = <span class=\"keyword\">this</span>.HexToRgb(color)</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</div><div class=\"line\">            rgbc[i] = <span class=\"built_in\">Math</span>.floor(rgbc[i] * (<span class=\"number\">1</span> - level))</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.RgbToHex(rgbc[<span class=\"number\">0</span>], rgbc[<span class=\"number\">1</span>], rgbc[<span class=\"number\">2</span>])</div><div class=\"line\">    &#125;</div><div class=\"line\">    getLightColor(color, level) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> rgbc = <span class=\"keyword\">this</span>.HexToRgb(color)</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</div><div class=\"line\">            rgbc[i] = <span class=\"built_in\">Math</span>.floor((<span class=\"number\">255</span> - rgbc[i]) * level + rgbc[i])</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.RgbToHex(rgbc[<span class=\"number\">0</span>], rgbc[<span class=\"number\">1</span>], rgbc[<span class=\"number\">2</span>])</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> colorFn = <span class=\"keyword\">new</span> Color()</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">//colorFn.getDarkColor('#6CA3EF', 0.1)</span></div></pre></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Color</span> </span>&#123;</div><div class=\"line\">    HexToRgb(str) &#123;</div><div class=\"line\">        str = str.replace(<span class=\"string\">'#'</span>, <span class=\"string\">''</span>)</div><div class=\"line\">        <span class=\"keyword\">const</span> hxs = str.match(<span class=\"regexp\">/../g</span>)</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</div><div class=\"line\">            hxs[i] = <span class=\"built_in\">parseInt</span>(hxs[i], <span class=\"number\">16</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> hxs</div><div class=\"line\">    &#125;</div><div class=\"line\">    RgbToHex(a, b, c) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> hexs = [a.toString(<span class=\"number\">16</span>), b.toString(<span class=\"number\">16</span>), c.toString(<span class=\"number\">16</span>)]</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (hexs[i].length === <span class=\"number\">1</span>) hexs[i] = <span class=\"string\">'0'</span> + hexs[i]</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'#'</span> + hexs.join(<span class=\"string\">''</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">    getDarkColor(color, level) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> rgbc = <span class=\"keyword\">this</span>.HexToRgb(color)</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</div><div class=\"line\">            rgbc[i] = <span class=\"built_in\">Math</span>.floor(rgbc[i] * (<span class=\"number\">1</span> - level))</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.RgbToHex(rgbc[<span class=\"number\">0</span>], rgbc[<span class=\"number\">1</span>], rgbc[<span class=\"number\">2</span>])</div><div class=\"line\">    &#125;</div><div class=\"line\">    getLightColor(color, level) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> rgbc = <span class=\"keyword\">this</span>.HexToRgb(color)</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</div><div class=\"line\">            rgbc[i] = <span class=\"built_in\">Math</span>.floor((<span class=\"number\">255</span> - rgbc[i]) * level + rgbc[i])</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.RgbToHex(rgbc[<span class=\"number\">0</span>], rgbc[<span class=\"number\">1</span>], rgbc[<span class=\"number\">2</span>])</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> colorFn = <span class=\"keyword\">new</span> Color()</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">//colorFn.getDarkColor('#6CA3EF', 0.1)</span></div></pre></figure>\n"},{"title":"ES5中的继承","date":"2019-02-10T16:00:00.000Z","keywords":"JS类, JS继承, JavaScript","description":"JavaScript中继承的实现，包括类式继承、构造函数继承、组合继承、原型式继承、寄生式继承、寄生组合式继承","_content":"\n## 类式继承\n\n将父类的实例赋值给子类的原型。实例化父类时，新创建的对象复制了父类构造函数的属性和方法，并且将\\_\\_proto\\_\\_指向了父类的原型，即拥有了父类原型上的共有属性和方法。\n\n``` JavaScript\n// 声明父类\nfunction SuperClass() {\n    this.superValue = true\n}\n\n// 为父类添加共有方法\nSuperClass.prototype.getSuperValue = function() {\n    return this.superValue\n}\n\n// 声明子类\nfunction SubClass() {\n    this.subValue = false\n}\n\n// 继承父类\nSubClass.prototype = new SuperClass()\n\n// 为子类添加共有方法\nSubClass.prototype.getSubValue = function() {\n    return this.subValue\n}\n\n// 使用\nvar subInstance = new SubClass()\nconsole.log(subInstance.getSuperValue()) // true\nconsole.log(subInstance.getSubValue()) // false\n\n// 对象的prototype链关系\nconsole.log(subInstance instanceof SuperClass) // true\nconsole.log(subInstance instanceof SubClass) // true\nconsole.log(SubClass.prototype instanceof SuperClass) // true\n```\n\n类式继承的缺点，一是不同子类实例对从父类构造函数继承来的引用类型属性的更改会互相影响；二是子类实例化时无法向父类传参。\n\n## 构造函数继承\n\n通过在子类的构造函数作用环境中执行父类的构造函数实现。JS的call方法可以更改函数的作用环境，在子类中对父类调用此方法，即将子类的this给父类使用，由于父类是给this绑定属性和方法的，因此子类自然也就继承了父类构造函数中的属性和方法。\n\n``` JavaScript\n// 声明父类\nfunction SuperClass(id) {\n    this.id = id\n    this.books = ['JavaScript', 'HTML', 'CSS']\n}\n\n// 父类原型方法\nSuperClass.prototype.showBooks = function() {\n    console.log(this.books)\n}\n\n// 声明子类\nfunction SubClass(id) {\n    // 继承父类\n    SuperClass.call(this, id)\n}\n```\n\n构造函数继承没有涉及prototype，父类的原型属性和方法不会被继承，想要被子类继承就必须要放在构造函数中，这样创建出来的每个实例都会单独拥有一份，违背了代码复用的原则。\n\n## 组合继承\n\n组合使用类式继承和构造函数继承，扬长避短。\n\n``` JavaScript\n// 声明父类\nfunction SuperClass(name) {\n    this.name = name\n    this.books = ['JavaScript', 'HTML', 'CSS']\n}\n\n// 父类原型方法\nSuperClass.prototype.getName = function() {\n    return this.name\n}\n\n// 声明子类\nfunction SubClass(name, time) {\n    // 构造函数式继承父类\n    SuperClass.call(this, name)\n    // 子类新增属性\n    this.time = time\n}\n\n// 类式继承父类\nSubClass.prototype = new SuperClass()\n\n// 子类原型方法\nSubClass.prototype.getTime = function() {\n    return this.time\n}\n```\n\n组合继承的不完美之处在于，使用构造函数继承时执行了一遍父类的构造函数，而在实现类式继承时又重复调用了一遍。\n\n## 原型式继承\n\n借助原型prototype根据已有对象创建新对象。\n\n``` JavaScript\nfunction inheritObject(o) {\n    // 声明一个过渡函数对象\n    function F() {}\n    // 过渡对象的原型继承父对象\n    F.prototype = o\n    return new F()\n}\n\n// 使用\nvar book = {\n    name: 'JavaScript',\n    alikeBooks: ['HTML', 'CSS']\n}\n\nvar newBook = inheritObject(book)\nnewBook.name = 'Canvas'\nnewBook.alikeBooks.push('SVG')\n```\n\n上面函数中的过渡对象F相当于继承中的子类，由于F的构造函数中无内容，开销比较小。缺点是父类对象的引用类型属性会被共用。\n\n## 寄生式继承\n\n对原型式继承的二次封装，在封装过程中对继承的对象进行了拓展，添加了新的属性和方法。\n\n``` JavaScript\nfunction createBook(obj) {\n    // 原型式继承\n    var o = new inheritObject(obj)\n    // 拓展新对象\n    o.getName = function() {\n        return this.name\n    }\n    return o\n}\n```\n\n## 寄生组合式继承\n\n``` JavaScript\nfunction inheritPrototype(subClass, superClass) {\n    // 复制一份父类的原型副本保存在变量中\n    var p = inheritObject(superClass.prototype)\n    // 修正子类的constructor\n    p.constructor = subClass\n    // 设置子类原型\n    subClass.prototype = p\n}\n\n// 定义父类\nfunction SuperClass(name) {\n    this.name = name\n    this.colors = ['red', 'blue', 'green']\n}\n\n// 定义父类原型方法\nSuperClass.prototype.getName = function() {\n    return this.name\n}\n\n// 定义子类\nfunction SubClass(name, time) {\n    // 构造函数式继承\n    SuperClass.call(this, name)\n    // 子类新增属性\n    this.time = time\n}\n\n// 寄生式继承父类原型\ninheritPrototype(SubClass, SuperClass)\n\n// 子类新增原型方法\nSubClass.prototype.getTime = function() {\n    return this.time\n}\n```\n\n<cite>参考：《JavaScript设计模式》</cite>\n","source":"_posts/es5-inheritance.md","raw":"---\ntitle: ES5中的继承\ndate: 2019-02-11 00:00:00\ncategories: JavaScript\nkeywords: JS类, JS继承, JavaScript\ndescription: JavaScript中继承的实现，包括类式继承、构造函数继承、组合继承、原型式继承、寄生式继承、寄生组合式继承\n---\n\n## 类式继承\n\n将父类的实例赋值给子类的原型。实例化父类时，新创建的对象复制了父类构造函数的属性和方法，并且将\\_\\_proto\\_\\_指向了父类的原型，即拥有了父类原型上的共有属性和方法。\n\n``` JavaScript\n// 声明父类\nfunction SuperClass() {\n    this.superValue = true\n}\n\n// 为父类添加共有方法\nSuperClass.prototype.getSuperValue = function() {\n    return this.superValue\n}\n\n// 声明子类\nfunction SubClass() {\n    this.subValue = false\n}\n\n// 继承父类\nSubClass.prototype = new SuperClass()\n\n// 为子类添加共有方法\nSubClass.prototype.getSubValue = function() {\n    return this.subValue\n}\n\n// 使用\nvar subInstance = new SubClass()\nconsole.log(subInstance.getSuperValue()) // true\nconsole.log(subInstance.getSubValue()) // false\n\n// 对象的prototype链关系\nconsole.log(subInstance instanceof SuperClass) // true\nconsole.log(subInstance instanceof SubClass) // true\nconsole.log(SubClass.prototype instanceof SuperClass) // true\n```\n\n类式继承的缺点，一是不同子类实例对从父类构造函数继承来的引用类型属性的更改会互相影响；二是子类实例化时无法向父类传参。\n\n## 构造函数继承\n\n通过在子类的构造函数作用环境中执行父类的构造函数实现。JS的call方法可以更改函数的作用环境，在子类中对父类调用此方法，即将子类的this给父类使用，由于父类是给this绑定属性和方法的，因此子类自然也就继承了父类构造函数中的属性和方法。\n\n``` JavaScript\n// 声明父类\nfunction SuperClass(id) {\n    this.id = id\n    this.books = ['JavaScript', 'HTML', 'CSS']\n}\n\n// 父类原型方法\nSuperClass.prototype.showBooks = function() {\n    console.log(this.books)\n}\n\n// 声明子类\nfunction SubClass(id) {\n    // 继承父类\n    SuperClass.call(this, id)\n}\n```\n\n构造函数继承没有涉及prototype，父类的原型属性和方法不会被继承，想要被子类继承就必须要放在构造函数中，这样创建出来的每个实例都会单独拥有一份，违背了代码复用的原则。\n\n## 组合继承\n\n组合使用类式继承和构造函数继承，扬长避短。\n\n``` JavaScript\n// 声明父类\nfunction SuperClass(name) {\n    this.name = name\n    this.books = ['JavaScript', 'HTML', 'CSS']\n}\n\n// 父类原型方法\nSuperClass.prototype.getName = function() {\n    return this.name\n}\n\n// 声明子类\nfunction SubClass(name, time) {\n    // 构造函数式继承父类\n    SuperClass.call(this, name)\n    // 子类新增属性\n    this.time = time\n}\n\n// 类式继承父类\nSubClass.prototype = new SuperClass()\n\n// 子类原型方法\nSubClass.prototype.getTime = function() {\n    return this.time\n}\n```\n\n组合继承的不完美之处在于，使用构造函数继承时执行了一遍父类的构造函数，而在实现类式继承时又重复调用了一遍。\n\n## 原型式继承\n\n借助原型prototype根据已有对象创建新对象。\n\n``` JavaScript\nfunction inheritObject(o) {\n    // 声明一个过渡函数对象\n    function F() {}\n    // 过渡对象的原型继承父对象\n    F.prototype = o\n    return new F()\n}\n\n// 使用\nvar book = {\n    name: 'JavaScript',\n    alikeBooks: ['HTML', 'CSS']\n}\n\nvar newBook = inheritObject(book)\nnewBook.name = 'Canvas'\nnewBook.alikeBooks.push('SVG')\n```\n\n上面函数中的过渡对象F相当于继承中的子类，由于F的构造函数中无内容，开销比较小。缺点是父类对象的引用类型属性会被共用。\n\n## 寄生式继承\n\n对原型式继承的二次封装，在封装过程中对继承的对象进行了拓展，添加了新的属性和方法。\n\n``` JavaScript\nfunction createBook(obj) {\n    // 原型式继承\n    var o = new inheritObject(obj)\n    // 拓展新对象\n    o.getName = function() {\n        return this.name\n    }\n    return o\n}\n```\n\n## 寄生组合式继承\n\n``` JavaScript\nfunction inheritPrototype(subClass, superClass) {\n    // 复制一份父类的原型副本保存在变量中\n    var p = inheritObject(superClass.prototype)\n    // 修正子类的constructor\n    p.constructor = subClass\n    // 设置子类原型\n    subClass.prototype = p\n}\n\n// 定义父类\nfunction SuperClass(name) {\n    this.name = name\n    this.colors = ['red', 'blue', 'green']\n}\n\n// 定义父类原型方法\nSuperClass.prototype.getName = function() {\n    return this.name\n}\n\n// 定义子类\nfunction SubClass(name, time) {\n    // 构造函数式继承\n    SuperClass.call(this, name)\n    // 子类新增属性\n    this.time = time\n}\n\n// 寄生式继承父类原型\ninheritPrototype(SubClass, SuperClass)\n\n// 子类新增原型方法\nSubClass.prototype.getTime = function() {\n    return this.time\n}\n```\n\n<cite>参考：《JavaScript设计模式》</cite>\n","slug":"es5-inheritance","published":1,"updated":"2019-07-01T04:57:03.078Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emy0000e3a8if4vt7d4k","content":"<h2 id=\"类式继承\"><a href=\"#类式继承\" class=\"headerlink\" title=\"类式继承\"></a>类式继承</h2><p>将父类的实例赋值给子类的原型。实例化父类时，新创建的对象复制了父类构造函数的属性和方法，并且将__proto__指向了父类的原型，即拥有了父类原型上的共有属性和方法。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// 声明父类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperClass</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.superValue = <span class=\"literal\">true</span></div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 为父类添加共有方法</span></div><div class=\"line\">SuperClass.prototype.getSuperValue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.superValue</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 声明子类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubClass</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.subValue = <span class=\"literal\">false</span></div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 继承父类</span></div><div class=\"line\">SubClass.prototype = <span class=\"keyword\">new</span> SuperClass()</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 为子类添加共有方法</span></div><div class=\"line\">SubClass.prototype.getSubValue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.subValue</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 使用</span></div><div class=\"line\"><span class=\"keyword\">var</span> subInstance = <span class=\"keyword\">new</span> SubClass()</div><div class=\"line\"><span class=\"built_in\">console</span>.log(subInstance.getSuperValue()) <span class=\"comment\">// true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(subInstance.getSubValue()) <span class=\"comment\">// false</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 对象的prototype链关系</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(subInstance <span class=\"keyword\">instanceof</span> SuperClass) <span class=\"comment\">// true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(subInstance <span class=\"keyword\">instanceof</span> SubClass) <span class=\"comment\">// true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(SubClass.prototype <span class=\"keyword\">instanceof</span> SuperClass) <span class=\"comment\">// true</span></div></pre></figure>\n<p>类式继承的缺点，一是不同子类实例对从父类构造函数继承来的引用类型属性的更改会互相影响；二是子类实例化时无法向父类传参。</p>\n<h2 id=\"构造函数继承\"><a href=\"#构造函数继承\" class=\"headerlink\" title=\"构造函数继承\"></a>构造函数继承</h2><p>通过在子类的构造函数作用环境中执行父类的构造函数实现。JS的call方法可以更改函数的作用环境，在子类中对父类调用此方法，即将子类的this给父类使用，由于父类是给this绑定属性和方法的，因此子类自然也就继承了父类构造函数中的属性和方法。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// 声明父类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperClass</span>(<span class=\"params\">id</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.id = id</div><div class=\"line\">    <span class=\"keyword\">this</span>.books = [<span class=\"string\">'JavaScript'</span>, <span class=\"string\">'HTML'</span>, <span class=\"string\">'CSS'</span>]</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 父类原型方法</span></div><div class=\"line\">SuperClass.prototype.showBooks = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.books)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 声明子类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubClass</span>(<span class=\"params\">id</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 继承父类</span></div><div class=\"line\">    SuperClass.call(<span class=\"keyword\">this</span>, id)</div><div class=\"line\">&#125;</div></pre></figure>\n<p>构造函数继承没有涉及prototype，父类的原型属性和方法不会被继承，想要被子类继承就必须要放在构造函数中，这样创建出来的每个实例都会单独拥有一份，违背了代码复用的原则。</p>\n<h2 id=\"组合继承\"><a href=\"#组合继承\" class=\"headerlink\" title=\"组合继承\"></a>组合继承</h2><p>组合使用类式继承和构造函数继承，扬长避短。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// 声明父类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperClass</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name</div><div class=\"line\">    <span class=\"keyword\">this</span>.books = [<span class=\"string\">'JavaScript'</span>, <span class=\"string\">'HTML'</span>, <span class=\"string\">'CSS'</span>]</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 父类原型方法</span></div><div class=\"line\">SuperClass.prototype.getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 声明子类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubClass</span>(<span class=\"params\">name, time</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 构造函数式继承父类</span></div><div class=\"line\">    SuperClass.call(<span class=\"keyword\">this</span>, name)</div><div class=\"line\">    <span class=\"comment\">// 子类新增属性</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.time = time</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 类式继承父类</span></div><div class=\"line\">SubClass.prototype = <span class=\"keyword\">new</span> SuperClass()</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 子类原型方法</span></div><div class=\"line\">SubClass.prototype.getTime = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.time</div><div class=\"line\">&#125;</div></pre></figure>\n<p>组合继承的不完美之处在于，使用构造函数继承时执行了一遍父类的构造函数，而在实现类式继承时又重复调用了一遍。</p>\n<h2 id=\"原型式继承\"><a href=\"#原型式继承\" class=\"headerlink\" title=\"原型式继承\"></a>原型式继承</h2><p>借助原型prototype根据已有对象创建新对象。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inheritObject</span>(<span class=\"params\">o</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 声明一个过渡函数对象</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span>(<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">    <span class=\"comment\">// 过渡对象的原型继承父对象</span></div><div class=\"line\">    F.prototype = o</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F()</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 使用</span></div><div class=\"line\"><span class=\"keyword\">var</span> book = &#123;</div><div class=\"line\">    name: <span class=\"string\">'JavaScript'</span>,</div><div class=\"line\">    alikeBooks: [<span class=\"string\">'HTML'</span>, <span class=\"string\">'CSS'</span>]</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">var</span> newBook = inheritObject(book)</div><div class=\"line\">newBook.name = <span class=\"string\">'Canvas'</span></div><div class=\"line\">newBook.alikeBooks.push(<span class=\"string\">'SVG'</span>)</div></pre></figure>\n<p>上面函数中的过渡对象F相当于继承中的子类，由于F的构造函数中无内容，开销比较小。缺点是父类对象的引用类型属性会被共用。</p>\n<h2 id=\"寄生式继承\"><a href=\"#寄生式继承\" class=\"headerlink\" title=\"寄生式继承\"></a>寄生式继承</h2><p>对原型式继承的二次封装，在封装过程中对继承的对象进行了拓展，添加了新的属性和方法。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createBook</span>(<span class=\"params\">obj</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 原型式继承</span></div><div class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> inheritObject(obj)</div><div class=\"line\">    <span class=\"comment\">// 拓展新对象</span></div><div class=\"line\">    o.getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> o</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"寄生组合式继承\"><a href=\"#寄生组合式继承\" class=\"headerlink\" title=\"寄生组合式继承\"></a>寄生组合式继承</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inheritPrototype</span>(<span class=\"params\">subClass, superClass</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 复制一份父类的原型副本保存在变量中</span></div><div class=\"line\">    <span class=\"keyword\">var</span> p = inheritObject(superClass.prototype)</div><div class=\"line\">    <span class=\"comment\">// 修正子类的constructor</span></div><div class=\"line\">    p.constructor = subClass</div><div class=\"line\">    <span class=\"comment\">// 设置子类原型</span></div><div class=\"line\">    subClass.prototype = p</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 定义父类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperClass</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name</div><div class=\"line\">    <span class=\"keyword\">this</span>.colors = [<span class=\"string\">'red'</span>, <span class=\"string\">'blue'</span>, <span class=\"string\">'green'</span>]</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 定义父类原型方法</span></div><div class=\"line\">SuperClass.prototype.getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 定义子类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubClass</span>(<span class=\"params\">name, time</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 构造函数式继承</span></div><div class=\"line\">    SuperClass.call(<span class=\"keyword\">this</span>, name)</div><div class=\"line\">    <span class=\"comment\">// 子类新增属性</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.time = time</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 寄生式继承父类原型</span></div><div class=\"line\">inheritPrototype(SubClass, SuperClass)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 子类新增原型方法</span></div><div class=\"line\">SubClass.prototype.getTime = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.time</div><div class=\"line\">&#125;</div></pre></figure>\n<p><cite>参考：《JavaScript设计模式》</cite></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"类式继承\"><a href=\"#类式继承\" class=\"headerlink\" title=\"类式继承\"></a>类式继承</h2><p>将父类的实例赋值给子类的原型。实例化父类时，新创建的对象复制了父类构造函数的属性和方法，并且将__proto__指向了父类的原型，即拥有了父类原型上的共有属性和方法。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// 声明父类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperClass</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.superValue = <span class=\"literal\">true</span></div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 为父类添加共有方法</span></div><div class=\"line\">SuperClass.prototype.getSuperValue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.superValue</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 声明子类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubClass</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.subValue = <span class=\"literal\">false</span></div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 继承父类</span></div><div class=\"line\">SubClass.prototype = <span class=\"keyword\">new</span> SuperClass()</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 为子类添加共有方法</span></div><div class=\"line\">SubClass.prototype.getSubValue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.subValue</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 使用</span></div><div class=\"line\"><span class=\"keyword\">var</span> subInstance = <span class=\"keyword\">new</span> SubClass()</div><div class=\"line\"><span class=\"built_in\">console</span>.log(subInstance.getSuperValue()) <span class=\"comment\">// true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(subInstance.getSubValue()) <span class=\"comment\">// false</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 对象的prototype链关系</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(subInstance <span class=\"keyword\">instanceof</span> SuperClass) <span class=\"comment\">// true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(subInstance <span class=\"keyword\">instanceof</span> SubClass) <span class=\"comment\">// true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(SubClass.prototype <span class=\"keyword\">instanceof</span> SuperClass) <span class=\"comment\">// true</span></div></pre></figure>\n<p>类式继承的缺点，一是不同子类实例对从父类构造函数继承来的引用类型属性的更改会互相影响；二是子类实例化时无法向父类传参。</p>\n<h2 id=\"构造函数继承\"><a href=\"#构造函数继承\" class=\"headerlink\" title=\"构造函数继承\"></a>构造函数继承</h2><p>通过在子类的构造函数作用环境中执行父类的构造函数实现。JS的call方法可以更改函数的作用环境，在子类中对父类调用此方法，即将子类的this给父类使用，由于父类是给this绑定属性和方法的，因此子类自然也就继承了父类构造函数中的属性和方法。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// 声明父类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperClass</span>(<span class=\"params\">id</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.id = id</div><div class=\"line\">    <span class=\"keyword\">this</span>.books = [<span class=\"string\">'JavaScript'</span>, <span class=\"string\">'HTML'</span>, <span class=\"string\">'CSS'</span>]</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 父类原型方法</span></div><div class=\"line\">SuperClass.prototype.showBooks = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.books)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 声明子类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubClass</span>(<span class=\"params\">id</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 继承父类</span></div><div class=\"line\">    SuperClass.call(<span class=\"keyword\">this</span>, id)</div><div class=\"line\">&#125;</div></pre></figure>\n<p>构造函数继承没有涉及prototype，父类的原型属性和方法不会被继承，想要被子类继承就必须要放在构造函数中，这样创建出来的每个实例都会单独拥有一份，违背了代码复用的原则。</p>\n<h2 id=\"组合继承\"><a href=\"#组合继承\" class=\"headerlink\" title=\"组合继承\"></a>组合继承</h2><p>组合使用类式继承和构造函数继承，扬长避短。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// 声明父类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperClass</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name</div><div class=\"line\">    <span class=\"keyword\">this</span>.books = [<span class=\"string\">'JavaScript'</span>, <span class=\"string\">'HTML'</span>, <span class=\"string\">'CSS'</span>]</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 父类原型方法</span></div><div class=\"line\">SuperClass.prototype.getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 声明子类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubClass</span>(<span class=\"params\">name, time</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 构造函数式继承父类</span></div><div class=\"line\">    SuperClass.call(<span class=\"keyword\">this</span>, name)</div><div class=\"line\">    <span class=\"comment\">// 子类新增属性</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.time = time</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 类式继承父类</span></div><div class=\"line\">SubClass.prototype = <span class=\"keyword\">new</span> SuperClass()</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 子类原型方法</span></div><div class=\"line\">SubClass.prototype.getTime = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.time</div><div class=\"line\">&#125;</div></pre></figure>\n<p>组合继承的不完美之处在于，使用构造函数继承时执行了一遍父类的构造函数，而在实现类式继承时又重复调用了一遍。</p>\n<h2 id=\"原型式继承\"><a href=\"#原型式继承\" class=\"headerlink\" title=\"原型式继承\"></a>原型式继承</h2><p>借助原型prototype根据已有对象创建新对象。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inheritObject</span>(<span class=\"params\">o</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 声明一个过渡函数对象</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span>(<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">    <span class=\"comment\">// 过渡对象的原型继承父对象</span></div><div class=\"line\">    F.prototype = o</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F()</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 使用</span></div><div class=\"line\"><span class=\"keyword\">var</span> book = &#123;</div><div class=\"line\">    name: <span class=\"string\">'JavaScript'</span>,</div><div class=\"line\">    alikeBooks: [<span class=\"string\">'HTML'</span>, <span class=\"string\">'CSS'</span>]</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">var</span> newBook = inheritObject(book)</div><div class=\"line\">newBook.name = <span class=\"string\">'Canvas'</span></div><div class=\"line\">newBook.alikeBooks.push(<span class=\"string\">'SVG'</span>)</div></pre></figure>\n<p>上面函数中的过渡对象F相当于继承中的子类，由于F的构造函数中无内容，开销比较小。缺点是父类对象的引用类型属性会被共用。</p>\n<h2 id=\"寄生式继承\"><a href=\"#寄生式继承\" class=\"headerlink\" title=\"寄生式继承\"></a>寄生式继承</h2><p>对原型式继承的二次封装，在封装过程中对继承的对象进行了拓展，添加了新的属性和方法。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createBook</span>(<span class=\"params\">obj</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 原型式继承</span></div><div class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> inheritObject(obj)</div><div class=\"line\">    <span class=\"comment\">// 拓展新对象</span></div><div class=\"line\">    o.getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> o</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"寄生组合式继承\"><a href=\"#寄生组合式继承\" class=\"headerlink\" title=\"寄生组合式继承\"></a>寄生组合式继承</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inheritPrototype</span>(<span class=\"params\">subClass, superClass</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 复制一份父类的原型副本保存在变量中</span></div><div class=\"line\">    <span class=\"keyword\">var</span> p = inheritObject(superClass.prototype)</div><div class=\"line\">    <span class=\"comment\">// 修正子类的constructor</span></div><div class=\"line\">    p.constructor = subClass</div><div class=\"line\">    <span class=\"comment\">// 设置子类原型</span></div><div class=\"line\">    subClass.prototype = p</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 定义父类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperClass</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name</div><div class=\"line\">    <span class=\"keyword\">this</span>.colors = [<span class=\"string\">'red'</span>, <span class=\"string\">'blue'</span>, <span class=\"string\">'green'</span>]</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 定义父类原型方法</span></div><div class=\"line\">SuperClass.prototype.getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 定义子类</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubClass</span>(<span class=\"params\">name, time</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 构造函数式继承</span></div><div class=\"line\">    SuperClass.call(<span class=\"keyword\">this</span>, name)</div><div class=\"line\">    <span class=\"comment\">// 子类新增属性</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.time = time</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 寄生式继承父类原型</span></div><div class=\"line\">inheritPrototype(SubClass, SuperClass)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 子类新增原型方法</span></div><div class=\"line\">SubClass.prototype.getTime = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.time</div><div class=\"line\">&#125;</div></pre></figure>\n<p><cite>参考：《JavaScript设计模式》</cite></p>\n"},{"title":"EventEmitter自定义事件监听器","date":"2019-03-31T16:00:00.000Z","keywords":"event emitter, JavaScript","description":"监听自定义事件on，只触发一次之后移除监听器once，移除off，触发emit，清除所有自定义事件clean","_content":"\n小巧的自定义事件系统：监听自定义事件on，只触发一次之后移除监听器once，移除off，触发emit，清除所有自定义事件clean。\n\n``` JavaScript\nclass EventEmitter {\n    constructor() {\n        this._events = Object.create(null)\n    }\n\n    on(name, cb) {\n        if (!name || !cb) return\n\n        let cbs = this._events[name] = this._events[name] || []\n        cbs.indexOf(cb) === -1 && cbs.push(cb)\n\n        return this\n    }\n\n    off(name, cb) {\n        if (!name || !cb) return\n        let cbs = this._events[name]\n        if (!cbs || !cbs.length) return\n\n        const index = cbs.indexOf(cb)\n        if (index !== -1) cbs.splice(index, 1)\n\n        return this\n    }\n\n    once(name, cb) {\n        if (!name || !cb) return\n\n        let fired = false\n\n        function magic() {\n            this.off(name, magic)\n\n            if (!fired) {\n                fired = true\n                cb.apply(this, arguments)\n            }\n        }\n\n        this.on(name, magic)\n\n        return this\n    }\n\n    emit(name) {\n        if (!name) return\n\n        const args = [].slice.call(arguments, 1)\n        const cbs = this._events[name] || []\n\n        for (let i = 0, l = cbs.length; i < l; i++) {\n            cbs[i].apply(this, args)\n        }\n\n        return this\n    }\n\n    clean() {\n        delete this._events\n    }\n}\n\nexport default EventEmitter\n```\n","source":"_posts/event-emitter.md","raw":"---\ntitle: EventEmitter自定义事件监听器\ndate: 2019-04-01 00:00:00\ncategories: Code Snippets\nkeywords: event emitter, JavaScript\ndescription: 监听自定义事件on，只触发一次之后移除监听器once，移除off，触发emit，清除所有自定义事件clean\n---\n\n小巧的自定义事件系统：监听自定义事件on，只触发一次之后移除监听器once，移除off，触发emit，清除所有自定义事件clean。\n\n``` JavaScript\nclass EventEmitter {\n    constructor() {\n        this._events = Object.create(null)\n    }\n\n    on(name, cb) {\n        if (!name || !cb) return\n\n        let cbs = this._events[name] = this._events[name] || []\n        cbs.indexOf(cb) === -1 && cbs.push(cb)\n\n        return this\n    }\n\n    off(name, cb) {\n        if (!name || !cb) return\n        let cbs = this._events[name]\n        if (!cbs || !cbs.length) return\n\n        const index = cbs.indexOf(cb)\n        if (index !== -1) cbs.splice(index, 1)\n\n        return this\n    }\n\n    once(name, cb) {\n        if (!name || !cb) return\n\n        let fired = false\n\n        function magic() {\n            this.off(name, magic)\n\n            if (!fired) {\n                fired = true\n                cb.apply(this, arguments)\n            }\n        }\n\n        this.on(name, magic)\n\n        return this\n    }\n\n    emit(name) {\n        if (!name) return\n\n        const args = [].slice.call(arguments, 1)\n        const cbs = this._events[name] || []\n\n        for (let i = 0, l = cbs.length; i < l; i++) {\n            cbs[i].apply(this, args)\n        }\n\n        return this\n    }\n\n    clean() {\n        delete this._events\n    }\n}\n\nexport default EventEmitter\n```\n","slug":"event-emitter","published":1,"updated":"2019-04-01T02:59:45.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emy3000h3a8ibs0e7t8h","content":"<p>小巧的自定义事件系统：监听自定义事件on，只触发一次之后移除监听器once，移除off，触发emit，清除所有自定义事件clean。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EventEmitter</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._events = <span class=\"built_in\">Object</span>.create(<span class=\"literal\">null</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    on(name, cb) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!name || !cb) <span class=\"keyword\">return</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">let</span> cbs = <span class=\"keyword\">this</span>._events[name] = <span class=\"keyword\">this</span>._events[name] || []</div><div class=\"line\">        cbs.indexOf(cb) === <span class=\"number\">-1</span> &amp;&amp; cbs.push(cb)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    off(name, cb) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!name || !cb) <span class=\"keyword\">return</span></div><div class=\"line\">        <span class=\"keyword\">let</span> cbs = <span class=\"keyword\">this</span>._events[name]</div><div class=\"line\">        <span class=\"keyword\">if</span> (!cbs || !cbs.length) <span class=\"keyword\">return</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> index = cbs.indexOf(cb)</div><div class=\"line\">        <span class=\"keyword\">if</span> (index !== <span class=\"number\">-1</span>) cbs.splice(index, <span class=\"number\">1</span>)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    once(name, cb) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!name || !cb) <span class=\"keyword\">return</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">let</span> fired = <span class=\"literal\">false</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">magic</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.off(name, magic)</div><div class=\"line\"><br></div><div class=\"line\">            <span class=\"keyword\">if</span> (!fired) &#123;</div><div class=\"line\">                fired = <span class=\"literal\">true</span></div><div class=\"line\">                cb.apply(<span class=\"keyword\">this</span>, <span class=\"built_in\">arguments</span>)</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.on(name, magic)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    emit(name) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!name) <span class=\"keyword\">return</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> args = [].slice.call(<span class=\"built_in\">arguments</span>, <span class=\"number\">1</span>)</div><div class=\"line\">        <span class=\"keyword\">const</span> cbs = <span class=\"keyword\">this</span>._events[name] || []</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, l = cbs.length; i &lt; l; i++) &#123;</div><div class=\"line\">            cbs[i].apply(<span class=\"keyword\">this</span>, args)</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    clean() &#123;</div><div class=\"line\">        <span class=\"keyword\">delete</span> <span class=\"keyword\">this</span>._events</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> EventEmitter</div></pre></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>小巧的自定义事件系统：监听自定义事件on，只触发一次之后移除监听器once，移除off，触发emit，清除所有自定义事件clean。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EventEmitter</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._events = <span class=\"built_in\">Object</span>.create(<span class=\"literal\">null</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    on(name, cb) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!name || !cb) <span class=\"keyword\">return</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">let</span> cbs = <span class=\"keyword\">this</span>._events[name] = <span class=\"keyword\">this</span>._events[name] || []</div><div class=\"line\">        cbs.indexOf(cb) === <span class=\"number\">-1</span> &amp;&amp; cbs.push(cb)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    off(name, cb) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!name || !cb) <span class=\"keyword\">return</span></div><div class=\"line\">        <span class=\"keyword\">let</span> cbs = <span class=\"keyword\">this</span>._events[name]</div><div class=\"line\">        <span class=\"keyword\">if</span> (!cbs || !cbs.length) <span class=\"keyword\">return</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> index = cbs.indexOf(cb)</div><div class=\"line\">        <span class=\"keyword\">if</span> (index !== <span class=\"number\">-1</span>) cbs.splice(index, <span class=\"number\">1</span>)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    once(name, cb) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!name || !cb) <span class=\"keyword\">return</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">let</span> fired = <span class=\"literal\">false</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">magic</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.off(name, magic)</div><div class=\"line\"><br></div><div class=\"line\">            <span class=\"keyword\">if</span> (!fired) &#123;</div><div class=\"line\">                fired = <span class=\"literal\">true</span></div><div class=\"line\">                cb.apply(<span class=\"keyword\">this</span>, <span class=\"built_in\">arguments</span>)</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.on(name, magic)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    emit(name) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!name) <span class=\"keyword\">return</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> args = [].slice.call(<span class=\"built_in\">arguments</span>, <span class=\"number\">1</span>)</div><div class=\"line\">        <span class=\"keyword\">const</span> cbs = <span class=\"keyword\">this</span>._events[name] || []</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, l = cbs.length; i &lt; l; i++) &#123;</div><div class=\"line\">            cbs[i].apply(<span class=\"keyword\">this</span>, args)</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    clean() &#123;</div><div class=\"line\">        <span class=\"keyword\">delete</span> <span class=\"keyword\">this</span>._events</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> EventEmitter</div></pre></figure>\n"},{"title":"Flash动画基础班教学笔记（零） - 课程安排","date":"2012-07-26T16:00:00.000Z","keywords":"Flash动画","description":"Flash动画基础课程目的是用20个课时，帮助学生理解Flash动画的基本原理，通过尽量多的实例操作上手Flash软件","_content":"\n最近的业余时间在一家培训学校带了3个班的Flash动画基础课程，把教学笔记稍微整理一下。这个基础课程目的是用20个课时，帮助学生理解Flash动画的基本原理，通过尽量多的实例操作上手Flash软件。下面是具体课程安排：\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th width=\"40\">课时</th>\n\t\t\t<th colspan=\"2\">课程内容</th>\n\t\t\t<th>实例操作</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>初识Flash</td>\n\t\t\t<td>Flash8软件简介（软件发展、功能、特征）<br>\n\t\t\tFlash8操作环境（软件各面板功能及操作）<br>\n\t\t\tFlash基本概念（时间轴、图层、元件、库）</td>\n\t\t\t<td>篮球小动画<br>\n\t\t\t化蛹成蝶动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash绘图</td>\n\t\t\t<td>选择工具（选择、部分选取、套索）<br>\n\t\t\t绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）<br>\n\t\t\t着色工具（墨水瓶、颜料桶、滴管）<br>\n\t\t\t变形工具（任意变形、填充变形）<br>\n\t\t\t橡皮擦工具（不同擦除模式）</td>\n\t\t\t<td>爱心绘制<br>\n\t\t\t雪人绘制</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash核心动画</td>\n\t\t\t<td>逐帧动画<br>\n\t\t\t动作补间动画<br>\n\t\t\t形状补间动画<br>\n\t\t\t添加使用声音</td>\n\t\t\t<td>狂笑动画<br>\n\t\t\t不倒翁动画<br>\n\t\t\t文字飞入动画<br>\n\t\t\t救护车停车动画<br>\n\t\t\t机器人遭雷击动画<br>\n\t\t\t闪光文字动画<br>\n\t\t\t文字书写动画<br>\n\t\t\t范冰冰开口动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash进阶动画</td>\n\t\t\t<td>引导层动画<br>\n\t\t\t遮罩（蒙版）动画<br>\n\t\t\tFlash按钮制作</td>\n\t\t\t<td>童年的纸飞机动画<br>\n\t\t\t跑圈小破孩动画<br>\n\t\t\t光泽掠过文字动画<br>\n\t\t\t画卷展开动画<br>\n\t\t\t玻璃质感按钮<br>\n\t\t\t运送苹果动画<br>\n\t\t\t地图放大镜动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash简单动作编程</td>\n\t\t\t<td>Action Script（时间轴控制、浏览器/网络、按钮行为等）</td>\n\t\t\t<td>淘宝Tab标签广告<br>\n\t\t\t简易Flash网站</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash应用实例</td>\n\t\t\t<td>课程大作业</td>\n\t\t\t<td>根据不同学生具体需求有针对性地设计</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash深入</td>\n\t\t\t<td>课程大作业验收<br>\n\t\t\tFlash的三维实现<br>\n\t\t\tFlash官方实例（拖动/碰撞、阴影和速度感、组件）<br>\n\t\t\t其他（Flash反编译、替换鼠标、翻页等）</td>\n\t\t\t<td>三维文字动画<br>\n\t\t\t拖动投篮编程<br>\n\t\t\t拍球动画<br>\n\t\t\t带滚动条的文本框<br>\n\t\t\t动态鼠标和下拉菜单</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n","source":"_posts/flash0.md","raw":"---\ntitle: Flash动画基础班教学笔记（零） - 课程安排\ndate: 2012-07-27 00:00:00\ncategories: Uncategorized\nkeywords: Flash动画\ndescription: Flash动画基础课程目的是用20个课时，帮助学生理解Flash动画的基本原理，通过尽量多的实例操作上手Flash软件\n---\n\n最近的业余时间在一家培训学校带了3个班的Flash动画基础课程，把教学笔记稍微整理一下。这个基础课程目的是用20个课时，帮助学生理解Flash动画的基本原理，通过尽量多的实例操作上手Flash软件。下面是具体课程安排：\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th width=\"40\">课时</th>\n\t\t\t<th colspan=\"2\">课程内容</th>\n\t\t\t<th>实例操作</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>初识Flash</td>\n\t\t\t<td>Flash8软件简介（软件发展、功能、特征）<br>\n\t\t\tFlash8操作环境（软件各面板功能及操作）<br>\n\t\t\tFlash基本概念（时间轴、图层、元件、库）</td>\n\t\t\t<td>篮球小动画<br>\n\t\t\t化蛹成蝶动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash绘图</td>\n\t\t\t<td>选择工具（选择、部分选取、套索）<br>\n\t\t\t绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）<br>\n\t\t\t着色工具（墨水瓶、颜料桶、滴管）<br>\n\t\t\t变形工具（任意变形、填充变形）<br>\n\t\t\t橡皮擦工具（不同擦除模式）</td>\n\t\t\t<td>爱心绘制<br>\n\t\t\t雪人绘制</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash核心动画</td>\n\t\t\t<td>逐帧动画<br>\n\t\t\t动作补间动画<br>\n\t\t\t形状补间动画<br>\n\t\t\t添加使用声音</td>\n\t\t\t<td>狂笑动画<br>\n\t\t\t不倒翁动画<br>\n\t\t\t文字飞入动画<br>\n\t\t\t救护车停车动画<br>\n\t\t\t机器人遭雷击动画<br>\n\t\t\t闪光文字动画<br>\n\t\t\t文字书写动画<br>\n\t\t\t范冰冰开口动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash进阶动画</td>\n\t\t\t<td>引导层动画<br>\n\t\t\t遮罩（蒙版）动画<br>\n\t\t\tFlash按钮制作</td>\n\t\t\t<td>童年的纸飞机动画<br>\n\t\t\t跑圈小破孩动画<br>\n\t\t\t光泽掠过文字动画<br>\n\t\t\t画卷展开动画<br>\n\t\t\t玻璃质感按钮<br>\n\t\t\t运送苹果动画<br>\n\t\t\t地图放大镜动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash简单动作编程</td>\n\t\t\t<td>Action Script（时间轴控制、浏览器/网络、按钮行为等）</td>\n\t\t\t<td>淘宝Tab标签广告<br>\n\t\t\t简易Flash网站</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash应用实例</td>\n\t\t\t<td>课程大作业</td>\n\t\t\t<td>根据不同学生具体需求有针对性地设计</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash深入</td>\n\t\t\t<td>课程大作业验收<br>\n\t\t\tFlash的三维实现<br>\n\t\t\tFlash官方实例（拖动/碰撞、阴影和速度感、组件）<br>\n\t\t\t其他（Flash反编译、替换鼠标、翻页等）</td>\n\t\t\t<td>三维文字动画<br>\n\t\t\t拖动投篮编程<br>\n\t\t\t拍球动画<br>\n\t\t\t带滚动条的文本框<br>\n\t\t\t动态鼠标和下拉菜单</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n","slug":"flash0","published":1,"updated":"2018-12-03T02:28:52.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emy4000i3a8ikxm8rzwb","content":"<p>最近的业余时间在一家培训学校带了3个班的Flash动画基础课程，把教学笔记稍微整理一下。这个基础课程目的是用20个课时，帮助学生理解Flash动画的基本原理，通过尽量多的实例操作上手Flash软件。下面是具体课程安排：</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th width=\"40\">课时</th>\n\t\t\t<th colspan=\"2\">课程内容</th>\n\t\t\t<th>实例操作</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>初识Flash</td>\n\t\t\t<td>Flash8软件简介（软件发展、功能、特征）<br>\n\t\t\tFlash8操作环境（软件各面板功能及操作）<br>\n\t\t\tFlash基本概念（时间轴、图层、元件、库）</td>\n\t\t\t<td>篮球小动画<br>\n\t\t\t化蛹成蝶动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash绘图</td>\n\t\t\t<td>选择工具（选择、部分选取、套索）<br>\n\t\t\t绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）<br>\n\t\t\t着色工具（墨水瓶、颜料桶、滴管）<br>\n\t\t\t变形工具（任意变形、填充变形）<br>\n\t\t\t橡皮擦工具（不同擦除模式）</td>\n\t\t\t<td>爱心绘制<br>\n\t\t\t雪人绘制</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash核心动画</td>\n\t\t\t<td>逐帧动画<br>\n\t\t\t动作补间动画<br>\n\t\t\t形状补间动画<br>\n\t\t\t添加使用声音</td>\n\t\t\t<td>狂笑动画<br>\n\t\t\t不倒翁动画<br>\n\t\t\t文字飞入动画<br>\n\t\t\t救护车停车动画<br>\n\t\t\t机器人遭雷击动画<br>\n\t\t\t闪光文字动画<br>\n\t\t\t文字书写动画<br>\n\t\t\t范冰冰开口动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash进阶动画</td>\n\t\t\t<td>引导层动画<br>\n\t\t\t遮罩（蒙版）动画<br>\n\t\t\tFlash按钮制作</td>\n\t\t\t<td>童年的纸飞机动画<br>\n\t\t\t跑圈小破孩动画<br>\n\t\t\t光泽掠过文字动画<br>\n\t\t\t画卷展开动画<br>\n\t\t\t玻璃质感按钮<br>\n\t\t\t运送苹果动画<br>\n\t\t\t地图放大镜动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash简单动作编程</td>\n\t\t\t<td>Action Script（时间轴控制、浏览器/网络、按钮行为等）</td>\n\t\t\t<td>淘宝Tab标签广告<br>\n\t\t\t简易Flash网站</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash应用实例</td>\n\t\t\t<td>课程大作业</td>\n\t\t\t<td>根据不同学生具体需求有针对性地设计</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash深入</td>\n\t\t\t<td>课程大作业验收<br>\n\t\t\tFlash的三维实现<br>\n\t\t\tFlash官方实例（拖动/碰撞、阴影和速度感、组件）<br>\n\t\t\t其他（Flash反编译、替换鼠标、翻页等）</td>\n\t\t\t<td>三维文字动画<br>\n\t\t\t拖动投篮编程<br>\n\t\t\t拍球动画<br>\n\t\t\t带滚动条的文本框<br>\n\t\t\t动态鼠标和下拉菜单</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n","site":{"data":{}},"excerpt":"","more":"<p>最近的业余时间在一家培训学校带了3个班的Flash动画基础课程，把教学笔记稍微整理一下。这个基础课程目的是用20个课时，帮助学生理解Flash动画的基本原理，通过尽量多的实例操作上手Flash软件。下面是具体课程安排：</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th width=\"40\">课时</th>\n\t\t\t<th colspan=\"2\">课程内容</th>\n\t\t\t<th>实例操作</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>初识Flash</td>\n\t\t\t<td>Flash8软件简介（软件发展、功能、特征）<br>\n\t\t\tFlash8操作环境（软件各面板功能及操作）<br>\n\t\t\tFlash基本概念（时间轴、图层、元件、库）</td>\n\t\t\t<td>篮球小动画<br>\n\t\t\t化蛹成蝶动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash绘图</td>\n\t\t\t<td>选择工具（选择、部分选取、套索）<br>\n\t\t\t绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）<br>\n\t\t\t着色工具（墨水瓶、颜料桶、滴管）<br>\n\t\t\t变形工具（任意变形、填充变形）<br>\n\t\t\t橡皮擦工具（不同擦除模式）</td>\n\t\t\t<td>爱心绘制<br>\n\t\t\t雪人绘制</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash核心动画</td>\n\t\t\t<td>逐帧动画<br>\n\t\t\t动作补间动画<br>\n\t\t\t形状补间动画<br>\n\t\t\t添加使用声音</td>\n\t\t\t<td>狂笑动画<br>\n\t\t\t不倒翁动画<br>\n\t\t\t文字飞入动画<br>\n\t\t\t救护车停车动画<br>\n\t\t\t机器人遭雷击动画<br>\n\t\t\t闪光文字动画<br>\n\t\t\t文字书写动画<br>\n\t\t\t范冰冰开口动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash进阶动画</td>\n\t\t\t<td>引导层动画<br>\n\t\t\t遮罩（蒙版）动画<br>\n\t\t\tFlash按钮制作</td>\n\t\t\t<td>童年的纸飞机动画<br>\n\t\t\t跑圈小破孩动画<br>\n\t\t\t光泽掠过文字动画<br>\n\t\t\t画卷展开动画<br>\n\t\t\t玻璃质感按钮<br>\n\t\t\t运送苹果动画<br>\n\t\t\t地图放大镜动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash简单动作编程</td>\n\t\t\t<td>Action Script（时间轴控制、浏览器/网络、按钮行为等）</td>\n\t\t\t<td>淘宝Tab标签广告<br>\n\t\t\t简易Flash网站</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Flash应用实例</td>\n\t\t\t<td>课程大作业</td>\n\t\t\t<td>根据不同学生具体需求有针对性地设计</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Flash深入</td>\n\t\t\t<td>课程大作业验收<br>\n\t\t\tFlash的三维实现<br>\n\t\t\tFlash官方实例（拖动/碰撞、阴影和速度感、组件）<br>\n\t\t\t其他（Flash反编译、替换鼠标、翻页等）</td>\n\t\t\t<td>三维文字动画<br>\n\t\t\t拖动投篮编程<br>\n\t\t\t拍球动画<br>\n\t\t\t带滚动条的文本框<br>\n\t\t\t动态鼠标和下拉菜单</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n"},{"title":"Flash动画基础班教学笔记（一） – 初识Flash","date":"2012-08-01T16:00:00.000Z","keywords":"Flash基础, Flash动画","description":"Flash8软件发展、功能、特征，软件各面板功能及操作，时间轴、图层、元件、库等基本概念","_content":"\n## Flash8软件简介（软件发展、功能、特征）\n\nFlash软件的发展\n\n{% img /images/flash/flash11.jpg 275 %}\n\n1995年，Jonathan Gay设计了矢量动画软件Future Splash Animator，1996年被Macromedia收购后更名为Flash，之后发布一系列版本，功能日渐强大，2005年发布完最后一个版本Flash8.0后被Adobe收购，现在最新版本为Adobe Flash CS6 Professional。\n\nFlash软件1997、98年传入中国并广泛传播，之后出现闪客帝国、闪吧等几个国内闪客聚集的网站，大批闪客制作出颇高水准的动画，其中代表闪客及作品有：老蒋《强盗的天堂》、小小动画系列、林℃《重爱轻友》、卜桦《猫》等。同时，Flash商业化制作团队出现，比如ShowGood《大话三国》、拾荒《小破孩》、创梦数码《大话李白》，以及飞鸟、思妙、中华轩等等。\n\nFlash的主要功能\n\n- 动画：广告、贺卡、MTV\n- 游戏：网页游戏、手机小游戏\n- 网站：Flash按钮、Flash导航、Flash整站\n- 其他：在线电子杂志、教学课件\n\nFlash动画的优势\n\n- 矢量动画、占用存储空间小\n- 兼容性好、浏览器均可播放\n- 富因特网应用、多媒体、交互式\n\nFlash的文件格式\n\n- 原始文件.fla：可用Flash软件编辑的原始文件\n- 动画文件.swf：.fla文件编译后生成的最终动画文件\n\n本课程使用的Flash版本\n\n- Flash8：省资源、易上手、最经典\n\n## Flash8操作环境（软件各面板功能及操作）\n\n- 左侧 工具箱：绘图和编辑工具\n- 上方 时间轴：动画过程中随时间变化的序列\n- 中部 编辑区：编辑和播放动画的区域\n- 下方 属性面板：显示当前选用工具相应的设置\n- 右侧 浮动面板：查看、组织、更改文档中动画元素的参数\n\n## Flash基本概念（时间轴、图层、元件、库）\n\n{% img /images/flash/flash12.jpg 275 %}\n\n时间轴：动画过程中随时间变化的序列；\n帧：进行flash动画制作最基本的时间单位。\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>名称</th>\n            <th>概念</th>\n            <th>快捷键</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>普通帧</td>\n            <td>能显示动画元素，但不能对元素进行编辑操作</td>\n            <td>F5</td>\n        </tr>\n        <tr>\n            <td>关键帧</td>\n            <td>定义动画变化、更改元素状态，可对元素进行编辑</td>\n            <td>F6</td>\n        </tr>\n        <tr>\n            <td>空白关键帧</td>\n            <td>没有包含任何元素的关键帧</td>\n            <td>F7</td>\n        </tr>\n    </tbody>\n</table>\n{% endraw %}\n\n图层：在不同图层上绘制和编辑对象，各图层独立存在，互不影响。\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n            <th>名称</th>\n            <th>概念</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>普通图层</td>\n            <td>&nbsp;</td>\n        </tr>\n        <tr>\n            <td>引导层</td>\n            <td>指定元件运动路径</td>\n        </tr>\n        <tr>\n            <td>被引导层</td>\n            <td>被引导层控制的层</td>\n        </tr>\n        <tr>\n            <td>未使用的引导层</td>\n            <td>无被引导层的引导层</td>\n        </tr>\n        <tr>\n            <td>遮罩层</td>\n            <td>显示被遮部分，隐藏其余部分</td>\n        </tr>\n        <tr>\n            <td>被遮罩层</td>\n            <td>被遮罩层控制的层</td>\n        </tr>\n    </tbody>\n</table>\n{% endraw %}\n\n元件：构成Flash动画最基本最核心的元素；\n库：储存着文档所有元件与素材。\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n            <th>名称</th>\n            <th>概念</th>\n            <th>区别及特点</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>影片剪辑</td>\n            <td>构成动画的片段</td>\n            <td rowspan=\"3\">1. 影剪播放独立于时间轴，图形播放与时间轴同步；<br>\n            2. 影剪可设置实例名称、滤镜、混合，图形则不可；<br>\n            3. 影剪和按钮中可包含声音，图形则不可；<br>\n            4. 图形可设置播放方式，影剪只从第一帧开始循环播放；<br>\n            5. 影剪在场景中测试看不到播放效果，图形则所见即所得；<br>\n            6. 按钮时间线只有4帧，不自动播放。</td>\n        </tr>\n        <tr>\n            <td>图形</td>\n            <td>构成动画的元素</td>\n        </tr>\n        <tr>\n            <td>按钮</td>\n            <td>响应鼠标的元件</td>\n        </tr>\n    </tbody>\n</table>\n{% endraw %}\n","source":"_posts/flash1.md","raw":"---\ntitle: Flash动画基础班教学笔记（一） – 初识Flash\ndate: 2012-08-02 00:00:00\ncategories: Uncategorized\nkeywords: Flash基础, Flash动画\ndescription: Flash8软件发展、功能、特征，软件各面板功能及操作，时间轴、图层、元件、库等基本概念\n---\n\n## Flash8软件简介（软件发展、功能、特征）\n\nFlash软件的发展\n\n{% img /images/flash/flash11.jpg 275 %}\n\n1995年，Jonathan Gay设计了矢量动画软件Future Splash Animator，1996年被Macromedia收购后更名为Flash，之后发布一系列版本，功能日渐强大，2005年发布完最后一个版本Flash8.0后被Adobe收购，现在最新版本为Adobe Flash CS6 Professional。\n\nFlash软件1997、98年传入中国并广泛传播，之后出现闪客帝国、闪吧等几个国内闪客聚集的网站，大批闪客制作出颇高水准的动画，其中代表闪客及作品有：老蒋《强盗的天堂》、小小动画系列、林℃《重爱轻友》、卜桦《猫》等。同时，Flash商业化制作团队出现，比如ShowGood《大话三国》、拾荒《小破孩》、创梦数码《大话李白》，以及飞鸟、思妙、中华轩等等。\n\nFlash的主要功能\n\n- 动画：广告、贺卡、MTV\n- 游戏：网页游戏、手机小游戏\n- 网站：Flash按钮、Flash导航、Flash整站\n- 其他：在线电子杂志、教学课件\n\nFlash动画的优势\n\n- 矢量动画、占用存储空间小\n- 兼容性好、浏览器均可播放\n- 富因特网应用、多媒体、交互式\n\nFlash的文件格式\n\n- 原始文件.fla：可用Flash软件编辑的原始文件\n- 动画文件.swf：.fla文件编译后生成的最终动画文件\n\n本课程使用的Flash版本\n\n- Flash8：省资源、易上手、最经典\n\n## Flash8操作环境（软件各面板功能及操作）\n\n- 左侧 工具箱：绘图和编辑工具\n- 上方 时间轴：动画过程中随时间变化的序列\n- 中部 编辑区：编辑和播放动画的区域\n- 下方 属性面板：显示当前选用工具相应的设置\n- 右侧 浮动面板：查看、组织、更改文档中动画元素的参数\n\n## Flash基本概念（时间轴、图层、元件、库）\n\n{% img /images/flash/flash12.jpg 275 %}\n\n时间轴：动画过程中随时间变化的序列；\n帧：进行flash动画制作最基本的时间单位。\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>名称</th>\n            <th>概念</th>\n            <th>快捷键</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>普通帧</td>\n            <td>能显示动画元素，但不能对元素进行编辑操作</td>\n            <td>F5</td>\n        </tr>\n        <tr>\n            <td>关键帧</td>\n            <td>定义动画变化、更改元素状态，可对元素进行编辑</td>\n            <td>F6</td>\n        </tr>\n        <tr>\n            <td>空白关键帧</td>\n            <td>没有包含任何元素的关键帧</td>\n            <td>F7</td>\n        </tr>\n    </tbody>\n</table>\n{% endraw %}\n\n图层：在不同图层上绘制和编辑对象，各图层独立存在，互不影响。\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n            <th>名称</th>\n            <th>概念</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>普通图层</td>\n            <td>&nbsp;</td>\n        </tr>\n        <tr>\n            <td>引导层</td>\n            <td>指定元件运动路径</td>\n        </tr>\n        <tr>\n            <td>被引导层</td>\n            <td>被引导层控制的层</td>\n        </tr>\n        <tr>\n            <td>未使用的引导层</td>\n            <td>无被引导层的引导层</td>\n        </tr>\n        <tr>\n            <td>遮罩层</td>\n            <td>显示被遮部分，隐藏其余部分</td>\n        </tr>\n        <tr>\n            <td>被遮罩层</td>\n            <td>被遮罩层控制的层</td>\n        </tr>\n    </tbody>\n</table>\n{% endraw %}\n\n元件：构成Flash动画最基本最核心的元素；\n库：储存着文档所有元件与素材。\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n            <th>名称</th>\n            <th>概念</th>\n            <th>区别及特点</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>影片剪辑</td>\n            <td>构成动画的片段</td>\n            <td rowspan=\"3\">1. 影剪播放独立于时间轴，图形播放与时间轴同步；<br>\n            2. 影剪可设置实例名称、滤镜、混合，图形则不可；<br>\n            3. 影剪和按钮中可包含声音，图形则不可；<br>\n            4. 图形可设置播放方式，影剪只从第一帧开始循环播放；<br>\n            5. 影剪在场景中测试看不到播放效果，图形则所见即所得；<br>\n            6. 按钮时间线只有4帧，不自动播放。</td>\n        </tr>\n        <tr>\n            <td>图形</td>\n            <td>构成动画的元素</td>\n        </tr>\n        <tr>\n            <td>按钮</td>\n            <td>响应鼠标的元件</td>\n        </tr>\n    </tbody>\n</table>\n{% endraw %}\n","slug":"flash1","published":1,"updated":"2018-12-03T02:28:52.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emy5000l3a8i4bw9mfue","content":"<h2 id=\"Flash8软件简介（软件发展、功能、特征）\"><a href=\"#Flash8软件简介（软件发展、功能、特征）\" class=\"headerlink\" title=\"Flash8软件简介（软件发展、功能、特征）\"></a>Flash8软件简介（软件发展、功能、特征）</h2><p>Flash软件的发展</p>\n<img src=\"/images/flash/flash11.jpg\" width=\"275\">\n<p>1995年，Jonathan Gay设计了矢量动画软件Future Splash Animator，1996年被Macromedia收购后更名为Flash，之后发布一系列版本，功能日渐强大，2005年发布完最后一个版本Flash8.0后被Adobe收购，现在最新版本为Adobe Flash CS6 Professional。</p>\n<p>Flash软件1997、98年传入中国并广泛传播，之后出现闪客帝国、闪吧等几个国内闪客聚集的网站，大批闪客制作出颇高水准的动画，其中代表闪客及作品有：老蒋《强盗的天堂》、小小动画系列、林℃《重爱轻友》、卜桦《猫》等。同时，Flash商业化制作团队出现，比如ShowGood《大话三国》、拾荒《小破孩》、创梦数码《大话李白》，以及飞鸟、思妙、中华轩等等。</p>\n<p>Flash的主要功能</p>\n<ul>\n<li>动画：广告、贺卡、MTV</li>\n<li>游戏：网页游戏、手机小游戏</li>\n<li>网站：Flash按钮、Flash导航、Flash整站</li>\n<li>其他：在线电子杂志、教学课件</li>\n</ul>\n<p>Flash动画的优势</p>\n<ul>\n<li>矢量动画、占用存储空间小</li>\n<li>兼容性好、浏览器均可播放</li>\n<li>富因特网应用、多媒体、交互式</li>\n</ul>\n<p>Flash的文件格式</p>\n<ul>\n<li>原始文件.fla：可用Flash软件编辑的原始文件</li>\n<li>动画文件.swf：.fla文件编译后生成的最终动画文件</li>\n</ul>\n<p>本课程使用的Flash版本</p>\n<ul>\n<li>Flash8：省资源、易上手、最经典</li>\n</ul>\n<h2 id=\"Flash8操作环境（软件各面板功能及操作）\"><a href=\"#Flash8操作环境（软件各面板功能及操作）\" class=\"headerlink\" title=\"Flash8操作环境（软件各面板功能及操作）\"></a>Flash8操作环境（软件各面板功能及操作）</h2><ul>\n<li>左侧 工具箱：绘图和编辑工具</li>\n<li>上方 时间轴：动画过程中随时间变化的序列</li>\n<li>中部 编辑区：编辑和播放动画的区域</li>\n<li>下方 属性面板：显示当前选用工具相应的设置</li>\n<li>右侧 浮动面板：查看、组织、更改文档中动画元素的参数</li>\n</ul>\n<h2 id=\"Flash基本概念（时间轴、图层、元件、库）\"><a href=\"#Flash基本概念（时间轴、图层、元件、库）\" class=\"headerlink\" title=\"Flash基本概念（时间轴、图层、元件、库）\"></a>Flash基本概念（时间轴、图层、元件、库）</h2><img src=\"/images/flash/flash12.jpg\" width=\"275\">\n<p>时间轴：动画过程中随时间变化的序列；<br>帧：进行flash动画制作最基本的时间单位。</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>名称</th>\n            <th>概念</th>\n            <th>快捷键</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>普通帧</td>\n            <td>能显示动画元素，但不能对元素进行编辑操作</td>\n            <td>F5</td>\n        </tr>\n        <tr>\n            <td>关键帧</td>\n            <td>定义动画变化、更改元素状态，可对元素进行编辑</td>\n            <td>F6</td>\n        </tr>\n        <tr>\n            <td>空白关键帧</td>\n            <td>没有包含任何元素的关键帧</td>\n            <td>F7</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>图层：在不同图层上绘制和编辑对象，各图层独立存在，互不影响。</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n            <th>名称</th>\n            <th>概念</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>普通图层</td>\n            <td>&nbsp;</td>\n        </tr>\n        <tr>\n            <td>引导层</td>\n            <td>指定元件运动路径</td>\n        </tr>\n        <tr>\n            <td>被引导层</td>\n            <td>被引导层控制的层</td>\n        </tr>\n        <tr>\n            <td>未使用的引导层</td>\n            <td>无被引导层的引导层</td>\n        </tr>\n        <tr>\n            <td>遮罩层</td>\n            <td>显示被遮部分，隐藏其余部分</td>\n        </tr>\n        <tr>\n            <td>被遮罩层</td>\n            <td>被遮罩层控制的层</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>元件：构成Flash动画最基本最核心的元素；<br>库：储存着文档所有元件与素材。</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n            <th>名称</th>\n            <th>概念</th>\n            <th>区别及特点</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>影片剪辑</td>\n            <td>构成动画的片段</td>\n            <td rowspan=\"3\">1. 影剪播放独立于时间轴，图形播放与时间轴同步；<br>\n            2. 影剪可设置实例名称、滤镜、混合，图形则不可；<br>\n            3. 影剪和按钮中可包含声音，图形则不可；<br>\n            4. 图形可设置播放方式，影剪只从第一帧开始循环播放；<br>\n            5. 影剪在场景中测试看不到播放效果，图形则所见即所得；<br>\n            6. 按钮时间线只有4帧，不自动播放。</td>\n        </tr>\n        <tr>\n            <td>图形</td>\n            <td>构成动画的元素</td>\n        </tr>\n        <tr>\n            <td>按钮</td>\n            <td>响应鼠标的元件</td>\n        </tr>\n    </tbody>\n</table>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Flash8软件简介（软件发展、功能、特征）\"><a href=\"#Flash8软件简介（软件发展、功能、特征）\" class=\"headerlink\" title=\"Flash8软件简介（软件发展、功能、特征）\"></a>Flash8软件简介（软件发展、功能、特征）</h2><p>Flash软件的发展</p>\n<img src=\"/images/flash/flash11.jpg\" width=\"275\">\n<p>1995年，Jonathan Gay设计了矢量动画软件Future Splash Animator，1996年被Macromedia收购后更名为Flash，之后发布一系列版本，功能日渐强大，2005年发布完最后一个版本Flash8.0后被Adobe收购，现在最新版本为Adobe Flash CS6 Professional。</p>\n<p>Flash软件1997、98年传入中国并广泛传播，之后出现闪客帝国、闪吧等几个国内闪客聚集的网站，大批闪客制作出颇高水准的动画，其中代表闪客及作品有：老蒋《强盗的天堂》、小小动画系列、林℃《重爱轻友》、卜桦《猫》等。同时，Flash商业化制作团队出现，比如ShowGood《大话三国》、拾荒《小破孩》、创梦数码《大话李白》，以及飞鸟、思妙、中华轩等等。</p>\n<p>Flash的主要功能</p>\n<ul>\n<li>动画：广告、贺卡、MTV</li>\n<li>游戏：网页游戏、手机小游戏</li>\n<li>网站：Flash按钮、Flash导航、Flash整站</li>\n<li>其他：在线电子杂志、教学课件</li>\n</ul>\n<p>Flash动画的优势</p>\n<ul>\n<li>矢量动画、占用存储空间小</li>\n<li>兼容性好、浏览器均可播放</li>\n<li>富因特网应用、多媒体、交互式</li>\n</ul>\n<p>Flash的文件格式</p>\n<ul>\n<li>原始文件.fla：可用Flash软件编辑的原始文件</li>\n<li>动画文件.swf：.fla文件编译后生成的最终动画文件</li>\n</ul>\n<p>本课程使用的Flash版本</p>\n<ul>\n<li>Flash8：省资源、易上手、最经典</li>\n</ul>\n<h2 id=\"Flash8操作环境（软件各面板功能及操作）\"><a href=\"#Flash8操作环境（软件各面板功能及操作）\" class=\"headerlink\" title=\"Flash8操作环境（软件各面板功能及操作）\"></a>Flash8操作环境（软件各面板功能及操作）</h2><ul>\n<li>左侧 工具箱：绘图和编辑工具</li>\n<li>上方 时间轴：动画过程中随时间变化的序列</li>\n<li>中部 编辑区：编辑和播放动画的区域</li>\n<li>下方 属性面板：显示当前选用工具相应的设置</li>\n<li>右侧 浮动面板：查看、组织、更改文档中动画元素的参数</li>\n</ul>\n<h2 id=\"Flash基本概念（时间轴、图层、元件、库）\"><a href=\"#Flash基本概念（时间轴、图层、元件、库）\" class=\"headerlink\" title=\"Flash基本概念（时间轴、图层、元件、库）\"></a>Flash基本概念（时间轴、图层、元件、库）</h2><img src=\"/images/flash/flash12.jpg\" width=\"275\">\n<p>时间轴：动画过程中随时间变化的序列；<br>帧：进行flash动画制作最基本的时间单位。</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>名称</th>\n            <th>概念</th>\n            <th>快捷键</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>普通帧</td>\n            <td>能显示动画元素，但不能对元素进行编辑操作</td>\n            <td>F5</td>\n        </tr>\n        <tr>\n            <td>关键帧</td>\n            <td>定义动画变化、更改元素状态，可对元素进行编辑</td>\n            <td>F6</td>\n        </tr>\n        <tr>\n            <td>空白关键帧</td>\n            <td>没有包含任何元素的关键帧</td>\n            <td>F7</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>图层：在不同图层上绘制和编辑对象，各图层独立存在，互不影响。</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n            <th>名称</th>\n            <th>概念</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>普通图层</td>\n            <td>&nbsp;</td>\n        </tr>\n        <tr>\n            <td>引导层</td>\n            <td>指定元件运动路径</td>\n        </tr>\n        <tr>\n            <td>被引导层</td>\n            <td>被引导层控制的层</td>\n        </tr>\n        <tr>\n            <td>未使用的引导层</td>\n            <td>无被引导层的引导层</td>\n        </tr>\n        <tr>\n            <td>遮罩层</td>\n            <td>显示被遮部分，隐藏其余部分</td>\n        </tr>\n        <tr>\n            <td>被遮罩层</td>\n            <td>被遮罩层控制的层</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>元件：构成Flash动画最基本最核心的元素；<br>库：储存着文档所有元件与素材。</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n            <th>名称</th>\n            <th>概念</th>\n            <th>区别及特点</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>影片剪辑</td>\n            <td>构成动画的片段</td>\n            <td rowspan=\"3\">1. 影剪播放独立于时间轴，图形播放与时间轴同步；<br>\n            2. 影剪可设置实例名称、滤镜、混合，图形则不可；<br>\n            3. 影剪和按钮中可包含声音，图形则不可；<br>\n            4. 图形可设置播放方式，影剪只从第一帧开始循环播放；<br>\n            5. 影剪在场景中测试看不到播放效果，图形则所见即所得；<br>\n            6. 按钮时间线只有4帧，不自动播放。</td>\n        </tr>\n        <tr>\n            <td>图形</td>\n            <td>构成动画的元素</td>\n        </tr>\n        <tr>\n            <td>按钮</td>\n            <td>响应鼠标的元件</td>\n        </tr>\n    </tbody>\n</table>\n\n"},{"title":"Flash动画基础班教学笔记（二） – Flash绘图","date":"2012-08-02T16:00:00.000Z","keywords":"Flash绘图, Flash动画","description":"Flash绘图的选择工具、绘图工具、着色工具、变形工具、橡皮擦工具","_content":"\n## 选择工具（选择、部分选取、套索）\n\n选择\n\n1. 选择后可拖动\n2. 按Alt拖动为复制\n3. 按Shift可多选\n4. 可框选\n5. 双击填充添加选择边框\n6. 双击线条选择与其连接的其他线条\n\n- 端点处改位置\n- 边上改形状\n\n部分选取\n\n1. 拖动曲线节点\n2. 按Alt可改变曲线节点\n\n## 绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）\n\n线条\n\n- 极细直线不缩放\n\n钢笔\n\n- 编辑 》首选参数 》绘画 》显示钢笔预览\n\n椭圆、矩形\n\n1. 按Shift画正圆、正方形\n2. 按Alt从中心开始画\n\n铅笔、刷子\n\n- 铅笔画线条\n- 刷子画填充\n\n## 着色工具（墨水瓶、颜料桶、滴管）\n\n- 墨水瓶改变线条颜色\n- 颜料桶改变填充颜色\n- 滴管用来取色\n\n## 变形工具（任意变形、填充变形）\n\n- 填充变形用来调整渐变填充颜色\n\n## 橡皮擦工具（不同擦除模式）\n","source":"_posts/flash2.md","raw":"---\ntitle: Flash动画基础班教学笔记（二） – Flash绘图\ndate: 2012-08-03 00:00:00\ncategories: Uncategorized\nkeywords: Flash绘图, Flash动画\ndescription: Flash绘图的选择工具、绘图工具、着色工具、变形工具、橡皮擦工具\n---\n\n## 选择工具（选择、部分选取、套索）\n\n选择\n\n1. 选择后可拖动\n2. 按Alt拖动为复制\n3. 按Shift可多选\n4. 可框选\n5. 双击填充添加选择边框\n6. 双击线条选择与其连接的其他线条\n\n- 端点处改位置\n- 边上改形状\n\n部分选取\n\n1. 拖动曲线节点\n2. 按Alt可改变曲线节点\n\n## 绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）\n\n线条\n\n- 极细直线不缩放\n\n钢笔\n\n- 编辑 》首选参数 》绘画 》显示钢笔预览\n\n椭圆、矩形\n\n1. 按Shift画正圆、正方形\n2. 按Alt从中心开始画\n\n铅笔、刷子\n\n- 铅笔画线条\n- 刷子画填充\n\n## 着色工具（墨水瓶、颜料桶、滴管）\n\n- 墨水瓶改变线条颜色\n- 颜料桶改变填充颜色\n- 滴管用来取色\n\n## 变形工具（任意变形、填充变形）\n\n- 填充变形用来调整渐变填充颜色\n\n## 橡皮擦工具（不同擦除模式）\n","slug":"flash2","published":1,"updated":"2018-12-03T02:28:52.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emy6000n3a8isietmzod","content":"<h2 id=\"选择工具（选择、部分选取、套索）\"><a href=\"#选择工具（选择、部分选取、套索）\" class=\"headerlink\" title=\"选择工具（选择、部分选取、套索）\"></a>选择工具（选择、部分选取、套索）</h2><p>选择</p>\n<ol>\n<li>选择后可拖动</li>\n<li>按Alt拖动为复制</li>\n<li>按Shift可多选</li>\n<li>可框选</li>\n<li>双击填充添加选择边框</li>\n<li>双击线条选择与其连接的其他线条</li>\n</ol>\n<ul>\n<li>端点处改位置</li>\n<li>边上改形状</li>\n</ul>\n<p>部分选取</p>\n<ol>\n<li>拖动曲线节点</li>\n<li>按Alt可改变曲线节点</li>\n</ol>\n<h2 id=\"绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）\"><a href=\"#绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）\" class=\"headerlink\" title=\"绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）\"></a>绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）</h2><p>线条</p>\n<ul>\n<li>极细直线不缩放</li>\n</ul>\n<p>钢笔</p>\n<ul>\n<li>编辑 》首选参数 》绘画 》显示钢笔预览</li>\n</ul>\n<p>椭圆、矩形</p>\n<ol>\n<li>按Shift画正圆、正方形</li>\n<li>按Alt从中心开始画</li>\n</ol>\n<p>铅笔、刷子</p>\n<ul>\n<li>铅笔画线条</li>\n<li>刷子画填充</li>\n</ul>\n<h2 id=\"着色工具（墨水瓶、颜料桶、滴管）\"><a href=\"#着色工具（墨水瓶、颜料桶、滴管）\" class=\"headerlink\" title=\"着色工具（墨水瓶、颜料桶、滴管）\"></a>着色工具（墨水瓶、颜料桶、滴管）</h2><ul>\n<li>墨水瓶改变线条颜色</li>\n<li>颜料桶改变填充颜色</li>\n<li>滴管用来取色</li>\n</ul>\n<h2 id=\"变形工具（任意变形、填充变形）\"><a href=\"#变形工具（任意变形、填充变形）\" class=\"headerlink\" title=\"变形工具（任意变形、填充变形）\"></a>变形工具（任意变形、填充变形）</h2><ul>\n<li>填充变形用来调整渐变填充颜色</li>\n</ul>\n<h2 id=\"橡皮擦工具（不同擦除模式）\"><a href=\"#橡皮擦工具（不同擦除模式）\" class=\"headerlink\" title=\"橡皮擦工具（不同擦除模式）\"></a>橡皮擦工具（不同擦除模式）</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"选择工具（选择、部分选取、套索）\"><a href=\"#选择工具（选择、部分选取、套索）\" class=\"headerlink\" title=\"选择工具（选择、部分选取、套索）\"></a>选择工具（选择、部分选取、套索）</h2><p>选择</p>\n<ol>\n<li>选择后可拖动</li>\n<li>按Alt拖动为复制</li>\n<li>按Shift可多选</li>\n<li>可框选</li>\n<li>双击填充添加选择边框</li>\n<li>双击线条选择与其连接的其他线条</li>\n</ol>\n<ul>\n<li>端点处改位置</li>\n<li>边上改形状</li>\n</ul>\n<p>部分选取</p>\n<ol>\n<li>拖动曲线节点</li>\n<li>按Alt可改变曲线节点</li>\n</ol>\n<h2 id=\"绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）\"><a href=\"#绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）\" class=\"headerlink\" title=\"绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）\"></a>绘图工具（线条、钢笔、椭圆、矩形、铅笔、刷子）</h2><p>线条</p>\n<ul>\n<li>极细直线不缩放</li>\n</ul>\n<p>钢笔</p>\n<ul>\n<li>编辑 》首选参数 》绘画 》显示钢笔预览</li>\n</ul>\n<p>椭圆、矩形</p>\n<ol>\n<li>按Shift画正圆、正方形</li>\n<li>按Alt从中心开始画</li>\n</ol>\n<p>铅笔、刷子</p>\n<ul>\n<li>铅笔画线条</li>\n<li>刷子画填充</li>\n</ul>\n<h2 id=\"着色工具（墨水瓶、颜料桶、滴管）\"><a href=\"#着色工具（墨水瓶、颜料桶、滴管）\" class=\"headerlink\" title=\"着色工具（墨水瓶、颜料桶、滴管）\"></a>着色工具（墨水瓶、颜料桶、滴管）</h2><ul>\n<li>墨水瓶改变线条颜色</li>\n<li>颜料桶改变填充颜色</li>\n<li>滴管用来取色</li>\n</ul>\n<h2 id=\"变形工具（任意变形、填充变形）\"><a href=\"#变形工具（任意变形、填充变形）\" class=\"headerlink\" title=\"变形工具（任意变形、填充变形）\"></a>变形工具（任意变形、填充变形）</h2><ul>\n<li>填充变形用来调整渐变填充颜色</li>\n</ul>\n<h2 id=\"橡皮擦工具（不同擦除模式）\"><a href=\"#橡皮擦工具（不同擦除模式）\" class=\"headerlink\" title=\"橡皮擦工具（不同擦除模式）\"></a>橡皮擦工具（不同擦除模式）</h2>"},{"title":"Flash动画基础班教学笔记（三） – Flash核心动画","date":"2012-08-03T16:00:00.000Z","keywords":"Flash核心动画, Flash动画","description":"Flash逐帧动画、动作补间动画和形状补间动画","_content":"\n{% img /images/flash/flash31.gif 275 %}\n\n逐帧动画，即分解动画动作，在时间轴的动画帧上逐帧绘制不同的内容，连续播放形成动画效果。常用来表现人物身体动作或其他复杂动画效果。\n\n动作补间动画和形状补间动画是Flash中最基本的两种动画，在关键帧上改变动画元素，动画的中间过渡状态由软件自动生成，下表为二者区别：\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>&nbsp;</th>\n\t\t\t<th>动作补间</th>\n\t\t\t<th>形状补间</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>概念</strong></td>\n\t\t\t<td>在一个关键帧中设置一个元件，然后在另外一个关键帧改变这个元件的大小、颜色、位置、透明度等，FLASH据二者间形状创建的动画</td>\n\t\t\t<td>在一个关键帧中绘制一个形状，然后在另外一个关键帧更改或绘制另一个形状，FLASH据二者间形状创建的动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td rowspan=\"2\"><strong>组成元素</strong></td>\n\t\t\t<td>元件（包括影片剪辑、图形、按钮），文字，位图，组合</td>\n\t\t\t<td>形状</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>不能使用形状，只有把形状“组合”或转化成“元件”才可以使用</td>\n\t\t\t<td>不能使用元件、文字、位图、组合，只有把它们“分离”打散成形状才可以使用</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>作用</strong></td>\n\t\t\t<td>实现一个元件的大小、位置、颜色、透明度等的变化</td>\n\t\t\t<td>实现两个形状间的变化或一个形状的大小、位置、颜色等的变化</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\n给Flash添加使用声音时，同步设置为“事件”，则声音播放与时间轴无关；设置为“数据流”，声音播放和动画同步。\n\n## 实例操作\n\n{% img /images/flash/flash32.gif 275 %}\n\n狂笑动画\n\n- 复习Flash绘图\n- 最简单的逐帧动画\n\n不倒翁动画\n\n- 动作补间动画\n- 元件的制作\n- 元素旋转点的调整\n- 绘图纸外观功能\n\n文字飞入动画\n\n- 动作补间动画\n- 文字编辑（分离、分散到图层）\n- 多图层同时编辑\n- 选择、拖动调整动画帧\n\n救护车停车动画\n\n- 动作补间动画和形状补间动画\n- 元件的嵌套\n- 影片剪辑元件和图形元件的区别\n- 控制动画停止\n\n机器人遭雷击动画\n\n- 动作补间动画和形状补间动画\n- 元件的嵌套\n- 不同图层时间轴的配合\n- 帧的复制、粘贴、调整\n- 编辑多个帧\n- 添加形状提示\n\n闪光文字动画\n\n- 动作补间动画和形状补间动画\n- 选择、拖动调整动画帧\n- 声音的使用\n- 同一图层上使用不同效果\n\n文字书写动画\n\n- 逐帧动画\n- 文字分离\n- 翻转帧\n\n范冰冰开口动画\n\n- 形状补间动画\n- 外部图片导入Flash使用\n- 位图分离为形状，利用Flash切割图片\n- 粘贴到当前位置\n","source":"_posts/flash3.md","raw":"---\ntitle: Flash动画基础班教学笔记（三） – Flash核心动画\ndate: 2012-08-04 00:00:00\ncategories: Uncategorized\nkeywords: Flash核心动画, Flash动画\ndescription: Flash逐帧动画、动作补间动画和形状补间动画\n---\n\n{% img /images/flash/flash31.gif 275 %}\n\n逐帧动画，即分解动画动作，在时间轴的动画帧上逐帧绘制不同的内容，连续播放形成动画效果。常用来表现人物身体动作或其他复杂动画效果。\n\n动作补间动画和形状补间动画是Flash中最基本的两种动画，在关键帧上改变动画元素，动画的中间过渡状态由软件自动生成，下表为二者区别：\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>&nbsp;</th>\n\t\t\t<th>动作补间</th>\n\t\t\t<th>形状补间</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>概念</strong></td>\n\t\t\t<td>在一个关键帧中设置一个元件，然后在另外一个关键帧改变这个元件的大小、颜色、位置、透明度等，FLASH据二者间形状创建的动画</td>\n\t\t\t<td>在一个关键帧中绘制一个形状，然后在另外一个关键帧更改或绘制另一个形状，FLASH据二者间形状创建的动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td rowspan=\"2\"><strong>组成元素</strong></td>\n\t\t\t<td>元件（包括影片剪辑、图形、按钮），文字，位图，组合</td>\n\t\t\t<td>形状</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>不能使用形状，只有把形状“组合”或转化成“元件”才可以使用</td>\n\t\t\t<td>不能使用元件、文字、位图、组合，只有把它们“分离”打散成形状才可以使用</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>作用</strong></td>\n\t\t\t<td>实现一个元件的大小、位置、颜色、透明度等的变化</td>\n\t\t\t<td>实现两个形状间的变化或一个形状的大小、位置、颜色等的变化</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\n给Flash添加使用声音时，同步设置为“事件”，则声音播放与时间轴无关；设置为“数据流”，声音播放和动画同步。\n\n## 实例操作\n\n{% img /images/flash/flash32.gif 275 %}\n\n狂笑动画\n\n- 复习Flash绘图\n- 最简单的逐帧动画\n\n不倒翁动画\n\n- 动作补间动画\n- 元件的制作\n- 元素旋转点的调整\n- 绘图纸外观功能\n\n文字飞入动画\n\n- 动作补间动画\n- 文字编辑（分离、分散到图层）\n- 多图层同时编辑\n- 选择、拖动调整动画帧\n\n救护车停车动画\n\n- 动作补间动画和形状补间动画\n- 元件的嵌套\n- 影片剪辑元件和图形元件的区别\n- 控制动画停止\n\n机器人遭雷击动画\n\n- 动作补间动画和形状补间动画\n- 元件的嵌套\n- 不同图层时间轴的配合\n- 帧的复制、粘贴、调整\n- 编辑多个帧\n- 添加形状提示\n\n闪光文字动画\n\n- 动作补间动画和形状补间动画\n- 选择、拖动调整动画帧\n- 声音的使用\n- 同一图层上使用不同效果\n\n文字书写动画\n\n- 逐帧动画\n- 文字分离\n- 翻转帧\n\n范冰冰开口动画\n\n- 形状补间动画\n- 外部图片导入Flash使用\n- 位图分离为形状，利用Flash切割图片\n- 粘贴到当前位置\n","slug":"flash3","published":1,"updated":"2018-12-03T02:28:52.773Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emy8000p3a8iow9tiab9","content":"<img src=\"/images/flash/flash31.gif\" width=\"275\">\n<p>逐帧动画，即分解动画动作，在时间轴的动画帧上逐帧绘制不同的内容，连续播放形成动画效果。常用来表现人物身体动作或其他复杂动画效果。</p>\n<p>动作补间动画和形状补间动画是Flash中最基本的两种动画，在关键帧上改变动画元素，动画的中间过渡状态由软件自动生成，下表为二者区别：</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>&nbsp;</th>\n\t\t\t<th>动作补间</th>\n\t\t\t<th>形状补间</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>概念</strong></td>\n\t\t\t<td>在一个关键帧中设置一个元件，然后在另外一个关键帧改变这个元件的大小、颜色、位置、透明度等，FLASH据二者间形状创建的动画</td>\n\t\t\t<td>在一个关键帧中绘制一个形状，然后在另外一个关键帧更改或绘制另一个形状，FLASH据二者间形状创建的动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td rowspan=\"2\"><strong>组成元素</strong></td>\n\t\t\t<td>元件（包括影片剪辑、图形、按钮），文字，位图，组合</td>\n\t\t\t<td>形状</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>不能使用形状，只有把形状“组合”或转化成“元件”才可以使用</td>\n\t\t\t<td>不能使用元件、文字、位图、组合，只有把它们“分离”打散成形状才可以使用</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>作用</strong></td>\n\t\t\t<td>实现一个元件的大小、位置、颜色、透明度等的变化</td>\n\t\t\t<td>实现两个形状间的变化或一个形状的大小、位置、颜色等的变化</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>给Flash添加使用声音时，同步设置为“事件”，则声音播放与时间轴无关；设置为“数据流”，声音播放和动画同步。</p>\n<h2 id=\"实例操作\"><a href=\"#实例操作\" class=\"headerlink\" title=\"实例操作\"></a>实例操作</h2><img src=\"/images/flash/flash32.gif\" width=\"275\">\n<p>狂笑动画</p>\n<ul>\n<li>复习Flash绘图</li>\n<li>最简单的逐帧动画</li>\n</ul>\n<p>不倒翁动画</p>\n<ul>\n<li>动作补间动画</li>\n<li>元件的制作</li>\n<li>元素旋转点的调整</li>\n<li>绘图纸外观功能</li>\n</ul>\n<p>文字飞入动画</p>\n<ul>\n<li>动作补间动画</li>\n<li>文字编辑（分离、分散到图层）</li>\n<li>多图层同时编辑</li>\n<li>选择、拖动调整动画帧</li>\n</ul>\n<p>救护车停车动画</p>\n<ul>\n<li>动作补间动画和形状补间动画</li>\n<li>元件的嵌套</li>\n<li>影片剪辑元件和图形元件的区别</li>\n<li>控制动画停止</li>\n</ul>\n<p>机器人遭雷击动画</p>\n<ul>\n<li>动作补间动画和形状补间动画</li>\n<li>元件的嵌套</li>\n<li>不同图层时间轴的配合</li>\n<li>帧的复制、粘贴、调整</li>\n<li>编辑多个帧</li>\n<li>添加形状提示</li>\n</ul>\n<p>闪光文字动画</p>\n<ul>\n<li>动作补间动画和形状补间动画</li>\n<li>选择、拖动调整动画帧</li>\n<li>声音的使用</li>\n<li>同一图层上使用不同效果</li>\n</ul>\n<p>文字书写动画</p>\n<ul>\n<li>逐帧动画</li>\n<li>文字分离</li>\n<li>翻转帧</li>\n</ul>\n<p>范冰冰开口动画</p>\n<ul>\n<li>形状补间动画</li>\n<li>外部图片导入Flash使用</li>\n<li>位图分离为形状，利用Flash切割图片</li>\n<li>粘贴到当前位置</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<img src=\"/images/flash/flash31.gif\" width=\"275\">\n<p>逐帧动画，即分解动画动作，在时间轴的动画帧上逐帧绘制不同的内容，连续播放形成动画效果。常用来表现人物身体动作或其他复杂动画效果。</p>\n<p>动作补间动画和形状补间动画是Flash中最基本的两种动画，在关键帧上改变动画元素，动画的中间过渡状态由软件自动生成，下表为二者区别：</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>&nbsp;</th>\n\t\t\t<th>动作补间</th>\n\t\t\t<th>形状补间</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>概念</strong></td>\n\t\t\t<td>在一个关键帧中设置一个元件，然后在另外一个关键帧改变这个元件的大小、颜色、位置、透明度等，FLASH据二者间形状创建的动画</td>\n\t\t\t<td>在一个关键帧中绘制一个形状，然后在另外一个关键帧更改或绘制另一个形状，FLASH据二者间形状创建的动画</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td rowspan=\"2\"><strong>组成元素</strong></td>\n\t\t\t<td>元件（包括影片剪辑、图形、按钮），文字，位图，组合</td>\n\t\t\t<td>形状</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>不能使用形状，只有把形状“组合”或转化成“元件”才可以使用</td>\n\t\t\t<td>不能使用元件、文字、位图、组合，只有把它们“分离”打散成形状才可以使用</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>作用</strong></td>\n\t\t\t<td>实现一个元件的大小、位置、颜色、透明度等的变化</td>\n\t\t\t<td>实现两个形状间的变化或一个形状的大小、位置、颜色等的变化</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>给Flash添加使用声音时，同步设置为“事件”，则声音播放与时间轴无关；设置为“数据流”，声音播放和动画同步。</p>\n<h2 id=\"实例操作\"><a href=\"#实例操作\" class=\"headerlink\" title=\"实例操作\"></a>实例操作</h2><img src=\"/images/flash/flash32.gif\" width=\"275\">\n<p>狂笑动画</p>\n<ul>\n<li>复习Flash绘图</li>\n<li>最简单的逐帧动画</li>\n</ul>\n<p>不倒翁动画</p>\n<ul>\n<li>动作补间动画</li>\n<li>元件的制作</li>\n<li>元素旋转点的调整</li>\n<li>绘图纸外观功能</li>\n</ul>\n<p>文字飞入动画</p>\n<ul>\n<li>动作补间动画</li>\n<li>文字编辑（分离、分散到图层）</li>\n<li>多图层同时编辑</li>\n<li>选择、拖动调整动画帧</li>\n</ul>\n<p>救护车停车动画</p>\n<ul>\n<li>动作补间动画和形状补间动画</li>\n<li>元件的嵌套</li>\n<li>影片剪辑元件和图形元件的区别</li>\n<li>控制动画停止</li>\n</ul>\n<p>机器人遭雷击动画</p>\n<ul>\n<li>动作补间动画和形状补间动画</li>\n<li>元件的嵌套</li>\n<li>不同图层时间轴的配合</li>\n<li>帧的复制、粘贴、调整</li>\n<li>编辑多个帧</li>\n<li>添加形状提示</li>\n</ul>\n<p>闪光文字动画</p>\n<ul>\n<li>动作补间动画和形状补间动画</li>\n<li>选择、拖动调整动画帧</li>\n<li>声音的使用</li>\n<li>同一图层上使用不同效果</li>\n</ul>\n<p>文字书写动画</p>\n<ul>\n<li>逐帧动画</li>\n<li>文字分离</li>\n<li>翻转帧</li>\n</ul>\n<p>范冰冰开口动画</p>\n<ul>\n<li>形状补间动画</li>\n<li>外部图片导入Flash使用</li>\n<li>位图分离为形状，利用Flash切割图片</li>\n<li>粘贴到当前位置</li>\n</ul>\n"},{"title":"Flash动画基础班教学笔记（四） – Flash进阶动画","date":"2012-08-04T16:00:00.000Z","keywords":"Flash进阶动画, Flash动画","description":"Flash引导层动画、遮罩（蒙版）动画及Flash按钮","_content":"\n引导层动画：简单的动作补间动画或者形状补间动画只能实现元素的直线运动，若需实现复杂路径运动的动画，可以使用引导层动画，通过引导层为元素指定运动路径。\n\n遮罩（蒙版）动画：Flash中的遮罩跟PS中的蒙版概念类似，遮罩层中的元素起遮挡作用，被遮罩层中的动画内容显示被遮部分，隐藏其余部分。\n\nFlash按钮：Flash元件的一种，时间轴上只有4帧，即普通状态、鼠标经过状态、鼠标按下状态、鼠标响应区域。\n\n## 实例操作\n\n{% img /images/flash/flash41.gif 275 %}\n\n童年的纸飞机动画\n\n- 引导层动画\n\n跑圈小破孩动画\n\n- 引导层动画\n- 调整到路径\n- 外部导入gif动画\n- 路径的显示\n\n光泽掠过文字动画\n\n- 遮罩动画\n\n画卷展开动画\n\n- 遮罩动画与运动补间的配合\n\n玻璃质感按钮\n\n{% img /images/flash/flash42.jpg 275 %}\n\n运送苹果动画\n\n- 动作补间和引导层动画的综合使用\n- 不同图层上不同动画元素的配合\n- 元件的嵌套\n- 利用网格对齐\n\n地图放大镜动画\n\n- 动作补间和遮罩动画的综合使用\n- 不同图层上不同动画元素的配合\n","source":"_posts/flash4.md","raw":"---\ntitle: Flash动画基础班教学笔记（四） – Flash进阶动画\ndate: 2012-08-05 00:00:00\ncategories: Uncategorized\nkeywords: Flash进阶动画, Flash动画\ndescription: Flash引导层动画、遮罩（蒙版）动画及Flash按钮\n---\n\n引导层动画：简单的动作补间动画或者形状补间动画只能实现元素的直线运动，若需实现复杂路径运动的动画，可以使用引导层动画，通过引导层为元素指定运动路径。\n\n遮罩（蒙版）动画：Flash中的遮罩跟PS中的蒙版概念类似，遮罩层中的元素起遮挡作用，被遮罩层中的动画内容显示被遮部分，隐藏其余部分。\n\nFlash按钮：Flash元件的一种，时间轴上只有4帧，即普通状态、鼠标经过状态、鼠标按下状态、鼠标响应区域。\n\n## 实例操作\n\n{% img /images/flash/flash41.gif 275 %}\n\n童年的纸飞机动画\n\n- 引导层动画\n\n跑圈小破孩动画\n\n- 引导层动画\n- 调整到路径\n- 外部导入gif动画\n- 路径的显示\n\n光泽掠过文字动画\n\n- 遮罩动画\n\n画卷展开动画\n\n- 遮罩动画与运动补间的配合\n\n玻璃质感按钮\n\n{% img /images/flash/flash42.jpg 275 %}\n\n运送苹果动画\n\n- 动作补间和引导层动画的综合使用\n- 不同图层上不同动画元素的配合\n- 元件的嵌套\n- 利用网格对齐\n\n地图放大镜动画\n\n- 动作补间和遮罩动画的综合使用\n- 不同图层上不同动画元素的配合\n","slug":"flash4","published":1,"updated":"2018-12-03T02:28:52.773Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emy9000r3a8illwbii51","content":"<p>引导层动画：简单的动作补间动画或者形状补间动画只能实现元素的直线运动，若需实现复杂路径运动的动画，可以使用引导层动画，通过引导层为元素指定运动路径。</p>\n<p>遮罩（蒙版）动画：Flash中的遮罩跟PS中的蒙版概念类似，遮罩层中的元素起遮挡作用，被遮罩层中的动画内容显示被遮部分，隐藏其余部分。</p>\n<p>Flash按钮：Flash元件的一种，时间轴上只有4帧，即普通状态、鼠标经过状态、鼠标按下状态、鼠标响应区域。</p>\n<h2 id=\"实例操作\"><a href=\"#实例操作\" class=\"headerlink\" title=\"实例操作\"></a>实例操作</h2><img src=\"/images/flash/flash41.gif\" width=\"275\">\n<p>童年的纸飞机动画</p>\n<ul>\n<li>引导层动画</li>\n</ul>\n<p>跑圈小破孩动画</p>\n<ul>\n<li>引导层动画</li>\n<li>调整到路径</li>\n<li>外部导入gif动画</li>\n<li>路径的显示</li>\n</ul>\n<p>光泽掠过文字动画</p>\n<ul>\n<li>遮罩动画</li>\n</ul>\n<p>画卷展开动画</p>\n<ul>\n<li>遮罩动画与运动补间的配合</li>\n</ul>\n<p>玻璃质感按钮</p>\n<img src=\"/images/flash/flash42.jpg\" width=\"275\">\n<p>运送苹果动画</p>\n<ul>\n<li>动作补间和引导层动画的综合使用</li>\n<li>不同图层上不同动画元素的配合</li>\n<li>元件的嵌套</li>\n<li>利用网格对齐</li>\n</ul>\n<p>地图放大镜动画</p>\n<ul>\n<li>动作补间和遮罩动画的综合使用</li>\n<li>不同图层上不同动画元素的配合</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>引导层动画：简单的动作补间动画或者形状补间动画只能实现元素的直线运动，若需实现复杂路径运动的动画，可以使用引导层动画，通过引导层为元素指定运动路径。</p>\n<p>遮罩（蒙版）动画：Flash中的遮罩跟PS中的蒙版概念类似，遮罩层中的元素起遮挡作用，被遮罩层中的动画内容显示被遮部分，隐藏其余部分。</p>\n<p>Flash按钮：Flash元件的一种，时间轴上只有4帧，即普通状态、鼠标经过状态、鼠标按下状态、鼠标响应区域。</p>\n<h2 id=\"实例操作\"><a href=\"#实例操作\" class=\"headerlink\" title=\"实例操作\"></a>实例操作</h2><img src=\"/images/flash/flash41.gif\" width=\"275\">\n<p>童年的纸飞机动画</p>\n<ul>\n<li>引导层动画</li>\n</ul>\n<p>跑圈小破孩动画</p>\n<ul>\n<li>引导层动画</li>\n<li>调整到路径</li>\n<li>外部导入gif动画</li>\n<li>路径的显示</li>\n</ul>\n<p>光泽掠过文字动画</p>\n<ul>\n<li>遮罩动画</li>\n</ul>\n<p>画卷展开动画</p>\n<ul>\n<li>遮罩动画与运动补间的配合</li>\n</ul>\n<p>玻璃质感按钮</p>\n<img src=\"/images/flash/flash42.jpg\" width=\"275\">\n<p>运送苹果动画</p>\n<ul>\n<li>动作补间和引导层动画的综合使用</li>\n<li>不同图层上不同动画元素的配合</li>\n<li>元件的嵌套</li>\n<li>利用网格对齐</li>\n</ul>\n<p>地图放大镜动画</p>\n<ul>\n<li>动作补间和遮罩动画的综合使用</li>\n<li>不同图层上不同动画元素的配合</li>\n</ul>\n"},{"title":"Flash动画基础班教学笔记（五） – Flash简单动作编程","date":"2012-08-07T16:00:00.000Z","keywords":"Flash简单动作编程, Flash动画","description":"Flash动画ActionScript命令，时间轴控制、浏览器/网络、按钮的行为","_content":"\n## 常用的ActionScript命令\n\n时间轴控制\n\n- play(); 开始播放影片\n- stop(); 停止播放影片\n- gotoAndStop(); 跳转到指定帧并停止\n\n浏览器/网络\n\n- getURL(); 打开网页\n- loadMovie(); 加载外部图片或Flash动画\n\n按钮的行为\n\n- on (release){ }; 单击鼠标左键触发\n- on (rollOver){ }; 鼠标滑过时触发\n\n## ActionScript命令添加位置\n\n{% img /images/flash/flash51.jpg 275 %}\n\n- 添加到时间轴关键帧上\n- 添加到按钮上\n\n## ActionScript命令运用实例\n\n- 淘宝Tab标签广告\n- 简易Flash网站\n","source":"_posts/flash5.md","raw":"---\ntitle: Flash动画基础班教学笔记（五） – Flash简单动作编程\ndate: 2012-08-08 00:00:00\ncategories: Uncategorized\nkeywords: Flash简单动作编程, Flash动画\ndescription: Flash动画ActionScript命令，时间轴控制、浏览器/网络、按钮的行为\n---\n\n## 常用的ActionScript命令\n\n时间轴控制\n\n- play(); 开始播放影片\n- stop(); 停止播放影片\n- gotoAndStop(); 跳转到指定帧并停止\n\n浏览器/网络\n\n- getURL(); 打开网页\n- loadMovie(); 加载外部图片或Flash动画\n\n按钮的行为\n\n- on (release){ }; 单击鼠标左键触发\n- on (rollOver){ }; 鼠标滑过时触发\n\n## ActionScript命令添加位置\n\n{% img /images/flash/flash51.jpg 275 %}\n\n- 添加到时间轴关键帧上\n- 添加到按钮上\n\n## ActionScript命令运用实例\n\n- 淘宝Tab标签广告\n- 简易Flash网站\n","slug":"flash5","published":1,"updated":"2018-12-03T02:28:52.773Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emya000t3a8iiv36fwys","content":"<h2 id=\"常用的ActionScript命令\"><a href=\"#常用的ActionScript命令\" class=\"headerlink\" title=\"常用的ActionScript命令\"></a>常用的ActionScript命令</h2><p>时间轴控制</p>\n<ul>\n<li>play(); 开始播放影片</li>\n<li>stop(); 停止播放影片</li>\n<li>gotoAndStop(); 跳转到指定帧并停止</li>\n</ul>\n<p>浏览器/网络</p>\n<ul>\n<li>getURL(); 打开网页</li>\n<li>loadMovie(); 加载外部图片或Flash动画</li>\n</ul>\n<p>按钮的行为</p>\n<ul>\n<li>on (release){ }; 单击鼠标左键触发</li>\n<li>on (rollOver){ }; 鼠标滑过时触发</li>\n</ul>\n<h2 id=\"ActionScript命令添加位置\"><a href=\"#ActionScript命令添加位置\" class=\"headerlink\" title=\"ActionScript命令添加位置\"></a>ActionScript命令添加位置</h2><img src=\"/images/flash/flash51.jpg\" width=\"275\">\n<ul>\n<li>添加到时间轴关键帧上</li>\n<li>添加到按钮上</li>\n</ul>\n<h2 id=\"ActionScript命令运用实例\"><a href=\"#ActionScript命令运用实例\" class=\"headerlink\" title=\"ActionScript命令运用实例\"></a>ActionScript命令运用实例</h2><ul>\n<li>淘宝Tab标签广告</li>\n<li>简易Flash网站</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"常用的ActionScript命令\"><a href=\"#常用的ActionScript命令\" class=\"headerlink\" title=\"常用的ActionScript命令\"></a>常用的ActionScript命令</h2><p>时间轴控制</p>\n<ul>\n<li>play(); 开始播放影片</li>\n<li>stop(); 停止播放影片</li>\n<li>gotoAndStop(); 跳转到指定帧并停止</li>\n</ul>\n<p>浏览器/网络</p>\n<ul>\n<li>getURL(); 打开网页</li>\n<li>loadMovie(); 加载外部图片或Flash动画</li>\n</ul>\n<p>按钮的行为</p>\n<ul>\n<li>on (release){ }; 单击鼠标左键触发</li>\n<li>on (rollOver){ }; 鼠标滑过时触发</li>\n</ul>\n<h2 id=\"ActionScript命令添加位置\"><a href=\"#ActionScript命令添加位置\" class=\"headerlink\" title=\"ActionScript命令添加位置\"></a>ActionScript命令添加位置</h2><img src=\"/images/flash/flash51.jpg\" width=\"275\">\n<ul>\n<li>添加到时间轴关键帧上</li>\n<li>添加到按钮上</li>\n</ul>\n<h2 id=\"ActionScript命令运用实例\"><a href=\"#ActionScript命令运用实例\" class=\"headerlink\" title=\"ActionScript命令运用实例\"></a>ActionScript命令运用实例</h2><ul>\n<li>淘宝Tab标签广告</li>\n<li>简易Flash网站</li>\n</ul>\n"},{"title":"Flash动画基础班教学笔记（六） – Flash深入","date":"2012-08-08T16:00:00.000Z","keywords":"Flash深入, Flash动画","description":"Flash的三维实现、官方实例、反编译（破解）","_content":"\n## Flash中的三维实现\n\n- Poser软件：动物、人体造型及人体动画制作\n- Swift3D软件：构建模型并渲染为swf文件\n- Cool3D软件：制作三维文字动画效果\n\n## Flash官方实例\n\n- 影片剪辑拖动 / 碰撞检测\n- 阴影 / 速度感\n- 组件\n\n## 其他\n\n用Sothink SWF Decompiler对Flash文件反编译（破解），提取参考素材，借鉴学习。\n\n替换鼠标ActionScript编程\n\n```\nonClipEvent (enterFrame) {\n    this.startDrag();\n    Mouse.hide();\n    _x = _root._xmouse;\n    _y = _root._ymouse;\n}\n```\n","source":"_posts/flash6.md","raw":"---\ntitle: Flash动画基础班教学笔记（六） – Flash深入\ndate: 2012-08-09 00:00:00\ncategories: Uncategorized\nkeywords: Flash深入, Flash动画\ndescription: Flash的三维实现、官方实例、反编译（破解）\n---\n\n## Flash中的三维实现\n\n- Poser软件：动物、人体造型及人体动画制作\n- Swift3D软件：构建模型并渲染为swf文件\n- Cool3D软件：制作三维文字动画效果\n\n## Flash官方实例\n\n- 影片剪辑拖动 / 碰撞检测\n- 阴影 / 速度感\n- 组件\n\n## 其他\n\n用Sothink SWF Decompiler对Flash文件反编译（破解），提取参考素材，借鉴学习。\n\n替换鼠标ActionScript编程\n\n```\nonClipEvent (enterFrame) {\n    this.startDrag();\n    Mouse.hide();\n    _x = _root._xmouse;\n    _y = _root._ymouse;\n}\n```\n","slug":"flash6","published":1,"updated":"2018-12-03T02:28:52.773Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyd000v3a8i8k4geb27","content":"<h2 id=\"Flash中的三维实现\"><a href=\"#Flash中的三维实现\" class=\"headerlink\" title=\"Flash中的三维实现\"></a>Flash中的三维实现</h2><ul>\n<li>Poser软件：动物、人体造型及人体动画制作</li>\n<li>Swift3D软件：构建模型并渲染为swf文件</li>\n<li>Cool3D软件：制作三维文字动画效果</li>\n</ul>\n<h2 id=\"Flash官方实例\"><a href=\"#Flash官方实例\" class=\"headerlink\" title=\"Flash官方实例\"></a>Flash官方实例</h2><ul>\n<li>影片剪辑拖动 / 碰撞检测</li>\n<li>阴影 / 速度感</li>\n<li>组件</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>用Sothink SWF Decompiler对Flash文件反编译（破解），提取参考素材，借鉴学习。</p>\n<p>替换鼠标ActionScript编程</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">onClipEvent (enterFrame) &#123;</div><div class=\"line\">    this.startDrag();</div><div class=\"line\">    Mouse.hide();</div><div class=\"line\">    _x = _root._xmouse;</div><div class=\"line\">    _y = _root._ymouse;</div><div class=\"line\">&#125;</div></pre></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Flash中的三维实现\"><a href=\"#Flash中的三维实现\" class=\"headerlink\" title=\"Flash中的三维实现\"></a>Flash中的三维实现</h2><ul>\n<li>Poser软件：动物、人体造型及人体动画制作</li>\n<li>Swift3D软件：构建模型并渲染为swf文件</li>\n<li>Cool3D软件：制作三维文字动画效果</li>\n</ul>\n<h2 id=\"Flash官方实例\"><a href=\"#Flash官方实例\" class=\"headerlink\" title=\"Flash官方实例\"></a>Flash官方实例</h2><ul>\n<li>影片剪辑拖动 / 碰撞检测</li>\n<li>阴影 / 速度感</li>\n<li>组件</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>用Sothink SWF Decompiler对Flash文件反编译（破解），提取参考素材，借鉴学习。</p>\n<p>替换鼠标ActionScript编程</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">onClipEvent (enterFrame) &#123;</div><div class=\"line\">    this.startDrag();</div><div class=\"line\">    Mouse.hide();</div><div class=\"line\">    _x = _root._xmouse;</div><div class=\"line\">    _y = _root._ymouse;</div><div class=\"line\">&#125;</div></pre></figure>\n"},{"title":"何为JSON","date":"2013-02-02T16:00:00.000Z","keywords":"JSON","description":"JSON即JavaScript Object Notation，JavaScript对象表示法，是一种流行的数据交换方式，易于程序员阅读和编写、程序解析和生成","_content":"\nJSON即JavaScript Object Notation，JavaScript对象表示法，是一种流行的数据交换方式，易于程序员阅读和编写、程序解析和生成。JSON是JavaScript原生数据格式，可以轻松用于AJAX应用中。\n\nJSON规范如下：\n\n1. 对象：包含在“{”和“}”之间的一个键-值对集合，每个键-值对之间以逗号分隔。键和值本身用冒号“:”分隔。键是简单的字符串，值可以是数组、字符串、数字、布尔值或为空；\n2. 数组：有序数据对，数组的值以逗号分隔并包含在“[”和“]”之间；\n3. 字符串：必须包含在双引号之间。\n\nJSON实例：\n\n最简单的JSON\n\n``` JavaScript\n{\n    \"name\": \"Yophee\",\n    \"address\": \"Beijing\"\n}\n```\n\n使用数组的JSON\n\n``` JavaScript\n{\n    \"name\": \"bank\",\n    \"phoneNumbers\": [\"95588\", \"95533\", \"95559\"]\n}\n```\n\n复杂的JSON\n\n``` JavaScript\n{\n    \"people\": [{\n        \"name\": \"Zhang San\",\n        \"age\": 29,\n        \"isAdult\": true\n    }, {\n        \"name\": \"Li Si\",\n        \"age\": 15,\n        \"isAdult\": false\n    }]\n}\n```\n\n需要注意的是：\n\n1. 对象的键和字符串类型的值必须包含在双引号中，不允许使用单引号\n2. JSON要求数据编码为UTF-8格式\n","source":"_posts/json.md","raw":"---\ntitle: 何为JSON\ndate: 2013-02-03 00:00:00\ncategories: JavaScript\nkeywords: JSON\ndescription: JSON即JavaScript Object Notation，JavaScript对象表示法，是一种流行的数据交换方式，易于程序员阅读和编写、程序解析和生成\n---\n\nJSON即JavaScript Object Notation，JavaScript对象表示法，是一种流行的数据交换方式，易于程序员阅读和编写、程序解析和生成。JSON是JavaScript原生数据格式，可以轻松用于AJAX应用中。\n\nJSON规范如下：\n\n1. 对象：包含在“{”和“}”之间的一个键-值对集合，每个键-值对之间以逗号分隔。键和值本身用冒号“:”分隔。键是简单的字符串，值可以是数组、字符串、数字、布尔值或为空；\n2. 数组：有序数据对，数组的值以逗号分隔并包含在“[”和“]”之间；\n3. 字符串：必须包含在双引号之间。\n\nJSON实例：\n\n最简单的JSON\n\n``` JavaScript\n{\n    \"name\": \"Yophee\",\n    \"address\": \"Beijing\"\n}\n```\n\n使用数组的JSON\n\n``` JavaScript\n{\n    \"name\": \"bank\",\n    \"phoneNumbers\": [\"95588\", \"95533\", \"95559\"]\n}\n```\n\n复杂的JSON\n\n``` JavaScript\n{\n    \"people\": [{\n        \"name\": \"Zhang San\",\n        \"age\": 29,\n        \"isAdult\": true\n    }, {\n        \"name\": \"Li Si\",\n        \"age\": 15,\n        \"isAdult\": false\n    }]\n}\n```\n\n需要注意的是：\n\n1. 对象的键和字符串类型的值必须包含在双引号中，不允许使用单引号\n2. JSON要求数据编码为UTF-8格式\n","slug":"json","published":1,"updated":"2019-03-08T06:02:05.185Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyf000x3a8iezb1z6yo","content":"<p>JSON即JavaScript Object Notation，JavaScript对象表示法，是一种流行的数据交换方式，易于程序员阅读和编写、程序解析和生成。JSON是JavaScript原生数据格式，可以轻松用于AJAX应用中。</p>\n<p>JSON规范如下：</p>\n<ol>\n<li>对象：包含在“{”和“}”之间的一个键-值对集合，每个键-值对之间以逗号分隔。键和值本身用冒号“:”分隔。键是简单的字符串，值可以是数组、字符串、数字、布尔值或为空；</li>\n<li>数组：有序数据对，数组的值以逗号分隔并包含在“[”和“]”之间；</li>\n<li>字符串：必须包含在双引号之间。</li>\n</ol>\n<p>JSON实例：</p>\n<p>最简单的JSON</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"Yophee\"</span>,</div><div class=\"line\">    <span class=\"string\">\"address\"</span>: <span class=\"string\">\"Beijing\"</span></div><div class=\"line\">&#125;</div></pre></figure>\n<p>使用数组的JSON</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"bank\"</span>,</div><div class=\"line\">    <span class=\"string\">\"phoneNumbers\"</span>: [<span class=\"string\">\"95588\"</span>, <span class=\"string\">\"95533\"</span>, <span class=\"string\">\"95559\"</span>]</div><div class=\"line\">&#125;</div></pre></figure>\n<p>复杂的JSON</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"string\">\"people\"</span>: [&#123;</div><div class=\"line\">        <span class=\"string\">\"name\"</span>: <span class=\"string\">\"Zhang San\"</span>,</div><div class=\"line\">        <span class=\"string\">\"age\"</span>: <span class=\"number\">29</span>,</div><div class=\"line\">        <span class=\"string\">\"isAdult\"</span>: <span class=\"literal\">true</span></div><div class=\"line\">    &#125;, &#123;</div><div class=\"line\">        <span class=\"string\">\"name\"</span>: <span class=\"string\">\"Li Si\"</span>,</div><div class=\"line\">        <span class=\"string\">\"age\"</span>: <span class=\"number\">15</span>,</div><div class=\"line\">        <span class=\"string\">\"isAdult\"</span>: <span class=\"literal\">false</span></div><div class=\"line\">    &#125;]</div><div class=\"line\">&#125;</div></pre></figure>\n<p>需要注意的是：</p>\n<ol>\n<li>对象的键和字符串类型的值必须包含在双引号中，不允许使用单引号</li>\n<li>JSON要求数据编码为UTF-8格式</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>JSON即JavaScript Object Notation，JavaScript对象表示法，是一种流行的数据交换方式，易于程序员阅读和编写、程序解析和生成。JSON是JavaScript原生数据格式，可以轻松用于AJAX应用中。</p>\n<p>JSON规范如下：</p>\n<ol>\n<li>对象：包含在“{”和“}”之间的一个键-值对集合，每个键-值对之间以逗号分隔。键和值本身用冒号“:”分隔。键是简单的字符串，值可以是数组、字符串、数字、布尔值或为空；</li>\n<li>数组：有序数据对，数组的值以逗号分隔并包含在“[”和“]”之间；</li>\n<li>字符串：必须包含在双引号之间。</li>\n</ol>\n<p>JSON实例：</p>\n<p>最简单的JSON</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"Yophee\"</span>,</div><div class=\"line\">    <span class=\"string\">\"address\"</span>: <span class=\"string\">\"Beijing\"</span></div><div class=\"line\">&#125;</div></pre></figure>\n<p>使用数组的JSON</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"bank\"</span>,</div><div class=\"line\">    <span class=\"string\">\"phoneNumbers\"</span>: [<span class=\"string\">\"95588\"</span>, <span class=\"string\">\"95533\"</span>, <span class=\"string\">\"95559\"</span>]</div><div class=\"line\">&#125;</div></pre></figure>\n<p>复杂的JSON</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"string\">\"people\"</span>: [&#123;</div><div class=\"line\">        <span class=\"string\">\"name\"</span>: <span class=\"string\">\"Zhang San\"</span>,</div><div class=\"line\">        <span class=\"string\">\"age\"</span>: <span class=\"number\">29</span>,</div><div class=\"line\">        <span class=\"string\">\"isAdult\"</span>: <span class=\"literal\">true</span></div><div class=\"line\">    &#125;, &#123;</div><div class=\"line\">        <span class=\"string\">\"name\"</span>: <span class=\"string\">\"Li Si\"</span>,</div><div class=\"line\">        <span class=\"string\">\"age\"</span>: <span class=\"number\">15</span>,</div><div class=\"line\">        <span class=\"string\">\"isAdult\"</span>: <span class=\"literal\">false</span></div><div class=\"line\">    &#125;]</div><div class=\"line\">&#125;</div></pre></figure>\n<p>需要注意的是：</p>\n<ol>\n<li>对象的键和字符串类型的值必须包含在双引号中，不允许使用单引号</li>\n<li>JSON要求数据编码为UTF-8格式</li>\n</ol>\n"},{"title":"在LabVIEW中依次输入一列数并绘图显示","date":"2014-03-15T16:00:00.000Z","keywords":"LabVIEW","description":"在LabVIEW中依次输入一列数并绘图显示的程序","_content":"\n在扭转刚度实验中，需逐次增加悬挂砝码重量，并用编码器记录各组重量对应的轴扭转变形量，手动将重量值输入程序，计算、绘图显示刚度曲线。在LabVIEW中依次输入一列数并绘图显示的程序框图如下：\n\n{% img /images/labview/input2.gif 275 %}\n\n使用事件结构，“添加”按钮触发将新一组的数据添加到数组中并在XY图中显示，在While循环中使用移位寄存器储存实验中的一列多组数据，达到依次连续绘图的目的。\n\n使用到的LabVIEW函数位置分别为：\n\n- 编程 > 结构 > While循环\n- 编程 > 结构 > 事件结构\n- 编程 > 簇、类与变体 > 捆绑\n- 编程 > 数组 > 创建数组\n","source":"_posts/labview1.md","raw":"---\ntitle: 在LabVIEW中依次输入一列数并绘图显示\ndate: 2014-03-16 00:00:00\ncategories: Uncategorized\nkeywords: LabVIEW\ndescription: 在LabVIEW中依次输入一列数并绘图显示的程序\n---\n\n在扭转刚度实验中，需逐次增加悬挂砝码重量，并用编码器记录各组重量对应的轴扭转变形量，手动将重量值输入程序，计算、绘图显示刚度曲线。在LabVIEW中依次输入一列数并绘图显示的程序框图如下：\n\n{% img /images/labview/input2.gif 275 %}\n\n使用事件结构，“添加”按钮触发将新一组的数据添加到数组中并在XY图中显示，在While循环中使用移位寄存器储存实验中的一列多组数据，达到依次连续绘图的目的。\n\n使用到的LabVIEW函数位置分别为：\n\n- 编程 > 结构 > While循环\n- 编程 > 结构 > 事件结构\n- 编程 > 簇、类与变体 > 捆绑\n- 编程 > 数组 > 创建数组\n","slug":"labview1","published":1,"updated":"2018-11-29T10:25:54.789Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyg000z3a8is9ffd0vi","content":"<p>在扭转刚度实验中，需逐次增加悬挂砝码重量，并用编码器记录各组重量对应的轴扭转变形量，手动将重量值输入程序，计算、绘图显示刚度曲线。在LabVIEW中依次输入一列数并绘图显示的程序框图如下：</p>\n<img src=\"/images/labview/input2.gif\" width=\"275\">\n<p>使用事件结构，“添加”按钮触发将新一组的数据添加到数组中并在XY图中显示，在While循环中使用移位寄存器储存实验中的一列多组数据，达到依次连续绘图的目的。</p>\n<p>使用到的LabVIEW函数位置分别为：</p>\n<ul>\n<li>编程 &gt; 结构 &gt; While循环</li>\n<li>编程 &gt; 结构 &gt; 事件结构</li>\n<li>编程 &gt; 簇、类与变体 &gt; 捆绑</li>\n<li>编程 &gt; 数组 &gt; 创建数组</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>在扭转刚度实验中，需逐次增加悬挂砝码重量，并用编码器记录各组重量对应的轴扭转变形量，手动将重量值输入程序，计算、绘图显示刚度曲线。在LabVIEW中依次输入一列数并绘图显示的程序框图如下：</p>\n<img src=\"/images/labview/input2.gif\" width=\"275\">\n<p>使用事件结构，“添加”按钮触发将新一组的数据添加到数组中并在XY图中显示，在While循环中使用移位寄存器储存实验中的一列多组数据，达到依次连续绘图的目的。</p>\n<p>使用到的LabVIEW函数位置分别为：</p>\n<ul>\n<li>编程 &gt; 结构 &gt; While循环</li>\n<li>编程 &gt; 结构 &gt; 事件结构</li>\n<li>编程 &gt; 簇、类与变体 &gt; 捆绑</li>\n<li>编程 &gt; 数组 &gt; 创建数组</li>\n</ul>\n"},{"title":"Floyd-Steinberg扩散抖动算法","date":"2019-01-03T16:00:00.000Z","keywords":"Floyd-Steinberg, 扩散抖动算法, canvas","description":"图像处理中Floyd-Steinberg扩散抖动算法在JavaScript中的具体实现","_content":"\nFloyd-Steinberg扩散抖动算法，用在图像处理中，例如将图像转换成最多256色的GIF格式。\n\n该算法利用误差扩散实现抖动，从左到右、由上至下扫描图像的像素并将其逐个标准化（或二值化），把像素标准化后产生的误差叠加到相邻像素上，不影响已经处理过的像素。这样实现的效果是，如果某些像素向下取整，则下一个像素向上取整的可能性更大，这样使得平均量化误差最小。\n\n下面伪代码中，输入图像的像素被标准化为[0, 1]，0为黑色，1为白色。\n\n```\nfor each y from top to bottom\n  for each x from left to right\n    oldpixel = pixel[x][y]\n    newpixel = round(oldpixel / 255)\n    pixel[x][y] = newpixel\n    quant_error = oldpixel - newpixel\n    pixel[x + 1][y    ] += quant_error * 7 / 16\n    pixel[x - 1][y + 1] += quant_error * 3 / 16\n    pixel[x    ][y + 1] += quant_error * 5 / 16\n    pixel[x + 1][y + 1] += quant_error * 1 / 16\n```\n\n下面是Floyd-Steinberg扩散抖动算法在JS中的具体实现。\n\n## 图片像素\n\n异步加载图片，用canvas做中介，将图片绘制到canvas画布上，使用画布的getImageData方法获取图片像素信息，该方法返回的imageData对象的data是一个Uint8ClampedArray数组，图像的每个像素信息占4个元素储存，其中：\n\n- R - 红色 (0-255)\n- G - 绿色 (0-255)\n- B - 蓝色 (0-255)\n- A - alpha通道 (0-255 0透明 255完全可见)\n\n<div class=\"scrollable-wrapper\"><img src=\"/images/else/kid-l.jpg\" width=\"280\"></div>\n\n``` JavaScript\nasync function getImg() {\n    const img = new Image()\n    img.src = '/images/else/kid-s.jpg'\n    await new Promise(resolve => img.addEventListener('load', resolve))\n    const width = img.width\n    const height = img.height\n    const canvas = document.createElement('canvas')\n    canvas.setAttribute('width', width)\n    canvas.setAttribute('height', height)\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n    const imageData = ctx.getImageData(0, 0, width, height)\n    return {\n        width,\n        height,\n        data: imageData.data\n    }\n}\n```\n\n## 扩散抖动\n\n为简化演示，这里使用了不含色彩信息的灰度图像，其像素点的R、G和B数值是相同的；图片格式为JPG，无半透明效果，即alpha通道数值均为255。\n\n根据imageData的数据形式，这里像素数据每4个一组进行处理。\n\n``` JavaScript\nconst px = (x, y) => x * 4 + y * width * 4\n\nfor (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n        const oldPixel = data[px(x, y)]\n        const newPixel = oldPixel > 125 ? 255 : 0\n        data[px(x, y)] = data[px(x, y) + 1] = data[px(x, y) + 2] = newPixel\n        const quantError = oldPixel - newPixel\n\n        data[px(x + 1, y    )] =\n        data[px(x + 1, y    ) + 1] =\n        data[px(x + 1, y    ) + 2] =\n        data[px(x + 1, y    )] + quantError * 7 / 16\n\n        data[px(x - 1, y + 1)] =\n        data[px(x - 1, y + 1) + 1] =\n        data[px(x - 1, y + 1) + 2] =\n        data[px(x - 1, y + 1)] + quantError * 3 / 16\n\n        data[px(x    , y + 1)] =\n        data[px(x    , y + 1) + 1] =\n        data[px(x    , y + 1) + 2] =\n        data[px(x    , y + 1)] + quantError * 5 / 16\n\n        data[px(x + 1, y + 1)] =\n        data[px(x + 1, y + 1) + 1] =\n        data[px(x + 1, y + 1) + 2] =\n        data[px(x + 1, y + 1)] + quantError * 1 / 16\n    }\n}\n```\n\n## 结果展示\n\n处理结果这里使用SVG展示，也可以使用canvas画布的putImageData方法绘制。可以看到Floyd-Steinberg处理后的图像比较细腻、失真较小、细节丰富。\n\n<div class=\"scrollable-wrapper\"><svg id=\"dithering\"></svg></div>\n\n<cite>参考：\nhttps://observablehq.com/@tmcw/dithering\nhttps://observablehq.com/@tmcw/final-step-of-dithering-to-svg</cite>\n\n\n{% raw %}\n<script>\nasync function getImg() {\n    const img = new Image()\n    img.src = '/images/else/kid-s.jpg'\n    await new Promise(resolve => img.addEventListener('load', resolve))\n    const width = img.width\n    const height = img.height\n    const canvas = document.createElement('canvas')\n    canvas.setAttribute('width', width)\n    canvas.setAttribute('height', height)\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n    const imageData = ctx.getImageData(0, 0, width, height)\n    return {\n        width,\n        height,\n        data: imageData.data\n    }\n}\n\n\ngetImg().then(({ width, height, data }) => {\n\n    const px = (x, y) => x * 4 + y * width * 4\n\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const oldPixel = data[px(x, y)]\n            const newPixel = oldPixel > 125 ? 255 : 0\n            data[px(x, y)] = data[px(x, y) + 1] = data[px(x, y) + 2] = newPixel\n            const quantError = oldPixel - newPixel\n\n            data[px(x + 1, y    )] =\n            data[px(x + 1, y    ) + 1] =\n            data[px(x + 1, y    ) + 2] =\n            data[px(x + 1, y    )] + quantError * 7 / 16\n\n            data[px(x - 1, y + 1)] =\n            data[px(x - 1, y + 1) + 1] =\n            data[px(x - 1, y + 1) + 2] =\n            data[px(x - 1, y + 1)] + quantError * 3 / 16\n\n            data[px(x    , y + 1)] =\n            data[px(x    , y + 1) + 1] =\n            data[px(x    , y + 1) + 2] =\n            data[px(x    , y + 1)] + quantError * 5 / 16\n\n            data[px(x + 1, y + 1)] =\n            data[px(x + 1, y + 1) + 1] =\n            data[px(x + 1, y + 1) + 2] =\n            data[px(x + 1, y + 1)] + quantError * 1 / 16\n        }\n    }\n\n    const w = width * 4\n    let d = ''\n    for (let i = 0; i < data.length; i += w) {\n        const y = Math.floor(i / w)\n        d += `M0, ${y}`\n        let line = false\n        for (let j = i; j < i + w; j += 4) {\n            const co = `${(j % w) / 4}, ${y}`\n            if (data[j] === 0) {\n                if (!line) {\n                    d += 'M' + co\n                    line = true\n                }\n            } else {\n                if (line) {\n                    d += 'L' + co\n                    line = false\n                }\n            }\n        }\n    }\n\n    const svg = document.getElementById('dithering')\n    svg.setAttribute('width', width)\n    svg.setAttribute('height', height)\n    svg.innerHTML = `<path d=\"${d}\" stroke=\"#232520\" stroke-width=\"0.5\" fill=\"none\"></path>`\n\n})\n</script>\n{% endraw %}\n","source":"_posts/floyd-steinberg-dithering.md","raw":"---\ntitle: Floyd-Steinberg扩散抖动算法\ndate: 2019-01-04 00:00:00\ncategories: Uncategorized\nkeywords: Floyd-Steinberg, 扩散抖动算法, canvas\ndescription: 图像处理中Floyd-Steinberg扩散抖动算法在JavaScript中的具体实现\n---\n\nFloyd-Steinberg扩散抖动算法，用在图像处理中，例如将图像转换成最多256色的GIF格式。\n\n该算法利用误差扩散实现抖动，从左到右、由上至下扫描图像的像素并将其逐个标准化（或二值化），把像素标准化后产生的误差叠加到相邻像素上，不影响已经处理过的像素。这样实现的效果是，如果某些像素向下取整，则下一个像素向上取整的可能性更大，这样使得平均量化误差最小。\n\n下面伪代码中，输入图像的像素被标准化为[0, 1]，0为黑色，1为白色。\n\n```\nfor each y from top to bottom\n  for each x from left to right\n    oldpixel = pixel[x][y]\n    newpixel = round(oldpixel / 255)\n    pixel[x][y] = newpixel\n    quant_error = oldpixel - newpixel\n    pixel[x + 1][y    ] += quant_error * 7 / 16\n    pixel[x - 1][y + 1] += quant_error * 3 / 16\n    pixel[x    ][y + 1] += quant_error * 5 / 16\n    pixel[x + 1][y + 1] += quant_error * 1 / 16\n```\n\n下面是Floyd-Steinberg扩散抖动算法在JS中的具体实现。\n\n## 图片像素\n\n异步加载图片，用canvas做中介，将图片绘制到canvas画布上，使用画布的getImageData方法获取图片像素信息，该方法返回的imageData对象的data是一个Uint8ClampedArray数组，图像的每个像素信息占4个元素储存，其中：\n\n- R - 红色 (0-255)\n- G - 绿色 (0-255)\n- B - 蓝色 (0-255)\n- A - alpha通道 (0-255 0透明 255完全可见)\n\n<div class=\"scrollable-wrapper\"><img src=\"/images/else/kid-l.jpg\" width=\"280\"></div>\n\n``` JavaScript\nasync function getImg() {\n    const img = new Image()\n    img.src = '/images/else/kid-s.jpg'\n    await new Promise(resolve => img.addEventListener('load', resolve))\n    const width = img.width\n    const height = img.height\n    const canvas = document.createElement('canvas')\n    canvas.setAttribute('width', width)\n    canvas.setAttribute('height', height)\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n    const imageData = ctx.getImageData(0, 0, width, height)\n    return {\n        width,\n        height,\n        data: imageData.data\n    }\n}\n```\n\n## 扩散抖动\n\n为简化演示，这里使用了不含色彩信息的灰度图像，其像素点的R、G和B数值是相同的；图片格式为JPG，无半透明效果，即alpha通道数值均为255。\n\n根据imageData的数据形式，这里像素数据每4个一组进行处理。\n\n``` JavaScript\nconst px = (x, y) => x * 4 + y * width * 4\n\nfor (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n        const oldPixel = data[px(x, y)]\n        const newPixel = oldPixel > 125 ? 255 : 0\n        data[px(x, y)] = data[px(x, y) + 1] = data[px(x, y) + 2] = newPixel\n        const quantError = oldPixel - newPixel\n\n        data[px(x + 1, y    )] =\n        data[px(x + 1, y    ) + 1] =\n        data[px(x + 1, y    ) + 2] =\n        data[px(x + 1, y    )] + quantError * 7 / 16\n\n        data[px(x - 1, y + 1)] =\n        data[px(x - 1, y + 1) + 1] =\n        data[px(x - 1, y + 1) + 2] =\n        data[px(x - 1, y + 1)] + quantError * 3 / 16\n\n        data[px(x    , y + 1)] =\n        data[px(x    , y + 1) + 1] =\n        data[px(x    , y + 1) + 2] =\n        data[px(x    , y + 1)] + quantError * 5 / 16\n\n        data[px(x + 1, y + 1)] =\n        data[px(x + 1, y + 1) + 1] =\n        data[px(x + 1, y + 1) + 2] =\n        data[px(x + 1, y + 1)] + quantError * 1 / 16\n    }\n}\n```\n\n## 结果展示\n\n处理结果这里使用SVG展示，也可以使用canvas画布的putImageData方法绘制。可以看到Floyd-Steinberg处理后的图像比较细腻、失真较小、细节丰富。\n\n<div class=\"scrollable-wrapper\"><svg id=\"dithering\"></svg></div>\n\n<cite>参考：\nhttps://observablehq.com/@tmcw/dithering\nhttps://observablehq.com/@tmcw/final-step-of-dithering-to-svg</cite>\n\n\n{% raw %}\n<script>\nasync function getImg() {\n    const img = new Image()\n    img.src = '/images/else/kid-s.jpg'\n    await new Promise(resolve => img.addEventListener('load', resolve))\n    const width = img.width\n    const height = img.height\n    const canvas = document.createElement('canvas')\n    canvas.setAttribute('width', width)\n    canvas.setAttribute('height', height)\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n    const imageData = ctx.getImageData(0, 0, width, height)\n    return {\n        width,\n        height,\n        data: imageData.data\n    }\n}\n\n\ngetImg().then(({ width, height, data }) => {\n\n    const px = (x, y) => x * 4 + y * width * 4\n\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const oldPixel = data[px(x, y)]\n            const newPixel = oldPixel > 125 ? 255 : 0\n            data[px(x, y)] = data[px(x, y) + 1] = data[px(x, y) + 2] = newPixel\n            const quantError = oldPixel - newPixel\n\n            data[px(x + 1, y    )] =\n            data[px(x + 1, y    ) + 1] =\n            data[px(x + 1, y    ) + 2] =\n            data[px(x + 1, y    )] + quantError * 7 / 16\n\n            data[px(x - 1, y + 1)] =\n            data[px(x - 1, y + 1) + 1] =\n            data[px(x - 1, y + 1) + 2] =\n            data[px(x - 1, y + 1)] + quantError * 3 / 16\n\n            data[px(x    , y + 1)] =\n            data[px(x    , y + 1) + 1] =\n            data[px(x    , y + 1) + 2] =\n            data[px(x    , y + 1)] + quantError * 5 / 16\n\n            data[px(x + 1, y + 1)] =\n            data[px(x + 1, y + 1) + 1] =\n            data[px(x + 1, y + 1) + 2] =\n            data[px(x + 1, y + 1)] + quantError * 1 / 16\n        }\n    }\n\n    const w = width * 4\n    let d = ''\n    for (let i = 0; i < data.length; i += w) {\n        const y = Math.floor(i / w)\n        d += `M0, ${y}`\n        let line = false\n        for (let j = i; j < i + w; j += 4) {\n            const co = `${(j % w) / 4}, ${y}`\n            if (data[j] === 0) {\n                if (!line) {\n                    d += 'M' + co\n                    line = true\n                }\n            } else {\n                if (line) {\n                    d += 'L' + co\n                    line = false\n                }\n            }\n        }\n    }\n\n    const svg = document.getElementById('dithering')\n    svg.setAttribute('width', width)\n    svg.setAttribute('height', height)\n    svg.innerHTML = `<path d=\"${d}\" stroke=\"#232520\" stroke-width=\"0.5\" fill=\"none\"></path>`\n\n})\n</script>\n{% endraw %}\n","slug":"floyd-steinberg-dithering","published":1,"updated":"2019-03-22T10:39:04.099Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyh00113a8i1t0nby57","content":"<p>Floyd-Steinberg扩散抖动算法，用在图像处理中，例如将图像转换成最多256色的GIF格式。</p>\n<p>该算法利用误差扩散实现抖动，从左到右、由上至下扫描图像的像素并将其逐个标准化（或二值化），把像素标准化后产生的误差叠加到相邻像素上，不影响已经处理过的像素。这样实现的效果是，如果某些像素向下取整，则下一个像素向上取整的可能性更大，这样使得平均量化误差最小。</p>\n<p>下面伪代码中，输入图像的像素被标准化为[0, 1]，0为黑色，1为白色。</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">for each y from top to bottom</div><div class=\"line\">  for each x from left to right</div><div class=\"line\">    oldpixel = pixel[x][y]</div><div class=\"line\">    newpixel = round(oldpixel / 255)</div><div class=\"line\">    pixel[x][y] = newpixel</div><div class=\"line\">    quant_error = oldpixel - newpixel</div><div class=\"line\">    pixel[x + 1][y    ] += quant_error * 7 / 16</div><div class=\"line\">    pixel[x - 1][y + 1] += quant_error * 3 / 16</div><div class=\"line\">    pixel[x    ][y + 1] += quant_error * 5 / 16</div><div class=\"line\">    pixel[x + 1][y + 1] += quant_error * 1 / 16</div></pre></figure>\n<p>下面是Floyd-Steinberg扩散抖动算法在JS中的具体实现。</p>\n<h2 id=\"图片像素\"><a href=\"#图片像素\" class=\"headerlink\" title=\"图片像素\"></a>图片像素</h2><p>异步加载图片，用canvas做中介，将图片绘制到canvas画布上，使用画布的getImageData方法获取图片像素信息，该方法返回的imageData对象的data是一个Uint8ClampedArray数组，图像的每个像素信息占4个元素储存，其中：</p>\n<ul>\n<li>R - 红色 (0-255)</li>\n<li>G - 绿色 (0-255)</li>\n<li>B - 蓝色 (0-255)</li>\n<li>A - alpha通道 (0-255 0透明 255完全可见)</li>\n</ul>\n<div class=\"scrollable-wrapper\"><img src=\"/images/else/kid-l.jpg\" width=\"280\"></div>\n\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getImg</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> img = <span class=\"keyword\">new</span> Image()</div><div class=\"line\">    img.src = <span class=\"string\">'/images/else/kid-s.jpg'</span></div><div class=\"line\">    <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> img.addEventListener(<span class=\"string\">'load'</span>, resolve))</div><div class=\"line\">    <span class=\"keyword\">const</span> width = img.width</div><div class=\"line\">    <span class=\"keyword\">const</span> height = img.height</div><div class=\"line\">    <span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>)</div><div class=\"line\">    canvas.setAttribute(<span class=\"string\">'width'</span>, width)</div><div class=\"line\">    canvas.setAttribute(<span class=\"string\">'height'</span>, height)</div><div class=\"line\">    <span class=\"keyword\">const</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>)</div><div class=\"line\">    ctx.drawImage(img, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</div><div class=\"line\">    <span class=\"keyword\">const</span> imageData = ctx.getImageData(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height)</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        width,</div><div class=\"line\">        height,</div><div class=\"line\">        data: imageData.data</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"扩散抖动\"><a href=\"#扩散抖动\" class=\"headerlink\" title=\"扩散抖动\"></a>扩散抖动</h2><p>为简化演示，这里使用了不含色彩信息的灰度图像，其像素点的R、G和B数值是相同的；图片格式为JPG，无半透明效果，即alpha通道数值均为255。</p>\n<p>根据imageData的数据形式，这里像素数据每4个一组进行处理。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> px = <span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> x * <span class=\"number\">4</span> + y * width * <span class=\"number\">4</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> y = <span class=\"number\">0</span>; y &lt; height; y++) &#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> x = <span class=\"number\">0</span>; x &lt; width; x++) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> oldPixel = data[px(x, y)]</div><div class=\"line\">        <span class=\"keyword\">const</span> newPixel = oldPixel &gt; <span class=\"number\">125</span> ? <span class=\"number\">255</span> : <span class=\"number\">0</span></div><div class=\"line\">        data[px(x, y)] = data[px(x, y) + <span class=\"number\">1</span>] = data[px(x, y) + <span class=\"number\">2</span>] = newPixel</div><div class=\"line\">        <span class=\"keyword\">const</span> quantError = oldPixel - newPixel</div><div class=\"line\"><br></div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y    )] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y    ) + <span class=\"number\">1</span>] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y    ) + <span class=\"number\">2</span>] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y    )] + quantError * <span class=\"number\">7</span> / <span class=\"number\">16</span></div><div class=\"line\"><br></div><div class=\"line\">        data[px(x - <span class=\"number\">1</span>, y + <span class=\"number\">1</span>)] =</div><div class=\"line\">        data[px(x - <span class=\"number\">1</span>, y + <span class=\"number\">1</span>) + <span class=\"number\">1</span>] =</div><div class=\"line\">        data[px(x - <span class=\"number\">1</span>, y + <span class=\"number\">1</span>) + <span class=\"number\">2</span>] =</div><div class=\"line\">        data[px(x - <span class=\"number\">1</span>, y + <span class=\"number\">1</span>)] + quantError * <span class=\"number\">3</span> / <span class=\"number\">16</span></div><div class=\"line\"><br></div><div class=\"line\">        data[px(x    , y + <span class=\"number\">1</span>)] =</div><div class=\"line\">        data[px(x    , y + <span class=\"number\">1</span>) + <span class=\"number\">1</span>] =</div><div class=\"line\">        data[px(x    , y + <span class=\"number\">1</span>) + <span class=\"number\">2</span>] =</div><div class=\"line\">        data[px(x    , y + <span class=\"number\">1</span>)] + quantError * <span class=\"number\">5</span> / <span class=\"number\">16</span></div><div class=\"line\"><br></div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y + <span class=\"number\">1</span>)] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y + <span class=\"number\">1</span>) + <span class=\"number\">1</span>] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y + <span class=\"number\">1</span>) + <span class=\"number\">2</span>] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y + <span class=\"number\">1</span>)] + quantError * <span class=\"number\">1</span> / <span class=\"number\">16</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"结果展示\"><a href=\"#结果展示\" class=\"headerlink\" title=\"结果展示\"></a>结果展示</h2><p>处理结果这里使用SVG展示，也可以使用canvas画布的putImageData方法绘制。可以看到Floyd-Steinberg处理后的图像比较细腻、失真较小、细节丰富。</p>\n<div class=\"scrollable-wrapper\"><svg id=\"dithering\"/></div>\n\n<p><cite>参考：<br><a href=\"https://observablehq.com/@tmcw/dithering\" target=\"_blank\" rel=\"noopener\">https://observablehq.com/@tmcw/dithering</a><br><a href=\"https://observablehq.com/@tmcw/final-step-of-dithering-to-svg\" target=\"_blank\" rel=\"noopener\">https://observablehq.com/@tmcw/final-step-of-dithering-to-svg</a></cite></p>\n\n<script>\nasync function getImg() {\n    const img = new Image()\n    img.src = '/images/else/kid-s.jpg'\n    await new Promise(resolve => img.addEventListener('load', resolve))\n    const width = img.width\n    const height = img.height\n    const canvas = document.createElement('canvas')\n    canvas.setAttribute('width', width)\n    canvas.setAttribute('height', height)\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n    const imageData = ctx.getImageData(0, 0, width, height)\n    return {\n        width,\n        height,\n        data: imageData.data\n    }\n}\n\n\ngetImg().then(({ width, height, data }) => {\n\n    const px = (x, y) => x * 4 + y * width * 4\n\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const oldPixel = data[px(x, y)]\n            const newPixel = oldPixel > 125 ? 255 : 0\n            data[px(x, y)] = data[px(x, y) + 1] = data[px(x, y) + 2] = newPixel\n            const quantError = oldPixel - newPixel\n\n            data[px(x + 1, y    )] =\n            data[px(x + 1, y    ) + 1] =\n            data[px(x + 1, y    ) + 2] =\n            data[px(x + 1, y    )] + quantError * 7 / 16\n\n            data[px(x - 1, y + 1)] =\n            data[px(x - 1, y + 1) + 1] =\n            data[px(x - 1, y + 1) + 2] =\n            data[px(x - 1, y + 1)] + quantError * 3 / 16\n\n            data[px(x    , y + 1)] =\n            data[px(x    , y + 1) + 1] =\n            data[px(x    , y + 1) + 2] =\n            data[px(x    , y + 1)] + quantError * 5 / 16\n\n            data[px(x + 1, y + 1)] =\n            data[px(x + 1, y + 1) + 1] =\n            data[px(x + 1, y + 1) + 2] =\n            data[px(x + 1, y + 1)] + quantError * 1 / 16\n        }\n    }\n\n    const w = width * 4\n    let d = ''\n    for (let i = 0; i < data.length; i += w) {\n        const y = Math.floor(i / w)\n        d += `M0, ${y}`\n        let line = false\n        for (let j = i; j < i + w; j += 4) {\n            const co = `${(j % w) / 4}, ${y}`\n            if (data[j] === 0) {\n                if (!line) {\n                    d += 'M' + co\n                    line = true\n                }\n            } else {\n                if (line) {\n                    d += 'L' + co\n                    line = false\n                }\n            }\n        }\n    }\n\n    const svg = document.getElementById('dithering')\n    svg.setAttribute('width', width)\n    svg.setAttribute('height', height)\n    svg.innerHTML = `<path d=\"${d}\" stroke=\"#232520\" stroke-width=\"0.5\" fill=\"none\"></path>`\n\n})\n</script>\n\n","site":{"data":{}},"excerpt":"","more":"<p>Floyd-Steinberg扩散抖动算法，用在图像处理中，例如将图像转换成最多256色的GIF格式。</p>\n<p>该算法利用误差扩散实现抖动，从左到右、由上至下扫描图像的像素并将其逐个标准化（或二值化），把像素标准化后产生的误差叠加到相邻像素上，不影响已经处理过的像素。这样实现的效果是，如果某些像素向下取整，则下一个像素向上取整的可能性更大，这样使得平均量化误差最小。</p>\n<p>下面伪代码中，输入图像的像素被标准化为[0, 1]，0为黑色，1为白色。</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">for each y from top to bottom</div><div class=\"line\">  for each x from left to right</div><div class=\"line\">    oldpixel = pixel[x][y]</div><div class=\"line\">    newpixel = round(oldpixel / 255)</div><div class=\"line\">    pixel[x][y] = newpixel</div><div class=\"line\">    quant_error = oldpixel - newpixel</div><div class=\"line\">    pixel[x + 1][y    ] += quant_error * 7 / 16</div><div class=\"line\">    pixel[x - 1][y + 1] += quant_error * 3 / 16</div><div class=\"line\">    pixel[x    ][y + 1] += quant_error * 5 / 16</div><div class=\"line\">    pixel[x + 1][y + 1] += quant_error * 1 / 16</div></pre></figure>\n<p>下面是Floyd-Steinberg扩散抖动算法在JS中的具体实现。</p>\n<h2 id=\"图片像素\"><a href=\"#图片像素\" class=\"headerlink\" title=\"图片像素\"></a>图片像素</h2><p>异步加载图片，用canvas做中介，将图片绘制到canvas画布上，使用画布的getImageData方法获取图片像素信息，该方法返回的imageData对象的data是一个Uint8ClampedArray数组，图像的每个像素信息占4个元素储存，其中：</p>\n<ul>\n<li>R - 红色 (0-255)</li>\n<li>G - 绿色 (0-255)</li>\n<li>B - 蓝色 (0-255)</li>\n<li>A - alpha通道 (0-255 0透明 255完全可见)</li>\n</ul>\n<div class=\"scrollable-wrapper\"><img src=\"/images/else/kid-l.jpg\" width=\"280\"></div>\n\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getImg</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> img = <span class=\"keyword\">new</span> Image()</div><div class=\"line\">    img.src = <span class=\"string\">'/images/else/kid-s.jpg'</span></div><div class=\"line\">    <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> img.addEventListener(<span class=\"string\">'load'</span>, resolve))</div><div class=\"line\">    <span class=\"keyword\">const</span> width = img.width</div><div class=\"line\">    <span class=\"keyword\">const</span> height = img.height</div><div class=\"line\">    <span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>)</div><div class=\"line\">    canvas.setAttribute(<span class=\"string\">'width'</span>, width)</div><div class=\"line\">    canvas.setAttribute(<span class=\"string\">'height'</span>, height)</div><div class=\"line\">    <span class=\"keyword\">const</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>)</div><div class=\"line\">    ctx.drawImage(img, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</div><div class=\"line\">    <span class=\"keyword\">const</span> imageData = ctx.getImageData(<span class=\"number\">0</span>, <span class=\"number\">0</span>, width, height)</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        width,</div><div class=\"line\">        height,</div><div class=\"line\">        data: imageData.data</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"扩散抖动\"><a href=\"#扩散抖动\" class=\"headerlink\" title=\"扩散抖动\"></a>扩散抖动</h2><p>为简化演示，这里使用了不含色彩信息的灰度图像，其像素点的R、G和B数值是相同的；图片格式为JPG，无半透明效果，即alpha通道数值均为255。</p>\n<p>根据imageData的数据形式，这里像素数据每4个一组进行处理。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> px = <span class=\"function\">(<span class=\"params\">x, y</span>) =&gt;</span> x * <span class=\"number\">4</span> + y * width * <span class=\"number\">4</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> y = <span class=\"number\">0</span>; y &lt; height; y++) &#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> x = <span class=\"number\">0</span>; x &lt; width; x++) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> oldPixel = data[px(x, y)]</div><div class=\"line\">        <span class=\"keyword\">const</span> newPixel = oldPixel &gt; <span class=\"number\">125</span> ? <span class=\"number\">255</span> : <span class=\"number\">0</span></div><div class=\"line\">        data[px(x, y)] = data[px(x, y) + <span class=\"number\">1</span>] = data[px(x, y) + <span class=\"number\">2</span>] = newPixel</div><div class=\"line\">        <span class=\"keyword\">const</span> quantError = oldPixel - newPixel</div><div class=\"line\"><br></div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y    )] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y    ) + <span class=\"number\">1</span>] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y    ) + <span class=\"number\">2</span>] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y    )] + quantError * <span class=\"number\">7</span> / <span class=\"number\">16</span></div><div class=\"line\"><br></div><div class=\"line\">        data[px(x - <span class=\"number\">1</span>, y + <span class=\"number\">1</span>)] =</div><div class=\"line\">        data[px(x - <span class=\"number\">1</span>, y + <span class=\"number\">1</span>) + <span class=\"number\">1</span>] =</div><div class=\"line\">        data[px(x - <span class=\"number\">1</span>, y + <span class=\"number\">1</span>) + <span class=\"number\">2</span>] =</div><div class=\"line\">        data[px(x - <span class=\"number\">1</span>, y + <span class=\"number\">1</span>)] + quantError * <span class=\"number\">3</span> / <span class=\"number\">16</span></div><div class=\"line\"><br></div><div class=\"line\">        data[px(x    , y + <span class=\"number\">1</span>)] =</div><div class=\"line\">        data[px(x    , y + <span class=\"number\">1</span>) + <span class=\"number\">1</span>] =</div><div class=\"line\">        data[px(x    , y + <span class=\"number\">1</span>) + <span class=\"number\">2</span>] =</div><div class=\"line\">        data[px(x    , y + <span class=\"number\">1</span>)] + quantError * <span class=\"number\">5</span> / <span class=\"number\">16</span></div><div class=\"line\"><br></div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y + <span class=\"number\">1</span>)] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y + <span class=\"number\">1</span>) + <span class=\"number\">1</span>] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y + <span class=\"number\">1</span>) + <span class=\"number\">2</span>] =</div><div class=\"line\">        data[px(x + <span class=\"number\">1</span>, y + <span class=\"number\">1</span>)] + quantError * <span class=\"number\">1</span> / <span class=\"number\">16</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"结果展示\"><a href=\"#结果展示\" class=\"headerlink\" title=\"结果展示\"></a>结果展示</h2><p>处理结果这里使用SVG展示，也可以使用canvas画布的putImageData方法绘制。可以看到Floyd-Steinberg处理后的图像比较细腻、失真较小、细节丰富。</p>\n<div class=\"scrollable-wrapper\"><svg id=\"dithering\"/></div>\n\n<p><cite>参考：<br><a href=\"https://observablehq.com/@tmcw/dithering\" target=\"_blank\" rel=\"noopener\">https://observablehq.com/@tmcw/dithering</a><br><a href=\"https://observablehq.com/@tmcw/final-step-of-dithering-to-svg\" target=\"_blank\" rel=\"noopener\">https://observablehq.com/@tmcw/final-step-of-dithering-to-svg</a></cite></p>\n\n<script>\nasync function getImg() {\n    const img = new Image()\n    img.src = '/images/else/kid-s.jpg'\n    await new Promise(resolve => img.addEventListener('load', resolve))\n    const width = img.width\n    const height = img.height\n    const canvas = document.createElement('canvas')\n    canvas.setAttribute('width', width)\n    canvas.setAttribute('height', height)\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n    const imageData = ctx.getImageData(0, 0, width, height)\n    return {\n        width,\n        height,\n        data: imageData.data\n    }\n}\n\n\ngetImg().then(({ width, height, data }) => {\n\n    const px = (x, y) => x * 4 + y * width * 4\n\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const oldPixel = data[px(x, y)]\n            const newPixel = oldPixel > 125 ? 255 : 0\n            data[px(x, y)] = data[px(x, y) + 1] = data[px(x, y) + 2] = newPixel\n            const quantError = oldPixel - newPixel\n\n            data[px(x + 1, y    )] =\n            data[px(x + 1, y    ) + 1] =\n            data[px(x + 1, y    ) + 2] =\n            data[px(x + 1, y    )] + quantError * 7 / 16\n\n            data[px(x - 1, y + 1)] =\n            data[px(x - 1, y + 1) + 1] =\n            data[px(x - 1, y + 1) + 2] =\n            data[px(x - 1, y + 1)] + quantError * 3 / 16\n\n            data[px(x    , y + 1)] =\n            data[px(x    , y + 1) + 1] =\n            data[px(x    , y + 1) + 2] =\n            data[px(x    , y + 1)] + quantError * 5 / 16\n\n            data[px(x + 1, y + 1)] =\n            data[px(x + 1, y + 1) + 1] =\n            data[px(x + 1, y + 1) + 2] =\n            data[px(x + 1, y + 1)] + quantError * 1 / 16\n        }\n    }\n\n    const w = width * 4\n    let d = ''\n    for (let i = 0; i < data.length; i += w) {\n        const y = Math.floor(i / w)\n        d += `M0, ${y}`\n        let line = false\n        for (let j = i; j < i + w; j += 4) {\n            const co = `${(j % w) / 4}, ${y}`\n            if (data[j] === 0) {\n                if (!line) {\n                    d += 'M' + co\n                    line = true\n                }\n            } else {\n                if (line) {\n                    d += 'L' + co\n                    line = false\n                }\n            }\n        }\n    }\n\n    const svg = document.getElementById('dithering')\n    svg.setAttribute('width', width)\n    svg.setAttribute('height', height)\n    svg.innerHTML = `<path d=\"${d}\" stroke=\"#232520\" stroke-width=\"0.5\" fill=\"none\"></path>`\n\n})\n</script>\n\n"},{"title":"在LabVIEW中进行FFT快速离散傅里叶变换","date":"2013-05-31T16:00:00.000Z","keywords":"FFT, 快速离散傅里叶变换, LabVIEW","description":"在LabVIEW中进行FFT快速离散傅里叶变换的程序","_content":"\n在LabVIEW中进行FFT快速离散傅里叶变换的程序框图如下：\n\n{% img /images/labview/labviewfft.gif 275 %}\n\n首先构造示例周期信号，其5个参数由上至下依次为：频率、幅值、初始相位、每秒采样率、采样数。其中每秒采样率和采样数对FFT结果的影响见文章：[用MATLAB演示采样频率和点数对FFT的影响](matlab1.html)。\n\n在LabVIEW中计算输入序列X的快速离散傅里叶变换后，需要把复数分解为极坐标分量得到振幅，即求：\n\n```\nr = |z| = sqrt(a² + b²)\n```\n\n其计算结果还需乘以2除以采样点数才可以得到真实振幅。\n\n采样点数可以直接引取#s值，而对于非构造的实际未知信号，可以先获取波形成分中的Y值，再计算数组大小得到。\n\nFFT频谱图具有对称性，使用数组子集显示一半即可。\n\n使用到的LabVIEW函数位置分别为：\n\n- 信号处理 > 波形生成 > 正弦波形\n- 信号处理 > 变换 > FFT\n- 编程 > 数组 > 数组子集\n- 编程 > 数组 > 复数 > 复数至极坐标转换\n- 编程 > 簇、类与变体 > 捆绑\n- 编程 > 波形 > 获取波形成分\n- 编程 > 数组 > 数组大小\n","source":"_posts/labview2.md","raw":"---\ntitle: 在LabVIEW中进行FFT快速离散傅里叶变换\ndate: 2013-06-01 00:00:00\ncategories: Uncategorized\nkeywords: FFT, 快速离散傅里叶变换, LabVIEW\ndescription: 在LabVIEW中进行FFT快速离散傅里叶变换的程序\n---\n\n在LabVIEW中进行FFT快速离散傅里叶变换的程序框图如下：\n\n{% img /images/labview/labviewfft.gif 275 %}\n\n首先构造示例周期信号，其5个参数由上至下依次为：频率、幅值、初始相位、每秒采样率、采样数。其中每秒采样率和采样数对FFT结果的影响见文章：[用MATLAB演示采样频率和点数对FFT的影响](matlab1.html)。\n\n在LabVIEW中计算输入序列X的快速离散傅里叶变换后，需要把复数分解为极坐标分量得到振幅，即求：\n\n```\nr = |z| = sqrt(a² + b²)\n```\n\n其计算结果还需乘以2除以采样点数才可以得到真实振幅。\n\n采样点数可以直接引取#s值，而对于非构造的实际未知信号，可以先获取波形成分中的Y值，再计算数组大小得到。\n\nFFT频谱图具有对称性，使用数组子集显示一半即可。\n\n使用到的LabVIEW函数位置分别为：\n\n- 信号处理 > 波形生成 > 正弦波形\n- 信号处理 > 变换 > FFT\n- 编程 > 数组 > 数组子集\n- 编程 > 数组 > 复数 > 复数至极坐标转换\n- 编程 > 簇、类与变体 > 捆绑\n- 编程 > 波形 > 获取波形成分\n- 编程 > 数组 > 数组大小\n","slug":"labview2","published":1,"updated":"2018-11-29T10:24:58.823Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyl00133a8im2cuke34","content":"<p>在LabVIEW中进行FFT快速离散傅里叶变换的程序框图如下：</p>\n<img src=\"/images/labview/labviewfft.gif\" width=\"275\">\n<p>首先构造示例周期信号，其5个参数由上至下依次为：频率、幅值、初始相位、每秒采样率、采样数。其中每秒采样率和采样数对FFT结果的影响见文章：<a href=\"matlab1.html\">用MATLAB演示采样频率和点数对FFT的影响</a>。</p>\n<p>在LabVIEW中计算输入序列X的快速离散傅里叶变换后，需要把复数分解为极坐标分量得到振幅，即求：</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">r = |z| = sqrt(a² + b²)</div></pre></figure>\n<p>其计算结果还需乘以2除以采样点数才可以得到真实振幅。</p>\n<p>采样点数可以直接引取#s值，而对于非构造的实际未知信号，可以先获取波形成分中的Y值，再计算数组大小得到。</p>\n<p>FFT频谱图具有对称性，使用数组子集显示一半即可。</p>\n<p>使用到的LabVIEW函数位置分别为：</p>\n<ul>\n<li>信号处理 &gt; 波形生成 &gt; 正弦波形</li>\n<li>信号处理 &gt; 变换 &gt; FFT</li>\n<li>编程 &gt; 数组 &gt; 数组子集</li>\n<li>编程 &gt; 数组 &gt; 复数 &gt; 复数至极坐标转换</li>\n<li>编程 &gt; 簇、类与变体 &gt; 捆绑</li>\n<li>编程 &gt; 波形 &gt; 获取波形成分</li>\n<li>编程 &gt; 数组 &gt; 数组大小</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>在LabVIEW中进行FFT快速离散傅里叶变换的程序框图如下：</p>\n<img src=\"/images/labview/labviewfft.gif\" width=\"275\">\n<p>首先构造示例周期信号，其5个参数由上至下依次为：频率、幅值、初始相位、每秒采样率、采样数。其中每秒采样率和采样数对FFT结果的影响见文章：<a href=\"matlab1.html\">用MATLAB演示采样频率和点数对FFT的影响</a>。</p>\n<p>在LabVIEW中计算输入序列X的快速离散傅里叶变换后，需要把复数分解为极坐标分量得到振幅，即求：</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">r = |z| = sqrt(a² + b²)</div></pre></figure>\n<p>其计算结果还需乘以2除以采样点数才可以得到真实振幅。</p>\n<p>采样点数可以直接引取#s值，而对于非构造的实际未知信号，可以先获取波形成分中的Y值，再计算数组大小得到。</p>\n<p>FFT频谱图具有对称性，使用数组子集显示一半即可。</p>\n<p>使用到的LabVIEW函数位置分别为：</p>\n<ul>\n<li>信号处理 &gt; 波形生成 &gt; 正弦波形</li>\n<li>信号处理 &gt; 变换 &gt; FFT</li>\n<li>编程 &gt; 数组 &gt; 数组子集</li>\n<li>编程 &gt; 数组 &gt; 复数 &gt; 复数至极坐标转换</li>\n<li>编程 &gt; 簇、类与变体 &gt; 捆绑</li>\n<li>编程 &gt; 波形 &gt; 获取波形成分</li>\n<li>编程 &gt; 数组 &gt; 数组大小</li>\n</ul>\n"},{"title":"LabVIEW求一列数前后两数的差值","date":"2013-05-02T16:00:00.000Z","keywords":"LabVIEW","description":"在LabVIEW中，先计算数组大小，在For循环中使用索引数组不断循环引用各组前后两个数求差","_content":"\n通过数据采集卡采集光栅式转角编码器的脉冲信号，在LabVIEW软件中用固定的时间间隔读取一系列脉冲数，接着计算电机转速时，需要计算此脉冲序列前后两数的差值，LabVIEW软件中没有现成函数，故编写如下：\n\n{% img /images/labview/subtract.gif 275 %}\n\n先计算数组大小，在For循环中使用索引数组不断循环引用各组前后两个数求差。\n\n使用到的LabVIEW函数位置分别为：\n\n- 编程 > 数组 > 数组大小\n- 编程 > 结构 > For循环\n- 编程 > 数组 > 索引数组\n","source":"_posts/labview3.md","raw":"---\ntitle: LabVIEW求一列数前后两数的差值\ndate: 2013-05-03 00:00:00\ncategories: Uncategorized\nkeywords: LabVIEW\ndescription: 在LabVIEW中，先计算数组大小，在For循环中使用索引数组不断循环引用各组前后两个数求差\n---\n\n通过数据采集卡采集光栅式转角编码器的脉冲信号，在LabVIEW软件中用固定的时间间隔读取一系列脉冲数，接着计算电机转速时，需要计算此脉冲序列前后两数的差值，LabVIEW软件中没有现成函数，故编写如下：\n\n{% img /images/labview/subtract.gif 275 %}\n\n先计算数组大小，在For循环中使用索引数组不断循环引用各组前后两个数求差。\n\n使用到的LabVIEW函数位置分别为：\n\n- 编程 > 数组 > 数组大小\n- 编程 > 结构 > For循环\n- 编程 > 数组 > 索引数组\n","slug":"labview3","published":1,"updated":"2019-01-04T01:54:52.454Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emym00153a8i7dex20ev","content":"<p>通过数据采集卡采集光栅式转角编码器的脉冲信号，在LabVIEW软件中用固定的时间间隔读取一系列脉冲数，接着计算电机转速时，需要计算此脉冲序列前后两数的差值，LabVIEW软件中没有现成函数，故编写如下：</p>\n<img src=\"/images/labview/subtract.gif\" width=\"275\">\n<p>先计算数组大小，在For循环中使用索引数组不断循环引用各组前后两个数求差。</p>\n<p>使用到的LabVIEW函数位置分别为：</p>\n<ul>\n<li>编程 &gt; 数组 &gt; 数组大小</li>\n<li>编程 &gt; 结构 &gt; For循环</li>\n<li>编程 &gt; 数组 &gt; 索引数组</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>通过数据采集卡采集光栅式转角编码器的脉冲信号，在LabVIEW软件中用固定的时间间隔读取一系列脉冲数，接着计算电机转速时，需要计算此脉冲序列前后两数的差值，LabVIEW软件中没有现成函数，故编写如下：</p>\n<img src=\"/images/labview/subtract.gif\" width=\"275\">\n<p>先计算数组大小，在For循环中使用索引数组不断循环引用各组前后两个数求差。</p>\n<p>使用到的LabVIEW函数位置分别为：</p>\n<ul>\n<li>编程 &gt; 数组 &gt; 数组大小</li>\n<li>编程 &gt; 结构 &gt; For循环</li>\n<li>编程 &gt; 数组 &gt; 索引数组</li>\n</ul>\n"},{"title":"用MATLAB演示采样频率和点数对FFT的影响","date":"2013-05-17T16:00:00.000Z","keywords":"FFT, MATLAB","description":"在MATLAB中指定不同的采样频率和采样点数，调用函数做FFT计算，并绘图显示","_content":"\nFFT是指离散傅里叶变换的快速算法，可将时域信号变换为频域。\n\n在MATLAB中做FFT，首先编写函数，对不同的采样频率和采样点数，计算FFT后的频率序列及其对应的幅值：\n\n``` MATLAB\nfunction [f amplitude] = yopheeFFT(sampleRate,FFT_points)\n    n = 0:FFT_points-1;\n    t = n/sampleRate; %采样时间序列\n    f_All = n*sampleRate/FFT_points; %频率序列\n\n    %构造混有噪声的周期信号并采样\n    signal = 2*sin(2*pi*10*t)+1*sin(2*pi*20.25*t)+0.2*randn(size(t));\n\n    %对信号进行快速Fourier变换，并求振幅\n    amplitude_All = abs(fft(signal,FFT_points))*2/FFT_points;\n\n    f = f_All(1:FFT_points/2);\n    amplitude = amplitude_All(1:FFT_points/2);\n```\n\n其中时域信号为幅值2、频率10Hz和幅值1、频率20.25Hz的两个正弦信号和一个噪声信号的叠加。\n\n指定不同的采样频率和采样点数，调用函数做FFT计算，并绘图显示：\n\n``` MATLAB\nsampleRate = 32; %采样频率\nFFT_points = 64; %采样点数\n[f amplitude] = yopheeFFT(sampleRate,FFT_points);\nplot(f,amplitude);\n\nsampleRate = 64;\nFFT_points = 64;\n[f amplitude] = yopheeFFT(sampleRate,FFT_points);\nplot(f,amplitude);\n\nsampleRate = 64;\nFFT_points = 512;\n[f amplitude] = yopheeFFT(sampleRate,FFT_points);\nplot(f,amplitude);\n```\n\n{% img /images/matlab/fft.gif 275 %}\n\n图片上方为时域信号。下左图采样频率低于信号成分最高频率的2倍，未识别出信号中20.25Hz的频率成分，并且出现[混叠](http://baike.baidu.com/view/3177356.htm)。下中图频率分辨率为1Hz，将20.25Hz识别为20Hz。\n\n总结：\n\n- FFT频谱图具有对称性，显示一半即可\n- FFT计算结果乘以2除以采样点数得到真实振幅\n- FFT频率分辨率 ＝ 采样频率 / 采样点数\n- 采样频率应大于信号中最高频率的2倍\n","source":"_posts/matlab1.md","raw":"---\ntitle: 用MATLAB演示采样频率和点数对FFT的影响\ndate: 2013-05-18 00:00:00\ncategories: Uncategorized\nkeywords: FFT, MATLAB\ndescription: 在MATLAB中指定不同的采样频率和采样点数，调用函数做FFT计算，并绘图显示\n---\n\nFFT是指离散傅里叶变换的快速算法，可将时域信号变换为频域。\n\n在MATLAB中做FFT，首先编写函数，对不同的采样频率和采样点数，计算FFT后的频率序列及其对应的幅值：\n\n``` MATLAB\nfunction [f amplitude] = yopheeFFT(sampleRate,FFT_points)\n    n = 0:FFT_points-1;\n    t = n/sampleRate; %采样时间序列\n    f_All = n*sampleRate/FFT_points; %频率序列\n\n    %构造混有噪声的周期信号并采样\n    signal = 2*sin(2*pi*10*t)+1*sin(2*pi*20.25*t)+0.2*randn(size(t));\n\n    %对信号进行快速Fourier变换，并求振幅\n    amplitude_All = abs(fft(signal,FFT_points))*2/FFT_points;\n\n    f = f_All(1:FFT_points/2);\n    amplitude = amplitude_All(1:FFT_points/2);\n```\n\n其中时域信号为幅值2、频率10Hz和幅值1、频率20.25Hz的两个正弦信号和一个噪声信号的叠加。\n\n指定不同的采样频率和采样点数，调用函数做FFT计算，并绘图显示：\n\n``` MATLAB\nsampleRate = 32; %采样频率\nFFT_points = 64; %采样点数\n[f amplitude] = yopheeFFT(sampleRate,FFT_points);\nplot(f,amplitude);\n\nsampleRate = 64;\nFFT_points = 64;\n[f amplitude] = yopheeFFT(sampleRate,FFT_points);\nplot(f,amplitude);\n\nsampleRate = 64;\nFFT_points = 512;\n[f amplitude] = yopheeFFT(sampleRate,FFT_points);\nplot(f,amplitude);\n```\n\n{% img /images/matlab/fft.gif 275 %}\n\n图片上方为时域信号。下左图采样频率低于信号成分最高频率的2倍，未识别出信号中20.25Hz的频率成分，并且出现[混叠](http://baike.baidu.com/view/3177356.htm)。下中图频率分辨率为1Hz，将20.25Hz识别为20Hz。\n\n总结：\n\n- FFT频谱图具有对称性，显示一半即可\n- FFT计算结果乘以2除以采样点数得到真实振幅\n- FFT频率分辨率 ＝ 采样频率 / 采样点数\n- 采样频率应大于信号中最高频率的2倍\n","slug":"matlab1","published":1,"updated":"2018-12-03T02:28:52.774Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emym00173a8ib3iwa881","content":"<p>FFT是指离散傅里叶变换的快速算法，可将时域信号变换为频域。</p>\n<p>在MATLAB中做FFT，首先编写函数，对不同的采样频率和采样点数，计算FFT后的频率序列及其对应的幅值：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[f amplitude]</span> = <span class=\"title\">yopheeFFT</span><span class=\"params\">(sampleRate,FFT_points)</span></span></div><div class=\"line\">    n = <span class=\"number\">0</span>:FFT_points<span class=\"number\">-1</span>;</div><div class=\"line\">    t = n/sampleRate; <span class=\"comment\">%采样时间序列</span></div><div class=\"line\">    f_All = n*sampleRate/FFT_points; <span class=\"comment\">%频率序列</span></div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">%构造混有噪声的周期信号并采样</span></div><div class=\"line\">    signal = <span class=\"number\">2</span>*<span class=\"built_in\">sin</span>(<span class=\"number\">2</span>*<span class=\"built_in\">pi</span>*<span class=\"number\">10</span>*t)+<span class=\"number\">1</span>*<span class=\"built_in\">sin</span>(<span class=\"number\">2</span>*<span class=\"built_in\">pi</span>*<span class=\"number\">20.25</span>*t)+<span class=\"number\">0.2</span>*<span class=\"built_in\">randn</span>(<span class=\"built_in\">size</span>(t));</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">%对信号进行快速Fourier变换，并求振幅</span></div><div class=\"line\">    amplitude_All = <span class=\"built_in\">abs</span>(fft(signal,FFT_points))*<span class=\"number\">2</span>/FFT_points;</div><div class=\"line\"><br></div><div class=\"line\">    f = f_All(<span class=\"number\">1</span>:FFT_points/<span class=\"number\">2</span>);</div><div class=\"line\">    amplitude = amplitude_All(<span class=\"number\">1</span>:FFT_points/<span class=\"number\">2</span>);</div></pre></figure>\n<p>其中时域信号为幅值2、频率10Hz和幅值1、频率20.25Hz的两个正弦信号和一个噪声信号的叠加。</p>\n<p>指定不同的采样频率和采样点数，调用函数做FFT计算，并绘图显示：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\">sampleRate = <span class=\"number\">32</span>; <span class=\"comment\">%采样频率</span></div><div class=\"line\">FFT_points = <span class=\"number\">64</span>; <span class=\"comment\">%采样点数</span></div><div class=\"line\">[f amplitude] = yopheeFFT(sampleRate,FFT_points);</div><div class=\"line\"><span class=\"built_in\">plot</span>(f,amplitude);</div><div class=\"line\"><br></div><div class=\"line\">sampleRate = <span class=\"number\">64</span>;</div><div class=\"line\">FFT_points = <span class=\"number\">64</span>;</div><div class=\"line\">[f amplitude] = yopheeFFT(sampleRate,FFT_points);</div><div class=\"line\"><span class=\"built_in\">plot</span>(f,amplitude);</div><div class=\"line\"><br></div><div class=\"line\">sampleRate = <span class=\"number\">64</span>;</div><div class=\"line\">FFT_points = <span class=\"number\">512</span>;</div><div class=\"line\">[f amplitude] = yopheeFFT(sampleRate,FFT_points);</div><div class=\"line\"><span class=\"built_in\">plot</span>(f,amplitude);</div></pre></figure>\n<img src=\"/images/matlab/fft.gif\" width=\"275\">\n<p>图片上方为时域信号。下左图采样频率低于信号成分最高频率的2倍，未识别出信号中20.25Hz的频率成分，并且出现<a href=\"http://baike.baidu.com/view/3177356.htm\" target=\"_blank\" rel=\"noopener\">混叠</a>。下中图频率分辨率为1Hz，将20.25Hz识别为20Hz。</p>\n<p>总结：</p>\n<ul>\n<li>FFT频谱图具有对称性，显示一半即可</li>\n<li>FFT计算结果乘以2除以采样点数得到真实振幅</li>\n<li>FFT频率分辨率 ＝ 采样频率 / 采样点数</li>\n<li>采样频率应大于信号中最高频率的2倍</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>FFT是指离散傅里叶变换的快速算法，可将时域信号变换为频域。</p>\n<p>在MATLAB中做FFT，首先编写函数，对不同的采样频率和采样点数，计算FFT后的频率序列及其对应的幅值：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[f amplitude]</span> = <span class=\"title\">yopheeFFT</span><span class=\"params\">(sampleRate,FFT_points)</span></span></div><div class=\"line\">    n = <span class=\"number\">0</span>:FFT_points<span class=\"number\">-1</span>;</div><div class=\"line\">    t = n/sampleRate; <span class=\"comment\">%采样时间序列</span></div><div class=\"line\">    f_All = n*sampleRate/FFT_points; <span class=\"comment\">%频率序列</span></div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">%构造混有噪声的周期信号并采样</span></div><div class=\"line\">    signal = <span class=\"number\">2</span>*<span class=\"built_in\">sin</span>(<span class=\"number\">2</span>*<span class=\"built_in\">pi</span>*<span class=\"number\">10</span>*t)+<span class=\"number\">1</span>*<span class=\"built_in\">sin</span>(<span class=\"number\">2</span>*<span class=\"built_in\">pi</span>*<span class=\"number\">20.25</span>*t)+<span class=\"number\">0.2</span>*<span class=\"built_in\">randn</span>(<span class=\"built_in\">size</span>(t));</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">%对信号进行快速Fourier变换，并求振幅</span></div><div class=\"line\">    amplitude_All = <span class=\"built_in\">abs</span>(fft(signal,FFT_points))*<span class=\"number\">2</span>/FFT_points;</div><div class=\"line\"><br></div><div class=\"line\">    f = f_All(<span class=\"number\">1</span>:FFT_points/<span class=\"number\">2</span>);</div><div class=\"line\">    amplitude = amplitude_All(<span class=\"number\">1</span>:FFT_points/<span class=\"number\">2</span>);</div></pre></figure>\n<p>其中时域信号为幅值2、频率10Hz和幅值1、频率20.25Hz的两个正弦信号和一个噪声信号的叠加。</p>\n<p>指定不同的采样频率和采样点数，调用函数做FFT计算，并绘图显示：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\">sampleRate = <span class=\"number\">32</span>; <span class=\"comment\">%采样频率</span></div><div class=\"line\">FFT_points = <span class=\"number\">64</span>; <span class=\"comment\">%采样点数</span></div><div class=\"line\">[f amplitude] = yopheeFFT(sampleRate,FFT_points);</div><div class=\"line\"><span class=\"built_in\">plot</span>(f,amplitude);</div><div class=\"line\"><br></div><div class=\"line\">sampleRate = <span class=\"number\">64</span>;</div><div class=\"line\">FFT_points = <span class=\"number\">64</span>;</div><div class=\"line\">[f amplitude] = yopheeFFT(sampleRate,FFT_points);</div><div class=\"line\"><span class=\"built_in\">plot</span>(f,amplitude);</div><div class=\"line\"><br></div><div class=\"line\">sampleRate = <span class=\"number\">64</span>;</div><div class=\"line\">FFT_points = <span class=\"number\">512</span>;</div><div class=\"line\">[f amplitude] = yopheeFFT(sampleRate,FFT_points);</div><div class=\"line\"><span class=\"built_in\">plot</span>(f,amplitude);</div></pre></figure>\n<img src=\"/images/matlab/fft.gif\" width=\"275\">\n<p>图片上方为时域信号。下左图采样频率低于信号成分最高频率的2倍，未识别出信号中20.25Hz的频率成分，并且出现<a href=\"http://baike.baidu.com/view/3177356.htm\" target=\"_blank\" rel=\"noopener\">混叠</a>。下中图频率分辨率为1Hz，将20.25Hz识别为20Hz。</p>\n<p>总结：</p>\n<ul>\n<li>FFT频谱图具有对称性，显示一半即可</li>\n<li>FFT计算结果乘以2除以采样点数得到真实振幅</li>\n<li>FFT频率分辨率 ＝ 采样频率 / 采样点数</li>\n<li>采样频率应大于信号中最高频率的2倍</li>\n</ul>\n"},{"title":"用Proteus和Keil联调51单片机","date":"2012-10-21T16:00:00.000Z","keywords":"Flash动画","description":"Proteus是单片机及外围器件仿真软件，Keil是单片机C语言开发软件，设置实现Proteus和Keil对51单片机联调","_content":"\nProteus是单片机及外围器件仿真软件，Keil是单片机C语言开发软件，通过以下设置实现Proteus和Keil对51单片机的联调：\n\n1\\. 安装Proteus和Keil软件；\n\n2\\. 下载并安装联调驱动vdmagdi.exe；\n\n3\\. 将VDM51.dll从目录C:\\Keil\\C51\\BIN复制到C:\\Program Files\\Labcenter Electronics\\Proteus 7 Professional\\BIN中；\n\n4\\. 在Proteus中设计上图所示单片机电路（Proteus软件中可省略晶振电路及复位电路），在菜单“调试”中勾选“使用远程调试监控”；\n\n5\\. 在keil中编写对应的程序代码：\n\n``` C\n#include <reg51.h>\nvoid main(void)\n{\n    P1=0xFE;\n    while(1);\n}\n```\n\n6\\.在keil菜单“Project”中点选“Options for target 'target 1'”，在对话框的“Output”选项卡中选择“Create HEX Fi”，即让软件编译生成单片机使用的HEX文件，在对话框的“debug”选项卡中右上方的“Use”处选择“Proteus VSM Simulator”，即开启Proteus仿真；\n\n7\\. 在keil中调试C程序，在Proteus中观察单片机对应运行结果。\n\n{% img /images/mcu/mcu11.gif 275 %}\n","source":"_posts/mcu1.md","raw":"---\ntitle: 用Proteus和Keil联调51单片机\ndate: 2012-10-22 00:00:00\ncategories: Uncategorized\nkeywords: Flash动画\ndescription: Proteus是单片机及外围器件仿真软件，Keil是单片机C语言开发软件，设置实现Proteus和Keil对51单片机联调\n---\n\nProteus是单片机及外围器件仿真软件，Keil是单片机C语言开发软件，通过以下设置实现Proteus和Keil对51单片机的联调：\n\n1\\. 安装Proteus和Keil软件；\n\n2\\. 下载并安装联调驱动vdmagdi.exe；\n\n3\\. 将VDM51.dll从目录C:\\Keil\\C51\\BIN复制到C:\\Program Files\\Labcenter Electronics\\Proteus 7 Professional\\BIN中；\n\n4\\. 在Proteus中设计上图所示单片机电路（Proteus软件中可省略晶振电路及复位电路），在菜单“调试”中勾选“使用远程调试监控”；\n\n5\\. 在keil中编写对应的程序代码：\n\n``` C\n#include <reg51.h>\nvoid main(void)\n{\n    P1=0xFE;\n    while(1);\n}\n```\n\n6\\.在keil菜单“Project”中点选“Options for target 'target 1'”，在对话框的“Output”选项卡中选择“Create HEX Fi”，即让软件编译生成单片机使用的HEX文件，在对话框的“debug”选项卡中右上方的“Use”处选择“Proteus VSM Simulator”，即开启Proteus仿真；\n\n7\\. 在keil中调试C程序，在Proteus中观察单片机对应运行结果。\n\n{% img /images/mcu/mcu11.gif 275 %}\n","slug":"mcu1","published":1,"updated":"2018-12-03T02:28:52.775Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyn00193a8iq85zf723","content":"<p>Proteus是单片机及外围器件仿真软件，Keil是单片机C语言开发软件，通过以下设置实现Proteus和Keil对51单片机的联调：</p>\n<p>1. 安装Proteus和Keil软件；</p>\n<p>2. 下载并安装联调驱动vdmagdi.exe；</p>\n<p>3. 将VDM51.dll从目录C:\\Keil\\C51\\BIN复制到C:\\Program Files\\Labcenter Electronics\\Proteus 7 Professional\\BIN中；</p>\n<p>4. 在Proteus中设计上图所示单片机电路（Proteus软件中可省略晶振电路及复位电路），在菜单“调试”中勾选“使用远程调试监控”；</p>\n<p>5. 在keil中编写对应的程序代码：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;reg51.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    P1=<span class=\"number\">0xFE</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>);</div><div class=\"line\">&#125;</div></pre></figure>\n<p>6.在keil菜单“Project”中点选“Options for target ‘target 1’”，在对话框的“Output”选项卡中选择“Create HEX Fi”，即让软件编译生成单片机使用的HEX文件，在对话框的“debug”选项卡中右上方的“Use”处选择“Proteus VSM Simulator”，即开启Proteus仿真；</p>\n<p>7. 在keil中调试C程序，在Proteus中观察单片机对应运行结果。</p>\n<img src=\"/images/mcu/mcu11.gif\" width=\"275\">\n","site":{"data":{}},"excerpt":"","more":"<p>Proteus是单片机及外围器件仿真软件，Keil是单片机C语言开发软件，通过以下设置实现Proteus和Keil对51单片机的联调：</p>\n<p>1. 安装Proteus和Keil软件；</p>\n<p>2. 下载并安装联调驱动vdmagdi.exe；</p>\n<p>3. 将VDM51.dll从目录C:\\Keil\\C51\\BIN复制到C:\\Program Files\\Labcenter Electronics\\Proteus 7 Professional\\BIN中；</p>\n<p>4. 在Proteus中设计上图所示单片机电路（Proteus软件中可省略晶振电路及复位电路），在菜单“调试”中勾选“使用远程调试监控”；</p>\n<p>5. 在keil中编写对应的程序代码：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;reg51.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    P1=<span class=\"number\">0xFE</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>);</div><div class=\"line\">&#125;</div></pre></figure>\n<p>6.在keil菜单“Project”中点选“Options for target ‘target 1’”，在对话框的“Output”选项卡中选择“Create HEX Fi”，即让软件编译生成单片机使用的HEX文件，在对话框的“debug”选项卡中右上方的“Use”处选择“Proteus VSM Simulator”，即开启Proteus仿真；</p>\n<p>7. 在keil中调试C程序，在Proteus中观察单片机对应运行结果。</p>\n<img src=\"/images/mcu/mcu11.gif\" width=\"275\">\n"},{"title":"用MATLAB对PID控制做简单的仿真","date":"2013-04-12T16:00:00.000Z","keywords":"PID控制, MATLAB","description":"PID控制是将误差信号e(t)的比例(P)，积分(I)和微分(D)通过线性组合构成控制量进行控制，用MATLAB软件对PID控制做简单的仿真","_content":"\nPID控制是目前工程上应用最广的一种控制方法，其结构简单，且不依赖被控对象模型，控制所需的信息量也很少，因而易于工程实现，同时也可获得较好的控制效果。\n\nPID控制是将误差信号e(t)的比例(P)，积分(I)和微分(D)通过线性组合构成控制量进行控制，其输出信号为：\n\n{% raw %}\n\\[u(t) = {K_P}[e(t) + \\frac{1}{{{T_I}}}\\int_0^t {e(t)dt + {T_D}\\frac{{de(t)}}{{dt}}} ]\\]\n{% endraw %}\n\n下面用MATLAB软件对PID控制做简单的仿真描述。\n\n1\\. 建立二阶负反馈控制系统，其开环传递函数为：\n\n{% raw %}\n\\[{G_O}(s) = \\frac{1}{{(2s + 1)(5s + 1)}}\\]\n{% endraw %}\n\n``` MATLAB\nclc; clear all; close all;\nGo = tf(1,conv([2,1],[5,1]));\n```\n\n2\\. 比例控制，输出与输入偏差成比例，即直接将误差信号放大或缩小。比例控制的传递函数为：\n\n{% raw %}\n\\[{G_C}(s) = {K_P}\\]\n{% endraw %}\n\n取不同的比例系数，绘制系统的单位阶跃响应曲线：\n\n``` MATLAB\nKp = [0.5,2,5,10];\nfor m = 1:4\n    sys = feedback(Kp(m)*Go,1);\n    step(sys); hold on;\nend\n```\n\n{% img /images/matlab/P.gif 275 %}\n\n随着K<sub>P</sub>值的增大，系统响应速度加快，但系统的超调也随着增加，调节时间也随着增长。当K<sub>P</sub>增大到一定值后，闭环系统将趋于不稳定。\n\n比例控制具有抗干扰能力强、控制及时、过渡时间短的优点，但存在稳态误差，增大比例系数可提高系统的开环增益，减小系统的稳态误差，从而提高系统的控制精度，但这会降低系统的相对稳定性，甚至可能造成闭环系统的不稳定，因此，在系统校正和设计中，比例控制一般不单独使用。\n\n3\\. 微分控制，输出与输入偏差的微分成比例，即与偏差的变化速度成比例。微分控制（与比例控制同时使用）的传递函数为：\n\n{% raw %}\n\\[{G_C}(s) = {K_P}(1 + {T_D}s)\\]\n{% endraw %}\n\n取不同的微分系数，绘制系统的单位阶跃响应曲线：\n\n``` MATLAB\nKp = 10;\nTd = [0,0.4,1,4];\nfor m = 1:4\n    G1 = tf([Kp*Td(m),Kp],[0,1]);\n    sys = feedback(G1*Go,1);\n    step(sys); hold on;\nend\n```\n\n{% img /images/matlab/PD.gif 275 %}\n\n随着T<sub>D</sub>值的增大，系统超调量逐渐减小，动态特征有改善。\n\n自动控制系统在克服误差的调节过程中可能会出现振荡甚至不稳定，原因是存在有较大惯性或有滞后的组件，具有抑制误差的作用，其变化总是落后于误差的变化，在控制器质中仅引入比例项是不够的，比例项的作用仅是放大误差的幅值，而微分项能预测误差的变化趋势，这样，具有比例+微分的控制器，就能提前使抑制误差的控制作用等于零，甚至为负值，从而避免被控量的严重超调，改善动态特性。\n\n微分控制反映误差的变化率，只有当误差随时间变化时，微分控制才会对系统起作用，而对无变化或缓慢变化的对象不起作用。另外，微分控制对纯滞后环节不能起到改善控制品质的作用，反而具有放大高频噪声信号的缺点。\n\n4\\. 积分控制，输出与输入偏差的积分成比例，即与误差的积累成比例。积分控制（与比例控制同时使用）的传递函数为：\n\n{% raw %}\n\\[{G_C}(s) = {K_P}(1 + \\frac{1}{{{T_I}}} \\cdot \\frac{1}{s})\\]\n{% endraw %}\n\n取不同的积分系数，绘制系统的单位阶跃响应曲线：\n\n``` MATLAB\nKp = 2;\nTi = [3,6,12,24];\nfor m = 1:4\n    G1 = tf([Kp,Kp/Ti(m)],[1,0]);\n    sys = feedback(G1*Go,1);\n    step(sys); hold on;\nend\n```\n\n{% img /images/matlab/PI.gif 275 %}\n\n加入积分控制后，消除了系统稳态误差，但随着T<sub>I</sub>值的增大，达到稳态的过渡时间也逐渐加长。\n\n积分项对误差取决于时间的积分，随着时间的增加，积分项会增大。这样，即使误差很小，积分项也会随着时间的增加而加大，它推动控制器的输出增大，使稳态误差进一步减小，直到等于零，但会使系统稳定性降低，过渡时间也加长。\n\n5\\. 比例积分微分控制，即PID控制的传递函数为：\n\n{% raw %}\n\\[{G_C}(s) = {K_P}(1 + \\frac{1}{{{T_I}}} \\cdot \\frac{1}{s} + {T_D}s)\\]\n{% endraw %}\n\n取适当的比例、积分、微分系数，绘制系统的单位阶跃响应曲线：\n\n``` MATLAB\nKp = 100;\nTi = 2.2;\nTd = 7;\nG1 = tf([Kp(m)*Td(m),Kp(m),Kp(m)/Ti(m)],[0,1,0]); \nsys = feedback(G1*Go,1);\nstep(sys);\n```\n\n{% img /images/matlab/PID.gif 275 %}\n\nPID控制通过积分作用消除误差，而微分控制可缩小超调量、加快系统响应，是综合了PI控制和PD控制长处并去除其短处的控制。\n\n\n<script type=\"text/javascript\" async src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"></script>\n","source":"_posts/matlab2.md","raw":"---\ntitle: 用MATLAB对PID控制做简单的仿真\ndate: 2013-04-13 00:00:00\ncategories: Uncategorized\nkeywords: PID控制, MATLAB\ndescription: PID控制是将误差信号e(t)的比例(P)，积分(I)和微分(D)通过线性组合构成控制量进行控制，用MATLAB软件对PID控制做简单的仿真\n---\n\nPID控制是目前工程上应用最广的一种控制方法，其结构简单，且不依赖被控对象模型，控制所需的信息量也很少，因而易于工程实现，同时也可获得较好的控制效果。\n\nPID控制是将误差信号e(t)的比例(P)，积分(I)和微分(D)通过线性组合构成控制量进行控制，其输出信号为：\n\n{% raw %}\n\\[u(t) = {K_P}[e(t) + \\frac{1}{{{T_I}}}\\int_0^t {e(t)dt + {T_D}\\frac{{de(t)}}{{dt}}} ]\\]\n{% endraw %}\n\n下面用MATLAB软件对PID控制做简单的仿真描述。\n\n1\\. 建立二阶负反馈控制系统，其开环传递函数为：\n\n{% raw %}\n\\[{G_O}(s) = \\frac{1}{{(2s + 1)(5s + 1)}}\\]\n{% endraw %}\n\n``` MATLAB\nclc; clear all; close all;\nGo = tf(1,conv([2,1],[5,1]));\n```\n\n2\\. 比例控制，输出与输入偏差成比例，即直接将误差信号放大或缩小。比例控制的传递函数为：\n\n{% raw %}\n\\[{G_C}(s) = {K_P}\\]\n{% endraw %}\n\n取不同的比例系数，绘制系统的单位阶跃响应曲线：\n\n``` MATLAB\nKp = [0.5,2,5,10];\nfor m = 1:4\n    sys = feedback(Kp(m)*Go,1);\n    step(sys); hold on;\nend\n```\n\n{% img /images/matlab/P.gif 275 %}\n\n随着K<sub>P</sub>值的增大，系统响应速度加快，但系统的超调也随着增加，调节时间也随着增长。当K<sub>P</sub>增大到一定值后，闭环系统将趋于不稳定。\n\n比例控制具有抗干扰能力强、控制及时、过渡时间短的优点，但存在稳态误差，增大比例系数可提高系统的开环增益，减小系统的稳态误差，从而提高系统的控制精度，但这会降低系统的相对稳定性，甚至可能造成闭环系统的不稳定，因此，在系统校正和设计中，比例控制一般不单独使用。\n\n3\\. 微分控制，输出与输入偏差的微分成比例，即与偏差的变化速度成比例。微分控制（与比例控制同时使用）的传递函数为：\n\n{% raw %}\n\\[{G_C}(s) = {K_P}(1 + {T_D}s)\\]\n{% endraw %}\n\n取不同的微分系数，绘制系统的单位阶跃响应曲线：\n\n``` MATLAB\nKp = 10;\nTd = [0,0.4,1,4];\nfor m = 1:4\n    G1 = tf([Kp*Td(m),Kp],[0,1]);\n    sys = feedback(G1*Go,1);\n    step(sys); hold on;\nend\n```\n\n{% img /images/matlab/PD.gif 275 %}\n\n随着T<sub>D</sub>值的增大，系统超调量逐渐减小，动态特征有改善。\n\n自动控制系统在克服误差的调节过程中可能会出现振荡甚至不稳定，原因是存在有较大惯性或有滞后的组件，具有抑制误差的作用，其变化总是落后于误差的变化，在控制器质中仅引入比例项是不够的，比例项的作用仅是放大误差的幅值，而微分项能预测误差的变化趋势，这样，具有比例+微分的控制器，就能提前使抑制误差的控制作用等于零，甚至为负值，从而避免被控量的严重超调，改善动态特性。\n\n微分控制反映误差的变化率，只有当误差随时间变化时，微分控制才会对系统起作用，而对无变化或缓慢变化的对象不起作用。另外，微分控制对纯滞后环节不能起到改善控制品质的作用，反而具有放大高频噪声信号的缺点。\n\n4\\. 积分控制，输出与输入偏差的积分成比例，即与误差的积累成比例。积分控制（与比例控制同时使用）的传递函数为：\n\n{% raw %}\n\\[{G_C}(s) = {K_P}(1 + \\frac{1}{{{T_I}}} \\cdot \\frac{1}{s})\\]\n{% endraw %}\n\n取不同的积分系数，绘制系统的单位阶跃响应曲线：\n\n``` MATLAB\nKp = 2;\nTi = [3,6,12,24];\nfor m = 1:4\n    G1 = tf([Kp,Kp/Ti(m)],[1,0]);\n    sys = feedback(G1*Go,1);\n    step(sys); hold on;\nend\n```\n\n{% img /images/matlab/PI.gif 275 %}\n\n加入积分控制后，消除了系统稳态误差，但随着T<sub>I</sub>值的增大，达到稳态的过渡时间也逐渐加长。\n\n积分项对误差取决于时间的积分，随着时间的增加，积分项会增大。这样，即使误差很小，积分项也会随着时间的增加而加大，它推动控制器的输出增大，使稳态误差进一步减小，直到等于零，但会使系统稳定性降低，过渡时间也加长。\n\n5\\. 比例积分微分控制，即PID控制的传递函数为：\n\n{% raw %}\n\\[{G_C}(s) = {K_P}(1 + \\frac{1}{{{T_I}}} \\cdot \\frac{1}{s} + {T_D}s)\\]\n{% endraw %}\n\n取适当的比例、积分、微分系数，绘制系统的单位阶跃响应曲线：\n\n``` MATLAB\nKp = 100;\nTi = 2.2;\nTd = 7;\nG1 = tf([Kp(m)*Td(m),Kp(m),Kp(m)/Ti(m)],[0,1,0]); \nsys = feedback(G1*Go,1);\nstep(sys);\n```\n\n{% img /images/matlab/PID.gif 275 %}\n\nPID控制通过积分作用消除误差，而微分控制可缩小超调量、加快系统响应，是综合了PI控制和PD控制长处并去除其短处的控制。\n\n\n<script type=\"text/javascript\" async src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"></script>\n","slug":"matlab2","published":1,"updated":"2018-12-03T02:28:52.775Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyo001b3a8i8d05qhn1","content":"<p>PID控制是目前工程上应用最广的一种控制方法，其结构简单，且不依赖被控对象模型，控制所需的信息量也很少，因而易于工程实现，同时也可获得较好的控制效果。</p>\n<p>PID控制是将误差信号e(t)的比例(P)，积分(I)和微分(D)通过线性组合构成控制量进行控制，其输出信号为：</p>\n\n\\[u(t) = {K_P}[e(t) + \\frac{1}{{{T_I}}}\\int_0^t {e(t)dt + {T_D}\\frac{{de(t)}}{{dt}}} ]\\]\n\n<p>下面用MATLAB软件对PID控制做简单的仿真描述。</p>\n<p>1. 建立二阶负反馈控制系统，其开环传递函数为：</p>\n\n\\[{G_O}(s) = \\frac{1}{{(2s + 1)(5s + 1)}}\\]\n\n<figure class=\"highlight matlab\"><pre><div class=\"line\">clc; clear all; close all;</div><div class=\"line\">Go = tf(<span class=\"number\">1</span>,conv([<span class=\"number\">2</span>,<span class=\"number\">1</span>],[<span class=\"number\">5</span>,<span class=\"number\">1</span>]));</div></pre></figure>\n<p>2. 比例控制，输出与输入偏差成比例，即直接将误差信号放大或缩小。比例控制的传递函数为：</p>\n\n\\[{G_C}(s) = {K_P}\\]\n\n<p>取不同的比例系数，绘制系统的单位阶跃响应曲线：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\">Kp = [<span class=\"number\">0.5</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>];</div><div class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">1</span>:<span class=\"number\">4</span></div><div class=\"line\">    sys = feedback(Kp(m)*Go,<span class=\"number\">1</span>);</div><div class=\"line\">    step(sys); <span class=\"built_in\">hold</span> on;</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></figure>\n<img src=\"/images/matlab/P.gif\" width=\"275\">\n<p>随着K<sub>P</sub>值的增大，系统响应速度加快，但系统的超调也随着增加，调节时间也随着增长。当K<sub>P</sub>增大到一定值后，闭环系统将趋于不稳定。</p>\n<p>比例控制具有抗干扰能力强、控制及时、过渡时间短的优点，但存在稳态误差，增大比例系数可提高系统的开环增益，减小系统的稳态误差，从而提高系统的控制精度，但这会降低系统的相对稳定性，甚至可能造成闭环系统的不稳定，因此，在系统校正和设计中，比例控制一般不单独使用。</p>\n<p>3. 微分控制，输出与输入偏差的微分成比例，即与偏差的变化速度成比例。微分控制（与比例控制同时使用）的传递函数为：</p>\n\n\\[{G_C}(s) = {K_P}(1 + {T_D}s)\\]\n\n<p>取不同的微分系数，绘制系统的单位阶跃响应曲线：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\">Kp = <span class=\"number\">10</span>;</div><div class=\"line\">Td = [<span class=\"number\">0</span>,<span class=\"number\">0.4</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>];</div><div class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">1</span>:<span class=\"number\">4</span></div><div class=\"line\">    G1 = tf([Kp*Td(m),Kp],[<span class=\"number\">0</span>,<span class=\"number\">1</span>]);</div><div class=\"line\">    sys = feedback(G1*Go,<span class=\"number\">1</span>);</div><div class=\"line\">    step(sys); <span class=\"built_in\">hold</span> on;</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></figure>\n<img src=\"/images/matlab/PD.gif\" width=\"275\">\n<p>随着T<sub>D</sub>值的增大，系统超调量逐渐减小，动态特征有改善。</p>\n<p>自动控制系统在克服误差的调节过程中可能会出现振荡甚至不稳定，原因是存在有较大惯性或有滞后的组件，具有抑制误差的作用，其变化总是落后于误差的变化，在控制器质中仅引入比例项是不够的，比例项的作用仅是放大误差的幅值，而微分项能预测误差的变化趋势，这样，具有比例+微分的控制器，就能提前使抑制误差的控制作用等于零，甚至为负值，从而避免被控量的严重超调，改善动态特性。</p>\n<p>微分控制反映误差的变化率，只有当误差随时间变化时，微分控制才会对系统起作用，而对无变化或缓慢变化的对象不起作用。另外，微分控制对纯滞后环节不能起到改善控制品质的作用，反而具有放大高频噪声信号的缺点。</p>\n<p>4. 积分控制，输出与输入偏差的积分成比例，即与误差的积累成比例。积分控制（与比例控制同时使用）的传递函数为：</p>\n\n\\[{G_C}(s) = {K_P}(1 + \\frac{1}{{{T_I}}} \\cdot \\frac{1}{s})\\]\n\n<p>取不同的积分系数，绘制系统的单位阶跃响应曲线：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\">Kp = <span class=\"number\">2</span>;</div><div class=\"line\">Ti = [<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">12</span>,<span class=\"number\">24</span>];</div><div class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">1</span>:<span class=\"number\">4</span></div><div class=\"line\">    G1 = tf([Kp,Kp/Ti(m)],[<span class=\"number\">1</span>,<span class=\"number\">0</span>]);</div><div class=\"line\">    sys = feedback(G1*Go,<span class=\"number\">1</span>);</div><div class=\"line\">    step(sys); <span class=\"built_in\">hold</span> on;</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></figure>\n<img src=\"/images/matlab/PI.gif\" width=\"275\">\n<p>加入积分控制后，消除了系统稳态误差，但随着T<sub>I</sub>值的增大，达到稳态的过渡时间也逐渐加长。</p>\n<p>积分项对误差取决于时间的积分，随着时间的增加，积分项会增大。这样，即使误差很小，积分项也会随着时间的增加而加大，它推动控制器的输出增大，使稳态误差进一步减小，直到等于零，但会使系统稳定性降低，过渡时间也加长。</p>\n<p>5. 比例积分微分控制，即PID控制的传递函数为：</p>\n\n\\[{G_C}(s) = {K_P}(1 + \\frac{1}{{{T_I}}} \\cdot \\frac{1}{s} + {T_D}s)\\]\n\n<p>取适当的比例、积分、微分系数，绘制系统的单位阶跃响应曲线：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\">Kp = <span class=\"number\">100</span>;</div><div class=\"line\">Ti = <span class=\"number\">2.2</span>;</div><div class=\"line\">Td = <span class=\"number\">7</span>;</div><div class=\"line\">G1 = tf([Kp(m)*Td(m),Kp(m),Kp(m)/Ti(m)],[<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>]); </div><div class=\"line\">sys = feedback(G1*Go,<span class=\"number\">1</span>);</div><div class=\"line\">step(sys);</div></pre></figure>\n<img src=\"/images/matlab/PID.gif\" width=\"275\">\n<p>PID控制通过积分作用消除误差，而微分控制可缩小超调量、加快系统响应，是综合了PI控制和PD控制长处并去除其短处的控制。</p>\n<script type=\"text/javascript\" async src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"></script>\n","site":{"data":{}},"excerpt":"","more":"<p>PID控制是目前工程上应用最广的一种控制方法，其结构简单，且不依赖被控对象模型，控制所需的信息量也很少，因而易于工程实现，同时也可获得较好的控制效果。</p>\n<p>PID控制是将误差信号e(t)的比例(P)，积分(I)和微分(D)通过线性组合构成控制量进行控制，其输出信号为：</p>\n\n\\[u(t) = {K_P}[e(t) + \\frac{1}{{{T_I}}}\\int_0^t {e(t)dt + {T_D}\\frac{{de(t)}}{{dt}}} ]\\]\n\n<p>下面用MATLAB软件对PID控制做简单的仿真描述。</p>\n<p>1. 建立二阶负反馈控制系统，其开环传递函数为：</p>\n\n\\[{G_O}(s) = \\frac{1}{{(2s + 1)(5s + 1)}}\\]\n\n<figure class=\"highlight matlab\"><pre><div class=\"line\">clc; clear all; close all;</div><div class=\"line\">Go = tf(<span class=\"number\">1</span>,conv([<span class=\"number\">2</span>,<span class=\"number\">1</span>],[<span class=\"number\">5</span>,<span class=\"number\">1</span>]));</div></pre></figure>\n<p>2. 比例控制，输出与输入偏差成比例，即直接将误差信号放大或缩小。比例控制的传递函数为：</p>\n\n\\[{G_C}(s) = {K_P}\\]\n\n<p>取不同的比例系数，绘制系统的单位阶跃响应曲线：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\">Kp = [<span class=\"number\">0.5</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>];</div><div class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">1</span>:<span class=\"number\">4</span></div><div class=\"line\">    sys = feedback(Kp(m)*Go,<span class=\"number\">1</span>);</div><div class=\"line\">    step(sys); <span class=\"built_in\">hold</span> on;</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></figure>\n<img src=\"/images/matlab/P.gif\" width=\"275\">\n<p>随着K<sub>P</sub>值的增大，系统响应速度加快，但系统的超调也随着增加，调节时间也随着增长。当K<sub>P</sub>增大到一定值后，闭环系统将趋于不稳定。</p>\n<p>比例控制具有抗干扰能力强、控制及时、过渡时间短的优点，但存在稳态误差，增大比例系数可提高系统的开环增益，减小系统的稳态误差，从而提高系统的控制精度，但这会降低系统的相对稳定性，甚至可能造成闭环系统的不稳定，因此，在系统校正和设计中，比例控制一般不单独使用。</p>\n<p>3. 微分控制，输出与输入偏差的微分成比例，即与偏差的变化速度成比例。微分控制（与比例控制同时使用）的传递函数为：</p>\n\n\\[{G_C}(s) = {K_P}(1 + {T_D}s)\\]\n\n<p>取不同的微分系数，绘制系统的单位阶跃响应曲线：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\">Kp = <span class=\"number\">10</span>;</div><div class=\"line\">Td = [<span class=\"number\">0</span>,<span class=\"number\">0.4</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>];</div><div class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">1</span>:<span class=\"number\">4</span></div><div class=\"line\">    G1 = tf([Kp*Td(m),Kp],[<span class=\"number\">0</span>,<span class=\"number\">1</span>]);</div><div class=\"line\">    sys = feedback(G1*Go,<span class=\"number\">1</span>);</div><div class=\"line\">    step(sys); <span class=\"built_in\">hold</span> on;</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></figure>\n<img src=\"/images/matlab/PD.gif\" width=\"275\">\n<p>随着T<sub>D</sub>值的增大，系统超调量逐渐减小，动态特征有改善。</p>\n<p>自动控制系统在克服误差的调节过程中可能会出现振荡甚至不稳定，原因是存在有较大惯性或有滞后的组件，具有抑制误差的作用，其变化总是落后于误差的变化，在控制器质中仅引入比例项是不够的，比例项的作用仅是放大误差的幅值，而微分项能预测误差的变化趋势，这样，具有比例+微分的控制器，就能提前使抑制误差的控制作用等于零，甚至为负值，从而避免被控量的严重超调，改善动态特性。</p>\n<p>微分控制反映误差的变化率，只有当误差随时间变化时，微分控制才会对系统起作用，而对无变化或缓慢变化的对象不起作用。另外，微分控制对纯滞后环节不能起到改善控制品质的作用，反而具有放大高频噪声信号的缺点。</p>\n<p>4. 积分控制，输出与输入偏差的积分成比例，即与误差的积累成比例。积分控制（与比例控制同时使用）的传递函数为：</p>\n\n\\[{G_C}(s) = {K_P}(1 + \\frac{1}{{{T_I}}} \\cdot \\frac{1}{s})\\]\n\n<p>取不同的积分系数，绘制系统的单位阶跃响应曲线：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\">Kp = <span class=\"number\">2</span>;</div><div class=\"line\">Ti = [<span class=\"number\">3</span>,<span class=\"number\">6</span>,<span class=\"number\">12</span>,<span class=\"number\">24</span>];</div><div class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">1</span>:<span class=\"number\">4</span></div><div class=\"line\">    G1 = tf([Kp,Kp/Ti(m)],[<span class=\"number\">1</span>,<span class=\"number\">0</span>]);</div><div class=\"line\">    sys = feedback(G1*Go,<span class=\"number\">1</span>);</div><div class=\"line\">    step(sys); <span class=\"built_in\">hold</span> on;</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></figure>\n<img src=\"/images/matlab/PI.gif\" width=\"275\">\n<p>加入积分控制后，消除了系统稳态误差，但随着T<sub>I</sub>值的增大，达到稳态的过渡时间也逐渐加长。</p>\n<p>积分项对误差取决于时间的积分，随着时间的增加，积分项会增大。这样，即使误差很小，积分项也会随着时间的增加而加大，它推动控制器的输出增大，使稳态误差进一步减小，直到等于零，但会使系统稳定性降低，过渡时间也加长。</p>\n<p>5. 比例积分微分控制，即PID控制的传递函数为：</p>\n\n\\[{G_C}(s) = {K_P}(1 + \\frac{1}{{{T_I}}} \\cdot \\frac{1}{s} + {T_D}s)\\]\n\n<p>取适当的比例、积分、微分系数，绘制系统的单位阶跃响应曲线：</p>\n<figure class=\"highlight matlab\"><pre><div class=\"line\">Kp = <span class=\"number\">100</span>;</div><div class=\"line\">Ti = <span class=\"number\">2.2</span>;</div><div class=\"line\">Td = <span class=\"number\">7</span>;</div><div class=\"line\">G1 = tf([Kp(m)*Td(m),Kp(m),Kp(m)/Ti(m)],[<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>]); </div><div class=\"line\">sys = feedback(G1*Go,<span class=\"number\">1</span>);</div><div class=\"line\">step(sys);</div></pre></figure>\n<img src=\"/images/matlab/PID.gif\" width=\"275\">\n<p>PID控制通过积分作用消除误差，而微分控制可缩小超调量、加快系统响应，是综合了PI控制和PD控制长处并去除其短处的控制。</p>\n<script type=\"text/javascript\" async src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"></script>\n"},{"title":"STC12C5A60S2无线遥控流水灯","date":"2012-11-23T16:00:00.000Z","keywords":"Flash动画","description":"在面包板上搭建STC12C5A60S2单片机最小系统，并连接8个LED发光二极管组成流水灯，编写程序，用R06A无线遥控控制流水灯的方向","_content":"\nSTC12C5A60S2是STC生产的新一代单片机，指令代码完全兼容传统8051。本文描述在面包板上搭建STC12C5A60S2单片机最小系统，并连接8个LED发光二极管组成流水灯，编写程序，用R06A无线遥控控制流水灯的方向。主要目的是熟悉单片机最小系统和R06A无线遥控的控制方式。\n\n使用元器件列表：\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>编号</th>\n\t\t\t<th>名称</th>\n\t\t\t<th>型号</th>\n\t\t\t<th>数量</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>单片机</td>\n\t\t\t<td>STC12C5A60S2</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>芯片座</td>\n\t\t\t<td>40P</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>面包板</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>C1</td>\n\t\t\t<td>电解电容</td>\n\t\t\t<td>10μF，16V</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>R1</td>\n\t\t\t<td>色环电阻</td>\n\t\t\t<td>10K，1/4W</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>C2</td>\n\t\t\t<td>瓷片电容</td>\n\t\t\t<td>30pF，16V</td>\n\t\t\t<td>2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>X1</td>\n\t\t\t<td>无源晶振</td>\n\t\t\t<td>11.0592M</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>R2</td>\n\t\t\t<td>色环电阻</td>\n\t\t\t<td>1K，1/4W</td>\n\t\t\t<td>8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>发光二极管</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>无线遥控套件</td>\n\t\t\t<td>R06A型，PT2262和PT2272组合，L4互锁</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>单片机下载器</td>\n\t\t\t<td>STC51，5V电压输出</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>杜邦线</td>\n\t\t\t<td>针对针、孔对孔、针对孔</td>\n\t\t\t<td>若干</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\n电路原理图：\n\n{% img /images/mcu/mcu21.jpg 275 %}\n\n完成接线后的实际电路：\n\n{% img /images/mcu/mcu22.jpg 275 %}\n\nC程序：\n\n``` C\n#include <STC_NEW_8051.H>\n#include <intrins.h>\n\nunsigned char led;\nsbit key1=P2^0;\nsbit key2=P2^1;\n\nvoid delay(unsigned int z)\n{\n    unsigned int x,y;\n    for(x=z;x>0;x--)\n        for(y=110;y>0;y--);\n}\n\nvoid main (void){\n    led=0x01;\n    P0=00000000;\n    while(1){\n        if(key1==1){\n            P0=led;\n            delay(100);\n            led=_crol_(led,1);\n        }\n        if(key2==1){\n            P0=led;\n            delay(100);\n            led=_cror_(led,1);\n        }\n    }\n}\n```\n\n将程序编译后烧入单片机，实现功能为：按遥控器C键流水灯朝一个方向流动，按D键流水灯换向，按A键或B键流水灯停止流动。\n","source":"_posts/mcu2.md","raw":"---\ntitle: STC12C5A60S2无线遥控流水灯\ndate: 2012-11-24 00:00:00\ncategories: Uncategorized\nkeywords: Flash动画\ndescription: 在面包板上搭建STC12C5A60S2单片机最小系统，并连接8个LED发光二极管组成流水灯，编写程序，用R06A无线遥控控制流水灯的方向\n---\n\nSTC12C5A60S2是STC生产的新一代单片机，指令代码完全兼容传统8051。本文描述在面包板上搭建STC12C5A60S2单片机最小系统，并连接8个LED发光二极管组成流水灯，编写程序，用R06A无线遥控控制流水灯的方向。主要目的是熟悉单片机最小系统和R06A无线遥控的控制方式。\n\n使用元器件列表：\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>编号</th>\n\t\t\t<th>名称</th>\n\t\t\t<th>型号</th>\n\t\t\t<th>数量</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>单片机</td>\n\t\t\t<td>STC12C5A60S2</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>芯片座</td>\n\t\t\t<td>40P</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>面包板</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>C1</td>\n\t\t\t<td>电解电容</td>\n\t\t\t<td>10μF，16V</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>R1</td>\n\t\t\t<td>色环电阻</td>\n\t\t\t<td>10K，1/4W</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>C2</td>\n\t\t\t<td>瓷片电容</td>\n\t\t\t<td>30pF，16V</td>\n\t\t\t<td>2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>X1</td>\n\t\t\t<td>无源晶振</td>\n\t\t\t<td>11.0592M</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>R2</td>\n\t\t\t<td>色环电阻</td>\n\t\t\t<td>1K，1/4W</td>\n\t\t\t<td>8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>发光二极管</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>无线遥控套件</td>\n\t\t\t<td>R06A型，PT2262和PT2272组合，L4互锁</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>单片机下载器</td>\n\t\t\t<td>STC51，5V电压输出</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>杜邦线</td>\n\t\t\t<td>针对针、孔对孔、针对孔</td>\n\t\t\t<td>若干</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\n电路原理图：\n\n{% img /images/mcu/mcu21.jpg 275 %}\n\n完成接线后的实际电路：\n\n{% img /images/mcu/mcu22.jpg 275 %}\n\nC程序：\n\n``` C\n#include <STC_NEW_8051.H>\n#include <intrins.h>\n\nunsigned char led;\nsbit key1=P2^0;\nsbit key2=P2^1;\n\nvoid delay(unsigned int z)\n{\n    unsigned int x,y;\n    for(x=z;x>0;x--)\n        for(y=110;y>0;y--);\n}\n\nvoid main (void){\n    led=0x01;\n    P0=00000000;\n    while(1){\n        if(key1==1){\n            P0=led;\n            delay(100);\n            led=_crol_(led,1);\n        }\n        if(key2==1){\n            P0=led;\n            delay(100);\n            led=_cror_(led,1);\n        }\n    }\n}\n```\n\n将程序编译后烧入单片机，实现功能为：按遥控器C键流水灯朝一个方向流动，按D键流水灯换向，按A键或B键流水灯停止流动。\n","slug":"mcu2","published":1,"updated":"2018-12-03T02:28:52.775Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyp001d3a8iyv21uy00","content":"<p>STC12C5A60S2是STC生产的新一代单片机，指令代码完全兼容传统8051。本文描述在面包板上搭建STC12C5A60S2单片机最小系统，并连接8个LED发光二极管组成流水灯，编写程序，用R06A无线遥控控制流水灯的方向。主要目的是熟悉单片机最小系统和R06A无线遥控的控制方式。</p>\n<p>使用元器件列表：</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>编号</th>\n\t\t\t<th>名称</th>\n\t\t\t<th>型号</th>\n\t\t\t<th>数量</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>单片机</td>\n\t\t\t<td>STC12C5A60S2</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>芯片座</td>\n\t\t\t<td>40P</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>面包板</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>C1</td>\n\t\t\t<td>电解电容</td>\n\t\t\t<td>10μF，16V</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>R1</td>\n\t\t\t<td>色环电阻</td>\n\t\t\t<td>10K，1/4W</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>C2</td>\n\t\t\t<td>瓷片电容</td>\n\t\t\t<td>30pF，16V</td>\n\t\t\t<td>2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>X1</td>\n\t\t\t<td>无源晶振</td>\n\t\t\t<td>11.0592M</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>R2</td>\n\t\t\t<td>色环电阻</td>\n\t\t\t<td>1K，1/4W</td>\n\t\t\t<td>8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>发光二极管</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>无线遥控套件</td>\n\t\t\t<td>R06A型，PT2262和PT2272组合，L4互锁</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>单片机下载器</td>\n\t\t\t<td>STC51，5V电压输出</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>杜邦线</td>\n\t\t\t<td>针对针、孔对孔、针对孔</td>\n\t\t\t<td>若干</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>电路原理图：</p>\n<img src=\"/images/mcu/mcu21.jpg\" width=\"275\">\n<p>完成接线后的实际电路：</p>\n<img src=\"/images/mcu/mcu22.jpg\" width=\"275\">\n<p>C程序：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;STC_NEW_8051.H&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;intrins.h&gt;</span></span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span> led;</div><div class=\"line\">sbit key1=P2^<span class=\"number\">0</span>;</div><div class=\"line\">sbit key2=P2^<span class=\"number\">1</span>;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">delay</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> z)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> x,y;</div><div class=\"line\">    <span class=\"keyword\">for</span>(x=z;x&gt;<span class=\"number\">0</span>;x--)</div><div class=\"line\">        <span class=\"keyword\">for</span>(y=<span class=\"number\">110</span>;y&gt;<span class=\"number\">0</span>;y--);</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(<span class=\"keyword\">void</span>)</span></span>&#123;</div><div class=\"line\">    led=<span class=\"number\">0x01</span>;</div><div class=\"line\">    P0=<span class=\"number\">00000000</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(key1==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">            P0=led;</div><div class=\"line\">            delay(<span class=\"number\">100</span>);</div><div class=\"line\">            led=_crol_(led,<span class=\"number\">1</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(key2==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">            P0=led;</div><div class=\"line\">            delay(<span class=\"number\">100</span>);</div><div class=\"line\">            led=_cror_(led,<span class=\"number\">1</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>将程序编译后烧入单片机，实现功能为：按遥控器C键流水灯朝一个方向流动，按D键流水灯换向，按A键或B键流水灯停止流动。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>STC12C5A60S2是STC生产的新一代单片机，指令代码完全兼容传统8051。本文描述在面包板上搭建STC12C5A60S2单片机最小系统，并连接8个LED发光二极管组成流水灯，编写程序，用R06A无线遥控控制流水灯的方向。主要目的是熟悉单片机最小系统和R06A无线遥控的控制方式。</p>\n<p>使用元器件列表：</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>编号</th>\n\t\t\t<th>名称</th>\n\t\t\t<th>型号</th>\n\t\t\t<th>数量</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>单片机</td>\n\t\t\t<td>STC12C5A60S2</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>芯片座</td>\n\t\t\t<td>40P</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>面包板</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>C1</td>\n\t\t\t<td>电解电容</td>\n\t\t\t<td>10μF，16V</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>R1</td>\n\t\t\t<td>色环电阻</td>\n\t\t\t<td>10K，1/4W</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>C2</td>\n\t\t\t<td>瓷片电容</td>\n\t\t\t<td>30pF，16V</td>\n\t\t\t<td>2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>X1</td>\n\t\t\t<td>无源晶振</td>\n\t\t\t<td>11.0592M</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>R2</td>\n\t\t\t<td>色环电阻</td>\n\t\t\t<td>1K，1/4W</td>\n\t\t\t<td>8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>发光二极管</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>无线遥控套件</td>\n\t\t\t<td>R06A型，PT2262和PT2272组合，L4互锁</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>单片机下载器</td>\n\t\t\t<td>STC51，5V电压输出</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>杜邦线</td>\n\t\t\t<td>针对针、孔对孔、针对孔</td>\n\t\t\t<td>若干</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>电路原理图：</p>\n<img src=\"/images/mcu/mcu21.jpg\" width=\"275\">\n<p>完成接线后的实际电路：</p>\n<img src=\"/images/mcu/mcu22.jpg\" width=\"275\">\n<p>C程序：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;STC_NEW_8051.H&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;intrins.h&gt;</span></span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span> led;</div><div class=\"line\">sbit key1=P2^<span class=\"number\">0</span>;</div><div class=\"line\">sbit key2=P2^<span class=\"number\">1</span>;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">delay</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> z)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> x,y;</div><div class=\"line\">    <span class=\"keyword\">for</span>(x=z;x&gt;<span class=\"number\">0</span>;x--)</div><div class=\"line\">        <span class=\"keyword\">for</span>(y=<span class=\"number\">110</span>;y&gt;<span class=\"number\">0</span>;y--);</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span> <span class=\"params\">(<span class=\"keyword\">void</span>)</span></span>&#123;</div><div class=\"line\">    led=<span class=\"number\">0x01</span>;</div><div class=\"line\">    P0=<span class=\"number\">00000000</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(key1==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">            P0=led;</div><div class=\"line\">            delay(<span class=\"number\">100</span>);</div><div class=\"line\">            led=_crol_(led,<span class=\"number\">1</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(key2==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">            P0=led;</div><div class=\"line\">            delay(<span class=\"number\">100</span>);</div><div class=\"line\">            led=_cror_(led,<span class=\"number\">1</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>将程序编译后烧入单片机，实现功能为：按遥控器C键流水灯朝一个方向流动，按D键流水灯换向，按A键或B键流水灯停止流动。</p>\n"},{"title":"简单的先复位机构","date":"2008-05-12T16:00:00.000Z","keywords":"先复位机构, 注塑模具设计","description":"康佳一款电视的电源按钮。在回针下底针板上设计防震胶棒，回针底部闭空底针板，这样合模时回针推动防震胶棒使面针板和底针板带动顶针先复位","_content":"\n康佳一款电视的电源按钮，模具很简单，一出四。下图为动模部分。\n\n{% img /images/mold/1/dom.jpg 210 %}\n\n下图模具局部，顶针（蓝色）顶在产品边缘露出一半，为了防止合模时顶针被定模碰坏，需设计顶针板先复位机构。\n\n{% img /images/mold/1/dz.jpg 210 %}\n\n如下2D图示意，在回针下底针板上设计防震胶棒（弹性可收缩），回针底部闭空底针板2毫米，这样合模时回针推动防震胶棒使面针板和底针板带动顶针先2毫米复位。\n\n{% img /images/mold/1/2D.jpg 210 %}\n","source":"_posts/mold1.md","raw":"---\ntitle: 简单的先复位机构\ndate: 2008-05-13 00:00:00\ncategories: Uncategorized\nkeywords: 先复位机构, 注塑模具设计\ndescription: 康佳一款电视的电源按钮。在回针下底针板上设计防震胶棒，回针底部闭空底针板，这样合模时回针推动防震胶棒使面针板和底针板带动顶针先复位\n---\n\n康佳一款电视的电源按钮，模具很简单，一出四。下图为动模部分。\n\n{% img /images/mold/1/dom.jpg 210 %}\n\n下图模具局部，顶针（蓝色）顶在产品边缘露出一半，为了防止合模时顶针被定模碰坏，需设计顶针板先复位机构。\n\n{% img /images/mold/1/dz.jpg 210 %}\n\n如下2D图示意，在回针下底针板上设计防震胶棒（弹性可收缩），回针底部闭空底针板2毫米，这样合模时回针推动防震胶棒使面针板和底针板带动顶针先2毫米复位。\n\n{% img /images/mold/1/2D.jpg 210 %}\n","slug":"mold1","published":1,"updated":"2018-11-19T04:55:05.603Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyq001f3a8i423n7xzi","content":"<p>康佳一款电视的电源按钮，模具很简单，一出四。下图为动模部分。</p>\n<img src=\"/images/mold/1/dom.jpg\" width=\"210\">\n<p>下图模具局部，顶针（蓝色）顶在产品边缘露出一半，为了防止合模时顶针被定模碰坏，需设计顶针板先复位机构。</p>\n<img src=\"/images/mold/1/dz.jpg\" width=\"210\">\n<p>如下2D图示意，在回针下底针板上设计防震胶棒（弹性可收缩），回针底部闭空底针板2毫米，这样合模时回针推动防震胶棒使面针板和底针板带动顶针先2毫米复位。</p>\n<img src=\"/images/mold/1/2D.jpg\" width=\"210\">\n","site":{"data":{}},"excerpt":"","more":"<p>康佳一款电视的电源按钮，模具很简单，一出四。下图为动模部分。</p>\n<img src=\"/images/mold/1/dom.jpg\" width=\"210\">\n<p>下图模具局部，顶针（蓝色）顶在产品边缘露出一半，为了防止合模时顶针被定模碰坏，需设计顶针板先复位机构。</p>\n<img src=\"/images/mold/1/dz.jpg\" width=\"210\">\n<p>如下2D图示意，在回针下底针板上设计防震胶棒（弹性可收缩），回针底部闭空底针板2毫米，这样合模时回针推动防震胶棒使面针板和底针板带动顶针先2毫米复位。</p>\n<img src=\"/images/mold/1/2D.jpg\" width=\"210\">\n"},{"title":"axios + axios-mock-adapter + Mock.js模拟响应请求","date":"2019-03-05T16:00:00.000Z","keywords":"axios, axios-mock-adapter, Mock.js, Vue","description":"前端使用axios-mock-adapter适配axios，实现HTTP请求Mock.js生成的模拟数据","_content":"\nMock.js支持生成随机的文本、数字、布尔值、日期、邮箱、链接、图片、颜色等模拟响应数据。前端使用axios-mock-adapter适配axios，实现HTTP请求Mock.js生成的模拟数据。\n\n目录结构如下，responses文件夹中为各接口模拟数据，其中index.js定义了各接口地址、请求方法和对应数据。\n\n```\nmock/\n    responses/\n        frameworks.js\n        tasks.js\n        ...\n        index.js\n    index.js\nApp.vue\nmain.js\n...\n```\n\n定义两个请求，POST请求地址/frameworks，GET请求地址/tasks。\n\n``` JavaScript mock/responses/index.js\nimport frameworks from './frameworks'\nimport tasks from './tasks'\n\nconst res = [\n    ['POST', '/frameworks', frameworks],\n    ['GET', '/tasks', tasks]\n]\n\nexport default res\n```\n\n模拟数据示例，使用Mock.js的Random方法生成各种随机数据。\n\n``` JavaScript mock/responses/tasks.js\nimport Mock from 'mockjs'\nconst Random = Mock.Random\n\nexport default [{\n    pre_step: {\n        work_info: {\n            id: ''\n        }\n    },\n    steps: [{\n        name: Random.ctitle(),\n        id: Random.guid(),\n        type: Random.pick(['manual', 'automatic']),\n        frequency: {\n            times: 1,\n            rounds: ['T1'],\n            rate: 'noInterval',\n            rate_info: {\n                num: '',\n                unit: 'day'\n            },\n            time_range: [1, 1]\n        }\n    }]\n}]\n```\n\naxios拦截配置，这里模拟了接口异步请求的延时，请求未定义接口时返回404错误，以及小概率的服务器500错误。\n\n``` JavaScript mock/index.js\nimport axios from 'axios'\nimport adapter from 'axios-mock-adapter'\nimport mockResponses from './responses'\n\nexport default {\n    init() {\n        const mock = new adapter(axios)\n\n        mock.onAny().reply(config => {\n            return new Promise((resolve, reject) => {\n                let response\n\n                if (Math.random() > 0.01) {\n                    const matchedResponse = mockResponses.filter(([method, url]) => {\n                        return config.method.toUpperCase() === method && config.url === url\n                    })\n\n                    response = matchedResponse.length ?\n                        [200, {\n                            code: 0,\n                            msg: 'Success',\n                            data: matchedResponse[0][2]\n                        }] : [404, {\n                            code: 404,\n                            msg: 'Not Found',\n                            data: null\n                        }]\n                } else {\n                    response = [500, {\n                        code: 500,\n                        msg: 'Internal Server Error',\n                        data: null\n                    }]\n                }\n\n                setTimeout(() => {\n                    if (response[0] === 200) {\n                        resolve(response)\n                    } else {\n                        reject(response)\n                    }\n                }, Math.floor(200 + Math.random() * 800))\n            })\n        })\n    }\n}\n```\n\n应用的入口文件，只在开发环境中初始化调用mock。\n\n``` JavaScript main.js\nimport Vue from 'vue'\nimport router from './router'\nimport store from './store'\nimport './css/common/normalize'\n\nimport _ from 'lodash'\nVue.prototype._ = _\n\nimport axios from 'axios'\naxios.defaults.timeout = 30000\n// 添加响应拦截器，统一处理请求异常\naxios.interceptors.response.use(({ data }) => {\n    if (data.code > 0) Vue.prototype.$message.error(data.msg)\n    return data\n}, error => {\n    Vue.prototype.$message.error('未知错误')\n    return Promise.reject(error)\n})\nVue.prototype.$http = axios\n\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nVue.use(ElementUI)\n\nVue.config.productionTip = false\n\nimport mock from './mock'\n// eslint-disable-next-line\nprocess.env.NODE_ENV === 'development' && mock.init()\n\nnew Vue({\n    router,\n    store\n}).$mount('#app')\n```\n","source":"_posts/mockjs.md","raw":"---\ntitle: axios + axios-mock-adapter + Mock.js模拟响应请求\ndate: 2019-03-06 00:00:00\ncategories: Vue\nkeywords: axios, axios-mock-adapter, Mock.js, Vue\ndescription: 前端使用axios-mock-adapter适配axios，实现HTTP请求Mock.js生成的模拟数据\n---\n\nMock.js支持生成随机的文本、数字、布尔值、日期、邮箱、链接、图片、颜色等模拟响应数据。前端使用axios-mock-adapter适配axios，实现HTTP请求Mock.js生成的模拟数据。\n\n目录结构如下，responses文件夹中为各接口模拟数据，其中index.js定义了各接口地址、请求方法和对应数据。\n\n```\nmock/\n    responses/\n        frameworks.js\n        tasks.js\n        ...\n        index.js\n    index.js\nApp.vue\nmain.js\n...\n```\n\n定义两个请求，POST请求地址/frameworks，GET请求地址/tasks。\n\n``` JavaScript mock/responses/index.js\nimport frameworks from './frameworks'\nimport tasks from './tasks'\n\nconst res = [\n    ['POST', '/frameworks', frameworks],\n    ['GET', '/tasks', tasks]\n]\n\nexport default res\n```\n\n模拟数据示例，使用Mock.js的Random方法生成各种随机数据。\n\n``` JavaScript mock/responses/tasks.js\nimport Mock from 'mockjs'\nconst Random = Mock.Random\n\nexport default [{\n    pre_step: {\n        work_info: {\n            id: ''\n        }\n    },\n    steps: [{\n        name: Random.ctitle(),\n        id: Random.guid(),\n        type: Random.pick(['manual', 'automatic']),\n        frequency: {\n            times: 1,\n            rounds: ['T1'],\n            rate: 'noInterval',\n            rate_info: {\n                num: '',\n                unit: 'day'\n            },\n            time_range: [1, 1]\n        }\n    }]\n}]\n```\n\naxios拦截配置，这里模拟了接口异步请求的延时，请求未定义接口时返回404错误，以及小概率的服务器500错误。\n\n``` JavaScript mock/index.js\nimport axios from 'axios'\nimport adapter from 'axios-mock-adapter'\nimport mockResponses from './responses'\n\nexport default {\n    init() {\n        const mock = new adapter(axios)\n\n        mock.onAny().reply(config => {\n            return new Promise((resolve, reject) => {\n                let response\n\n                if (Math.random() > 0.01) {\n                    const matchedResponse = mockResponses.filter(([method, url]) => {\n                        return config.method.toUpperCase() === method && config.url === url\n                    })\n\n                    response = matchedResponse.length ?\n                        [200, {\n                            code: 0,\n                            msg: 'Success',\n                            data: matchedResponse[0][2]\n                        }] : [404, {\n                            code: 404,\n                            msg: 'Not Found',\n                            data: null\n                        }]\n                } else {\n                    response = [500, {\n                        code: 500,\n                        msg: 'Internal Server Error',\n                        data: null\n                    }]\n                }\n\n                setTimeout(() => {\n                    if (response[0] === 200) {\n                        resolve(response)\n                    } else {\n                        reject(response)\n                    }\n                }, Math.floor(200 + Math.random() * 800))\n            })\n        })\n    }\n}\n```\n\n应用的入口文件，只在开发环境中初始化调用mock。\n\n``` JavaScript main.js\nimport Vue from 'vue'\nimport router from './router'\nimport store from './store'\nimport './css/common/normalize'\n\nimport _ from 'lodash'\nVue.prototype._ = _\n\nimport axios from 'axios'\naxios.defaults.timeout = 30000\n// 添加响应拦截器，统一处理请求异常\naxios.interceptors.response.use(({ data }) => {\n    if (data.code > 0) Vue.prototype.$message.error(data.msg)\n    return data\n}, error => {\n    Vue.prototype.$message.error('未知错误')\n    return Promise.reject(error)\n})\nVue.prototype.$http = axios\n\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nVue.use(ElementUI)\n\nVue.config.productionTip = false\n\nimport mock from './mock'\n// eslint-disable-next-line\nprocess.env.NODE_ENV === 'development' && mock.init()\n\nnew Vue({\n    router,\n    store\n}).$mount('#app')\n```\n","slug":"mockjs","published":1,"updated":"2019-03-06T08:02:46.471Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emys001h3a8inhjd3esi","content":"<p>Mock.js支持生成随机的文本、数字、布尔值、日期、邮箱、链接、图片、颜色等模拟响应数据。前端使用axios-mock-adapter适配axios，实现HTTP请求Mock.js生成的模拟数据。</p>\n<p>目录结构如下，responses文件夹中为各接口模拟数据，其中index.js定义了各接口地址、请求方法和对应数据。</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">mock/</div><div class=\"line\">    responses/</div><div class=\"line\">        frameworks.js</div><div class=\"line\">        tasks.js</div><div class=\"line\">        ...</div><div class=\"line\">        index.js</div><div class=\"line\">    index.js</div><div class=\"line\">App.vue</div><div class=\"line\">main.js</div><div class=\"line\">...</div></pre></figure>\n<p>定义两个请求，POST请求地址/frameworks，GET请求地址/tasks。</p>\n<figure class=\"highlight javascript\"><figcaption><span>mock/responses/index.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">import</span> frameworks <span class=\"keyword\">from</span> <span class=\"string\">'./frameworks'</span></div><div class=\"line\"><span class=\"keyword\">import</span> tasks <span class=\"keyword\">from</span> <span class=\"string\">'./tasks'</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> res = [</div><div class=\"line\">    [<span class=\"string\">'POST'</span>, <span class=\"string\">'/frameworks'</span>, frameworks],</div><div class=\"line\">    [<span class=\"string\">'GET'</span>, <span class=\"string\">'/tasks'</span>, tasks]</div><div class=\"line\">]</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> res</div></pre></figure>\n<p>模拟数据示例，使用Mock.js的Random方法生成各种随机数据。</p>\n<figure class=\"highlight javascript\"><figcaption><span>mock/responses/tasks.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">'mockjs'</span></div><div class=\"line\"><span class=\"keyword\">const</span> Random = Mock.Random</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> [&#123;</div><div class=\"line\">    pre_step: &#123;</div><div class=\"line\">        work_info: &#123;</div><div class=\"line\">            id: <span class=\"string\">''</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    steps: [&#123;</div><div class=\"line\">        name: Random.ctitle(),</div><div class=\"line\">        id: Random.guid(),</div><div class=\"line\">        type: Random.pick([<span class=\"string\">'manual'</span>, <span class=\"string\">'automatic'</span>]),</div><div class=\"line\">        frequency: &#123;</div><div class=\"line\">            times: <span class=\"number\">1</span>,</div><div class=\"line\">            rounds: [<span class=\"string\">'T1'</span>],</div><div class=\"line\">            rate: <span class=\"string\">'noInterval'</span>,</div><div class=\"line\">            rate_info: &#123;</div><div class=\"line\">                num: <span class=\"string\">''</span>,</div><div class=\"line\">                unit: <span class=\"string\">'day'</span></div><div class=\"line\">            &#125;,</div><div class=\"line\">            time_range: [<span class=\"number\">1</span>, <span class=\"number\">1</span>]</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;]</div><div class=\"line\">&#125;]</div></pre></figure>\n<p>axios拦截配置，这里模拟了接口异步请求的延时，请求未定义接口时返回404错误，以及小概率的服务器500错误。</p>\n<figure class=\"highlight javascript\"><figcaption><span>mock/index.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\"><span class=\"keyword\">import</span> adapter <span class=\"keyword\">from</span> <span class=\"string\">'axios-mock-adapter'</span></div><div class=\"line\"><span class=\"keyword\">import</span> mockResponses <span class=\"keyword\">from</span> <span class=\"string\">'./responses'</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">    init() &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> mock = <span class=\"keyword\">new</span> adapter(axios)</div><div class=\"line\"><br></div><div class=\"line\">        mock.onAny().reply(<span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</div><div class=\"line\">                <span class=\"keyword\">let</span> response</div><div class=\"line\"><br></div><div class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.random() &gt; <span class=\"number\">0.01</span>) &#123;</div><div class=\"line\">                    <span class=\"keyword\">const</span> matchedResponse = mockResponses.filter(<span class=\"function\">(<span class=\"params\">[method, url]</span>) =&gt;</span> &#123;</div><div class=\"line\">                        <span class=\"keyword\">return</span> config.method.toUpperCase() === method &amp;&amp; config.url === url</div><div class=\"line\">                    &#125;)</div><div class=\"line\"><br></div><div class=\"line\">                    response = matchedResponse.length ?</div><div class=\"line\">                        [<span class=\"number\">200</span>, &#123;</div><div class=\"line\">                            code: <span class=\"number\">0</span>,</div><div class=\"line\">                            msg: <span class=\"string\">'Success'</span>,</div><div class=\"line\">                            data: matchedResponse[<span class=\"number\">0</span>][<span class=\"number\">2</span>]</div><div class=\"line\">                        &#125;] : [<span class=\"number\">404</span>, &#123;</div><div class=\"line\">                            code: <span class=\"number\">404</span>,</div><div class=\"line\">                            msg: <span class=\"string\">'Not Found'</span>,</div><div class=\"line\">                            data: <span class=\"literal\">null</span></div><div class=\"line\">                        &#125;]</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    response = [<span class=\"number\">500</span>, &#123;</div><div class=\"line\">                        code: <span class=\"number\">500</span>,</div><div class=\"line\">                        msg: <span class=\"string\">'Internal Server Error'</span>,</div><div class=\"line\">                        data: <span class=\"literal\">null</span></div><div class=\"line\">                    &#125;]</div><div class=\"line\">                &#125;</div><div class=\"line\"><br></div><div class=\"line\">                setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (response[<span class=\"number\">0</span>] === <span class=\"number\">200</span>) &#123;</div><div class=\"line\">                        resolve(response)</div><div class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                        reject(response)</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;, <span class=\"built_in\">Math</span>.floor(<span class=\"number\">200</span> + <span class=\"built_in\">Math</span>.random() * <span class=\"number\">800</span>))</div><div class=\"line\">            &#125;)</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>应用的入口文件，只在开发环境中初始化调用mock。</p>\n<figure class=\"highlight javascript\"><figcaption><span>main.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></div><div class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./store'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'./css/common/normalize'</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">import</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'lodash'</span></div><div class=\"line\">Vue.prototype._ = _</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\">axios.defaults.timeout = <span class=\"number\">30000</span></div><div class=\"line\"><span class=\"comment\">// 添加响应拦截器，统一处理请求异常</span></div><div class=\"line\">axios.interceptors.response.use(<span class=\"function\">(<span class=\"params\">&#123; data &#125;</span>) =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (data.code &gt; <span class=\"number\">0</span>) Vue.prototype.$message.error(data.msg)</div><div class=\"line\">    <span class=\"keyword\">return</span> data</div><div class=\"line\">&#125;, error =&gt; &#123;</div><div class=\"line\">    Vue.prototype.$message.error(<span class=\"string\">'未知错误'</span>)</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</div><div class=\"line\">&#125;)</div><div class=\"line\">Vue.prototype.$http = axios</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">import</span> ElementUI <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'element-ui/lib/theme-chalk/index.css'</span></div><div class=\"line\">Vue.use(ElementUI)</div><div class=\"line\"><br></div><div class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">import</span> mock <span class=\"keyword\">from</span> <span class=\"string\">'./mock'</span></div><div class=\"line\"><span class=\"comment\">// eslint-disable-next-line</span></div><div class=\"line\">process.env.NODE_ENV === <span class=\"string\">'development'</span> &amp;&amp; mock.init()</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    router,</div><div class=\"line\">    store</div><div class=\"line\">&#125;).$mount(<span class=\"string\">'#app'</span>)</div></pre></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>Mock.js支持生成随机的文本、数字、布尔值、日期、邮箱、链接、图片、颜色等模拟响应数据。前端使用axios-mock-adapter适配axios，实现HTTP请求Mock.js生成的模拟数据。</p>\n<p>目录结构如下，responses文件夹中为各接口模拟数据，其中index.js定义了各接口地址、请求方法和对应数据。</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">mock/</div><div class=\"line\">    responses/</div><div class=\"line\">        frameworks.js</div><div class=\"line\">        tasks.js</div><div class=\"line\">        ...</div><div class=\"line\">        index.js</div><div class=\"line\">    index.js</div><div class=\"line\">App.vue</div><div class=\"line\">main.js</div><div class=\"line\">...</div></pre></figure>\n<p>定义两个请求，POST请求地址/frameworks，GET请求地址/tasks。</p>\n<figure class=\"highlight javascript\"><figcaption><span>mock/responses/index.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">import</span> frameworks <span class=\"keyword\">from</span> <span class=\"string\">'./frameworks'</span></div><div class=\"line\"><span class=\"keyword\">import</span> tasks <span class=\"keyword\">from</span> <span class=\"string\">'./tasks'</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> res = [</div><div class=\"line\">    [<span class=\"string\">'POST'</span>, <span class=\"string\">'/frameworks'</span>, frameworks],</div><div class=\"line\">    [<span class=\"string\">'GET'</span>, <span class=\"string\">'/tasks'</span>, tasks]</div><div class=\"line\">]</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> res</div></pre></figure>\n<p>模拟数据示例，使用Mock.js的Random方法生成各种随机数据。</p>\n<figure class=\"highlight javascript\"><figcaption><span>mock/responses/tasks.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">'mockjs'</span></div><div class=\"line\"><span class=\"keyword\">const</span> Random = Mock.Random</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> [&#123;</div><div class=\"line\">    pre_step: &#123;</div><div class=\"line\">        work_info: &#123;</div><div class=\"line\">            id: <span class=\"string\">''</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    steps: [&#123;</div><div class=\"line\">        name: Random.ctitle(),</div><div class=\"line\">        id: Random.guid(),</div><div class=\"line\">        type: Random.pick([<span class=\"string\">'manual'</span>, <span class=\"string\">'automatic'</span>]),</div><div class=\"line\">        frequency: &#123;</div><div class=\"line\">            times: <span class=\"number\">1</span>,</div><div class=\"line\">            rounds: [<span class=\"string\">'T1'</span>],</div><div class=\"line\">            rate: <span class=\"string\">'noInterval'</span>,</div><div class=\"line\">            rate_info: &#123;</div><div class=\"line\">                num: <span class=\"string\">''</span>,</div><div class=\"line\">                unit: <span class=\"string\">'day'</span></div><div class=\"line\">            &#125;,</div><div class=\"line\">            time_range: [<span class=\"number\">1</span>, <span class=\"number\">1</span>]</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;]</div><div class=\"line\">&#125;]</div></pre></figure>\n<p>axios拦截配置，这里模拟了接口异步请求的延时，请求未定义接口时返回404错误，以及小概率的服务器500错误。</p>\n<figure class=\"highlight javascript\"><figcaption><span>mock/index.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\"><span class=\"keyword\">import</span> adapter <span class=\"keyword\">from</span> <span class=\"string\">'axios-mock-adapter'</span></div><div class=\"line\"><span class=\"keyword\">import</span> mockResponses <span class=\"keyword\">from</span> <span class=\"string\">'./responses'</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">    init() &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> mock = <span class=\"keyword\">new</span> adapter(axios)</div><div class=\"line\"><br></div><div class=\"line\">        mock.onAny().reply(<span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</div><div class=\"line\">                <span class=\"keyword\">let</span> response</div><div class=\"line\"><br></div><div class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.random() &gt; <span class=\"number\">0.01</span>) &#123;</div><div class=\"line\">                    <span class=\"keyword\">const</span> matchedResponse = mockResponses.filter(<span class=\"function\">(<span class=\"params\">[method, url]</span>) =&gt;</span> &#123;</div><div class=\"line\">                        <span class=\"keyword\">return</span> config.method.toUpperCase() === method &amp;&amp; config.url === url</div><div class=\"line\">                    &#125;)</div><div class=\"line\"><br></div><div class=\"line\">                    response = matchedResponse.length ?</div><div class=\"line\">                        [<span class=\"number\">200</span>, &#123;</div><div class=\"line\">                            code: <span class=\"number\">0</span>,</div><div class=\"line\">                            msg: <span class=\"string\">'Success'</span>,</div><div class=\"line\">                            data: matchedResponse[<span class=\"number\">0</span>][<span class=\"number\">2</span>]</div><div class=\"line\">                        &#125;] : [<span class=\"number\">404</span>, &#123;</div><div class=\"line\">                            code: <span class=\"number\">404</span>,</div><div class=\"line\">                            msg: <span class=\"string\">'Not Found'</span>,</div><div class=\"line\">                            data: <span class=\"literal\">null</span></div><div class=\"line\">                        &#125;]</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    response = [<span class=\"number\">500</span>, &#123;</div><div class=\"line\">                        code: <span class=\"number\">500</span>,</div><div class=\"line\">                        msg: <span class=\"string\">'Internal Server Error'</span>,</div><div class=\"line\">                        data: <span class=\"literal\">null</span></div><div class=\"line\">                    &#125;]</div><div class=\"line\">                &#125;</div><div class=\"line\"><br></div><div class=\"line\">                setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (response[<span class=\"number\">0</span>] === <span class=\"number\">200</span>) &#123;</div><div class=\"line\">                        resolve(response)</div><div class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                        reject(response)</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;, <span class=\"built_in\">Math</span>.floor(<span class=\"number\">200</span> + <span class=\"built_in\">Math</span>.random() * <span class=\"number\">800</span>))</div><div class=\"line\">            &#125;)</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>应用的入口文件，只在开发环境中初始化调用mock。</p>\n<figure class=\"highlight javascript\"><figcaption><span>main.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></div><div class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">'./router'</span></div><div class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./store'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'./css/common/normalize'</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">import</span> _ <span class=\"keyword\">from</span> <span class=\"string\">'lodash'</span></div><div class=\"line\">Vue.prototype._ = _</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\">axios.defaults.timeout = <span class=\"number\">30000</span></div><div class=\"line\"><span class=\"comment\">// 添加响应拦截器，统一处理请求异常</span></div><div class=\"line\">axios.interceptors.response.use(<span class=\"function\">(<span class=\"params\">&#123; data &#125;</span>) =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (data.code &gt; <span class=\"number\">0</span>) Vue.prototype.$message.error(data.msg)</div><div class=\"line\">    <span class=\"keyword\">return</span> data</div><div class=\"line\">&#125;, error =&gt; &#123;</div><div class=\"line\">    Vue.prototype.$message.error(<span class=\"string\">'未知错误'</span>)</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</div><div class=\"line\">&#125;)</div><div class=\"line\">Vue.prototype.$http = axios</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">import</span> ElementUI <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></div><div class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'element-ui/lib/theme-chalk/index.css'</span></div><div class=\"line\">Vue.use(ElementUI)</div><div class=\"line\"><br></div><div class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">import</span> mock <span class=\"keyword\">from</span> <span class=\"string\">'./mock'</span></div><div class=\"line\"><span class=\"comment\">// eslint-disable-next-line</span></div><div class=\"line\">process.env.NODE_ENV === <span class=\"string\">'development'</span> &amp;&amp; mock.init()</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">    router,</div><div class=\"line\">    store</div><div class=\"line\">&#125;).$mount(<span class=\"string\">'#app'</span>)</div></pre></figure>\n"},{"title":"定模先开模","date":"2009-02-22T16:00:00.000Z","keywords":"定模先开模, 注塑模具设计","description":"KONICA MINOLTA公司Amur机种的一个零件，“読取カバー（HNG・左）”。此产品定模部分有三个槽腔，其中方腔较深，为了防止开模时产品粘定模，故定模先开模。用等高螺丝替代拉杆的作用","_content":"\nKONICA MINOLTA公司Amur机种的一个零件，“読取カバー（HNG・左）”。取数为4，外观蚀皮纹（图中红色面）。此产品定模部分有三个槽腔，其中方腔较深，为了防止开模时产品粘定模，故定模先开模。\n\n{% img /images/mold/10/chp.jpg 210 %}\n\n下图为定模，一模四腔。\n\n{% img /images/mold/10/dim.jpg 210 %}\n\n下图为动模，定位器、树脂开闭器各四个。\n\n{% img /images/mold/10/dom.jpg 210 %}\n\n下图为模具整体，定模部分四个深腔镶件用两个接水块运水。\n\n{% img /images/mold/10/zhp.jpg 210 %}\n\n用等高螺丝替代拉杆的作用，开模时由于树脂开闭器的阻碍，动定模板先不分开，顶板和定模板先分离，固定在顶板上的镶件先脱模，当顶板到达等高螺丝限位距离时动定模板才分开。\n\n{% img /images/mold/10/2D.jpg 250 %}\n\n另外，为了减小模芯模架大小节约成本，将深槽底部一部分镶在动模板上。\n","source":"_posts/mold10.md","raw":"---\ntitle: 定模先开模\ndate: 2009-02-23 00:00:00\ncategories: Uncategorized\nkeywords: 定模先开模, 注塑模具设计\ndescription: KONICA MINOLTA公司Amur机种的一个零件，“読取カバー（HNG・左）”。此产品定模部分有三个槽腔，其中方腔较深，为了防止开模时产品粘定模，故定模先开模。用等高螺丝替代拉杆的作用\n---\n\nKONICA MINOLTA公司Amur机种的一个零件，“読取カバー（HNG・左）”。取数为4，外观蚀皮纹（图中红色面）。此产品定模部分有三个槽腔，其中方腔较深，为了防止开模时产品粘定模，故定模先开模。\n\n{% img /images/mold/10/chp.jpg 210 %}\n\n下图为定模，一模四腔。\n\n{% img /images/mold/10/dim.jpg 210 %}\n\n下图为动模，定位器、树脂开闭器各四个。\n\n{% img /images/mold/10/dom.jpg 210 %}\n\n下图为模具整体，定模部分四个深腔镶件用两个接水块运水。\n\n{% img /images/mold/10/zhp.jpg 210 %}\n\n用等高螺丝替代拉杆的作用，开模时由于树脂开闭器的阻碍，动定模板先不分开，顶板和定模板先分离，固定在顶板上的镶件先脱模，当顶板到达等高螺丝限位距离时动定模板才分开。\n\n{% img /images/mold/10/2D.jpg 250 %}\n\n另外，为了减小模芯模架大小节约成本，将深槽底部一部分镶在动模板上。\n","slug":"mold10","published":1,"updated":"2018-11-19T04:54:08.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyt001j3a8ikglr7dt4","content":"<p>KONICA MINOLTA公司Amur机种的一个零件，“読取カバー（HNG・左）”。取数为4，外观蚀皮纹（图中红色面）。此产品定模部分有三个槽腔，其中方腔较深，为了防止开模时产品粘定模，故定模先开模。</p>\n<img src=\"/images/mold/10/chp.jpg\" width=\"210\">\n<p>下图为定模，一模四腔。</p>\n<img src=\"/images/mold/10/dim.jpg\" width=\"210\">\n<p>下图为动模，定位器、树脂开闭器各四个。</p>\n<img src=\"/images/mold/10/dom.jpg\" width=\"210\">\n<p>下图为模具整体，定模部分四个深腔镶件用两个接水块运水。</p>\n<img src=\"/images/mold/10/zhp.jpg\" width=\"210\">\n<p>用等高螺丝替代拉杆的作用，开模时由于树脂开闭器的阻碍，动定模板先不分开，顶板和定模板先分离，固定在顶板上的镶件先脱模，当顶板到达等高螺丝限位距离时动定模板才分开。</p>\n<img src=\"/images/mold/10/2D.jpg\" width=\"250\">\n<p>另外，为了减小模芯模架大小节约成本，将深槽底部一部分镶在动模板上。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>KONICA MINOLTA公司Amur机种的一个零件，“読取カバー（HNG・左）”。取数为4，外观蚀皮纹（图中红色面）。此产品定模部分有三个槽腔，其中方腔较深，为了防止开模时产品粘定模，故定模先开模。</p>\n<img src=\"/images/mold/10/chp.jpg\" width=\"210\">\n<p>下图为定模，一模四腔。</p>\n<img src=\"/images/mold/10/dim.jpg\" width=\"210\">\n<p>下图为动模，定位器、树脂开闭器各四个。</p>\n<img src=\"/images/mold/10/dom.jpg\" width=\"210\">\n<p>下图为模具整体，定模部分四个深腔镶件用两个接水块运水。</p>\n<img src=\"/images/mold/10/zhp.jpg\" width=\"210\">\n<p>用等高螺丝替代拉杆的作用，开模时由于树脂开闭器的阻碍，动定模板先不分开，顶板和定模板先分离，固定在顶板上的镶件先脱模，当顶板到达等高螺丝限位距离时动定模板才分开。</p>\n<img src=\"/images/mold/10/2D.jpg\" width=\"250\">\n<p>另外，为了减小模芯模架大小节约成本，将深槽底部一部分镶在动模板上。</p>\n"},{"title":"简易脱螺纹及四次开模","date":"2009-03-11T16:00:00.000Z","keywords":"脱螺纹及四次开模, 注塑模具设计","description":"埃及公司EL ARABY CO., LTD.的立式电扇的装饰套，内有螺纹，设计简易的脱螺纹机构。产品一出二，针点进胶。开模时各板分四次分开","_content":"\n埃及公司EL ARABY CO., LTD.的立式电扇的装饰套，内有螺纹。\n\n{% img /images/mold/11/chp.jpg 260 %}\n\n产品一出二，针点进胶。选用DBI细水口模架。下图为模具整体。\n\n{% img /images/mold/11/mj.jpg 125 %}\n\n下图为动、定模部分。\n\n{% img /images/mold/11/dimdom.jpg 220 %}\n\n下图为简易的脱螺纹机构，随着青色斜紧楔向后抽出，两绿色螺纹镶件相对靠近运动。\n\n{% img /images/mold/11/gj.jpg 230 %}\n\n下图为控制开模顺序的拉钩装置。\n\n{% img /images/mold/11/lg.jpg 215 %}\n\n开模时，由于定模板和动模板之间有拉钩装置固定，托板1和动模板之间有树脂开闭器锁紧，再加上水口板和定模板之间弹簧的存在，①处先分开，同时流道浇口和产品被拉开；当定、动模板以及两托板运动到小拉杆的限位距离时，顶板和水口板之间的②处分开，同时料头剥离；定、动模板以及两托板继续向后运动，到达大拉杆的限位距离时，拉力不断增大超过托板1和动模板之间树脂开闭器的锁紧力，③处分开，同时脱螺纹；当两托板移动距离到达拉钩装置触发距离时，定模板和动模板之间的拉钩装置开启，而托板1和动模板间的分开距离到达等高螺丝的限位距离不再相对运动，此时④处分开。\n\n{% img /images/mold/11/2D.jpg 225 %}\n\n另外，为保证顶出平衡，产品用环形圆块顶出。\n\n{% img /images/mold/11/dc.jpg 205 %}\n","source":"_posts/mold11.md","raw":"---\ntitle: 简易脱螺纹及四次开模\ndate: 2009-03-12 00:00:00\ncategories: Uncategorized\nkeywords: 脱螺纹及四次开模, 注塑模具设计\ndescription: 埃及公司EL ARABY CO., LTD.的立式电扇的装饰套，内有螺纹，设计简易的脱螺纹机构。产品一出二，针点进胶。开模时各板分四次分开\n---\n\n埃及公司EL ARABY CO., LTD.的立式电扇的装饰套，内有螺纹。\n\n{% img /images/mold/11/chp.jpg 260 %}\n\n产品一出二，针点进胶。选用DBI细水口模架。下图为模具整体。\n\n{% img /images/mold/11/mj.jpg 125 %}\n\n下图为动、定模部分。\n\n{% img /images/mold/11/dimdom.jpg 220 %}\n\n下图为简易的脱螺纹机构，随着青色斜紧楔向后抽出，两绿色螺纹镶件相对靠近运动。\n\n{% img /images/mold/11/gj.jpg 230 %}\n\n下图为控制开模顺序的拉钩装置。\n\n{% img /images/mold/11/lg.jpg 215 %}\n\n开模时，由于定模板和动模板之间有拉钩装置固定，托板1和动模板之间有树脂开闭器锁紧，再加上水口板和定模板之间弹簧的存在，①处先分开，同时流道浇口和产品被拉开；当定、动模板以及两托板运动到小拉杆的限位距离时，顶板和水口板之间的②处分开，同时料头剥离；定、动模板以及两托板继续向后运动，到达大拉杆的限位距离时，拉力不断增大超过托板1和动模板之间树脂开闭器的锁紧力，③处分开，同时脱螺纹；当两托板移动距离到达拉钩装置触发距离时，定模板和动模板之间的拉钩装置开启，而托板1和动模板间的分开距离到达等高螺丝的限位距离不再相对运动，此时④处分开。\n\n{% img /images/mold/11/2D.jpg 225 %}\n\n另外，为保证顶出平衡，产品用环形圆块顶出。\n\n{% img /images/mold/11/dc.jpg 205 %}\n","slug":"mold11","published":1,"updated":"2018-11-19T08:45:28.144Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyu001m3a8ihta5xzve","content":"<p>埃及公司EL ARABY CO., LTD.的立式电扇的装饰套，内有螺纹。</p>\n<img src=\"/images/mold/11/chp.jpg\" width=\"260\">\n<p>产品一出二，针点进胶。选用DBI细水口模架。下图为模具整体。</p>\n<img src=\"/images/mold/11/mj.jpg\" width=\"125\">\n<p>下图为动、定模部分。</p>\n<img src=\"/images/mold/11/dimdom.jpg\" width=\"220\">\n<p>下图为简易的脱螺纹机构，随着青色斜紧楔向后抽出，两绿色螺纹镶件相对靠近运动。</p>\n<img src=\"/images/mold/11/gj.jpg\" width=\"230\">\n<p>下图为控制开模顺序的拉钩装置。</p>\n<img src=\"/images/mold/11/lg.jpg\" width=\"215\">\n<p>开模时，由于定模板和动模板之间有拉钩装置固定，托板1和动模板之间有树脂开闭器锁紧，再加上水口板和定模板之间弹簧的存在，①处先分开，同时流道浇口和产品被拉开；当定、动模板以及两托板运动到小拉杆的限位距离时，顶板和水口板之间的②处分开，同时料头剥离；定、动模板以及两托板继续向后运动，到达大拉杆的限位距离时，拉力不断增大超过托板1和动模板之间树脂开闭器的锁紧力，③处分开，同时脱螺纹；当两托板移动距离到达拉钩装置触发距离时，定模板和动模板之间的拉钩装置开启，而托板1和动模板间的分开距离到达等高螺丝的限位距离不再相对运动，此时④处分开。</p>\n<img src=\"/images/mold/11/2D.jpg\" width=\"225\">\n<p>另外，为保证顶出平衡，产品用环形圆块顶出。</p>\n<img src=\"/images/mold/11/dc.jpg\" width=\"205\">\n","site":{"data":{}},"excerpt":"","more":"<p>埃及公司EL ARABY CO., LTD.的立式电扇的装饰套，内有螺纹。</p>\n<img src=\"/images/mold/11/chp.jpg\" width=\"260\">\n<p>产品一出二，针点进胶。选用DBI细水口模架。下图为模具整体。</p>\n<img src=\"/images/mold/11/mj.jpg\" width=\"125\">\n<p>下图为动、定模部分。</p>\n<img src=\"/images/mold/11/dimdom.jpg\" width=\"220\">\n<p>下图为简易的脱螺纹机构，随着青色斜紧楔向后抽出，两绿色螺纹镶件相对靠近运动。</p>\n<img src=\"/images/mold/11/gj.jpg\" width=\"230\">\n<p>下图为控制开模顺序的拉钩装置。</p>\n<img src=\"/images/mold/11/lg.jpg\" width=\"215\">\n<p>开模时，由于定模板和动模板之间有拉钩装置固定，托板1和动模板之间有树脂开闭器锁紧，再加上水口板和定模板之间弹簧的存在，①处先分开，同时流道浇口和产品被拉开；当定、动模板以及两托板运动到小拉杆的限位距离时，顶板和水口板之间的②处分开，同时料头剥离；定、动模板以及两托板继续向后运动，到达大拉杆的限位距离时，拉力不断增大超过托板1和动模板之间树脂开闭器的锁紧力，③处分开，同时脱螺纹；当两托板移动距离到达拉钩装置触发距离时，定模板和动模板之间的拉钩装置开启，而托板1和动模板间的分开距离到达等高螺丝的限位距离不再相对运动，此时④处分开。</p>\n<img src=\"/images/mold/11/2D.jpg\" width=\"225\">\n<p>另外，为保证顶出平衡，产品用环形圆块顶出。</p>\n<img src=\"/images/mold/11/dc.jpg\" width=\"205\">\n"},{"title":"几种排气","date":"2009-05-18T16:00:00.000Z","keywords":"排气, 注塑模具设计","description":"最常见的排气，直接开在分型面上。注意要在封闭处设计逃气孔。排气镶件，除了深筋条处的排气槽外，还有专门设计的层叠的排气镶件，用来改善塑胶流交汇处的困气","_content":"\n最常见的排气，直接开在分型面上。注意要在封闭处设计逃气孔。\n\n{% img /images/mold/12/4.jpg 245 %}\n\n排气镶件，除了深筋条处的排气槽外，还有专门设计的层叠的排气镶件，用来改善塑胶流交汇处的困气。\n\n{% img /images/mold/12/2.jpg 190 %}\n\n顶针排气。\n\n{% img /images/mold/12/1.jpg 300 %}\n\n镶针排气。\n\n{% img /images/mold/12/3.jpg 200 %}\n","source":"_posts/mold12.md","raw":"---\ntitle: 几种排气\ndate: 2009-05-19 00:00:00\ncategories: Uncategorized\nkeywords: 排气, 注塑模具设计\ndescription: 最常见的排气，直接开在分型面上。注意要在封闭处设计逃气孔。排气镶件，除了深筋条处的排气槽外，还有专门设计的层叠的排气镶件，用来改善塑胶流交汇处的困气\n---\n\n最常见的排气，直接开在分型面上。注意要在封闭处设计逃气孔。\n\n{% img /images/mold/12/4.jpg 245 %}\n\n排气镶件，除了深筋条处的排气槽外，还有专门设计的层叠的排气镶件，用来改善塑胶流交汇处的困气。\n\n{% img /images/mold/12/2.jpg 190 %}\n\n顶针排气。\n\n{% img /images/mold/12/1.jpg 300 %}\n\n镶针排气。\n\n{% img /images/mold/12/3.jpg 200 %}\n","slug":"mold12","published":1,"updated":"2018-11-19T08:26:26.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyv001o3a8iukk7tvxn","content":"<p>最常见的排气，直接开在分型面上。注意要在封闭处设计逃气孔。</p>\n<img src=\"/images/mold/12/4.jpg\" width=\"245\">\n<p>排气镶件，除了深筋条处的排气槽外，还有专门设计的层叠的排气镶件，用来改善塑胶流交汇处的困气。</p>\n<img src=\"/images/mold/12/2.jpg\" width=\"190\">\n<p>顶针排气。</p>\n<img src=\"/images/mold/12/1.jpg\" width=\"300\">\n<p>镶针排气。</p>\n<img src=\"/images/mold/12/3.jpg\" width=\"200\">\n","site":{"data":{}},"excerpt":"","more":"<p>最常见的排气，直接开在分型面上。注意要在封闭处设计逃气孔。</p>\n<img src=\"/images/mold/12/4.jpg\" width=\"245\">\n<p>排气镶件，除了深筋条处的排气槽外，还有专门设计的层叠的排气镶件，用来改善塑胶流交汇处的困气。</p>\n<img src=\"/images/mold/12/2.jpg\" width=\"190\">\n<p>顶针排气。</p>\n<img src=\"/images/mold/12/1.jpg\" width=\"300\">\n<p>镶针排气。</p>\n<img src=\"/images/mold/12/3.jpg\" width=\"200\">\n"},{"title":"高光无痕免喷涂直塑面壳","date":"2009-05-31T16:00:00.000Z","keywords":"高光无痕免喷涂直塑, 注塑模具设计","description":"康佳平板电视L4068的面壳，塑胶材料是ABS+PMMA。采用高光无痕免喷涂直塑","_content":"\n康佳平板电视L4068的面壳，塑胶材料是ABS+PMMA。采用高光无痕免喷涂直塑。下图为整机装配。\n\n{% img /images/mold/13/chp.jpg 290 %}\n\n下图为模具整体。\n\n{% img /images/mold/13/zhp.jpg 195 %}\n\n下图为定模和动模，注意定位。\n\n{% img /images/mold/13/dimdom.jpg 300 %}\n\n选用针阀式热流道浇注系统，设6个热嘴。导光柱位置处有两个螺丝柱直接设计在产品表面，易缩水，故在此处增加一个浇口，增加填充后的保压。\n\n{% img /images/mold/13/jiaokou.jpg 275 %}\n\n为保证产品外观质量，定模胶位面位置的水道要求通蒸气或热油（热水）；热嘴、流道位置需上冷却水。这些水道要分开设计，且要保证加热和冷却平衡。\n\n{% img /images/mold/13/wt.jpg 220 %}\n\n定模板上模芯胶位对应的槽底面，尽可能多地镶出电木垫板作隔热板，以减少模芯的热量传递。非胶位位置不镶以保证强度。\n\n{% img /images/mold/13/grp.jpg 200 %}\n\n定模芯设计感温针，感温针距产品（型腔）的距离为10~10.5mm，且要用镶块限位固定在定模板上，将接线引到非操作者侧并且集合在线排上。\n\n{% img /images/mold/13/gwz.jpg 215 %}\n","source":"_posts/mold13.md","raw":"---\ntitle: 高光无痕免喷涂直塑面壳\ndate: 2009-06-01 00:00:00\ncategories: Uncategorized\nkeywords: 高光无痕免喷涂直塑, 注塑模具设计\ndescription: 康佳平板电视L4068的面壳，塑胶材料是ABS+PMMA。采用高光无痕免喷涂直塑\n---\n\n康佳平板电视L4068的面壳，塑胶材料是ABS+PMMA。采用高光无痕免喷涂直塑。下图为整机装配。\n\n{% img /images/mold/13/chp.jpg 290 %}\n\n下图为模具整体。\n\n{% img /images/mold/13/zhp.jpg 195 %}\n\n下图为定模和动模，注意定位。\n\n{% img /images/mold/13/dimdom.jpg 300 %}\n\n选用针阀式热流道浇注系统，设6个热嘴。导光柱位置处有两个螺丝柱直接设计在产品表面，易缩水，故在此处增加一个浇口，增加填充后的保压。\n\n{% img /images/mold/13/jiaokou.jpg 275 %}\n\n为保证产品外观质量，定模胶位面位置的水道要求通蒸气或热油（热水）；热嘴、流道位置需上冷却水。这些水道要分开设计，且要保证加热和冷却平衡。\n\n{% img /images/mold/13/wt.jpg 220 %}\n\n定模板上模芯胶位对应的槽底面，尽可能多地镶出电木垫板作隔热板，以减少模芯的热量传递。非胶位位置不镶以保证强度。\n\n{% img /images/mold/13/grp.jpg 200 %}\n\n定模芯设计感温针，感温针距产品（型腔）的距离为10~10.5mm，且要用镶块限位固定在定模板上，将接线引到非操作者侧并且集合在线排上。\n\n{% img /images/mold/13/gwz.jpg 215 %}\n","slug":"mold13","published":1,"updated":"2018-11-19T08:26:44.140Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyw001q3a8i60ibe3u4","content":"<p>康佳平板电视L4068的面壳，塑胶材料是ABS+PMMA。采用高光无痕免喷涂直塑。下图为整机装配。</p>\n<img src=\"/images/mold/13/chp.jpg\" width=\"290\">\n<p>下图为模具整体。</p>\n<img src=\"/images/mold/13/zhp.jpg\" width=\"195\">\n<p>下图为定模和动模，注意定位。</p>\n<img src=\"/images/mold/13/dimdom.jpg\" width=\"300\">\n<p>选用针阀式热流道浇注系统，设6个热嘴。导光柱位置处有两个螺丝柱直接设计在产品表面，易缩水，故在此处增加一个浇口，增加填充后的保压。</p>\n<img src=\"/images/mold/13/jiaokou.jpg\" width=\"275\">\n<p>为保证产品外观质量，定模胶位面位置的水道要求通蒸气或热油（热水）；热嘴、流道位置需上冷却水。这些水道要分开设计，且要保证加热和冷却平衡。</p>\n<img src=\"/images/mold/13/wt.jpg\" width=\"220\">\n<p>定模板上模芯胶位对应的槽底面，尽可能多地镶出电木垫板作隔热板，以减少模芯的热量传递。非胶位位置不镶以保证强度。</p>\n<img src=\"/images/mold/13/grp.jpg\" width=\"200\">\n<p>定模芯设计感温针，感温针距产品（型腔）的距离为10~10.5mm，且要用镶块限位固定在定模板上，将接线引到非操作者侧并且集合在线排上。</p>\n<img src=\"/images/mold/13/gwz.jpg\" width=\"215\">\n","site":{"data":{}},"excerpt":"","more":"<p>康佳平板电视L4068的面壳，塑胶材料是ABS+PMMA。采用高光无痕免喷涂直塑。下图为整机装配。</p>\n<img src=\"/images/mold/13/chp.jpg\" width=\"290\">\n<p>下图为模具整体。</p>\n<img src=\"/images/mold/13/zhp.jpg\" width=\"195\">\n<p>下图为定模和动模，注意定位。</p>\n<img src=\"/images/mold/13/dimdom.jpg\" width=\"300\">\n<p>选用针阀式热流道浇注系统，设6个热嘴。导光柱位置处有两个螺丝柱直接设计在产品表面，易缩水，故在此处增加一个浇口，增加填充后的保压。</p>\n<img src=\"/images/mold/13/jiaokou.jpg\" width=\"275\">\n<p>为保证产品外观质量，定模胶位面位置的水道要求通蒸气或热油（热水）；热嘴、流道位置需上冷却水。这些水道要分开设计，且要保证加热和冷却平衡。</p>\n<img src=\"/images/mold/13/wt.jpg\" width=\"220\">\n<p>定模板上模芯胶位对应的槽底面，尽可能多地镶出电木垫板作隔热板，以减少模芯的热量传递。非胶位位置不镶以保证强度。</p>\n<img src=\"/images/mold/13/grp.jpg\" width=\"200\">\n<p>定模芯设计感温针，感温针距产品（型腔）的距离为10~10.5mm，且要用镶块限位固定在定模板上，将接线引到非操作者侧并且集合在线排上。</p>\n<img src=\"/images/mold/13/gwz.jpg\" width=\"215\">\n"},{"title":"龙记模架参数详解","date":"2008-05-29T16:00:00.000Z","keywords":"龙记模架参数, 注塑模具设计","description":"大水口系统（SIDE GATE SYSTEM）；细水口系统（PIN POINT GATE SYSTEM）；简化型细水口系统（THREE PLATE TYPE SYSTEM）","_content":"\n{% img /images/mold/2/mj.jpg 300 %}\n\nSG：大水口系统（SIDE GATE SYSTEM）；\nSG类型：A为有托板无推板、B为有托板有推板、C为无托板无推板、D为无托板有推板；\nPP：细水口系统（PIN POINT GATE SYSTEM）；\nPP类型：前D为有水口推板、前E为无水口推板，后A、B、C、D同SG类型；\nTP：简化型细水口系统（THREE PLATE TYPE SYSTEM）；\nTP类型：前F为有水口推板、前G为无水口推板，后A、B、C、D同SG类型；\nINDEX：编号；\nMOLD_W：模架的宽度；\nMOLD_L：模架的长度；\nFIX_OPEN：固定侧（A板以上部分）的打开距离；\nMOVE_OPEN：移动侧（B板以下部分）的打开距离；\nEJB_OPEN： E板和F板（顶针板和顶针底板）离开下固定板的距离；\nAP_H：A板（型腔板）的高度；\nBP_H：B板（型芯板）的高度；\nCP_H：C板（方铁）的高度；\nTCP_H：面板的高度；\nBCP_H：底板的高度；\nC_W：C板（方铁）的宽度；\nEF_W：E板和F板（顶针板和顶针底板）的宽度；\nEJA_H：E板（顶针板）的高度；\nEJB_H：F板（顶针底板）的高度；\nSHORTEN_EJ：E板和F板（顶针板和顶针底板）缩短长度；\nUP_H：托板的高度；\nSP_H：推板的高度；\nMOLD_TYPE：模架类型，I型为工字模、H型为无面板直身模、T为有面板直身模；\nT：有面板直身模的面板宽度；\nI：工字模的面板宽度；\nGTYPE：导柱位置，1:On A为导柱位置在A板（反装）、0:On B为导柱位置在B板（正装）；\nGP_D：导柱直径；\nGP_X：导柱X轴向距离；\nGP_Y：导柱Y轴向距离；\nCS_D：锁底板和方铁的螺钉直径；\nCS_X：锁底板和方铁的螺钉X轴向距离；\nCS_Y：锁底板和方铁的螺钉Y轴向距离；\nPS_D：锁底板、方铁和动模板的螺钉直径；\nPS_N：锁底板、方铁和动模板的螺钉对数；\nPS_X：锁底板、方铁和动模板的第一对螺钉X轴向距离；\nPS_Y：锁底板、方铁和动模板的第一对螺钉Y轴向距离；\nPS_Y1：锁底板、方铁和动模板的第二对螺钉Y轴向距离；\nPS_Y2：锁底板、方铁和动模板的第三对螺钉Y轴向距离；\nES_D：锁顶针板和顶针底板的螺钉直径；\nES_N：锁顶针板和顶针底板的螺钉对数；\nES_X：锁顶针板和顶针底板的第一对螺钉X轴向距离；\nES_Y：锁顶针板和顶针底板的第一对螺钉Y轴向距离；\nES_Y1：锁顶针板和顶针底板的第二对螺钉Y轴向距离；\nRP_D：回针直径；\nRP_X：回针X轴向距离；\nRP_Y：回针Y轴向距离；\nEG_GUIDE：中托司（顶出导向系统）开关，1:ON为追加中托司、0:OFF为不追加中托司；\nEGP_D：中托司直径；\nEGP_N：中托司个数；\nEGP_X：中托司X轴向距离；\nEGP_Y：中托司Y轴向距离；\nEGB_ASM_TYPE：中托司的装配方法；\nEB_SIZE_BP：B板（型芯板）上吊环孔大小；\nEB_SIZE_AP：A板（型腔板）上吊环孔大小；\nEB_SIZE_UP：托板上吊环孔大小；\nEB_SIZE_TCP：面板上吊环孔大小；\nEB_SIZE_BCP：底板上吊环孔大小；\nEB_SIZE_RP：水口推板上吊环孔大小；\nEB_SIZE_SP：推板上吊环孔大小；\nEB_SIZE_FP：顶针底板上吊环孔大小；\nEB_SIZE_EP：顶针板上吊环孔大小；\nEB_SIZE_CP：方铁上吊环孔大小；\nSPN_TYPE：拉杆Y方向位置，1:IN为拉杆在导柱内部、0:OUT为拉杆在导柱外部；\nSPN_D：拉杆直径；\nSPN_X：拉杆X轴向距离；\nSPN_Y_IN：拉杆在导柱内部时Y轴向距离；\nSPN_Y_OUT：拉杆在导柱外部时Y轴向距离；\n","source":"_posts/mold2.md","raw":"---\ntitle: 龙记模架参数详解\ndate: 2008-05-30 00:00:00\ncategories: Uncategorized\nkeywords: 龙记模架参数, 注塑模具设计\ndescription: 大水口系统（SIDE GATE SYSTEM）；细水口系统（PIN POINT GATE SYSTEM）；简化型细水口系统（THREE PLATE TYPE SYSTEM）\n---\n\n{% img /images/mold/2/mj.jpg 300 %}\n\nSG：大水口系统（SIDE GATE SYSTEM）；\nSG类型：A为有托板无推板、B为有托板有推板、C为无托板无推板、D为无托板有推板；\nPP：细水口系统（PIN POINT GATE SYSTEM）；\nPP类型：前D为有水口推板、前E为无水口推板，后A、B、C、D同SG类型；\nTP：简化型细水口系统（THREE PLATE TYPE SYSTEM）；\nTP类型：前F为有水口推板、前G为无水口推板，后A、B、C、D同SG类型；\nINDEX：编号；\nMOLD_W：模架的宽度；\nMOLD_L：模架的长度；\nFIX_OPEN：固定侧（A板以上部分）的打开距离；\nMOVE_OPEN：移动侧（B板以下部分）的打开距离；\nEJB_OPEN： E板和F板（顶针板和顶针底板）离开下固定板的距离；\nAP_H：A板（型腔板）的高度；\nBP_H：B板（型芯板）的高度；\nCP_H：C板（方铁）的高度；\nTCP_H：面板的高度；\nBCP_H：底板的高度；\nC_W：C板（方铁）的宽度；\nEF_W：E板和F板（顶针板和顶针底板）的宽度；\nEJA_H：E板（顶针板）的高度；\nEJB_H：F板（顶针底板）的高度；\nSHORTEN_EJ：E板和F板（顶针板和顶针底板）缩短长度；\nUP_H：托板的高度；\nSP_H：推板的高度；\nMOLD_TYPE：模架类型，I型为工字模、H型为无面板直身模、T为有面板直身模；\nT：有面板直身模的面板宽度；\nI：工字模的面板宽度；\nGTYPE：导柱位置，1:On A为导柱位置在A板（反装）、0:On B为导柱位置在B板（正装）；\nGP_D：导柱直径；\nGP_X：导柱X轴向距离；\nGP_Y：导柱Y轴向距离；\nCS_D：锁底板和方铁的螺钉直径；\nCS_X：锁底板和方铁的螺钉X轴向距离；\nCS_Y：锁底板和方铁的螺钉Y轴向距离；\nPS_D：锁底板、方铁和动模板的螺钉直径；\nPS_N：锁底板、方铁和动模板的螺钉对数；\nPS_X：锁底板、方铁和动模板的第一对螺钉X轴向距离；\nPS_Y：锁底板、方铁和动模板的第一对螺钉Y轴向距离；\nPS_Y1：锁底板、方铁和动模板的第二对螺钉Y轴向距离；\nPS_Y2：锁底板、方铁和动模板的第三对螺钉Y轴向距离；\nES_D：锁顶针板和顶针底板的螺钉直径；\nES_N：锁顶针板和顶针底板的螺钉对数；\nES_X：锁顶针板和顶针底板的第一对螺钉X轴向距离；\nES_Y：锁顶针板和顶针底板的第一对螺钉Y轴向距离；\nES_Y1：锁顶针板和顶针底板的第二对螺钉Y轴向距离；\nRP_D：回针直径；\nRP_X：回针X轴向距离；\nRP_Y：回针Y轴向距离；\nEG_GUIDE：中托司（顶出导向系统）开关，1:ON为追加中托司、0:OFF为不追加中托司；\nEGP_D：中托司直径；\nEGP_N：中托司个数；\nEGP_X：中托司X轴向距离；\nEGP_Y：中托司Y轴向距离；\nEGB_ASM_TYPE：中托司的装配方法；\nEB_SIZE_BP：B板（型芯板）上吊环孔大小；\nEB_SIZE_AP：A板（型腔板）上吊环孔大小；\nEB_SIZE_UP：托板上吊环孔大小；\nEB_SIZE_TCP：面板上吊环孔大小；\nEB_SIZE_BCP：底板上吊环孔大小；\nEB_SIZE_RP：水口推板上吊环孔大小；\nEB_SIZE_SP：推板上吊环孔大小；\nEB_SIZE_FP：顶针底板上吊环孔大小；\nEB_SIZE_EP：顶针板上吊环孔大小；\nEB_SIZE_CP：方铁上吊环孔大小；\nSPN_TYPE：拉杆Y方向位置，1:IN为拉杆在导柱内部、0:OUT为拉杆在导柱外部；\nSPN_D：拉杆直径；\nSPN_X：拉杆X轴向距离；\nSPN_Y_IN：拉杆在导柱内部时Y轴向距离；\nSPN_Y_OUT：拉杆在导柱外部时Y轴向距离；\n","slug":"mold2","published":1,"updated":"2018-11-21T09:20:59.128Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyx001s3a8iabaawh7i","content":"<img src=\"/images/mold/2/mj.jpg\" width=\"300\">\n<p>SG：大水口系统（SIDE GATE SYSTEM）；<br>SG类型：A为有托板无推板、B为有托板有推板、C为无托板无推板、D为无托板有推板；<br>PP：细水口系统（PIN POINT GATE SYSTEM）；<br>PP类型：前D为有水口推板、前E为无水口推板，后A、B、C、D同SG类型；<br>TP：简化型细水口系统（THREE PLATE TYPE SYSTEM）；<br>TP类型：前F为有水口推板、前G为无水口推板，后A、B、C、D同SG类型；<br>INDEX：编号；<br>MOLD_W：模架的宽度；<br>MOLD_L：模架的长度；<br>FIX_OPEN：固定侧（A板以上部分）的打开距离；<br>MOVE_OPEN：移动侧（B板以下部分）的打开距离；<br>EJB_OPEN： E板和F板（顶针板和顶针底板）离开下固定板的距离；<br>AP_H：A板（型腔板）的高度；<br>BP_H：B板（型芯板）的高度；<br>CP_H：C板（方铁）的高度；<br>TCP_H：面板的高度；<br>BCP_H：底板的高度；<br>C_W：C板（方铁）的宽度；<br>EF_W：E板和F板（顶针板和顶针底板）的宽度；<br>EJA_H：E板（顶针板）的高度；<br>EJB_H：F板（顶针底板）的高度；<br>SHORTEN_EJ：E板和F板（顶针板和顶针底板）缩短长度；<br>UP_H：托板的高度；<br>SP_H：推板的高度；<br>MOLD_TYPE：模架类型，I型为工字模、H型为无面板直身模、T为有面板直身模；<br>T：有面板直身模的面板宽度；<br>I：工字模的面板宽度；<br>GTYPE：导柱位置，1:On A为导柱位置在A板（反装）、0:On B为导柱位置在B板（正装）；<br>GP_D：导柱直径；<br>GP_X：导柱X轴向距离；<br>GP_Y：导柱Y轴向距离；<br>CS_D：锁底板和方铁的螺钉直径；<br>CS_X：锁底板和方铁的螺钉X轴向距离；<br>CS_Y：锁底板和方铁的螺钉Y轴向距离；<br>PS_D：锁底板、方铁和动模板的螺钉直径；<br>PS_N：锁底板、方铁和动模板的螺钉对数；<br>PS_X：锁底板、方铁和动模板的第一对螺钉X轴向距离；<br>PS_Y：锁底板、方铁和动模板的第一对螺钉Y轴向距离；<br>PS_Y1：锁底板、方铁和动模板的第二对螺钉Y轴向距离；<br>PS_Y2：锁底板、方铁和动模板的第三对螺钉Y轴向距离；<br>ES_D：锁顶针板和顶针底板的螺钉直径；<br>ES_N：锁顶针板和顶针底板的螺钉对数；<br>ES_X：锁顶针板和顶针底板的第一对螺钉X轴向距离；<br>ES_Y：锁顶针板和顶针底板的第一对螺钉Y轴向距离；<br>ES_Y1：锁顶针板和顶针底板的第二对螺钉Y轴向距离；<br>RP_D：回针直径；<br>RP_X：回针X轴向距离；<br>RP_Y：回针Y轴向距离；<br>EG_GUIDE：中托司（顶出导向系统）开关，1:ON为追加中托司、0:OFF为不追加中托司；<br>EGP_D：中托司直径；<br>EGP_N：中托司个数；<br>EGP_X：中托司X轴向距离；<br>EGP_Y：中托司Y轴向距离；<br>EGB_ASM_TYPE：中托司的装配方法；<br>EB_SIZE_BP：B板（型芯板）上吊环孔大小；<br>EB_SIZE_AP：A板（型腔板）上吊环孔大小；<br>EB_SIZE_UP：托板上吊环孔大小；<br>EB_SIZE_TCP：面板上吊环孔大小；<br>EB_SIZE_BCP：底板上吊环孔大小；<br>EB_SIZE_RP：水口推板上吊环孔大小；<br>EB_SIZE_SP：推板上吊环孔大小；<br>EB_SIZE_FP：顶针底板上吊环孔大小；<br>EB_SIZE_EP：顶针板上吊环孔大小；<br>EB_SIZE_CP：方铁上吊环孔大小；<br>SPN_TYPE：拉杆Y方向位置，1:IN为拉杆在导柱内部、0:OUT为拉杆在导柱外部；<br>SPN_D：拉杆直径；<br>SPN_X：拉杆X轴向距离；<br>SPN_Y_IN：拉杆在导柱内部时Y轴向距离；<br>SPN_Y_OUT：拉杆在导柱外部时Y轴向距离；</p>\n","site":{"data":{}},"excerpt":"","more":"<img src=\"/images/mold/2/mj.jpg\" width=\"300\">\n<p>SG：大水口系统（SIDE GATE SYSTEM）；<br>SG类型：A为有托板无推板、B为有托板有推板、C为无托板无推板、D为无托板有推板；<br>PP：细水口系统（PIN POINT GATE SYSTEM）；<br>PP类型：前D为有水口推板、前E为无水口推板，后A、B、C、D同SG类型；<br>TP：简化型细水口系统（THREE PLATE TYPE SYSTEM）；<br>TP类型：前F为有水口推板、前G为无水口推板，后A、B、C、D同SG类型；<br>INDEX：编号；<br>MOLD_W：模架的宽度；<br>MOLD_L：模架的长度；<br>FIX_OPEN：固定侧（A板以上部分）的打开距离；<br>MOVE_OPEN：移动侧（B板以下部分）的打开距离；<br>EJB_OPEN： E板和F板（顶针板和顶针底板）离开下固定板的距离；<br>AP_H：A板（型腔板）的高度；<br>BP_H：B板（型芯板）的高度；<br>CP_H：C板（方铁）的高度；<br>TCP_H：面板的高度；<br>BCP_H：底板的高度；<br>C_W：C板（方铁）的宽度；<br>EF_W：E板和F板（顶针板和顶针底板）的宽度；<br>EJA_H：E板（顶针板）的高度；<br>EJB_H：F板（顶针底板）的高度；<br>SHORTEN_EJ：E板和F板（顶针板和顶针底板）缩短长度；<br>UP_H：托板的高度；<br>SP_H：推板的高度；<br>MOLD_TYPE：模架类型，I型为工字模、H型为无面板直身模、T为有面板直身模；<br>T：有面板直身模的面板宽度；<br>I：工字模的面板宽度；<br>GTYPE：导柱位置，1:On A为导柱位置在A板（反装）、0:On B为导柱位置在B板（正装）；<br>GP_D：导柱直径；<br>GP_X：导柱X轴向距离；<br>GP_Y：导柱Y轴向距离；<br>CS_D：锁底板和方铁的螺钉直径；<br>CS_X：锁底板和方铁的螺钉X轴向距离；<br>CS_Y：锁底板和方铁的螺钉Y轴向距离；<br>PS_D：锁底板、方铁和动模板的螺钉直径；<br>PS_N：锁底板、方铁和动模板的螺钉对数；<br>PS_X：锁底板、方铁和动模板的第一对螺钉X轴向距离；<br>PS_Y：锁底板、方铁和动模板的第一对螺钉Y轴向距离；<br>PS_Y1：锁底板、方铁和动模板的第二对螺钉Y轴向距离；<br>PS_Y2：锁底板、方铁和动模板的第三对螺钉Y轴向距离；<br>ES_D：锁顶针板和顶针底板的螺钉直径；<br>ES_N：锁顶针板和顶针底板的螺钉对数；<br>ES_X：锁顶针板和顶针底板的第一对螺钉X轴向距离；<br>ES_Y：锁顶针板和顶针底板的第一对螺钉Y轴向距离；<br>ES_Y1：锁顶针板和顶针底板的第二对螺钉Y轴向距离；<br>RP_D：回针直径；<br>RP_X：回针X轴向距离；<br>RP_Y：回针Y轴向距离；<br>EG_GUIDE：中托司（顶出导向系统）开关，1:ON为追加中托司、0:OFF为不追加中托司；<br>EGP_D：中托司直径；<br>EGP_N：中托司个数；<br>EGP_X：中托司X轴向距离；<br>EGP_Y：中托司Y轴向距离；<br>EGB_ASM_TYPE：中托司的装配方法；<br>EB_SIZE_BP：B板（型芯板）上吊环孔大小；<br>EB_SIZE_AP：A板（型腔板）上吊环孔大小；<br>EB_SIZE_UP：托板上吊环孔大小；<br>EB_SIZE_TCP：面板上吊环孔大小；<br>EB_SIZE_BCP：底板上吊环孔大小；<br>EB_SIZE_RP：水口推板上吊环孔大小；<br>EB_SIZE_SP：推板上吊环孔大小；<br>EB_SIZE_FP：顶针底板上吊环孔大小；<br>EB_SIZE_EP：顶针板上吊环孔大小；<br>EB_SIZE_CP：方铁上吊环孔大小；<br>SPN_TYPE：拉杆Y方向位置，1:IN为拉杆在导柱内部、0:OUT为拉杆在导柱外部；<br>SPN_D：拉杆直径；<br>SPN_X：拉杆X轴向距离；<br>SPN_Y_IN：拉杆在导柱内部时Y轴向距离；<br>SPN_Y_OUT：拉杆在导柱外部时Y轴向距离；</p>\n"},{"title":"滑块上设计顶针","date":"2008-06-01T16:00:00.000Z","keywords":"滑块上设计顶针, 注塑模具设计","description":"产品侧面局部有筋条及柱位，为了脱模顺利在滑块上设计两根顶针","_content":"\n下图为产品侧面局部，有筋条及柱位，为了脱模顺利在滑块上设计两根顶针。\n\n{% img /images/mold/3/chp.jpg 220 %}\n\n下图为滑块3D，顶针部位（蓝色）剖视。\n\n{% img /images/mold/3/3D.jpg 210 %}\n\n下图为合模时的2D示意。顶针在弹簧作用下保持复位状态。\n\n{% img /images/mold/3/2D1.jpg 180 %}\n\n下图为开模时的2D示意。定模板上移对滑块的斜紧作用放松，滑块在弹簧和斜导柱的作用下左移脱模。由于定模板上那个竖直小平面对顶针的约束，顶针保持合模时的位置不动，相对滑块即为顶出。\n\n{% img /images/mold/3/2D2.jpg 225 %}\n\n另外，滑块上设计司筒，[点击查看](mold7.html)。\n","source":"_posts/mold3.md","raw":"---\ntitle: 滑块上设计顶针\ndate: 2008-06-02 00:00:00\ncategories: Uncategorized\nkeywords: 滑块上设计顶针, 注塑模具设计\ndescription: 产品侧面局部有筋条及柱位，为了脱模顺利在滑块上设计两根顶针\n---\n\n下图为产品侧面局部，有筋条及柱位，为了脱模顺利在滑块上设计两根顶针。\n\n{% img /images/mold/3/chp.jpg 220 %}\n\n下图为滑块3D，顶针部位（蓝色）剖视。\n\n{% img /images/mold/3/3D.jpg 210 %}\n\n下图为合模时的2D示意。顶针在弹簧作用下保持复位状态。\n\n{% img /images/mold/3/2D1.jpg 180 %}\n\n下图为开模时的2D示意。定模板上移对滑块的斜紧作用放松，滑块在弹簧和斜导柱的作用下左移脱模。由于定模板上那个竖直小平面对顶针的约束，顶针保持合模时的位置不动，相对滑块即为顶出。\n\n{% img /images/mold/3/2D2.jpg 225 %}\n\n另外，滑块上设计司筒，[点击查看](mold7.html)。\n","slug":"mold3","published":1,"updated":"2018-11-19T08:24:26.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyy001u3a8iq705d5ln","content":"<p>下图为产品侧面局部，有筋条及柱位，为了脱模顺利在滑块上设计两根顶针。</p>\n<img src=\"/images/mold/3/chp.jpg\" width=\"220\">\n<p>下图为滑块3D，顶针部位（蓝色）剖视。</p>\n<img src=\"/images/mold/3/3D.jpg\" width=\"210\">\n<p>下图为合模时的2D示意。顶针在弹簧作用下保持复位状态。</p>\n<img src=\"/images/mold/3/2D1.jpg\" width=\"180\">\n<p>下图为开模时的2D示意。定模板上移对滑块的斜紧作用放松，滑块在弹簧和斜导柱的作用下左移脱模。由于定模板上那个竖直小平面对顶针的约束，顶针保持合模时的位置不动，相对滑块即为顶出。</p>\n<img src=\"/images/mold/3/2D2.jpg\" width=\"225\">\n<p>另外，滑块上设计司筒，<a href=\"mold7.html\">点击查看</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>下图为产品侧面局部，有筋条及柱位，为了脱模顺利在滑块上设计两根顶针。</p>\n<img src=\"/images/mold/3/chp.jpg\" width=\"220\">\n<p>下图为滑块3D，顶针部位（蓝色）剖视。</p>\n<img src=\"/images/mold/3/3D.jpg\" width=\"210\">\n<p>下图为合模时的2D示意。顶针在弹簧作用下保持复位状态。</p>\n<img src=\"/images/mold/3/2D1.jpg\" width=\"180\">\n<p>下图为开模时的2D示意。定模板上移对滑块的斜紧作用放松，滑块在弹簧和斜导柱的作用下左移脱模。由于定模板上那个竖直小平面对顶针的约束，顶针保持合模时的位置不动，相对滑块即为顶出。</p>\n<img src=\"/images/mold/3/2D2.jpg\" width=\"225\">\n<p>另外，滑块上设计司筒，<a href=\"mold7.html\">点击查看</a>。</p>\n"},{"title":"滑块上设计司筒","date":"2008-11-02T16:00:00.000Z","keywords":"滑块上设计司筒, 注塑模具设计","description":"康佳平板电视LC42FS81DC机型面壳的装饰条。喇叭支撑架的两个螺丝柱位以及喇叭框需要在模具上设计滑块。两个螺丝柱位螺孔较深要在滑块上设计司筒方便顶出脱模","_content":"\n康佳平板电视LC42FS81DC机型面壳的装饰条，塑胶材料是红色ABS，下图面壳底部红色部分。\n\n{% img /images/mold/7/zhp.jpg 200 %}\n\n下图为产品局部结构，此装饰条还有喇叭支撑架的作用，声音通过面壳底部暗槽放出。支撑架的两个螺丝柱位以及喇叭框需要在模具上设计滑块。两个螺丝柱位螺孔较深要在滑块上设计司筒方便顶出脱模。\n\n{% img /images/mold/7/chp.jpg 285 %}\n\n下图为滑块3D，司筒部位（蓝色）剖视。\n\n{% img /images/mold/7/3D.jpg 245 %}\n\n下图为合模时的2D示意。司筒针和滑块通过固定块固定在一起，司筒在弹簧和压块的作用下保持复位状态。开模时，滑块带动司筒针左移，而司筒在斜紧楔上竖直平面约束下保持位置不动，相对滑块和司筒针即为顶出。\n\n{% img /images/mold/7/2D.jpg 255 %}\n\n关于开模时的状态，可参照滑块上设计顶针，[点击查看](mold3.html)。\n","source":"_posts/mold7.md","raw":"---\ntitle: 滑块上设计司筒\ndate: 2008-11-03 00:00:00\ncategories: Uncategorized\nkeywords: 滑块上设计司筒, 注塑模具设计\ndescription: 康佳平板电视LC42FS81DC机型面壳的装饰条。喇叭支撑架的两个螺丝柱位以及喇叭框需要在模具上设计滑块。两个螺丝柱位螺孔较深要在滑块上设计司筒方便顶出脱模\n---\n\n康佳平板电视LC42FS81DC机型面壳的装饰条，塑胶材料是红色ABS，下图面壳底部红色部分。\n\n{% img /images/mold/7/zhp.jpg 200 %}\n\n下图为产品局部结构，此装饰条还有喇叭支撑架的作用，声音通过面壳底部暗槽放出。支撑架的两个螺丝柱位以及喇叭框需要在模具上设计滑块。两个螺丝柱位螺孔较深要在滑块上设计司筒方便顶出脱模。\n\n{% img /images/mold/7/chp.jpg 285 %}\n\n下图为滑块3D，司筒部位（蓝色）剖视。\n\n{% img /images/mold/7/3D.jpg 245 %}\n\n下图为合模时的2D示意。司筒针和滑块通过固定块固定在一起，司筒在弹簧和压块的作用下保持复位状态。开模时，滑块带动司筒针左移，而司筒在斜紧楔上竖直平面约束下保持位置不动，相对滑块和司筒针即为顶出。\n\n{% img /images/mold/7/2D.jpg 255 %}\n\n关于开模时的状态，可参照滑块上设计顶针，[点击查看](mold3.html)。\n","slug":"mold7","published":1,"updated":"2018-11-19T08:33:59.301Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyz001w3a8i4jc673d4","content":"<p>康佳平板电视LC42FS81DC机型面壳的装饰条，塑胶材料是红色ABS，下图面壳底部红色部分。</p>\n<img src=\"/images/mold/7/zhp.jpg\" width=\"200\">\n<p>下图为产品局部结构，此装饰条还有喇叭支撑架的作用，声音通过面壳底部暗槽放出。支撑架的两个螺丝柱位以及喇叭框需要在模具上设计滑块。两个螺丝柱位螺孔较深要在滑块上设计司筒方便顶出脱模。</p>\n<img src=\"/images/mold/7/chp.jpg\" width=\"285\">\n<p>下图为滑块3D，司筒部位（蓝色）剖视。</p>\n<img src=\"/images/mold/7/3D.jpg\" width=\"245\">\n<p>下图为合模时的2D示意。司筒针和滑块通过固定块固定在一起，司筒在弹簧和压块的作用下保持复位状态。开模时，滑块带动司筒针左移，而司筒在斜紧楔上竖直平面约束下保持位置不动，相对滑块和司筒针即为顶出。</p>\n<img src=\"/images/mold/7/2D.jpg\" width=\"255\">\n<p>关于开模时的状态，可参照滑块上设计顶针，<a href=\"mold3.html\">点击查看</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>康佳平板电视LC42FS81DC机型面壳的装饰条，塑胶材料是红色ABS，下图面壳底部红色部分。</p>\n<img src=\"/images/mold/7/zhp.jpg\" width=\"200\">\n<p>下图为产品局部结构，此装饰条还有喇叭支撑架的作用，声音通过面壳底部暗槽放出。支撑架的两个螺丝柱位以及喇叭框需要在模具上设计滑块。两个螺丝柱位螺孔较深要在滑块上设计司筒方便顶出脱模。</p>\n<img src=\"/images/mold/7/chp.jpg\" width=\"285\">\n<p>下图为滑块3D，司筒部位（蓝色）剖视。</p>\n<img src=\"/images/mold/7/3D.jpg\" width=\"245\">\n<p>下图为合模时的2D示意。司筒针和滑块通过固定块固定在一起，司筒在弹簧和压块的作用下保持复位状态。开模时，滑块带动司筒针左移，而司筒在斜紧楔上竖直平面约束下保持位置不动，相对滑块和司筒针即为顶出。</p>\n<img src=\"/images/mold/7/2D.jpg\" width=\"255\">\n<p>关于开模时的状态，可参照滑块上设计顶针，<a href=\"mold3.html\">点击查看</a>。</p>\n"},{"title":"斜顶上运水","date":"2008-07-10T16:00:00.000Z","keywords":"斜顶上运水, 注塑模具设计","description":"斜顶较大，必须运水冷却。由两根接水管把水通过斜顶运到斜顶头部","_content":"\n如下图纸，产品动模部分倒扣，方向朝内。\n\n{% img /images/mold/4/tuzhi.jpg 367 %}\n\n设计一较大斜顶，侧孔一起做在斜顶上。下图为胶位局部及加斜顶后。\n\n{% img /images/mold/4/chp.jpg 275 %}\n\n下图为斜顶3D，斜顶较大，必须运水冷却。\n\n{% img /images/mold/4/xd.jpg 135 %}\n\n下图为2D示意图，由两根接水管把水通过斜顶运到斜顶头部。\n\n{% img /images/mold/4/2D.jpg 180 %}\n","source":"_posts/mold4.md","raw":"---\ntitle: 斜顶上运水\ndate: 2008-07-11 00:00:00\ncategories: Uncategorized\nkeywords: 斜顶上运水, 注塑模具设计\ndescription: 斜顶较大，必须运水冷却。由两根接水管把水通过斜顶运到斜顶头部\n---\n\n如下图纸，产品动模部分倒扣，方向朝内。\n\n{% img /images/mold/4/tuzhi.jpg 367 %}\n\n设计一较大斜顶，侧孔一起做在斜顶上。下图为胶位局部及加斜顶后。\n\n{% img /images/mold/4/chp.jpg 275 %}\n\n下图为斜顶3D，斜顶较大，必须运水冷却。\n\n{% img /images/mold/4/xd.jpg 135 %}\n\n下图为2D示意图，由两根接水管把水通过斜顶运到斜顶头部。\n\n{% img /images/mold/4/2D.jpg 180 %}\n","slug":"mold4","published":1,"updated":"2018-11-19T02:35:28.360Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emyz001y3a8i0r2oltvd","content":"<p>如下图纸，产品动模部分倒扣，方向朝内。</p>\n<img src=\"/images/mold/4/tuzhi.jpg\" width=\"367\">\n<p>设计一较大斜顶，侧孔一起做在斜顶上。下图为胶位局部及加斜顶后。</p>\n<img src=\"/images/mold/4/chp.jpg\" width=\"275\">\n<p>下图为斜顶3D，斜顶较大，必须运水冷却。</p>\n<img src=\"/images/mold/4/xd.jpg\" width=\"135\">\n<p>下图为2D示意图，由两根接水管把水通过斜顶运到斜顶头部。</p>\n<img src=\"/images/mold/4/2D.jpg\" width=\"180\">\n","site":{"data":{}},"excerpt":"","more":"<p>如下图纸，产品动模部分倒扣，方向朝内。</p>\n<img src=\"/images/mold/4/tuzhi.jpg\" width=\"367\">\n<p>设计一较大斜顶，侧孔一起做在斜顶上。下图为胶位局部及加斜顶后。</p>\n<img src=\"/images/mold/4/chp.jpg\" width=\"275\">\n<p>下图为斜顶3D，斜顶较大，必须运水冷却。</p>\n<img src=\"/images/mold/4/xd.jpg\" width=\"135\">\n<p>下图为2D示意图，由两根接水管把水通过斜顶运到斜顶头部。</p>\n<img src=\"/images/mold/4/2D.jpg\" width=\"180\">\n"},{"title":"三种三通","date":"2008-10-17T16:00:00.000Z","keywords":"三通, 注塑模具设计","description":"由简单到复杂，粗糙到精准的三种三通做法：第一种（直接补面）；第二种（网格关键面）；第三种（逐步细分）","_content":"\n由简单到复杂，粗糙到精准的三种三通做法：\n\n## 第一种（直接补面）：\n\n1、析出蓝色线，桥接出红色绿色线；\n\n{% img /images/mold/6/11.jpg 160 %}\n\n2、沿水平方向拉伸出两个蓝色辅助面，桥接两面边缘；\n\n{% img /images/mold/6/12.jpg 160 %}\n\n3、做网格曲面；\n\n{% img /images/mold/6/13.jpg 160 %}\n\n4、用绿色桥接线修剪曲面；\n\n{% img /images/mold/6/14.jpg 160 %}\n\n5、沿竖直方向拉伸三个绿色辅助面；\n\n{% img /images/mold/6/15.jpg 160 %}\n\n6、做三个蓝色网格曲面；\n\n{% img /images/mold/6/16.jpg 160 %}\n\n7、缝合，反射分析，曲面质量不是很好。\n\n{% img /images/mold/6/17.jpg 160 %}\n\n## 第二种（网格关键面）：\n\n1、析出曲线并桥接；\n\n{% img /images/mold/6/21.jpg 160 %}\n\n2、求XC-ZC平面与两条桥接线的交点，做水平、竖直各一条红色辅助线，桥接之；（此步骤为网格曲面增加一条主线串，使曲面更加精准，也可省略）\n\n{% img /images/mold/6/22.jpg 160 %}\n\n3、沿竖直方向拉伸三个绿色辅助面；\n\n{% img /images/mold/6/23.jpg 160 %}\n\n4、做网格曲面；\n\n{% img /images/mold/6/24.jpg 160 %}\n\n5、桥接绿色曲线得两条白色曲线；（关键步骤）\n\n{% img /images/mold/6/25.jpg 160 %}\n\n6、做绿色网格曲面；\n\n{% img /images/mold/6/26.jpg 160 %}\n\n7、用红色桥接线修剪曲面；\n\n{% img /images/mold/6/27.jpg 160 %}\n\n8、做两个白色网格曲面；\n\n{% img /images/mold/6/28.jpg 160 %}\n\n9、缝合，反射分析，曲面质量已有很大改善。\n\n{% img /images/mold/6/29.jpg 160 %}\n\n## 第三种（逐步细分）：\n\n1、析出曲线并桥接，沿竖直方向拉伸三个白色辅助面；\n\n{% img /images/mold/6/31.jpg 160 %}\n\n2、做三个绿色网格曲面；\n\n{% img /images/mold/6/32.jpg 160 %}\n\n3、在曲面上抽取三条红色等参数曲线；\n\n{% img /images/mold/6/33.jpg 160 %}\n\n4、用抽取的曲线修剪曲面，然后再抽取三条绿色等参数曲线，桥接得三条蓝色曲线；\n\n{% img /images/mold/6/34.jpg 160 %}\n\n5、做三个绿色网格曲面；\n\n{% img /images/mold/6/35.jpg 160 %}\n\n6、在曲面上抽取三条白色等参数曲线；\n\n{% img /images/mold/6/36.jpg 160 %}\n\n7、用抽取的曲线修剪曲面，然后再抽取三条蓝色等参数曲线，桥接得三条灰色曲线；\n\n{% img /images/mold/6/37.jpg 160 %}\n\n8、做三个蓝色网格曲面；\n\n{% img /images/mold/6/38.jpg 160 %}\n\n9、在曲线上求点（40﹪、60﹪处），连接点做出两条蓝色辅助线；\n\n{% img /images/mold/6/39.jpg 160 %}\n\n10、用蓝色辅助线修剪曲面；\n\n{% img /images/mold/6/40.jpg 160 %}\n\n11、做蓝色网格曲面；\n\n{% img /images/mold/6/41.jpg 160 %}\n\n12、缝合，反射分析，曲面质量比较完美。\n\n{% img /images/mold/6/42.jpg 160 %}\n","source":"_posts/mold6.md","raw":"---\ntitle: 三种三通\ndate: 2008-10-18 00:00:00\ncategories: Uncategorized\nkeywords: 三通, 注塑模具设计\ndescription: 由简单到复杂，粗糙到精准的三种三通做法：第一种（直接补面）；第二种（网格关键面）；第三种（逐步细分）\n---\n\n由简单到复杂，粗糙到精准的三种三通做法：\n\n## 第一种（直接补面）：\n\n1、析出蓝色线，桥接出红色绿色线；\n\n{% img /images/mold/6/11.jpg 160 %}\n\n2、沿水平方向拉伸出两个蓝色辅助面，桥接两面边缘；\n\n{% img /images/mold/6/12.jpg 160 %}\n\n3、做网格曲面；\n\n{% img /images/mold/6/13.jpg 160 %}\n\n4、用绿色桥接线修剪曲面；\n\n{% img /images/mold/6/14.jpg 160 %}\n\n5、沿竖直方向拉伸三个绿色辅助面；\n\n{% img /images/mold/6/15.jpg 160 %}\n\n6、做三个蓝色网格曲面；\n\n{% img /images/mold/6/16.jpg 160 %}\n\n7、缝合，反射分析，曲面质量不是很好。\n\n{% img /images/mold/6/17.jpg 160 %}\n\n## 第二种（网格关键面）：\n\n1、析出曲线并桥接；\n\n{% img /images/mold/6/21.jpg 160 %}\n\n2、求XC-ZC平面与两条桥接线的交点，做水平、竖直各一条红色辅助线，桥接之；（此步骤为网格曲面增加一条主线串，使曲面更加精准，也可省略）\n\n{% img /images/mold/6/22.jpg 160 %}\n\n3、沿竖直方向拉伸三个绿色辅助面；\n\n{% img /images/mold/6/23.jpg 160 %}\n\n4、做网格曲面；\n\n{% img /images/mold/6/24.jpg 160 %}\n\n5、桥接绿色曲线得两条白色曲线；（关键步骤）\n\n{% img /images/mold/6/25.jpg 160 %}\n\n6、做绿色网格曲面；\n\n{% img /images/mold/6/26.jpg 160 %}\n\n7、用红色桥接线修剪曲面；\n\n{% img /images/mold/6/27.jpg 160 %}\n\n8、做两个白色网格曲面；\n\n{% img /images/mold/6/28.jpg 160 %}\n\n9、缝合，反射分析，曲面质量已有很大改善。\n\n{% img /images/mold/6/29.jpg 160 %}\n\n## 第三种（逐步细分）：\n\n1、析出曲线并桥接，沿竖直方向拉伸三个白色辅助面；\n\n{% img /images/mold/6/31.jpg 160 %}\n\n2、做三个绿色网格曲面；\n\n{% img /images/mold/6/32.jpg 160 %}\n\n3、在曲面上抽取三条红色等参数曲线；\n\n{% img /images/mold/6/33.jpg 160 %}\n\n4、用抽取的曲线修剪曲面，然后再抽取三条绿色等参数曲线，桥接得三条蓝色曲线；\n\n{% img /images/mold/6/34.jpg 160 %}\n\n5、做三个绿色网格曲面；\n\n{% img /images/mold/6/35.jpg 160 %}\n\n6、在曲面上抽取三条白色等参数曲线；\n\n{% img /images/mold/6/36.jpg 160 %}\n\n7、用抽取的曲线修剪曲面，然后再抽取三条蓝色等参数曲线，桥接得三条灰色曲线；\n\n{% img /images/mold/6/37.jpg 160 %}\n\n8、做三个蓝色网格曲面；\n\n{% img /images/mold/6/38.jpg 160 %}\n\n9、在曲线上求点（40﹪、60﹪处），连接点做出两条蓝色辅助线；\n\n{% img /images/mold/6/39.jpg 160 %}\n\n10、用蓝色辅助线修剪曲面；\n\n{% img /images/mold/6/40.jpg 160 %}\n\n11、做蓝色网格曲面；\n\n{% img /images/mold/6/41.jpg 160 %}\n\n12、缝合，反射分析，曲面质量比较完美。\n\n{% img /images/mold/6/42.jpg 160 %}\n","slug":"mold6","published":1,"updated":"2018-11-19T08:46:43.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emz000203a8i3r37vg8n","content":"<p>由简单到复杂，粗糙到精准的三种三通做法：</p>\n<h2 id=\"第一种（直接补面）：\"><a href=\"#第一种（直接补面）：\" class=\"headerlink\" title=\"第一种（直接补面）：\"></a>第一种（直接补面）：</h2><p>1、析出蓝色线，桥接出红色绿色线；</p>\n<img src=\"/images/mold/6/11.jpg\" width=\"160\">\n<p>2、沿水平方向拉伸出两个蓝色辅助面，桥接两面边缘；</p>\n<img src=\"/images/mold/6/12.jpg\" width=\"160\">\n<p>3、做网格曲面；</p>\n<img src=\"/images/mold/6/13.jpg\" width=\"160\">\n<p>4、用绿色桥接线修剪曲面；</p>\n<img src=\"/images/mold/6/14.jpg\" width=\"160\">\n<p>5、沿竖直方向拉伸三个绿色辅助面；</p>\n<img src=\"/images/mold/6/15.jpg\" width=\"160\">\n<p>6、做三个蓝色网格曲面；</p>\n<img src=\"/images/mold/6/16.jpg\" width=\"160\">\n<p>7、缝合，反射分析，曲面质量不是很好。</p>\n<img src=\"/images/mold/6/17.jpg\" width=\"160\">\n<h2 id=\"第二种（网格关键面）：\"><a href=\"#第二种（网格关键面）：\" class=\"headerlink\" title=\"第二种（网格关键面）：\"></a>第二种（网格关键面）：</h2><p>1、析出曲线并桥接；</p>\n<img src=\"/images/mold/6/21.jpg\" width=\"160\">\n<p>2、求XC-ZC平面与两条桥接线的交点，做水平、竖直各一条红色辅助线，桥接之；（此步骤为网格曲面增加一条主线串，使曲面更加精准，也可省略）</p>\n<img src=\"/images/mold/6/22.jpg\" width=\"160\">\n<p>3、沿竖直方向拉伸三个绿色辅助面；</p>\n<img src=\"/images/mold/6/23.jpg\" width=\"160\">\n<p>4、做网格曲面；</p>\n<img src=\"/images/mold/6/24.jpg\" width=\"160\">\n<p>5、桥接绿色曲线得两条白色曲线；（关键步骤）</p>\n<img src=\"/images/mold/6/25.jpg\" width=\"160\">\n<p>6、做绿色网格曲面；</p>\n<img src=\"/images/mold/6/26.jpg\" width=\"160\">\n<p>7、用红色桥接线修剪曲面；</p>\n<img src=\"/images/mold/6/27.jpg\" width=\"160\">\n<p>8、做两个白色网格曲面；</p>\n<img src=\"/images/mold/6/28.jpg\" width=\"160\">\n<p>9、缝合，反射分析，曲面质量已有很大改善。</p>\n<img src=\"/images/mold/6/29.jpg\" width=\"160\">\n<h2 id=\"第三种（逐步细分）：\"><a href=\"#第三种（逐步细分）：\" class=\"headerlink\" title=\"第三种（逐步细分）：\"></a>第三种（逐步细分）：</h2><p>1、析出曲线并桥接，沿竖直方向拉伸三个白色辅助面；</p>\n<img src=\"/images/mold/6/31.jpg\" width=\"160\">\n<p>2、做三个绿色网格曲面；</p>\n<img src=\"/images/mold/6/32.jpg\" width=\"160\">\n<p>3、在曲面上抽取三条红色等参数曲线；</p>\n<img src=\"/images/mold/6/33.jpg\" width=\"160\">\n<p>4、用抽取的曲线修剪曲面，然后再抽取三条绿色等参数曲线，桥接得三条蓝色曲线；</p>\n<img src=\"/images/mold/6/34.jpg\" width=\"160\">\n<p>5、做三个绿色网格曲面；</p>\n<img src=\"/images/mold/6/35.jpg\" width=\"160\">\n<p>6、在曲面上抽取三条白色等参数曲线；</p>\n<img src=\"/images/mold/6/36.jpg\" width=\"160\">\n<p>7、用抽取的曲线修剪曲面，然后再抽取三条蓝色等参数曲线，桥接得三条灰色曲线；</p>\n<img src=\"/images/mold/6/37.jpg\" width=\"160\">\n<p>8、做三个蓝色网格曲面；</p>\n<img src=\"/images/mold/6/38.jpg\" width=\"160\">\n<p>9、在曲线上求点（40﹪、60﹪处），连接点做出两条蓝色辅助线；</p>\n<img src=\"/images/mold/6/39.jpg\" width=\"160\">\n<p>10、用蓝色辅助线修剪曲面；</p>\n<img src=\"/images/mold/6/40.jpg\" width=\"160\">\n<p>11、做蓝色网格曲面；</p>\n<img src=\"/images/mold/6/41.jpg\" width=\"160\">\n<p>12、缝合，反射分析，曲面质量比较完美。</p>\n<img src=\"/images/mold/6/42.jpg\" width=\"160\">\n","site":{"data":{}},"excerpt":"","more":"<p>由简单到复杂，粗糙到精准的三种三通做法：</p>\n<h2 id=\"第一种（直接补面）：\"><a href=\"#第一种（直接补面）：\" class=\"headerlink\" title=\"第一种（直接补面）：\"></a>第一种（直接补面）：</h2><p>1、析出蓝色线，桥接出红色绿色线；</p>\n<img src=\"/images/mold/6/11.jpg\" width=\"160\">\n<p>2、沿水平方向拉伸出两个蓝色辅助面，桥接两面边缘；</p>\n<img src=\"/images/mold/6/12.jpg\" width=\"160\">\n<p>3、做网格曲面；</p>\n<img src=\"/images/mold/6/13.jpg\" width=\"160\">\n<p>4、用绿色桥接线修剪曲面；</p>\n<img src=\"/images/mold/6/14.jpg\" width=\"160\">\n<p>5、沿竖直方向拉伸三个绿色辅助面；</p>\n<img src=\"/images/mold/6/15.jpg\" width=\"160\">\n<p>6、做三个蓝色网格曲面；</p>\n<img src=\"/images/mold/6/16.jpg\" width=\"160\">\n<p>7、缝合，反射分析，曲面质量不是很好。</p>\n<img src=\"/images/mold/6/17.jpg\" width=\"160\">\n<h2 id=\"第二种（网格关键面）：\"><a href=\"#第二种（网格关键面）：\" class=\"headerlink\" title=\"第二种（网格关键面）：\"></a>第二种（网格关键面）：</h2><p>1、析出曲线并桥接；</p>\n<img src=\"/images/mold/6/21.jpg\" width=\"160\">\n<p>2、求XC-ZC平面与两条桥接线的交点，做水平、竖直各一条红色辅助线，桥接之；（此步骤为网格曲面增加一条主线串，使曲面更加精准，也可省略）</p>\n<img src=\"/images/mold/6/22.jpg\" width=\"160\">\n<p>3、沿竖直方向拉伸三个绿色辅助面；</p>\n<img src=\"/images/mold/6/23.jpg\" width=\"160\">\n<p>4、做网格曲面；</p>\n<img src=\"/images/mold/6/24.jpg\" width=\"160\">\n<p>5、桥接绿色曲线得两条白色曲线；（关键步骤）</p>\n<img src=\"/images/mold/6/25.jpg\" width=\"160\">\n<p>6、做绿色网格曲面；</p>\n<img src=\"/images/mold/6/26.jpg\" width=\"160\">\n<p>7、用红色桥接线修剪曲面；</p>\n<img src=\"/images/mold/6/27.jpg\" width=\"160\">\n<p>8、做两个白色网格曲面；</p>\n<img src=\"/images/mold/6/28.jpg\" width=\"160\">\n<p>9、缝合，反射分析，曲面质量已有很大改善。</p>\n<img src=\"/images/mold/6/29.jpg\" width=\"160\">\n<h2 id=\"第三种（逐步细分）：\"><a href=\"#第三种（逐步细分）：\" class=\"headerlink\" title=\"第三种（逐步细分）：\"></a>第三种（逐步细分）：</h2><p>1、析出曲线并桥接，沿竖直方向拉伸三个白色辅助面；</p>\n<img src=\"/images/mold/6/31.jpg\" width=\"160\">\n<p>2、做三个绿色网格曲面；</p>\n<img src=\"/images/mold/6/32.jpg\" width=\"160\">\n<p>3、在曲面上抽取三条红色等参数曲线；</p>\n<img src=\"/images/mold/6/33.jpg\" width=\"160\">\n<p>4、用抽取的曲线修剪曲面，然后再抽取三条绿色等参数曲线，桥接得三条蓝色曲线；</p>\n<img src=\"/images/mold/6/34.jpg\" width=\"160\">\n<p>5、做三个绿色网格曲面；</p>\n<img src=\"/images/mold/6/35.jpg\" width=\"160\">\n<p>6、在曲面上抽取三条白色等参数曲线；</p>\n<img src=\"/images/mold/6/36.jpg\" width=\"160\">\n<p>7、用抽取的曲线修剪曲面，然后再抽取三条蓝色等参数曲线，桥接得三条灰色曲线；</p>\n<img src=\"/images/mold/6/37.jpg\" width=\"160\">\n<p>8、做三个蓝色网格曲面；</p>\n<img src=\"/images/mold/6/38.jpg\" width=\"160\">\n<p>9、在曲线上求点（40﹪、60﹪处），连接点做出两条蓝色辅助线；</p>\n<img src=\"/images/mold/6/39.jpg\" width=\"160\">\n<p>10、用蓝色辅助线修剪曲面；</p>\n<img src=\"/images/mold/6/40.jpg\" width=\"160\">\n<p>11、做蓝色网格曲面；</p>\n<img src=\"/images/mold/6/41.jpg\" width=\"160\">\n<p>12、缝合，反射分析，曲面质量比较完美。</p>\n<img src=\"/images/mold/6/42.jpg\" width=\"160\">\n"},{"title":"滑块上的潜伏浇口","date":"2008-09-26T16:00:00.000Z","keywords":"滑块上的潜伏浇口, 注塑模具设计","description":"康佳手机5610的T卡盖，就是盖存储卡槽的那个软胶片。为使浇口对产品外观及结构的影响最小，选用潜伏浇口，进胶点选在圆柱形的固定扣上。顶出时浇口自动拉断。浇口设在滑块上","_content":"\n康佳手机5610的T卡盖，就是盖存储卡槽的那个软胶片。材料是德国拜尔TPU95。\n\n{% img /images/mold/5/chp.jpg 205 %}\n\n型腔数量1\\*4。圆柱形的固定扣用左右各一个滑块成形。下图为定模部分，蓝色和红色为滑块。\n\n{% img /images/mold/5/dim.jpg 170 %}\n\n为使浇口对产品外观及结构的影响最小，选用潜伏浇口，进胶点选在圆柱形的固定扣上。顶出时浇口自动拉断。浇口设在滑块上。\n\n{% img /images/mold/5/jk.jpg 215 %}\n\n采用梯形流道，下图为具体走胶。\n\n{% img /images/mold/5/ld.jpg 265 %}\n","source":"_posts/mold5.md","raw":"---\ntitle: 滑块上的潜伏浇口\ndate: 2008-09-27 00:00:00\ncategories: Uncategorized\nkeywords: 滑块上的潜伏浇口, 注塑模具设计\ndescription: 康佳手机5610的T卡盖，就是盖存储卡槽的那个软胶片。为使浇口对产品外观及结构的影响最小，选用潜伏浇口，进胶点选在圆柱形的固定扣上。顶出时浇口自动拉断。浇口设在滑块上\n---\n\n康佳手机5610的T卡盖，就是盖存储卡槽的那个软胶片。材料是德国拜尔TPU95。\n\n{% img /images/mold/5/chp.jpg 205 %}\n\n型腔数量1\\*4。圆柱形的固定扣用左右各一个滑块成形。下图为定模部分，蓝色和红色为滑块。\n\n{% img /images/mold/5/dim.jpg 170 %}\n\n为使浇口对产品外观及结构的影响最小，选用潜伏浇口，进胶点选在圆柱形的固定扣上。顶出时浇口自动拉断。浇口设在滑块上。\n\n{% img /images/mold/5/jk.jpg 215 %}\n\n采用梯形流道，下图为具体走胶。\n\n{% img /images/mold/5/ld.jpg 265 %}\n","slug":"mold5","published":1,"updated":"2018-11-19T08:40:24.026Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emz100223a8iz5rp27bi","content":"<p>康佳手机5610的T卡盖，就是盖存储卡槽的那个软胶片。材料是德国拜尔TPU95。</p>\n<img src=\"/images/mold/5/chp.jpg\" width=\"205\">\n<p>型腔数量1*4。圆柱形的固定扣用左右各一个滑块成形。下图为定模部分，蓝色和红色为滑块。</p>\n<img src=\"/images/mold/5/dim.jpg\" width=\"170\">\n<p>为使浇口对产品外观及结构的影响最小，选用潜伏浇口，进胶点选在圆柱形的固定扣上。顶出时浇口自动拉断。浇口设在滑块上。</p>\n<img src=\"/images/mold/5/jk.jpg\" width=\"215\">\n<p>采用梯形流道，下图为具体走胶。</p>\n<img src=\"/images/mold/5/ld.jpg\" width=\"265\">\n","site":{"data":{}},"excerpt":"","more":"<p>康佳手机5610的T卡盖，就是盖存储卡槽的那个软胶片。材料是德国拜尔TPU95。</p>\n<img src=\"/images/mold/5/chp.jpg\" width=\"205\">\n<p>型腔数量1*4。圆柱形的固定扣用左右各一个滑块成形。下图为定模部分，蓝色和红色为滑块。</p>\n<img src=\"/images/mold/5/dim.jpg\" width=\"170\">\n<p>为使浇口对产品外观及结构的影响最小，选用潜伏浇口，进胶点选在圆柱形的固定扣上。顶出时浇口自动拉断。浇口设在滑块上。</p>\n<img src=\"/images/mold/5/jk.jpg\" width=\"215\">\n<p>采用梯形流道，下图为具体走胶。</p>\n<img src=\"/images/mold/5/ld.jpg\" width=\"265\">\n"},{"title":"日立多賀掃除機Cover-定模滑块运动仿真","date":"2008-12-26T16:00:00.000Z","keywords":"定模滑块运动仿真, 注塑模具设计","description":"盖板面上的弧形孔位和侧面的安装孔结构决定模具在定模部分四面行位。用UG的“运动仿真”模块对开模过程中的滑块动作做简单的模拟","_content":"\n日立多賀掃除機的Cover盖板，面上的弧形孔位和侧面的安装孔结构决定模具在定模部分四面行位。\n\n{% img /images/mold/8/chp.jpg 225 %}\n\n下图中白色为定模芯，蓝色为8个滑块。\n\n{% img /images/mold/8/xj.jpg 180 %}\n\n用UG的“运动仿真”模块对开模过程中的滑块动作做简单的模拟。\n\n定义连杆：\n\n定模板、定模芯及其他连接在定模板上的附件一起定义为“连杆1”；顶板、斜紧楔、T型块、导柱、拉杆等一起定义为“连杆2”；XC、-XC、YC，-YC各方向的两个滑块各自定义为一组连杆。\n\n定义运动副：\n\n“连杆1”定义为固定，运动驱动为“恒定的”，速度为“35”；“连杆2”定义为沿ZC向的滑动副；XC、-XC、YC，-YC各方向的各组连杆与“连杆1”分别以各自坐标为方向定义为滑动副；XC、-XC、YC，-YC各方向的各组连杆与“连杆2”分别以各T型块滑动方向定义为滑动副。\n\n下图为运动模拟。\n\n{% img /images/mold/8/dim.gif 231 %}\n\n下图为运动关键部件（滑块、T型块、斜紧楔）。\n\n{% img /images/mold/8/zp.jpg 195 %}\n","source":"_posts/mold8.md","raw":"---\ntitle: 日立多賀掃除機Cover-定模滑块运动仿真\ndate: 2008-12-27 00:00:00\ncategories: Uncategorized\nkeywords: 定模滑块运动仿真, 注塑模具设计\ndescription: 盖板面上的弧形孔位和侧面的安装孔结构决定模具在定模部分四面行位。用UG的“运动仿真”模块对开模过程中的滑块动作做简单的模拟\n---\n\n日立多賀掃除機的Cover盖板，面上的弧形孔位和侧面的安装孔结构决定模具在定模部分四面行位。\n\n{% img /images/mold/8/chp.jpg 225 %}\n\n下图中白色为定模芯，蓝色为8个滑块。\n\n{% img /images/mold/8/xj.jpg 180 %}\n\n用UG的“运动仿真”模块对开模过程中的滑块动作做简单的模拟。\n\n定义连杆：\n\n定模板、定模芯及其他连接在定模板上的附件一起定义为“连杆1”；顶板、斜紧楔、T型块、导柱、拉杆等一起定义为“连杆2”；XC、-XC、YC，-YC各方向的两个滑块各自定义为一组连杆。\n\n定义运动副：\n\n“连杆1”定义为固定，运动驱动为“恒定的”，速度为“35”；“连杆2”定义为沿ZC向的滑动副；XC、-XC、YC，-YC各方向的各组连杆与“连杆1”分别以各自坐标为方向定义为滑动副；XC、-XC、YC，-YC各方向的各组连杆与“连杆2”分别以各T型块滑动方向定义为滑动副。\n\n下图为运动模拟。\n\n{% img /images/mold/8/dim.gif 231 %}\n\n下图为运动关键部件（滑块、T型块、斜紧楔）。\n\n{% img /images/mold/8/zp.jpg 195 %}\n","slug":"mold8","published":1,"updated":"2018-11-19T08:38:06.566Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emz200243a8izbcgl7i1","content":"<p>日立多賀掃除機的Cover盖板，面上的弧形孔位和侧面的安装孔结构决定模具在定模部分四面行位。</p>\n<img src=\"/images/mold/8/chp.jpg\" width=\"225\">\n<p>下图中白色为定模芯，蓝色为8个滑块。</p>\n<img src=\"/images/mold/8/xj.jpg\" width=\"180\">\n<p>用UG的“运动仿真”模块对开模过程中的滑块动作做简单的模拟。</p>\n<p>定义连杆：</p>\n<p>定模板、定模芯及其他连接在定模板上的附件一起定义为“连杆1”；顶板、斜紧楔、T型块、导柱、拉杆等一起定义为“连杆2”；XC、-XC、YC，-YC各方向的两个滑块各自定义为一组连杆。</p>\n<p>定义运动副：</p>\n<p>“连杆1”定义为固定，运动驱动为“恒定的”，速度为“35”；“连杆2”定义为沿ZC向的滑动副；XC、-XC、YC，-YC各方向的各组连杆与“连杆1”分别以各自坐标为方向定义为滑动副；XC、-XC、YC，-YC各方向的各组连杆与“连杆2”分别以各T型块滑动方向定义为滑动副。</p>\n<p>下图为运动模拟。</p>\n<img src=\"/images/mold/8/dim.gif\" width=\"231\">\n<p>下图为运动关键部件（滑块、T型块、斜紧楔）。</p>\n<img src=\"/images/mold/8/zp.jpg\" width=\"195\">\n","site":{"data":{}},"excerpt":"","more":"<p>日立多賀掃除機的Cover盖板，面上的弧形孔位和侧面的安装孔结构决定模具在定模部分四面行位。</p>\n<img src=\"/images/mold/8/chp.jpg\" width=\"225\">\n<p>下图中白色为定模芯，蓝色为8个滑块。</p>\n<img src=\"/images/mold/8/xj.jpg\" width=\"180\">\n<p>用UG的“运动仿真”模块对开模过程中的滑块动作做简单的模拟。</p>\n<p>定义连杆：</p>\n<p>定模板、定模芯及其他连接在定模板上的附件一起定义为“连杆1”；顶板、斜紧楔、T型块、导柱、拉杆等一起定义为“连杆2”；XC、-XC、YC，-YC各方向的两个滑块各自定义为一组连杆。</p>\n<p>定义运动副：</p>\n<p>“连杆1”定义为固定，运动驱动为“恒定的”，速度为“35”；“连杆2”定义为沿ZC向的滑动副；XC、-XC、YC，-YC各方向的各组连杆与“连杆1”分别以各自坐标为方向定义为滑动副；XC、-XC、YC，-YC各方向的各组连杆与“连杆2”分别以各T型块滑动方向定义为滑动副。</p>\n<p>下图为运动模拟。</p>\n<img src=\"/images/mold/8/dim.gif\" width=\"231\">\n<p>下图为运动关键部件（滑块、T型块、斜紧楔）。</p>\n<img src=\"/images/mold/8/zp.jpg\" width=\"195\">\n"},{"title":"斜顶、胶位处理及运动模拟","date":"2009-01-14T16:00:00.000Z","keywords":"斜顶、胶位处理及运动模拟, 注塑模具设计","description":"日立空气清净机的外罩（UPPER CASE）。产品底部螺丝柱框上有两个斜孔（与XC方向成30°），这样就要求设计的斜顶在顶出时沿斜孔方向移出","_content":"\n日立空气清净机的外罩（UPPER CASE）。产品XC方向设计一个整体大滑块。\n\n{% img /images/mold/9/chp.jpg 200 %}\n\n产品底部螺丝柱框上有两个斜孔（与XC方向成30°），这样就要求设计的斜顶在顶出时沿斜孔方向移出。由于斜顶结构的要求，需要向客户提出胶位变更，如下图指示，否则出现倒扣斜顶顶出会拉伤产品。\n\n{% img /images/mold/9/2D1.jpg 215 %}\n\n下图为斜顶详细结构。\n\n{% img /images/mold/9/2D2.jpg 160 %}\n\n下图为对顶出时的运动做简单模拟。\n\n{% img /images/mold/9/dh.gif 85 %}\n\n另外，本产品底部台阶胶位薄且相对较深，采用推块+顶针的方式顶出脱模。\n\n{% img /images/mold/9/dc.jpg 165 %}\n","source":"_posts/mold9.md","raw":"---\ntitle: 斜顶、胶位处理及运动模拟\ndate: 2009-01-15 00:00:00\ncategories: Uncategorized\nkeywords: 斜顶、胶位处理及运动模拟, 注塑模具设计\ndescription: 日立空气清净机的外罩（UPPER CASE）。产品底部螺丝柱框上有两个斜孔（与XC方向成30°），这样就要求设计的斜顶在顶出时沿斜孔方向移出\n---\n\n日立空气清净机的外罩（UPPER CASE）。产品XC方向设计一个整体大滑块。\n\n{% img /images/mold/9/chp.jpg 200 %}\n\n产品底部螺丝柱框上有两个斜孔（与XC方向成30°），这样就要求设计的斜顶在顶出时沿斜孔方向移出。由于斜顶结构的要求，需要向客户提出胶位变更，如下图指示，否则出现倒扣斜顶顶出会拉伤产品。\n\n{% img /images/mold/9/2D1.jpg 215 %}\n\n下图为斜顶详细结构。\n\n{% img /images/mold/9/2D2.jpg 160 %}\n\n下图为对顶出时的运动做简单模拟。\n\n{% img /images/mold/9/dh.gif 85 %}\n\n另外，本产品底部台阶胶位薄且相对较深，采用推块+顶针的方式顶出脱模。\n\n{% img /images/mold/9/dc.jpg 165 %}\n","slug":"mold9","published":1,"updated":"2018-11-19T04:51:33.800Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emz300263a8ig2qeg5yz","content":"<p>日立空气清净机的外罩（UPPER CASE）。产品XC方向设计一个整体大滑块。</p>\n<img src=\"/images/mold/9/chp.jpg\" width=\"200\">\n<p>产品底部螺丝柱框上有两个斜孔（与XC方向成30°），这样就要求设计的斜顶在顶出时沿斜孔方向移出。由于斜顶结构的要求，需要向客户提出胶位变更，如下图指示，否则出现倒扣斜顶顶出会拉伤产品。</p>\n<img src=\"/images/mold/9/2D1.jpg\" width=\"215\">\n<p>下图为斜顶详细结构。</p>\n<img src=\"/images/mold/9/2D2.jpg\" width=\"160\">\n<p>下图为对顶出时的运动做简单模拟。</p>\n<img src=\"/images/mold/9/dh.gif\" width=\"85\">\n<p>另外，本产品底部台阶胶位薄且相对较深，采用推块+顶针的方式顶出脱模。</p>\n<img src=\"/images/mold/9/dc.jpg\" width=\"165\">\n","site":{"data":{}},"excerpt":"","more":"<p>日立空气清净机的外罩（UPPER CASE）。产品XC方向设计一个整体大滑块。</p>\n<img src=\"/images/mold/9/chp.jpg\" width=\"200\">\n<p>产品底部螺丝柱框上有两个斜孔（与XC方向成30°），这样就要求设计的斜顶在顶出时沿斜孔方向移出。由于斜顶结构的要求，需要向客户提出胶位变更，如下图指示，否则出现倒扣斜顶顶出会拉伤产品。</p>\n<img src=\"/images/mold/9/2D1.jpg\" width=\"215\">\n<p>下图为斜顶详细结构。</p>\n<img src=\"/images/mold/9/2D2.jpg\" width=\"160\">\n<p>下图为对顶出时的运动做简单模拟。</p>\n<img src=\"/images/mold/9/dh.gif\" width=\"85\">\n<p>另外，本产品底部台阶胶位薄且相对较深，采用推块+顶针的方式顶出脱模。</p>\n<img src=\"/images/mold/9/dc.jpg\" width=\"165\">\n"},{"title":"用坐标判断点是否在三角形内部","date":"2019-04-21T16:00:00.000Z","keywords":"向量, 平面几何, JavaScript","description":"使用各点的坐标计算向量a、b、c和p，进而判断点P是否在三角形ABC内部","_content":"\n{% raw %}\n<div class=\"scrollable-wrapper\">\n\t<svg id=\"triangle\" :width=\"w\" :height=\"h\" @click=\"onClick\">\n\t\t<defs>\n\t\t\t<pattern id=\"dotOut\" patternUnits=\"userSpaceOnUse\" width=\"12\" height=\"12\">\n\t\t\t\t<circle cx=\"6\" cy=\"6\" r=\"1\" fill=\"#d7dcd2\" stroke-width=\"0\"></circle>\n\t\t\t</pattern>\n\t\t\t<pattern id=\"dotIn\" patternUnits=\"userSpaceOnUse\" width=\"12\" height=\"12\">\n\t\t\t\t<circle cx=\"6\" cy=\"6\" r=\"1.5\" fill=\"#83887c\" stroke-width=\"0\"></circle>\n\t\t\t</pattern>\n\t\t</defs>\n\t\t<rect x=\"0\" y=\"0\" :width=\"w\" :height=\"h\" style=\"fill: url(#dotOut)\"></rect>\n\t\t<path :d=\"d\" stroke=\"#83887c\" :fill=\"inTriangle ? 'url(#dotIn)' : 'none'\"></path>\n\t\t<circle :cx=\"x\" :cy=\"y\" r=\"4\" stroke=\"#f2f6ed\" stroke-width=\"3\" fill=\"#0791c6\"></circle>\n\t\t<circle :cx=\"x\" :cy=\"y\" r=\"6\" stroke=\"#0791c6\" stroke-width=\"1\" fill=\"none\"></circle>\n\t</svg>\n</div>\n<p style=\"margin-top:-1.25em; text-align:center; color:#83887c\">点击改变点的位置</p>\n{% endraw %}\n\n平面上的3个点构成三角形ABC，点P可用向量表示为：\n\n{% raw %}\n\\[P = A + u\\left( {C - A} \\right) + v\\left( {B - A} \\right)\\]\n{% endraw %}\n\n点P是否在三角形ABC内部，判定条件为：\n\n{% raw %}\n\\[\\left\\{ \\begin{gathered}\n  u \\geqslant 0 \\hfill \\\\\n  v \\geqslant 0 \\hfill \\\\\n  u + v \\leqslant 1 \\hfill \\\\ \n\\end{gathered}  \\right.\\]\n{% endraw %}\n\n用x表示向量差X-A，可将点P的向量表示等式转化为：\n\n{% raw %}\n\\[p = uc + vb\\]\n{% endraw %}\n\n等式两边同时点乘c或b，得到方程组：\n\n{% raw %}\n\\[\\left\\{ \\begin{gathered}\n  p \\cdot c = u\\left( {c \\cdot c} \\right) + v\\left( {b \\cdot c} \\right) \\hfill \\\\\n  p \\cdot b = u\\left( {c \\cdot b} \\right) + v\\left( {b \\cdot b} \\right) \\hfill \\\\ \n\\end{gathered}  \\right.\\]\n{% endraw %}\n\n解方程组得：\n\n{% raw %}\n\\[u = \\frac{{\\left( {p \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {p \\cdot b} \\right)}}{{\\left( {c \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {b \\cdot c} \\right)}}\\]\n{% endraw %}\n\n{% raw %}\n\\[v = \\frac{{\\left( {p \\cdot b} \\right)\\left( {c \\cdot c} \\right) - \\left( {p \\cdot c} \\right)\\left( {c \\cdot b} \\right)}}{{\\left( {c \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {b \\cdot c} \\right)}}\\]\n{% endraw %}\n\n这样就可以使用各点的坐标计算向量a、b、c和p，进而判断点P是否在三角形ABC内部。\n\n<cite>参考：https://observablehq.com/@kelleyvanevert/2d-point-in-triangle-test</cite>\n\n\n{% raw %}\n<script type=\"text/javascript\" async src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"></script>\n<script src=\"/scripts/vue.min.js\"></script>\n<script>\nconst app = new Vue({\n\tel: '#triangle',\n\n\tdata: {\n\t\tw: 0,\n\t\th: 0,\n\t\tx: 0,\n\t\ty: 0,\n\t\tx1: 0,\n\t\ty1: 0,\n\t\tx2: 0,\n\t\ty2: 0,\n\t\tx3: 0,\n\t\ty3: 0\n\t},\n\n\tcomputed: {\n\t\td() {\n\t\t\tconst t = this\n\t\t\treturn `M${t.x1},${t.y1} L${t.x2},${t.y2} L${t.x3},${t.y3} Z`\n\t\t},\n\t\tinTriangle() {\n\t\t\tconst t = this\n\t\t\tconst A = [t.x1, t.y1]\n\t\t\tconst B = [t.x2, t.y2]\n\t\t\tconst C = [t.x3, t.y3]\n\t\t\tconst P = [t.x, t.y]\n\t\t\tconst sub = ([a, b], [d, e]) => [a - d, b - e]\n\t\t\tconst dot = ([a, b], [d, e]) => a * d + b * e\n\t\t\tconst uv = () => {\n\t\t\t\tconst c = sub(C, A)\n\t\t\t\tconst b = sub(B, A)\n\t\t\t\tconst p = sub(P, A)\n\t\t\t\tconst cc = dot(c, c)\n\t\t\t\tconst bc = dot(b, c)\n\t\t\t\tconst pc = dot(c, p)\n\t\t\t\tconst bb = dot(b, b)\n\t\t\t\tconst pb = dot(b, p)\n\t\t\t\tconst denom = cc * bb - bc * bc\n\t\t\t\tconst u = (bb * pc - bc * pb) / denom\n\t\t\t\tconst v = (cc * pb - bc * pc) / denom\n\t\t\t\treturn [u, v]\n\t\t\t}\n\t\t\tconst [u, v] = uv()\n\t\t\treturn (u >= 0) && (v >= 0) && (u + v <= 1)\n\t\t}\n\t},\n\n\tmethods: {\n\t\tonClick(event) {\n\t\t\tconst el = document.querySelector('#triangle')\n\t\t\tconst { left, top } = el.getBoundingClientRect()\n\t\t\tconst { clientX, clientY } = event\n\t\t\tthis.x = clientX - left\n\t\t\tthis.y = clientY - top\n\t\t}\n\t},\n\n\tmounted() {\n\t\tthis.w = Math.round(document.querySelector('#triangle').parentNode.clientWidth)\n\t\tthis.h = Math.round(this.w * 0.4)\n\t\tthis.x = Math.round(this.w / 2)\n\t\tthis.y = Math.round(this.h / 2)\n\n\t\tconst { w, h } = this\n\t\tconst f = (max, min) => Math.floor(min + Math.random() * (max - min))\n\t\tthis.x1 = f(0, w / 3)\n\t\tthis.y1 = f(0, h / 3)\n\t\tthis.x2 = f(w * 2 / 3, w)\n\t\tthis.y2 = f(0, h / 3)\n\t\tthis.x3 = f(w / 3, w * 2 / 3)\n\t\tthis.y3 = f(h * 2 / 3, h)\n\t}\n})\n</script>\n{% endraw %}\n","source":"_posts/point-in-triangle-test.md","raw":"---\ntitle: 用坐标判断点是否在三角形内部\ndate: 2019-04-22 00:00:00\ncategories: Uncategorized\nkeywords: 向量, 平面几何, JavaScript\ndescription: 使用各点的坐标计算向量a、b、c和p，进而判断点P是否在三角形ABC内部\n---\n\n{% raw %}\n<div class=\"scrollable-wrapper\">\n\t<svg id=\"triangle\" :width=\"w\" :height=\"h\" @click=\"onClick\">\n\t\t<defs>\n\t\t\t<pattern id=\"dotOut\" patternUnits=\"userSpaceOnUse\" width=\"12\" height=\"12\">\n\t\t\t\t<circle cx=\"6\" cy=\"6\" r=\"1\" fill=\"#d7dcd2\" stroke-width=\"0\"></circle>\n\t\t\t</pattern>\n\t\t\t<pattern id=\"dotIn\" patternUnits=\"userSpaceOnUse\" width=\"12\" height=\"12\">\n\t\t\t\t<circle cx=\"6\" cy=\"6\" r=\"1.5\" fill=\"#83887c\" stroke-width=\"0\"></circle>\n\t\t\t</pattern>\n\t\t</defs>\n\t\t<rect x=\"0\" y=\"0\" :width=\"w\" :height=\"h\" style=\"fill: url(#dotOut)\"></rect>\n\t\t<path :d=\"d\" stroke=\"#83887c\" :fill=\"inTriangle ? 'url(#dotIn)' : 'none'\"></path>\n\t\t<circle :cx=\"x\" :cy=\"y\" r=\"4\" stroke=\"#f2f6ed\" stroke-width=\"3\" fill=\"#0791c6\"></circle>\n\t\t<circle :cx=\"x\" :cy=\"y\" r=\"6\" stroke=\"#0791c6\" stroke-width=\"1\" fill=\"none\"></circle>\n\t</svg>\n</div>\n<p style=\"margin-top:-1.25em; text-align:center; color:#83887c\">点击改变点的位置</p>\n{% endraw %}\n\n平面上的3个点构成三角形ABC，点P可用向量表示为：\n\n{% raw %}\n\\[P = A + u\\left( {C - A} \\right) + v\\left( {B - A} \\right)\\]\n{% endraw %}\n\n点P是否在三角形ABC内部，判定条件为：\n\n{% raw %}\n\\[\\left\\{ \\begin{gathered}\n  u \\geqslant 0 \\hfill \\\\\n  v \\geqslant 0 \\hfill \\\\\n  u + v \\leqslant 1 \\hfill \\\\ \n\\end{gathered}  \\right.\\]\n{% endraw %}\n\n用x表示向量差X-A，可将点P的向量表示等式转化为：\n\n{% raw %}\n\\[p = uc + vb\\]\n{% endraw %}\n\n等式两边同时点乘c或b，得到方程组：\n\n{% raw %}\n\\[\\left\\{ \\begin{gathered}\n  p \\cdot c = u\\left( {c \\cdot c} \\right) + v\\left( {b \\cdot c} \\right) \\hfill \\\\\n  p \\cdot b = u\\left( {c \\cdot b} \\right) + v\\left( {b \\cdot b} \\right) \\hfill \\\\ \n\\end{gathered}  \\right.\\]\n{% endraw %}\n\n解方程组得：\n\n{% raw %}\n\\[u = \\frac{{\\left( {p \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {p \\cdot b} \\right)}}{{\\left( {c \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {b \\cdot c} \\right)}}\\]\n{% endraw %}\n\n{% raw %}\n\\[v = \\frac{{\\left( {p \\cdot b} \\right)\\left( {c \\cdot c} \\right) - \\left( {p \\cdot c} \\right)\\left( {c \\cdot b} \\right)}}{{\\left( {c \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {b \\cdot c} \\right)}}\\]\n{% endraw %}\n\n这样就可以使用各点的坐标计算向量a、b、c和p，进而判断点P是否在三角形ABC内部。\n\n<cite>参考：https://observablehq.com/@kelleyvanevert/2d-point-in-triangle-test</cite>\n\n\n{% raw %}\n<script type=\"text/javascript\" async src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"></script>\n<script src=\"/scripts/vue.min.js\"></script>\n<script>\nconst app = new Vue({\n\tel: '#triangle',\n\n\tdata: {\n\t\tw: 0,\n\t\th: 0,\n\t\tx: 0,\n\t\ty: 0,\n\t\tx1: 0,\n\t\ty1: 0,\n\t\tx2: 0,\n\t\ty2: 0,\n\t\tx3: 0,\n\t\ty3: 0\n\t},\n\n\tcomputed: {\n\t\td() {\n\t\t\tconst t = this\n\t\t\treturn `M${t.x1},${t.y1} L${t.x2},${t.y2} L${t.x3},${t.y3} Z`\n\t\t},\n\t\tinTriangle() {\n\t\t\tconst t = this\n\t\t\tconst A = [t.x1, t.y1]\n\t\t\tconst B = [t.x2, t.y2]\n\t\t\tconst C = [t.x3, t.y3]\n\t\t\tconst P = [t.x, t.y]\n\t\t\tconst sub = ([a, b], [d, e]) => [a - d, b - e]\n\t\t\tconst dot = ([a, b], [d, e]) => a * d + b * e\n\t\t\tconst uv = () => {\n\t\t\t\tconst c = sub(C, A)\n\t\t\t\tconst b = sub(B, A)\n\t\t\t\tconst p = sub(P, A)\n\t\t\t\tconst cc = dot(c, c)\n\t\t\t\tconst bc = dot(b, c)\n\t\t\t\tconst pc = dot(c, p)\n\t\t\t\tconst bb = dot(b, b)\n\t\t\t\tconst pb = dot(b, p)\n\t\t\t\tconst denom = cc * bb - bc * bc\n\t\t\t\tconst u = (bb * pc - bc * pb) / denom\n\t\t\t\tconst v = (cc * pb - bc * pc) / denom\n\t\t\t\treturn [u, v]\n\t\t\t}\n\t\t\tconst [u, v] = uv()\n\t\t\treturn (u >= 0) && (v >= 0) && (u + v <= 1)\n\t\t}\n\t},\n\n\tmethods: {\n\t\tonClick(event) {\n\t\t\tconst el = document.querySelector('#triangle')\n\t\t\tconst { left, top } = el.getBoundingClientRect()\n\t\t\tconst { clientX, clientY } = event\n\t\t\tthis.x = clientX - left\n\t\t\tthis.y = clientY - top\n\t\t}\n\t},\n\n\tmounted() {\n\t\tthis.w = Math.round(document.querySelector('#triangle').parentNode.clientWidth)\n\t\tthis.h = Math.round(this.w * 0.4)\n\t\tthis.x = Math.round(this.w / 2)\n\t\tthis.y = Math.round(this.h / 2)\n\n\t\tconst { w, h } = this\n\t\tconst f = (max, min) => Math.floor(min + Math.random() * (max - min))\n\t\tthis.x1 = f(0, w / 3)\n\t\tthis.y1 = f(0, h / 3)\n\t\tthis.x2 = f(w * 2 / 3, w)\n\t\tthis.y2 = f(0, h / 3)\n\t\tthis.x3 = f(w / 3, w * 2 / 3)\n\t\tthis.y3 = f(h * 2 / 3, h)\n\t}\n})\n</script>\n{% endraw %}\n","slug":"point-in-triangle-test","published":1,"updated":"2019-04-22T07:35:40.745Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emz400283a8il8xcop50","content":"\n<div class=\"scrollable-wrapper\">\n\t<svg id=\"triangle\" :width=\"w\" :height=\"h\" @click=\"onClick\">\n\t\t<defs>\n\t\t\t<pattern id=\"dotOut\" patternunits=\"userSpaceOnUse\" width=\"12\" height=\"12\">\n\t\t\t\t<circle cx=\"6\" cy=\"6\" r=\"1\" fill=\"#d7dcd2\" stroke-width=\"0\"/>\n\t\t\t</pattern>\n\t\t\t<pattern id=\"dotIn\" patternunits=\"userSpaceOnUse\" width=\"12\" height=\"12\">\n\t\t\t\t<circle cx=\"6\" cy=\"6\" r=\"1.5\" fill=\"#83887c\" stroke-width=\"0\"/>\n\t\t\t</pattern>\n\t\t</defs>\n\t\t<rect x=\"0\" y=\"0\" :width=\"w\" :height=\"h\" style=\"fill: url(#dotOut)\"/>\n\t\t<path :d=\"d\" stroke=\"#83887c\" :fill=\"inTriangle ? 'url(#dotIn)' : 'none'\"/>\n\t\t<circle :cx=\"x\" :cy=\"y\" r=\"4\" stroke=\"#f2f6ed\" stroke-width=\"3\" fill=\"#0791c6\"/>\n\t\t<circle :cx=\"x\" :cy=\"y\" r=\"6\" stroke=\"#0791c6\" stroke-width=\"1\" fill=\"none\"/>\n\t</svg>\n</div>\n<p style=\"margin-top:-1.25em; text-align:center; color:#83887c\">点击改变点的位置</p>\n\n<p>平面上的3个点构成三角形ABC，点P可用向量表示为：</p>\n\n\\[P = A + u\\left( {C - A} \\right) + v\\left( {B - A} \\right)\\]\n\n<p>点P是否在三角形ABC内部，判定条件为：</p>\n\n\\[\\left\\{ \\begin{gathered}\n  u \\geqslant 0 \\hfill \\\\\n  v \\geqslant 0 \\hfill \\\\\n  u + v \\leqslant 1 \\hfill \\\\ \n\\end{gathered}  \\right.\\]\n\n<p>用x表示向量差X-A，可将点P的向量表示等式转化为：</p>\n\n\\[p = uc + vb\\]\n\n<p>等式两边同时点乘c或b，得到方程组：</p>\n\n\\[\\left\\{ \\begin{gathered}\n  p \\cdot c = u\\left( {c \\cdot c} \\right) + v\\left( {b \\cdot c} \\right) \\hfill \\\\\n  p \\cdot b = u\\left( {c \\cdot b} \\right) + v\\left( {b \\cdot b} \\right) \\hfill \\\\ \n\\end{gathered}  \\right.\\]\n\n<p>解方程组得：</p>\n\n\\[u = \\frac{{\\left( {p \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {p \\cdot b} \\right)}}{{\\left( {c \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {b \\cdot c} \\right)}}\\]\n\n\n\\[v = \\frac{{\\left( {p \\cdot b} \\right)\\left( {c \\cdot c} \\right) - \\left( {p \\cdot c} \\right)\\left( {c \\cdot b} \\right)}}{{\\left( {c \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {b \\cdot c} \\right)}}\\]\n\n<p>这样就可以使用各点的坐标计算向量a、b、c和p，进而判断点P是否在三角形ABC内部。</p>\n<p><cite>参考：<a href=\"https://observablehq.com/@kelleyvanevert/2d-point-in-triangle-test\" target=\"_blank\" rel=\"noopener\">https://observablehq.com/@kelleyvanevert/2d-point-in-triangle-test</a></cite></p>\n\n<script type=\"text/javascript\" async src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"></script>\n<script src=\"/scripts/vue.min.js\"></script>\n<script>\nconst app = new Vue({\n\tel: '#triangle',\n\n\tdata: {\n\t\tw: 0,\n\t\th: 0,\n\t\tx: 0,\n\t\ty: 0,\n\t\tx1: 0,\n\t\ty1: 0,\n\t\tx2: 0,\n\t\ty2: 0,\n\t\tx3: 0,\n\t\ty3: 0\n\t},\n\n\tcomputed: {\n\t\td() {\n\t\t\tconst t = this\n\t\t\treturn `M${t.x1},${t.y1} L${t.x2},${t.y2} L${t.x3},${t.y3} Z`\n\t\t},\n\t\tinTriangle() {\n\t\t\tconst t = this\n\t\t\tconst A = [t.x1, t.y1]\n\t\t\tconst B = [t.x2, t.y2]\n\t\t\tconst C = [t.x3, t.y3]\n\t\t\tconst P = [t.x, t.y]\n\t\t\tconst sub = ([a, b], [d, e]) => [a - d, b - e]\n\t\t\tconst dot = ([a, b], [d, e]) => a * d + b * e\n\t\t\tconst uv = () => {\n\t\t\t\tconst c = sub(C, A)\n\t\t\t\tconst b = sub(B, A)\n\t\t\t\tconst p = sub(P, A)\n\t\t\t\tconst cc = dot(c, c)\n\t\t\t\tconst bc = dot(b, c)\n\t\t\t\tconst pc = dot(c, p)\n\t\t\t\tconst bb = dot(b, b)\n\t\t\t\tconst pb = dot(b, p)\n\t\t\t\tconst denom = cc * bb - bc * bc\n\t\t\t\tconst u = (bb * pc - bc * pb) / denom\n\t\t\t\tconst v = (cc * pb - bc * pc) / denom\n\t\t\t\treturn [u, v]\n\t\t\t}\n\t\t\tconst [u, v] = uv()\n\t\t\treturn (u >= 0) && (v >= 0) && (u + v <= 1)\n\t\t}\n\t},\n\n\tmethods: {\n\t\tonClick(event) {\n\t\t\tconst el = document.querySelector('#triangle')\n\t\t\tconst { left, top } = el.getBoundingClientRect()\n\t\t\tconst { clientX, clientY } = event\n\t\t\tthis.x = clientX - left\n\t\t\tthis.y = clientY - top\n\t\t}\n\t},\n\n\tmounted() {\n\t\tthis.w = Math.round(document.querySelector('#triangle').parentNode.clientWidth)\n\t\tthis.h = Math.round(this.w * 0.4)\n\t\tthis.x = Math.round(this.w / 2)\n\t\tthis.y = Math.round(this.h / 2)\n\n\t\tconst { w, h } = this\n\t\tconst f = (max, min) => Math.floor(min + Math.random() * (max - min))\n\t\tthis.x1 = f(0, w / 3)\n\t\tthis.y1 = f(0, h / 3)\n\t\tthis.x2 = f(w * 2 / 3, w)\n\t\tthis.y2 = f(0, h / 3)\n\t\tthis.x3 = f(w / 3, w * 2 / 3)\n\t\tthis.y3 = f(h * 2 / 3, h)\n\t}\n})\n</script>\n\n","site":{"data":{}},"excerpt":"","more":"\n<div class=\"scrollable-wrapper\">\n\t<svg id=\"triangle\" :width=\"w\" :height=\"h\" @click=\"onClick\">\n\t\t<defs>\n\t\t\t<pattern id=\"dotOut\" patternunits=\"userSpaceOnUse\" width=\"12\" height=\"12\">\n\t\t\t\t<circle cx=\"6\" cy=\"6\" r=\"1\" fill=\"#d7dcd2\" stroke-width=\"0\"/>\n\t\t\t</pattern>\n\t\t\t<pattern id=\"dotIn\" patternunits=\"userSpaceOnUse\" width=\"12\" height=\"12\">\n\t\t\t\t<circle cx=\"6\" cy=\"6\" r=\"1.5\" fill=\"#83887c\" stroke-width=\"0\"/>\n\t\t\t</pattern>\n\t\t</defs>\n\t\t<rect x=\"0\" y=\"0\" :width=\"w\" :height=\"h\" style=\"fill: url(#dotOut)\"/>\n\t\t<path :d=\"d\" stroke=\"#83887c\" :fill=\"inTriangle ? 'url(#dotIn)' : 'none'\"/>\n\t\t<circle :cx=\"x\" :cy=\"y\" r=\"4\" stroke=\"#f2f6ed\" stroke-width=\"3\" fill=\"#0791c6\"/>\n\t\t<circle :cx=\"x\" :cy=\"y\" r=\"6\" stroke=\"#0791c6\" stroke-width=\"1\" fill=\"none\"/>\n\t</svg>\n</div>\n<p style=\"margin-top:-1.25em; text-align:center; color:#83887c\">点击改变点的位置</p>\n\n<p>平面上的3个点构成三角形ABC，点P可用向量表示为：</p>\n\n\\[P = A + u\\left( {C - A} \\right) + v\\left( {B - A} \\right)\\]\n\n<p>点P是否在三角形ABC内部，判定条件为：</p>\n\n\\[\\left\\{ \\begin{gathered}\n  u \\geqslant 0 \\hfill \\\\\n  v \\geqslant 0 \\hfill \\\\\n  u + v \\leqslant 1 \\hfill \\\\ \n\\end{gathered}  \\right.\\]\n\n<p>用x表示向量差X-A，可将点P的向量表示等式转化为：</p>\n\n\\[p = uc + vb\\]\n\n<p>等式两边同时点乘c或b，得到方程组：</p>\n\n\\[\\left\\{ \\begin{gathered}\n  p \\cdot c = u\\left( {c \\cdot c} \\right) + v\\left( {b \\cdot c} \\right) \\hfill \\\\\n  p \\cdot b = u\\left( {c \\cdot b} \\right) + v\\left( {b \\cdot b} \\right) \\hfill \\\\ \n\\end{gathered}  \\right.\\]\n\n<p>解方程组得：</p>\n\n\\[u = \\frac{{\\left( {p \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {p \\cdot b} \\right)}}{{\\left( {c \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {b \\cdot c} \\right)}}\\]\n\n\n\\[v = \\frac{{\\left( {p \\cdot b} \\right)\\left( {c \\cdot c} \\right) - \\left( {p \\cdot c} \\right)\\left( {c \\cdot b} \\right)}}{{\\left( {c \\cdot c} \\right)\\left( {b \\cdot b} \\right) - \\left( {b \\cdot c} \\right)\\left( {b \\cdot c} \\right)}}\\]\n\n<p>这样就可以使用各点的坐标计算向量a、b、c和p，进而判断点P是否在三角形ABC内部。</p>\n<p><cite>参考：<a href=\"https://observablehq.com/@kelleyvanevert/2d-point-in-triangle-test\" target=\"_blank\" rel=\"noopener\">https://observablehq.com/@kelleyvanevert/2d-point-in-triangle-test</a></cite></p>\n\n<script type=\"text/javascript\" async src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"></script>\n<script src=\"/scripts/vue.min.js\"></script>\n<script>\nconst app = new Vue({\n\tel: '#triangle',\n\n\tdata: {\n\t\tw: 0,\n\t\th: 0,\n\t\tx: 0,\n\t\ty: 0,\n\t\tx1: 0,\n\t\ty1: 0,\n\t\tx2: 0,\n\t\ty2: 0,\n\t\tx3: 0,\n\t\ty3: 0\n\t},\n\n\tcomputed: {\n\t\td() {\n\t\t\tconst t = this\n\t\t\treturn `M${t.x1},${t.y1} L${t.x2},${t.y2} L${t.x3},${t.y3} Z`\n\t\t},\n\t\tinTriangle() {\n\t\t\tconst t = this\n\t\t\tconst A = [t.x1, t.y1]\n\t\t\tconst B = [t.x2, t.y2]\n\t\t\tconst C = [t.x3, t.y3]\n\t\t\tconst P = [t.x, t.y]\n\t\t\tconst sub = ([a, b], [d, e]) => [a - d, b - e]\n\t\t\tconst dot = ([a, b], [d, e]) => a * d + b * e\n\t\t\tconst uv = () => {\n\t\t\t\tconst c = sub(C, A)\n\t\t\t\tconst b = sub(B, A)\n\t\t\t\tconst p = sub(P, A)\n\t\t\t\tconst cc = dot(c, c)\n\t\t\t\tconst bc = dot(b, c)\n\t\t\t\tconst pc = dot(c, p)\n\t\t\t\tconst bb = dot(b, b)\n\t\t\t\tconst pb = dot(b, p)\n\t\t\t\tconst denom = cc * bb - bc * bc\n\t\t\t\tconst u = (bb * pc - bc * pb) / denom\n\t\t\t\tconst v = (cc * pb - bc * pc) / denom\n\t\t\t\treturn [u, v]\n\t\t\t}\n\t\t\tconst [u, v] = uv()\n\t\t\treturn (u >= 0) && (v >= 0) && (u + v <= 1)\n\t\t}\n\t},\n\n\tmethods: {\n\t\tonClick(event) {\n\t\t\tconst el = document.querySelector('#triangle')\n\t\t\tconst { left, top } = el.getBoundingClientRect()\n\t\t\tconst { clientX, clientY } = event\n\t\t\tthis.x = clientX - left\n\t\t\tthis.y = clientY - top\n\t\t}\n\t},\n\n\tmounted() {\n\t\tthis.w = Math.round(document.querySelector('#triangle').parentNode.clientWidth)\n\t\tthis.h = Math.round(this.w * 0.4)\n\t\tthis.x = Math.round(this.w / 2)\n\t\tthis.y = Math.round(this.h / 2)\n\n\t\tconst { w, h } = this\n\t\tconst f = (max, min) => Math.floor(min + Math.random() * (max - min))\n\t\tthis.x1 = f(0, w / 3)\n\t\tthis.y1 = f(0, h / 3)\n\t\tthis.x2 = f(w * 2 / 3, w)\n\t\tthis.y2 = f(0, h / 3)\n\t\tthis.x3 = f(w / 3, w * 2 / 3)\n\t\tthis.y3 = f(h * 2 / 3, h)\n\t}\n})\n</script>\n\n"},{"title":"Pro/E装配连接约束及相对运动关系","date":"2012-10-23T16:00:00.000Z","keywords":"Pro/E装配连接约束, Pro/E","description":"Pro/E装配及运动仿真中，定义零件连接方式时，各约束关系、相对运动关系、零件自由度","_content":"\nPro/E装配及运动仿真中，定义零件连接方式时，各约束关系、相对运动关系、零件自由度如下表：\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th width=\"110\">连接类型</th>\n\t\t\t<th>约束定义</th>\n\t\t\t<th>相对运动关系</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>刚性/Rigid</strong></td>\n\t\t\t<td>多个约束</td>\n\t\t\t<td>无任何相对运动，构成单一主体</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>销钉/Pin</strong></td>\n\t\t\t<td>一个轴对齐，一个平面匹配/对齐或点对齐（限制平移）</td>\n\t\t\t<td>可绕轴线转动，但不能沿轴线平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>滑动杆/Slider</strong></td>\n\t\t\t<td>一个轴对齐，一个平面匹配/对齐（限制转动）</td>\n\t\t\t<td>可沿轴线平移，但不能绕轴线转动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>圆柱/Cylinder</strong></td>\n\t\t\t<td>一个轴对齐</td>\n\t\t\t<td>既可绕轴线转动，也可沿轴线平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>平面/Planar</strong></td>\n\t\t\t<td>一个平面匹配/对齐</td>\n\t\t\t<td>既可在一个平面内平移，也可绕垂直该平面的轴线转动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>球/Ball</strong></td>\n\t\t\t<td>一个点对齐</td>\n\t\t\t<td>可沿任何方向旋转，但不能平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>焊接/Weld</strong></td>\n\t\t\t<td>坐标系对齐</td>\n\t\t\t<td>无任何相对运动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>轴承/Bearing</strong></td>\n\t\t\t<td>一个点与轴/边对齐</td>\n\t\t\t<td>既可在约束点上沿任何方向旋转，也可沿对齐的轴/边平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>槽/Slot</strong></td>\n\t\t\t<td>一个点与边/曲线对齐</td>\n\t\t\t<td>可沿对齐的边/曲线平移</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n","source":"_posts/proe1.md","raw":"---\ntitle: Pro/E装配连接约束及相对运动关系\ndate: 2012-10-24 00:00:00\ncategories: Uncategorized\nkeywords: Pro/E装配连接约束, Pro/E\ndescription: Pro/E装配及运动仿真中，定义零件连接方式时，各约束关系、相对运动关系、零件自由度\n---\n\nPro/E装配及运动仿真中，定义零件连接方式时，各约束关系、相对运动关系、零件自由度如下表：\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th width=\"110\">连接类型</th>\n\t\t\t<th>约束定义</th>\n\t\t\t<th>相对运动关系</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>刚性/Rigid</strong></td>\n\t\t\t<td>多个约束</td>\n\t\t\t<td>无任何相对运动，构成单一主体</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>销钉/Pin</strong></td>\n\t\t\t<td>一个轴对齐，一个平面匹配/对齐或点对齐（限制平移）</td>\n\t\t\t<td>可绕轴线转动，但不能沿轴线平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>滑动杆/Slider</strong></td>\n\t\t\t<td>一个轴对齐，一个平面匹配/对齐（限制转动）</td>\n\t\t\t<td>可沿轴线平移，但不能绕轴线转动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>圆柱/Cylinder</strong></td>\n\t\t\t<td>一个轴对齐</td>\n\t\t\t<td>既可绕轴线转动，也可沿轴线平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>平面/Planar</strong></td>\n\t\t\t<td>一个平面匹配/对齐</td>\n\t\t\t<td>既可在一个平面内平移，也可绕垂直该平面的轴线转动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>球/Ball</strong></td>\n\t\t\t<td>一个点对齐</td>\n\t\t\t<td>可沿任何方向旋转，但不能平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>焊接/Weld</strong></td>\n\t\t\t<td>坐标系对齐</td>\n\t\t\t<td>无任何相对运动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>轴承/Bearing</strong></td>\n\t\t\t<td>一个点与轴/边对齐</td>\n\t\t\t<td>既可在约束点上沿任何方向旋转，也可沿对齐的轴/边平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>槽/Slot</strong></td>\n\t\t\t<td>一个点与边/曲线对齐</td>\n\t\t\t<td>可沿对齐的边/曲线平移</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n","slug":"proe1","published":1,"updated":"2018-12-03T02:28:52.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emz5002a3a8i758bzb3n","content":"<p>Pro/E装配及运动仿真中，定义零件连接方式时，各约束关系、相对运动关系、零件自由度如下表：</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th width=\"110\">连接类型</th>\n\t\t\t<th>约束定义</th>\n\t\t\t<th>相对运动关系</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>刚性/Rigid</strong></td>\n\t\t\t<td>多个约束</td>\n\t\t\t<td>无任何相对运动，构成单一主体</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>销钉/Pin</strong></td>\n\t\t\t<td>一个轴对齐，一个平面匹配/对齐或点对齐（限制平移）</td>\n\t\t\t<td>可绕轴线转动，但不能沿轴线平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>滑动杆/Slider</strong></td>\n\t\t\t<td>一个轴对齐，一个平面匹配/对齐（限制转动）</td>\n\t\t\t<td>可沿轴线平移，但不能绕轴线转动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>圆柱/Cylinder</strong></td>\n\t\t\t<td>一个轴对齐</td>\n\t\t\t<td>既可绕轴线转动，也可沿轴线平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>平面/Planar</strong></td>\n\t\t\t<td>一个平面匹配/对齐</td>\n\t\t\t<td>既可在一个平面内平移，也可绕垂直该平面的轴线转动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>球/Ball</strong></td>\n\t\t\t<td>一个点对齐</td>\n\t\t\t<td>可沿任何方向旋转，但不能平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>焊接/Weld</strong></td>\n\t\t\t<td>坐标系对齐</td>\n\t\t\t<td>无任何相对运动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>轴承/Bearing</strong></td>\n\t\t\t<td>一个点与轴/边对齐</td>\n\t\t\t<td>既可在约束点上沿任何方向旋转，也可沿对齐的轴/边平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>槽/Slot</strong></td>\n\t\t\t<td>一个点与边/曲线对齐</td>\n\t\t\t<td>可沿对齐的边/曲线平移</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n","site":{"data":{}},"excerpt":"","more":"<p>Pro/E装配及运动仿真中，定义零件连接方式时，各约束关系、相对运动关系、零件自由度如下表：</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th width=\"110\">连接类型</th>\n\t\t\t<th>约束定义</th>\n\t\t\t<th>相对运动关系</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>刚性/Rigid</strong></td>\n\t\t\t<td>多个约束</td>\n\t\t\t<td>无任何相对运动，构成单一主体</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>销钉/Pin</strong></td>\n\t\t\t<td>一个轴对齐，一个平面匹配/对齐或点对齐（限制平移）</td>\n\t\t\t<td>可绕轴线转动，但不能沿轴线平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>滑动杆/Slider</strong></td>\n\t\t\t<td>一个轴对齐，一个平面匹配/对齐（限制转动）</td>\n\t\t\t<td>可沿轴线平移，但不能绕轴线转动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>圆柱/Cylinder</strong></td>\n\t\t\t<td>一个轴对齐</td>\n\t\t\t<td>既可绕轴线转动，也可沿轴线平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>平面/Planar</strong></td>\n\t\t\t<td>一个平面匹配/对齐</td>\n\t\t\t<td>既可在一个平面内平移，也可绕垂直该平面的轴线转动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>球/Ball</strong></td>\n\t\t\t<td>一个点对齐</td>\n\t\t\t<td>可沿任何方向旋转，但不能平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>焊接/Weld</strong></td>\n\t\t\t<td>坐标系对齐</td>\n\t\t\t<td>无任何相对运动</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>轴承/Bearing</strong></td>\n\t\t\t<td>一个点与轴/边对齐</td>\n\t\t\t<td>既可在约束点上沿任何方向旋转，也可沿对齐的轴/边平移</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><strong>槽/Slot</strong></td>\n\t\t\t<td>一个点与边/曲线对齐</td>\n\t\t\t<td>可沿对齐的边/曲线平移</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n"},{"title":"常用推杆运动规律的Pro/E曲线方程式","date":"2012-10-25T16:00:00.000Z","keywords":"推杆运动规律, 盘形凸轮参数化建模, Pro/E","description":"Pro/E中推杆常用的多项式运动规律和三角函数运动规律对应的凸轮轮廓曲线方程","_content":"\n所谓推杆运动规律，是指凸轮机构中推杆的位移s、速度v和加速度a随时间t变化的规律。因为凸轮一般为等速旋转，故而推杆的运动常表示为其运动参数随凸轮转角变化。\n\n推杆常用的多项式运动规律和三角函数运动规律（以完成推程h计）其性质为：\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>序号</th>\n\t\t\t<th>运动规律</th>\n\t\t\t<th>冲击类型</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>一次多项式（等速运动）</td>\n\t\t\t<td>刚性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>二次多项式（等加速等减速运动）</td>\n\t\t\t<td>柔性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>五次多项式</td>\n\t\t\t<td>无冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>余弦加速度（简谐运动）</td>\n\t\t\t<td>柔性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>正弦加速度（摆线运动）</td>\n\t\t\t<td>无冲击</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\n当使用Pro/E对盘形凸轮进行参数化建模时，其凸轮轮廓曲线使用笛卡尔坐标下的方程形式来分段（按推程、远休止、回程和近休止四段划分）表示。下面给出Pro/E中推杆常用的多项式运动规律和三角函数运动规律对应的凸轮轮廓曲线方程。\n\n方程式中各参数定义详见文章：[基于Pro/E的凸轮机构参数化设计及仿真](proe3.html)。\n\n需要注意的是，Pro/E曲线方程中的参数t变化范围为从0到1。\n\n### 1. 一次多项式\n\n``` C\n/* 推程\nx=(baser+h*t)*cos(phi1*t)\ny=(baser+h*t)*sin(phi1*t)\nz=0\n\n/* 远休止\nx=(baser+h)*cos(phi1+phi2*t)\ny=(baser+h)*sin(phi1+phi2*t)\nz=0\n\n/* 回程\nx=(baser+h*(1-t))*cos(phi1+phi2+phi3*t)\ny=(baser+h*(1-t))*sin(phi1+phi2+phi3*t)\nz=0\n\n/* 近休止\nx=baser*cos(phi1+phi2+phi3+phi4*t)\ny=baser*sin(phi1+phi2+phi3+phi4*t)\nz=0\n```\n\n### 2. 二次多项式\n\n``` C\n/* 推程\n/* phi1的前半段\nx=(baser+h*t^2/2)*cos(phi1/2*t)\ny=(baser+h*t^2/2)*sin(phi1/2*t)\nz=0\n/* phi1的后半段\nx=(baser+h*(1-(1-t)^2/2))*cos(phi1/2*(1+t))\ny=(baser+h*(1-(1-t)^2/2))*sin(phi1/2*(1+t))\nz=0\n\n/* 远休止\nx=(baser+h)*cos(phi1+phi2*t)\ny=(baser+h)*sin(phi1+phi2*t)\nz=0\n\n/* 回程\n/* phi3的前半段\nx=(baser+h*(1-t^2/2))*cos(phi1+phi2+phi3/2*t)\ny=(baser+h*(1-t^2/2))*sin(phi1+phi2+phi3/2*t)\nz=0\n/* phi3的后半段\nx=(baser+h*(1-t)^2/2)*cos(phi1+phi2+phi3/2*(1+t))\ny=(baser+h*(1-t)^2/2)*sin(phi1+phi2+phi3/2*(1+t))\nz=0\n\n/* 近休止\nx=baser*cos(phi1+phi2+phi3+phi4*t)\ny=baser*sin(phi1+phi2+phi3+phi4*t)\nz=0\n```\n\n### 3. 五次多项式\n\n``` C\n/* 推程\nx=(baser+h*(10*t^3-15*t^4+6*t^5))*cos(phi1*t)\ny=(baser+h*(10*t^3-15*t^4+6*t^5))*sin(phi1*t)\nz=0\n\n/* 远休止\nx=(baser+h)*cos(phi1+phi2*t)\ny=(baser+h)*sin(phi1+phi2*t)\nz=0\n\n/* 回程\nx=(baser+h*(1-10*t^3+15*t^4-6*t^5))*cos(phi1+phi2+phi3*t)\ny=(baser+h*(1-10*t^3+15*t^4-6*t^5))*sin(phi1+phi2+phi3*t)\nz=0\n\n/* 近休止\nx=baser*cos(phi1+phi2+phi3+phi4*t)\ny=baser*sin(phi1+phi2+phi3+phi4*t)\nz=0\n```\n\n### 4. 余弦加速度\n\n``` C\n/* 推程\nx=(baser+h*(1-cos(180*t))/2)*cos(phi1*t)\ny=(baser+h*(1-cos(180*t))/2)*sin(phi1*t)\nz=0\n\n/* 远休止\nx=(baser+h)*cos(phi1+phi2*t)\ny=(baser+h)*sin(phi1+phi2*t)\nz=0\n\n/* 回程\nx=(baser+h*(1+cos(180*t))/2)*cos(phi1+phi2+phi3*t)\ny=(baser+h*(1+cos(180*t))/2)*sin(phi1+phi2+phi3*t)\nz=0\n\n/* 近休止\nx=baser*cos(phi1+phi2+phi3+phi4*t)\ny=baser*sin(phi1+phi2+phi3+phi4*t)\nz=0\n```\n\n### 5. 正弦加速度\n\n``` C\n/* 推程\nx=(baser+h*(t-sin(360*t)/(2*pi)))*cos(phi1*t)\ny=(baser+h*(t-sin(360*t)/(2*pi)))*sin(phi1*t)\nz=0\n\n/* 远休止\nx=(baser+h)*cos(phi1+phi2*t)\ny=(baser+h)*sin(phi1+phi2*t)\nz=0\n\n/* 回程\nx=(baser+h*(1-t+sin(360*t)/(2*pi)))*cos(phi1+phi2+phi3*t)\ny=(baser+h*(1-t+sin(360*t)/(2*pi)))*sin(phi1+phi2+phi3*t)\nz=0\n\n/* 近休止\nx=baser*cos(phi1+phi2+phi3+phi4*t)\ny=baser*sin(phi1+phi2+phi3+phi4*t)\nz=0\n```\n","source":"_posts/proe2.md","raw":"---\ntitle: 常用推杆运动规律的Pro/E曲线方程式\ndate: 2012-10-26 00:00:00\ncategories: Uncategorized\nkeywords: 推杆运动规律, 盘形凸轮参数化建模, Pro/E\ndescription: Pro/E中推杆常用的多项式运动规律和三角函数运动规律对应的凸轮轮廓曲线方程\n---\n\n所谓推杆运动规律，是指凸轮机构中推杆的位移s、速度v和加速度a随时间t变化的规律。因为凸轮一般为等速旋转，故而推杆的运动常表示为其运动参数随凸轮转角变化。\n\n推杆常用的多项式运动规律和三角函数运动规律（以完成推程h计）其性质为：\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>序号</th>\n\t\t\t<th>运动规律</th>\n\t\t\t<th>冲击类型</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>一次多项式（等速运动）</td>\n\t\t\t<td>刚性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>二次多项式（等加速等减速运动）</td>\n\t\t\t<td>柔性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>五次多项式</td>\n\t\t\t<td>无冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>余弦加速度（简谐运动）</td>\n\t\t\t<td>柔性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>正弦加速度（摆线运动）</td>\n\t\t\t<td>无冲击</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\n当使用Pro/E对盘形凸轮进行参数化建模时，其凸轮轮廓曲线使用笛卡尔坐标下的方程形式来分段（按推程、远休止、回程和近休止四段划分）表示。下面给出Pro/E中推杆常用的多项式运动规律和三角函数运动规律对应的凸轮轮廓曲线方程。\n\n方程式中各参数定义详见文章：[基于Pro/E的凸轮机构参数化设计及仿真](proe3.html)。\n\n需要注意的是，Pro/E曲线方程中的参数t变化范围为从0到1。\n\n### 1. 一次多项式\n\n``` C\n/* 推程\nx=(baser+h*t)*cos(phi1*t)\ny=(baser+h*t)*sin(phi1*t)\nz=0\n\n/* 远休止\nx=(baser+h)*cos(phi1+phi2*t)\ny=(baser+h)*sin(phi1+phi2*t)\nz=0\n\n/* 回程\nx=(baser+h*(1-t))*cos(phi1+phi2+phi3*t)\ny=(baser+h*(1-t))*sin(phi1+phi2+phi3*t)\nz=0\n\n/* 近休止\nx=baser*cos(phi1+phi2+phi3+phi4*t)\ny=baser*sin(phi1+phi2+phi3+phi4*t)\nz=0\n```\n\n### 2. 二次多项式\n\n``` C\n/* 推程\n/* phi1的前半段\nx=(baser+h*t^2/2)*cos(phi1/2*t)\ny=(baser+h*t^2/2)*sin(phi1/2*t)\nz=0\n/* phi1的后半段\nx=(baser+h*(1-(1-t)^2/2))*cos(phi1/2*(1+t))\ny=(baser+h*(1-(1-t)^2/2))*sin(phi1/2*(1+t))\nz=0\n\n/* 远休止\nx=(baser+h)*cos(phi1+phi2*t)\ny=(baser+h)*sin(phi1+phi2*t)\nz=0\n\n/* 回程\n/* phi3的前半段\nx=(baser+h*(1-t^2/2))*cos(phi1+phi2+phi3/2*t)\ny=(baser+h*(1-t^2/2))*sin(phi1+phi2+phi3/2*t)\nz=0\n/* phi3的后半段\nx=(baser+h*(1-t)^2/2)*cos(phi1+phi2+phi3/2*(1+t))\ny=(baser+h*(1-t)^2/2)*sin(phi1+phi2+phi3/2*(1+t))\nz=0\n\n/* 近休止\nx=baser*cos(phi1+phi2+phi3+phi4*t)\ny=baser*sin(phi1+phi2+phi3+phi4*t)\nz=0\n```\n\n### 3. 五次多项式\n\n``` C\n/* 推程\nx=(baser+h*(10*t^3-15*t^4+6*t^5))*cos(phi1*t)\ny=(baser+h*(10*t^3-15*t^4+6*t^5))*sin(phi1*t)\nz=0\n\n/* 远休止\nx=(baser+h)*cos(phi1+phi2*t)\ny=(baser+h)*sin(phi1+phi2*t)\nz=0\n\n/* 回程\nx=(baser+h*(1-10*t^3+15*t^4-6*t^5))*cos(phi1+phi2+phi3*t)\ny=(baser+h*(1-10*t^3+15*t^4-6*t^5))*sin(phi1+phi2+phi3*t)\nz=0\n\n/* 近休止\nx=baser*cos(phi1+phi2+phi3+phi4*t)\ny=baser*sin(phi1+phi2+phi3+phi4*t)\nz=0\n```\n\n### 4. 余弦加速度\n\n``` C\n/* 推程\nx=(baser+h*(1-cos(180*t))/2)*cos(phi1*t)\ny=(baser+h*(1-cos(180*t))/2)*sin(phi1*t)\nz=0\n\n/* 远休止\nx=(baser+h)*cos(phi1+phi2*t)\ny=(baser+h)*sin(phi1+phi2*t)\nz=0\n\n/* 回程\nx=(baser+h*(1+cos(180*t))/2)*cos(phi1+phi2+phi3*t)\ny=(baser+h*(1+cos(180*t))/2)*sin(phi1+phi2+phi3*t)\nz=0\n\n/* 近休止\nx=baser*cos(phi1+phi2+phi3+phi4*t)\ny=baser*sin(phi1+phi2+phi3+phi4*t)\nz=0\n```\n\n### 5. 正弦加速度\n\n``` C\n/* 推程\nx=(baser+h*(t-sin(360*t)/(2*pi)))*cos(phi1*t)\ny=(baser+h*(t-sin(360*t)/(2*pi)))*sin(phi1*t)\nz=0\n\n/* 远休止\nx=(baser+h)*cos(phi1+phi2*t)\ny=(baser+h)*sin(phi1+phi2*t)\nz=0\n\n/* 回程\nx=(baser+h*(1-t+sin(360*t)/(2*pi)))*cos(phi1+phi2+phi3*t)\ny=(baser+h*(1-t+sin(360*t)/(2*pi)))*sin(phi1+phi2+phi3*t)\nz=0\n\n/* 近休止\nx=baser*cos(phi1+phi2+phi3+phi4*t)\ny=baser*sin(phi1+phi2+phi3+phi4*t)\nz=0\n```\n","slug":"proe2","published":1,"updated":"2018-12-03T02:28:52.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emz6002c3a8izkavet03","content":"<p>所谓推杆运动规律，是指凸轮机构中推杆的位移s、速度v和加速度a随时间t变化的规律。因为凸轮一般为等速旋转，故而推杆的运动常表示为其运动参数随凸轮转角变化。</p>\n<p>推杆常用的多项式运动规律和三角函数运动规律（以完成推程h计）其性质为：</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>序号</th>\n\t\t\t<th>运动规律</th>\n\t\t\t<th>冲击类型</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>一次多项式（等速运动）</td>\n\t\t\t<td>刚性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>二次多项式（等加速等减速运动）</td>\n\t\t\t<td>柔性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>五次多项式</td>\n\t\t\t<td>无冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>余弦加速度（简谐运动）</td>\n\t\t\t<td>柔性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>正弦加速度（摆线运动）</td>\n\t\t\t<td>无冲击</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>当使用Pro/E对盘形凸轮进行参数化建模时，其凸轮轮廓曲线使用笛卡尔坐标下的方程形式来分段（按推程、远休止、回程和近休止四段划分）表示。下面给出Pro/E中推杆常用的多项式运动规律和三角函数运动规律对应的凸轮轮廓曲线方程。</p>\n<p>方程式中各参数定义详见文章：<a href=\"proe3.html\">基于Pro/E的凸轮机构参数化设计及仿真</a>。</p>\n<p>需要注意的是，Pro/E曲线方程中的参数t变化范围为从0到1。</p>\n<h3 id=\"1-一次多项式\"><a href=\"#1-一次多项式\" class=\"headerlink\" title=\"1. 一次多项式\"></a>1. 一次多项式</h3><figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*t)*cos(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*t)*sin(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h)*cos(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h)*sin(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-t))*cos(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-t))*sin(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">x=baser*cos(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">y=baser*sin(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div></pre></figure>\n<h3 id=\"2-二次多项式\"><a href=\"#2-二次多项式\" class=\"headerlink\" title=\"2. 二次多项式\"></a>2. 二次多项式</h3><figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">/* phi1的前半段</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*t^2/2)*cos(phi1/2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*t^2/2)*sin(phi1/2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\">/* phi1的后半段</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-(1-t)^2/2))*cos(phi1/2*(1+t))</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-(1-t)^2/2))*sin(phi1/2*(1+t))</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h)*cos(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h)*sin(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">/* phi3的前半段</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-t^2/2))*cos(phi1+phi2+phi3/2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-t^2/2))*sin(phi1+phi2+phi3/2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\">/* phi3的后半段</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-t)^2/2)*cos(phi1+phi2+phi3/2*(1+t))</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-t)^2/2)*sin(phi1+phi2+phi3/2*(1+t))</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">x=baser*cos(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">y=baser*sin(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div></pre></figure>\n<h3 id=\"3-五次多项式\"><a href=\"#3-五次多项式\" class=\"headerlink\" title=\"3. 五次多项式\"></a>3. 五次多项式</h3><figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(10*t^3-15*t^4+6*t^5))*cos(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(10*t^3-15*t^4+6*t^5))*sin(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h)*cos(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h)*sin(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-10*t^3+15*t^4-6*t^5))*cos(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-10*t^3+15*t^4-6*t^5))*sin(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">x=baser*cos(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">y=baser*sin(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div></pre></figure>\n<h3 id=\"4-余弦加速度\"><a href=\"#4-余弦加速度\" class=\"headerlink\" title=\"4. 余弦加速度\"></a>4. 余弦加速度</h3><figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-cos(180*t))/2)*cos(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-cos(180*t))/2)*sin(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h)*cos(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h)*sin(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1+cos(180*t))/2)*cos(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1+cos(180*t))/2)*sin(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">x=baser*cos(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">y=baser*sin(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div></pre></figure>\n<h3 id=\"5-正弦加速度\"><a href=\"#5-正弦加速度\" class=\"headerlink\" title=\"5. 正弦加速度\"></a>5. 正弦加速度</h3><figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(t-sin(360*t)/(2*pi)))*cos(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(t-sin(360*t)/(2*pi)))*sin(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h)*cos(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h)*sin(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-t+sin(360*t)/(2*pi)))*cos(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-t+sin(360*t)/(2*pi)))*sin(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">x=baser*cos(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">y=baser*sin(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div></pre></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>所谓推杆运动规律，是指凸轮机构中推杆的位移s、速度v和加速度a随时间t变化的规律。因为凸轮一般为等速旋转，故而推杆的运动常表示为其运动参数随凸轮转角变化。</p>\n<p>推杆常用的多项式运动规律和三角函数运动规律（以完成推程h计）其性质为：</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>序号</th>\n\t\t\t<th>运动规律</th>\n\t\t\t<th>冲击类型</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>一次多项式（等速运动）</td>\n\t\t\t<td>刚性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>二次多项式（等加速等减速运动）</td>\n\t\t\t<td>柔性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>五次多项式</td>\n\t\t\t<td>无冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>余弦加速度（简谐运动）</td>\n\t\t\t<td>柔性冲击</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>正弦加速度（摆线运动）</td>\n\t\t\t<td>无冲击</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>当使用Pro/E对盘形凸轮进行参数化建模时，其凸轮轮廓曲线使用笛卡尔坐标下的方程形式来分段（按推程、远休止、回程和近休止四段划分）表示。下面给出Pro/E中推杆常用的多项式运动规律和三角函数运动规律对应的凸轮轮廓曲线方程。</p>\n<p>方程式中各参数定义详见文章：<a href=\"proe3.html\">基于Pro/E的凸轮机构参数化设计及仿真</a>。</p>\n<p>需要注意的是，Pro/E曲线方程中的参数t变化范围为从0到1。</p>\n<h3 id=\"1-一次多项式\"><a href=\"#1-一次多项式\" class=\"headerlink\" title=\"1. 一次多项式\"></a>1. 一次多项式</h3><figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*t)*cos(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*t)*sin(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h)*cos(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h)*sin(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-t))*cos(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-t))*sin(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">x=baser*cos(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">y=baser*sin(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div></pre></figure>\n<h3 id=\"2-二次多项式\"><a href=\"#2-二次多项式\" class=\"headerlink\" title=\"2. 二次多项式\"></a>2. 二次多项式</h3><figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">/* phi1的前半段</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*t^2/2)*cos(phi1/2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*t^2/2)*sin(phi1/2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\">/* phi1的后半段</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-(1-t)^2/2))*cos(phi1/2*(1+t))</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-(1-t)^2/2))*sin(phi1/2*(1+t))</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h)*cos(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h)*sin(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">/* phi3的前半段</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-t^2/2))*cos(phi1+phi2+phi3/2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-t^2/2))*sin(phi1+phi2+phi3/2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\">/* phi3的后半段</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-t)^2/2)*cos(phi1+phi2+phi3/2*(1+t))</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-t)^2/2)*sin(phi1+phi2+phi3/2*(1+t))</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">x=baser*cos(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">y=baser*sin(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div></pre></figure>\n<h3 id=\"3-五次多项式\"><a href=\"#3-五次多项式\" class=\"headerlink\" title=\"3. 五次多项式\"></a>3. 五次多项式</h3><figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(10*t^3-15*t^4+6*t^5))*cos(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(10*t^3-15*t^4+6*t^5))*sin(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h)*cos(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h)*sin(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-10*t^3+15*t^4-6*t^5))*cos(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-10*t^3+15*t^4-6*t^5))*sin(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">x=baser*cos(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">y=baser*sin(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div></pre></figure>\n<h3 id=\"4-余弦加速度\"><a href=\"#4-余弦加速度\" class=\"headerlink\" title=\"4. 余弦加速度\"></a>4. 余弦加速度</h3><figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-cos(180*t))/2)*cos(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-cos(180*t))/2)*sin(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h)*cos(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h)*sin(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1+cos(180*t))/2)*cos(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1+cos(180*t))/2)*sin(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">x=baser*cos(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">y=baser*sin(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div></pre></figure>\n<h3 id=\"5-正弦加速度\"><a href=\"#5-正弦加速度\" class=\"headerlink\" title=\"5. 正弦加速度\"></a>5. 正弦加速度</h3><figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(t-sin(360*t)/(2*pi)))*cos(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(t-sin(360*t)/(2*pi)))*sin(phi1*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h)*cos(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h)*sin(phi1+phi2*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">x=(baser+h*(1-t+sin(360*t)/(2*pi)))*cos(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">y=(baser+h*(1-t+sin(360*t)/(2*pi)))*sin(phi1+phi2+phi3*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">x=baser*cos(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">y=baser*sin(phi1+phi2+phi3+phi4*t)</span></div><div class=\"line\"><span class=\"comment\">z=0</span></div></pre></figure>\n"},{"title":"泊松分布Poisson-Disc采样点的生成","date":"2018-12-14T16:00:00.000Z","keywords":"泊松分布, Poisson-Disc, D3","description":"泊松分布采样生成的点紧密堆积，可以产生更自然的采样图案，Robert Bridson提出的高效Poisson-Disc算法","_content":"\n泊松分布采样生成的点尽量紧密堆积，并且各点之间的距离均不小于指定的最小距离，从而可以产生更自然的采样图案。下面使用Robert Bridson提出的一种高效算法，时间复杂度为O(n)：\n\n1. 规定采样点之间的最小距离为r。\n\n2. 在画布尺寸范围内随机生成一个活跃采样点，在这个采样点周围的环形区域中再随机生成k个候选采样点，这个环形区域以该活跃采样点为圆心，半径从r延伸到2r。\n\n3. 在这k个随机候选采样点中，剔除掉与已选定的采样点距离小于r的点，剩下的作为新的活跃采样点。\n\n4. 如果这k个采样点都被剔除了，没有剩下任何可用的点，则将此环形区域圆心处的所选活跃采样点标记为非活跃，不再用于生成候选项。\n\n5. 当所有采样点均为非活跃状态时，算法迭代结束。\n\n6. 在对候选采样点剔除筛选时，使用了对角线长度为r的单元网格来加速距离检查。每个单元网格最多只能包含一个采样点，只需检查候选采样点周边固定数量的相邻单元网格即可。\n\n<div class=\"scrollable-wrapper\"><svg id=\"d3\"></svg></div>\n\n``` JavaScript\nconst width = document.querySelector('svg#d3').parentNode.clientWidth\nconst height = Math.round(width * 0.4)\nconst radius = Math.round(width / 50)\n\nconst sample = poissonDiscSampler(width, height, radius)\n\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n    .attr('fill', '#83887c')\n\nconst timer = d3.timer(function() {\n    const s = sample()\n    if (!s) return timer.stop()\n    svg.append(\"circle\")\n        .attr(\"cx\", s[0])\n        .attr(\"cy\", s[1])\n        .attr(\"r\", 0)\n        .transition()\n        .attr(\"r\", 2)\n})\n\nfunction poissonDiscSampler(width, height, radius) {\n    const k = 30,\n        cellSize = radius * Math.SQRT1_2,\n        gridWidthLength = Math.ceil(width / cellSize),\n        gridHeightLength = Math.ceil(height / cellSize),\n        grid = new Array(gridWidthLength * gridHeightLength),\n        queue = []\n    let queueLength = 0,\n        sampleLength = 0\n\n    return function() {\n        if (!sampleLength) return sample(Math.random() * width, Math.random() * height)\n\n        while (queueLength) {\n            const i = Math.random() * queueLength | 0,\n                s = queue[i]\n\n            for (let j = 0; j < k; ++j) {\n                const a = 2 * Math.PI * Math.random(),\n                    r = radius * (Math.random() + 1),\n                    x = s[0] + r * Math.cos(a),\n                    y = s[1] + r * Math.sin(a)\n\n                if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample(x, y)\n            }\n\n            queue[i] = queue[--queueLength]\n            queue.length = queueLength\n        }\n    }\n\n    function far(x, y) {\n        let i = x / cellSize | 0,\n            j = y / cellSize | 0\n        const i0 = Math.max(i - 2, 0),\n            j0 = Math.max(j - 2, 0),\n            i1 = Math.min(i + 3, gridWidthLength),\n            j1 = Math.min(j + 3, gridHeightLength)\n\n        for (j = j0; j < j1; ++j) {\n            for (i = i0; i < i1; ++i) {\n                const s = grid[j * gridWidthLength + i]\n                if (s) {\n                    const dx = s[0] - x,\n                        dy = s[1] - y\n                    if (dx * dx + dy * dy < radius * radius) return false\n                }\n            }\n        }\n\n        return true\n    }\n\n    function sample(x, y) {\n        const s = [x, y]\n        queue.push(s)\n        grid[gridWidthLength * (y / cellSize | 0) + (x / cellSize | 0)] = s\n        ++sampleLength\n        ++queueLength\n        return s\n    }\n}\n```\n\n<cite>参考：https://bl.ocks.org/mbostock/19168c663618b7f07158</cite>\n\n\n{% raw %}\n<style>\n.content .scrollable-wrapper {\n\tmargin: 2em 0;\n}\n</style>\n<script src='/scripts/d3.v5.min.js'></script>\n<script>\nconst width = document.querySelector('svg#d3').parentNode.clientWidth\nconst height = Math.round(width * 0.4)\nconst radius = Math.round(width / 50)\n\nconst sample = poissonDiscSampler(width, height, radius)\n\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n    .attr('fill', '#83887c')\n\nconst timer = d3.timer(function() {\n    const s = sample()\n    if (!s) return timer.stop()\n    svg.append(\"circle\")\n        .attr(\"cx\", s[0])\n        .attr(\"cy\", s[1])\n        .attr(\"r\", 0)\n        .transition()\n        .attr(\"r\", 2)\n})\n\nfunction poissonDiscSampler(width, height, radius) {\n    const k = 30,\n        cellSize = radius * Math.SQRT1_2,\n        gridWidthLength = Math.ceil(width / cellSize),\n        gridHeightLength = Math.ceil(height / cellSize),\n        grid = new Array(gridWidthLength * gridHeightLength),\n        queue = []\n    let queueLength = 0,\n        sampleLength = 0\n\n    return function() {\n        if (!sampleLength) return sample(Math.random() * width, Math.random() * height)\n\n        while (queueLength) {\n            const i = Math.random() * queueLength | 0,\n                s = queue[i]\n\n            for (let j = 0; j < k; ++j) {\n                const a = 2 * Math.PI * Math.random(),\n                    r = radius * (Math.random() + 1),\n                    x = s[0] + r * Math.cos(a),\n                    y = s[1] + r * Math.sin(a)\n\n                if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample(x, y)\n            }\n\n            queue[i] = queue[--queueLength]\n            queue.length = queueLength\n        }\n    }\n\n    function far(x, y) {\n        let i = x / cellSize | 0,\n            j = y / cellSize | 0\n        const i0 = Math.max(i - 2, 0),\n            j0 = Math.max(j - 2, 0),\n            i1 = Math.min(i + 3, gridWidthLength),\n            j1 = Math.min(j + 3, gridHeightLength)\n\n        for (j = j0; j < j1; ++j) {\n            for (i = i0; i < i1; ++i) {\n                const s = grid[j * gridWidthLength + i]\n                if (s) {\n                    const dx = s[0] - x,\n                        dy = s[1] - y\n                    if (dx * dx + dy * dy < radius * radius) return false\n                }\n            }\n        }\n\n        return true\n    }\n\n    function sample(x, y) {\n        const s = [x, y]\n        queue.push(s)\n        grid[gridWidthLength * (y / cellSize | 0) + (x / cellSize | 0)] = s\n        ++sampleLength\n        ++queueLength\n        return s\n    }\n}\n</script>\n{% endraw %}\n","source":"_posts/poisson-disc.md","raw":"---\ntitle: 泊松分布Poisson-Disc采样点的生成\ndate: 2018-12-15 00:00:00\ncategories: D3.js\nkeywords: 泊松分布, Poisson-Disc, D3\ndescription: 泊松分布采样生成的点紧密堆积，可以产生更自然的采样图案，Robert Bridson提出的高效Poisson-Disc算法\n---\n\n泊松分布采样生成的点尽量紧密堆积，并且各点之间的距离均不小于指定的最小距离，从而可以产生更自然的采样图案。下面使用Robert Bridson提出的一种高效算法，时间复杂度为O(n)：\n\n1. 规定采样点之间的最小距离为r。\n\n2. 在画布尺寸范围内随机生成一个活跃采样点，在这个采样点周围的环形区域中再随机生成k个候选采样点，这个环形区域以该活跃采样点为圆心，半径从r延伸到2r。\n\n3. 在这k个随机候选采样点中，剔除掉与已选定的采样点距离小于r的点，剩下的作为新的活跃采样点。\n\n4. 如果这k个采样点都被剔除了，没有剩下任何可用的点，则将此环形区域圆心处的所选活跃采样点标记为非活跃，不再用于生成候选项。\n\n5. 当所有采样点均为非活跃状态时，算法迭代结束。\n\n6. 在对候选采样点剔除筛选时，使用了对角线长度为r的单元网格来加速距离检查。每个单元网格最多只能包含一个采样点，只需检查候选采样点周边固定数量的相邻单元网格即可。\n\n<div class=\"scrollable-wrapper\"><svg id=\"d3\"></svg></div>\n\n``` JavaScript\nconst width = document.querySelector('svg#d3').parentNode.clientWidth\nconst height = Math.round(width * 0.4)\nconst radius = Math.round(width / 50)\n\nconst sample = poissonDiscSampler(width, height, radius)\n\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n    .attr('fill', '#83887c')\n\nconst timer = d3.timer(function() {\n    const s = sample()\n    if (!s) return timer.stop()\n    svg.append(\"circle\")\n        .attr(\"cx\", s[0])\n        .attr(\"cy\", s[1])\n        .attr(\"r\", 0)\n        .transition()\n        .attr(\"r\", 2)\n})\n\nfunction poissonDiscSampler(width, height, radius) {\n    const k = 30,\n        cellSize = radius * Math.SQRT1_2,\n        gridWidthLength = Math.ceil(width / cellSize),\n        gridHeightLength = Math.ceil(height / cellSize),\n        grid = new Array(gridWidthLength * gridHeightLength),\n        queue = []\n    let queueLength = 0,\n        sampleLength = 0\n\n    return function() {\n        if (!sampleLength) return sample(Math.random() * width, Math.random() * height)\n\n        while (queueLength) {\n            const i = Math.random() * queueLength | 0,\n                s = queue[i]\n\n            for (let j = 0; j < k; ++j) {\n                const a = 2 * Math.PI * Math.random(),\n                    r = radius * (Math.random() + 1),\n                    x = s[0] + r * Math.cos(a),\n                    y = s[1] + r * Math.sin(a)\n\n                if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample(x, y)\n            }\n\n            queue[i] = queue[--queueLength]\n            queue.length = queueLength\n        }\n    }\n\n    function far(x, y) {\n        let i = x / cellSize | 0,\n            j = y / cellSize | 0\n        const i0 = Math.max(i - 2, 0),\n            j0 = Math.max(j - 2, 0),\n            i1 = Math.min(i + 3, gridWidthLength),\n            j1 = Math.min(j + 3, gridHeightLength)\n\n        for (j = j0; j < j1; ++j) {\n            for (i = i0; i < i1; ++i) {\n                const s = grid[j * gridWidthLength + i]\n                if (s) {\n                    const dx = s[0] - x,\n                        dy = s[1] - y\n                    if (dx * dx + dy * dy < radius * radius) return false\n                }\n            }\n        }\n\n        return true\n    }\n\n    function sample(x, y) {\n        const s = [x, y]\n        queue.push(s)\n        grid[gridWidthLength * (y / cellSize | 0) + (x / cellSize | 0)] = s\n        ++sampleLength\n        ++queueLength\n        return s\n    }\n}\n```\n\n<cite>参考：https://bl.ocks.org/mbostock/19168c663618b7f07158</cite>\n\n\n{% raw %}\n<style>\n.content .scrollable-wrapper {\n\tmargin: 2em 0;\n}\n</style>\n<script src='/scripts/d3.v5.min.js'></script>\n<script>\nconst width = document.querySelector('svg#d3').parentNode.clientWidth\nconst height = Math.round(width * 0.4)\nconst radius = Math.round(width / 50)\n\nconst sample = poissonDiscSampler(width, height, radius)\n\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n    .attr('fill', '#83887c')\n\nconst timer = d3.timer(function() {\n    const s = sample()\n    if (!s) return timer.stop()\n    svg.append(\"circle\")\n        .attr(\"cx\", s[0])\n        .attr(\"cy\", s[1])\n        .attr(\"r\", 0)\n        .transition()\n        .attr(\"r\", 2)\n})\n\nfunction poissonDiscSampler(width, height, radius) {\n    const k = 30,\n        cellSize = radius * Math.SQRT1_2,\n        gridWidthLength = Math.ceil(width / cellSize),\n        gridHeightLength = Math.ceil(height / cellSize),\n        grid = new Array(gridWidthLength * gridHeightLength),\n        queue = []\n    let queueLength = 0,\n        sampleLength = 0\n\n    return function() {\n        if (!sampleLength) return sample(Math.random() * width, Math.random() * height)\n\n        while (queueLength) {\n            const i = Math.random() * queueLength | 0,\n                s = queue[i]\n\n            for (let j = 0; j < k; ++j) {\n                const a = 2 * Math.PI * Math.random(),\n                    r = radius * (Math.random() + 1),\n                    x = s[0] + r * Math.cos(a),\n                    y = s[1] + r * Math.sin(a)\n\n                if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample(x, y)\n            }\n\n            queue[i] = queue[--queueLength]\n            queue.length = queueLength\n        }\n    }\n\n    function far(x, y) {\n        let i = x / cellSize | 0,\n            j = y / cellSize | 0\n        const i0 = Math.max(i - 2, 0),\n            j0 = Math.max(j - 2, 0),\n            i1 = Math.min(i + 3, gridWidthLength),\n            j1 = Math.min(j + 3, gridHeightLength)\n\n        for (j = j0; j < j1; ++j) {\n            for (i = i0; i < i1; ++i) {\n                const s = grid[j * gridWidthLength + i]\n                if (s) {\n                    const dx = s[0] - x,\n                        dy = s[1] - y\n                    if (dx * dx + dy * dy < radius * radius) return false\n                }\n            }\n        }\n\n        return true\n    }\n\n    function sample(x, y) {\n        const s = [x, y]\n        queue.push(s)\n        grid[gridWidthLength * (y / cellSize | 0) + (x / cellSize | 0)] = s\n        ++sampleLength\n        ++queueLength\n        return s\n    }\n}\n</script>\n{% endraw %}\n","slug":"poisson-disc","published":1,"updated":"2018-12-15T12:06:03.584Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emz8002e3a8ipkzculjo","content":"<p>泊松分布采样生成的点尽量紧密堆积，并且各点之间的距离均不小于指定的最小距离，从而可以产生更自然的采样图案。下面使用Robert Bridson提出的一种高效算法，时间复杂度为O(n)：</p>\n<ol>\n<li><p>规定采样点之间的最小距离为r。</p>\n</li>\n<li><p>在画布尺寸范围内随机生成一个活跃采样点，在这个采样点周围的环形区域中再随机生成k个候选采样点，这个环形区域以该活跃采样点为圆心，半径从r延伸到2r。</p>\n</li>\n<li><p>在这k个随机候选采样点中，剔除掉与已选定的采样点距离小于r的点，剩下的作为新的活跃采样点。</p>\n</li>\n<li><p>如果这k个采样点都被剔除了，没有剩下任何可用的点，则将此环形区域圆心处的所选活跃采样点标记为非活跃，不再用于生成候选项。</p>\n</li>\n<li><p>当所有采样点均为非活跃状态时，算法迭代结束。</p>\n</li>\n<li><p>在对候选采样点剔除筛选时，使用了对角线长度为r的单元网格来加速距离检查。每个单元网格最多只能包含一个采样点，只需检查候选采样点周边固定数量的相邻单元网格即可。</p>\n</li>\n</ol>\n<div class=\"scrollable-wrapper\"><svg id=\"d3\"/></div>\n\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> width = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'svg#d3'</span>).parentNode.clientWidth</div><div class=\"line\"><span class=\"keyword\">const</span> height = <span class=\"built_in\">Math</span>.round(width * <span class=\"number\">0.4</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> radius = <span class=\"built_in\">Math</span>.round(width / <span class=\"number\">50</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> sample = poissonDiscSampler(width, height, radius)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> svg = d3.select(<span class=\"string\">'svg#d3'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'width'</span>, width)</div><div class=\"line\">    .attr(<span class=\"string\">'height'</span>, height)</div><div class=\"line\">    .attr(<span class=\"string\">'viewBox'</span>, <span class=\"string\">`0 0 <span class=\"subst\">$&#123;width&#125;</span> <span class=\"subst\">$&#123;height&#125;</span>`</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'fill'</span>, <span class=\"string\">'#83887c'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> timer = d3.timer(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> s = sample()</div><div class=\"line\">    <span class=\"keyword\">if</span> (!s) <span class=\"keyword\">return</span> timer.stop()</div><div class=\"line\">    svg.append(<span class=\"string\">\"circle\"</span>)</div><div class=\"line\">        .attr(<span class=\"string\">\"cx\"</span>, s[<span class=\"number\">0</span>])</div><div class=\"line\">        .attr(<span class=\"string\">\"cy\"</span>, s[<span class=\"number\">1</span>])</div><div class=\"line\">        .attr(<span class=\"string\">\"r\"</span>, <span class=\"number\">0</span>)</div><div class=\"line\">        .transition()</div><div class=\"line\">        .attr(<span class=\"string\">\"r\"</span>, <span class=\"number\">2</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">poissonDiscSampler</span>(<span class=\"params\">width, height, radius</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> k = <span class=\"number\">30</span>,</div><div class=\"line\">        cellSize = radius * <span class=\"built_in\">Math</span>.SQRT1_2,</div><div class=\"line\">        gridWidthLength = <span class=\"built_in\">Math</span>.ceil(width / cellSize),</div><div class=\"line\">        gridHeightLength = <span class=\"built_in\">Math</span>.ceil(height / cellSize),</div><div class=\"line\">        grid = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(gridWidthLength * gridHeightLength),</div><div class=\"line\">        queue = []</div><div class=\"line\">    <span class=\"keyword\">let</span> queueLength = <span class=\"number\">0</span>,</div><div class=\"line\">        sampleLength = <span class=\"number\">0</span></div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!sampleLength) <span class=\"keyword\">return</span> sample(<span class=\"built_in\">Math</span>.random() * width, <span class=\"built_in\">Math</span>.random() * height)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">while</span> (queueLength) &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> i = <span class=\"built_in\">Math</span>.random() * queueLength | <span class=\"number\">0</span>,</div><div class=\"line\">                s = queue[i]</div><div class=\"line\"><br></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; k; ++j) &#123;</div><div class=\"line\">                <span class=\"keyword\">const</span> a = <span class=\"number\">2</span> * <span class=\"built_in\">Math</span>.PI * <span class=\"built_in\">Math</span>.random(),</div><div class=\"line\">                    r = radius * (<span class=\"built_in\">Math</span>.random() + <span class=\"number\">1</span>),</div><div class=\"line\">                    x = s[<span class=\"number\">0</span>] + r * <span class=\"built_in\">Math</span>.cos(a),</div><div class=\"line\">                    y = s[<span class=\"number\">1</span>] + r * <span class=\"built_in\">Math</span>.sin(a)</div><div class=\"line\"><br></div><div class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"number\">0</span> &lt;= x &amp;&amp; x &lt; width &amp;&amp; <span class=\"number\">0</span> &lt;= y &amp;&amp; y &lt; height &amp;&amp; far(x, y)) <span class=\"keyword\">return</span> sample(x, y)</div><div class=\"line\">            &#125;</div><div class=\"line\"><br></div><div class=\"line\">            queue[i] = queue[--queueLength]</div><div class=\"line\">            queue.length = queueLength</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">far</span>(<span class=\"params\">x, y</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> i = x / cellSize | <span class=\"number\">0</span>,</div><div class=\"line\">            j = y / cellSize | <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">const</span> i0 = <span class=\"built_in\">Math</span>.max(i - <span class=\"number\">2</span>, <span class=\"number\">0</span>),</div><div class=\"line\">            j0 = <span class=\"built_in\">Math</span>.max(j - <span class=\"number\">2</span>, <span class=\"number\">0</span>),</div><div class=\"line\">            i1 = <span class=\"built_in\">Math</span>.min(i + <span class=\"number\">3</span>, gridWidthLength),</div><div class=\"line\">            j1 = <span class=\"built_in\">Math</span>.min(j + <span class=\"number\">3</span>, gridHeightLength)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">for</span> (j = j0; j &lt; j1; ++j) &#123;</div><div class=\"line\">            <span class=\"keyword\">for</span> (i = i0; i &lt; i1; ++i) &#123;</div><div class=\"line\">                <span class=\"keyword\">const</span> s = grid[j * gridWidthLength + i]</div><div class=\"line\">                <span class=\"keyword\">if</span> (s) &#123;</div><div class=\"line\">                    <span class=\"keyword\">const</span> dx = s[<span class=\"number\">0</span>] - x,</div><div class=\"line\">                        dy = s[<span class=\"number\">1</span>] - y</div><div class=\"line\">                    <span class=\"keyword\">if</span> (dx * dx + dy * dy &lt; radius * radius) <span class=\"keyword\">return</span> <span class=\"literal\">false</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sample</span>(<span class=\"params\">x, y</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> s = [x, y]</div><div class=\"line\">        queue.push(s)</div><div class=\"line\">        grid[gridWidthLength * (y / cellSize | <span class=\"number\">0</span>) + (x / cellSize | <span class=\"number\">0</span>)] = s</div><div class=\"line\">        ++sampleLength</div><div class=\"line\">        ++queueLength</div><div class=\"line\">        <span class=\"keyword\">return</span> s</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p><cite>参考：<a href=\"https://bl.ocks.org/mbostock/19168c663618b7f07158\" target=\"_blank\" rel=\"noopener\">https://bl.ocks.org/mbostock/19168c663618b7f07158</a></cite></p>\n\n<style>\n.content .scrollable-wrapper {\n\tmargin: 2em 0;\n}\n</style>\n<script src=\"/scripts/d3.v5.min.js\"></script>\n<script>\nconst width = document.querySelector('svg#d3').parentNode.clientWidth\nconst height = Math.round(width * 0.4)\nconst radius = Math.round(width / 50)\n\nconst sample = poissonDiscSampler(width, height, radius)\n\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n    .attr('fill', '#83887c')\n\nconst timer = d3.timer(function() {\n    const s = sample()\n    if (!s) return timer.stop()\n    svg.append(\"circle\")\n        .attr(\"cx\", s[0])\n        .attr(\"cy\", s[1])\n        .attr(\"r\", 0)\n        .transition()\n        .attr(\"r\", 2)\n})\n\nfunction poissonDiscSampler(width, height, radius) {\n    const k = 30,\n        cellSize = radius * Math.SQRT1_2,\n        gridWidthLength = Math.ceil(width / cellSize),\n        gridHeightLength = Math.ceil(height / cellSize),\n        grid = new Array(gridWidthLength * gridHeightLength),\n        queue = []\n    let queueLength = 0,\n        sampleLength = 0\n\n    return function() {\n        if (!sampleLength) return sample(Math.random() * width, Math.random() * height)\n\n        while (queueLength) {\n            const i = Math.random() * queueLength | 0,\n                s = queue[i]\n\n            for (let j = 0; j < k; ++j) {\n                const a = 2 * Math.PI * Math.random(),\n                    r = radius * (Math.random() + 1),\n                    x = s[0] + r * Math.cos(a),\n                    y = s[1] + r * Math.sin(a)\n\n                if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample(x, y)\n            }\n\n            queue[i] = queue[--queueLength]\n            queue.length = queueLength\n        }\n    }\n\n    function far(x, y) {\n        let i = x / cellSize | 0,\n            j = y / cellSize | 0\n        const i0 = Math.max(i - 2, 0),\n            j0 = Math.max(j - 2, 0),\n            i1 = Math.min(i + 3, gridWidthLength),\n            j1 = Math.min(j + 3, gridHeightLength)\n\n        for (j = j0; j < j1; ++j) {\n            for (i = i0; i < i1; ++i) {\n                const s = grid[j * gridWidthLength + i]\n                if (s) {\n                    const dx = s[0] - x,\n                        dy = s[1] - y\n                    if (dx * dx + dy * dy < radius * radius) return false\n                }\n            }\n        }\n\n        return true\n    }\n\n    function sample(x, y) {\n        const s = [x, y]\n        queue.push(s)\n        grid[gridWidthLength * (y / cellSize | 0) + (x / cellSize | 0)] = s\n        ++sampleLength\n        ++queueLength\n        return s\n    }\n}\n</script>\n\n","site":{"data":{}},"excerpt":"","more":"<p>泊松分布采样生成的点尽量紧密堆积，并且各点之间的距离均不小于指定的最小距离，从而可以产生更自然的采样图案。下面使用Robert Bridson提出的一种高效算法，时间复杂度为O(n)：</p>\n<ol>\n<li><p>规定采样点之间的最小距离为r。</p>\n</li>\n<li><p>在画布尺寸范围内随机生成一个活跃采样点，在这个采样点周围的环形区域中再随机生成k个候选采样点，这个环形区域以该活跃采样点为圆心，半径从r延伸到2r。</p>\n</li>\n<li><p>在这k个随机候选采样点中，剔除掉与已选定的采样点距离小于r的点，剩下的作为新的活跃采样点。</p>\n</li>\n<li><p>如果这k个采样点都被剔除了，没有剩下任何可用的点，则将此环形区域圆心处的所选活跃采样点标记为非活跃，不再用于生成候选项。</p>\n</li>\n<li><p>当所有采样点均为非活跃状态时，算法迭代结束。</p>\n</li>\n<li><p>在对候选采样点剔除筛选时，使用了对角线长度为r的单元网格来加速距离检查。每个单元网格最多只能包含一个采样点，只需检查候选采样点周边固定数量的相邻单元网格即可。</p>\n</li>\n</ol>\n<div class=\"scrollable-wrapper\"><svg id=\"d3\"/></div>\n\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> width = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'svg#d3'</span>).parentNode.clientWidth</div><div class=\"line\"><span class=\"keyword\">const</span> height = <span class=\"built_in\">Math</span>.round(width * <span class=\"number\">0.4</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> radius = <span class=\"built_in\">Math</span>.round(width / <span class=\"number\">50</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> sample = poissonDiscSampler(width, height, radius)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> svg = d3.select(<span class=\"string\">'svg#d3'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'width'</span>, width)</div><div class=\"line\">    .attr(<span class=\"string\">'height'</span>, height)</div><div class=\"line\">    .attr(<span class=\"string\">'viewBox'</span>, <span class=\"string\">`0 0 <span class=\"subst\">$&#123;width&#125;</span> <span class=\"subst\">$&#123;height&#125;</span>`</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'fill'</span>, <span class=\"string\">'#83887c'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> timer = d3.timer(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> s = sample()</div><div class=\"line\">    <span class=\"keyword\">if</span> (!s) <span class=\"keyword\">return</span> timer.stop()</div><div class=\"line\">    svg.append(<span class=\"string\">\"circle\"</span>)</div><div class=\"line\">        .attr(<span class=\"string\">\"cx\"</span>, s[<span class=\"number\">0</span>])</div><div class=\"line\">        .attr(<span class=\"string\">\"cy\"</span>, s[<span class=\"number\">1</span>])</div><div class=\"line\">        .attr(<span class=\"string\">\"r\"</span>, <span class=\"number\">0</span>)</div><div class=\"line\">        .transition()</div><div class=\"line\">        .attr(<span class=\"string\">\"r\"</span>, <span class=\"number\">2</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">poissonDiscSampler</span>(<span class=\"params\">width, height, radius</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> k = <span class=\"number\">30</span>,</div><div class=\"line\">        cellSize = radius * <span class=\"built_in\">Math</span>.SQRT1_2,</div><div class=\"line\">        gridWidthLength = <span class=\"built_in\">Math</span>.ceil(width / cellSize),</div><div class=\"line\">        gridHeightLength = <span class=\"built_in\">Math</span>.ceil(height / cellSize),</div><div class=\"line\">        grid = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(gridWidthLength * gridHeightLength),</div><div class=\"line\">        queue = []</div><div class=\"line\">    <span class=\"keyword\">let</span> queueLength = <span class=\"number\">0</span>,</div><div class=\"line\">        sampleLength = <span class=\"number\">0</span></div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!sampleLength) <span class=\"keyword\">return</span> sample(<span class=\"built_in\">Math</span>.random() * width, <span class=\"built_in\">Math</span>.random() * height)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">while</span> (queueLength) &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> i = <span class=\"built_in\">Math</span>.random() * queueLength | <span class=\"number\">0</span>,</div><div class=\"line\">                s = queue[i]</div><div class=\"line\"><br></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; k; ++j) &#123;</div><div class=\"line\">                <span class=\"keyword\">const</span> a = <span class=\"number\">2</span> * <span class=\"built_in\">Math</span>.PI * <span class=\"built_in\">Math</span>.random(),</div><div class=\"line\">                    r = radius * (<span class=\"built_in\">Math</span>.random() + <span class=\"number\">1</span>),</div><div class=\"line\">                    x = s[<span class=\"number\">0</span>] + r * <span class=\"built_in\">Math</span>.cos(a),</div><div class=\"line\">                    y = s[<span class=\"number\">1</span>] + r * <span class=\"built_in\">Math</span>.sin(a)</div><div class=\"line\"><br></div><div class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"number\">0</span> &lt;= x &amp;&amp; x &lt; width &amp;&amp; <span class=\"number\">0</span> &lt;= y &amp;&amp; y &lt; height &amp;&amp; far(x, y)) <span class=\"keyword\">return</span> sample(x, y)</div><div class=\"line\">            &#125;</div><div class=\"line\"><br></div><div class=\"line\">            queue[i] = queue[--queueLength]</div><div class=\"line\">            queue.length = queueLength</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">far</span>(<span class=\"params\">x, y</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> i = x / cellSize | <span class=\"number\">0</span>,</div><div class=\"line\">            j = y / cellSize | <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">const</span> i0 = <span class=\"built_in\">Math</span>.max(i - <span class=\"number\">2</span>, <span class=\"number\">0</span>),</div><div class=\"line\">            j0 = <span class=\"built_in\">Math</span>.max(j - <span class=\"number\">2</span>, <span class=\"number\">0</span>),</div><div class=\"line\">            i1 = <span class=\"built_in\">Math</span>.min(i + <span class=\"number\">3</span>, gridWidthLength),</div><div class=\"line\">            j1 = <span class=\"built_in\">Math</span>.min(j + <span class=\"number\">3</span>, gridHeightLength)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">for</span> (j = j0; j &lt; j1; ++j) &#123;</div><div class=\"line\">            <span class=\"keyword\">for</span> (i = i0; i &lt; i1; ++i) &#123;</div><div class=\"line\">                <span class=\"keyword\">const</span> s = grid[j * gridWidthLength + i]</div><div class=\"line\">                <span class=\"keyword\">if</span> (s) &#123;</div><div class=\"line\">                    <span class=\"keyword\">const</span> dx = s[<span class=\"number\">0</span>] - x,</div><div class=\"line\">                        dy = s[<span class=\"number\">1</span>] - y</div><div class=\"line\">                    <span class=\"keyword\">if</span> (dx * dx + dy * dy &lt; radius * radius) <span class=\"keyword\">return</span> <span class=\"literal\">false</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sample</span>(<span class=\"params\">x, y</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> s = [x, y]</div><div class=\"line\">        queue.push(s)</div><div class=\"line\">        grid[gridWidthLength * (y / cellSize | <span class=\"number\">0</span>) + (x / cellSize | <span class=\"number\">0</span>)] = s</div><div class=\"line\">        ++sampleLength</div><div class=\"line\">        ++queueLength</div><div class=\"line\">        <span class=\"keyword\">return</span> s</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p><cite>参考：<a href=\"https://bl.ocks.org/mbostock/19168c663618b7f07158\" target=\"_blank\" rel=\"noopener\">https://bl.ocks.org/mbostock/19168c663618b7f07158</a></cite></p>\n\n<style>\n.content .scrollable-wrapper {\n\tmargin: 2em 0;\n}\n</style>\n<script src=\"/scripts/d3.v5.min.js\"></script>\n<script>\nconst width = document.querySelector('svg#d3').parentNode.clientWidth\nconst height = Math.round(width * 0.4)\nconst radius = Math.round(width / 50)\n\nconst sample = poissonDiscSampler(width, height, radius)\n\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n    .attr('fill', '#83887c')\n\nconst timer = d3.timer(function() {\n    const s = sample()\n    if (!s) return timer.stop()\n    svg.append(\"circle\")\n        .attr(\"cx\", s[0])\n        .attr(\"cy\", s[1])\n        .attr(\"r\", 0)\n        .transition()\n        .attr(\"r\", 2)\n})\n\nfunction poissonDiscSampler(width, height, radius) {\n    const k = 30,\n        cellSize = radius * Math.SQRT1_2,\n        gridWidthLength = Math.ceil(width / cellSize),\n        gridHeightLength = Math.ceil(height / cellSize),\n        grid = new Array(gridWidthLength * gridHeightLength),\n        queue = []\n    let queueLength = 0,\n        sampleLength = 0\n\n    return function() {\n        if (!sampleLength) return sample(Math.random() * width, Math.random() * height)\n\n        while (queueLength) {\n            const i = Math.random() * queueLength | 0,\n                s = queue[i]\n\n            for (let j = 0; j < k; ++j) {\n                const a = 2 * Math.PI * Math.random(),\n                    r = radius * (Math.random() + 1),\n                    x = s[0] + r * Math.cos(a),\n                    y = s[1] + r * Math.sin(a)\n\n                if (0 <= x && x < width && 0 <= y && y < height && far(x, y)) return sample(x, y)\n            }\n\n            queue[i] = queue[--queueLength]\n            queue.length = queueLength\n        }\n    }\n\n    function far(x, y) {\n        let i = x / cellSize | 0,\n            j = y / cellSize | 0\n        const i0 = Math.max(i - 2, 0),\n            j0 = Math.max(j - 2, 0),\n            i1 = Math.min(i + 3, gridWidthLength),\n            j1 = Math.min(j + 3, gridHeightLength)\n\n        for (j = j0; j < j1; ++j) {\n            for (i = i0; i < i1; ++i) {\n                const s = grid[j * gridWidthLength + i]\n                if (s) {\n                    const dx = s[0] - x,\n                        dy = s[1] - y\n                    if (dx * dx + dy * dy < radius * radius) return false\n                }\n            }\n        }\n\n        return true\n    }\n\n    function sample(x, y) {\n        const s = [x, y]\n        queue.push(s)\n        grid[gridWidthLength * (y / cellSize | 0) + (x / cellSize | 0)] = s\n        ++sampleLength\n        ++queueLength\n        return s\n    }\n}\n</script>\n\n"},{"title":"基于Pro/E的凸轮机构参数化设计及仿真","date":"2012-10-26T16:00:00.000Z","keywords":"凸轮机构参数化设计, 凸轮机构运动仿真, Pro/E","description":"在Pro/E中盘形凸轮和圆柱凸轮的参数化建模，以及用Pro/E的运动学分析模块Mechanism仿真的过程","_content":"\n本文简要描述在Pro/E中盘形凸轮和圆柱凸轮的参数化建模，以及用Pro/E的运动学分析模块Mechanism仿真的过程。\n\n一般来说，凸轮机构主动件作等速转动，直接推动从动件（推杆）作直线往复运动。根据推杆位置，凸轮的轮廓划分为四部分，其对应的凸轮转角分别称为推程运动角、远休止角、回程运动角和近休止角。下图为各角度与推杆位置的对应关系。\n\n{% img /images/proe/tulun1.jpg 275 %}\n\nPro/E盘形凸轮建模、仿真过程为：\n\n### 1. 盘形凸轮建模\n\na. 添加盘形凸轮参数\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>参数</th>\n\t\t\t<th>值</th>\n\t\t\t<th>名称</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>baser</td>\n\t\t\t<td>50</td>\n\t\t\t<td>基圆半径</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>h</td>\n\t\t\t<td>15</td>\n\t\t\t<td>推程</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi1</td>\n\t\t\t<td>90</td>\n\t\t\t<td>推程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi2</td>\n\t\t\t<td>90</td>\n\t\t\t<td>远休止角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi3</td>\n\t\t\t<td>90</td>\n\t\t\t<td>回程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi4</td>\n\t\t\t<td>90</td>\n\t\t\t<td>近休止角</td>\n\t\t</tr>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n \n亦可添加凸轮厚度、转轴孔径等其他参数。\n\nb. 绘制凸轮轮廓曲线\n\n使用笛卡尔坐标下的方程形式，按推程运动角、远休止角、回程运动角和近休止角对应划分四段，绘制凸轮轮廓曲线（以推杆余弦加速度运动规律为例）。四段曲线具体方程式详见文章：[常用推杆运动规律的Pro/E曲线方程式](proe2.html)。\n\nc. 提取轮廓曲线，拉伸成为凸轮\n\n### 2. 推杆和支架建模\n\n支架用来安装凸轮和推杆，组合成为凸轮机构。\n\n### 3. 建立组件/装配体\n\n使用“缺省”约束装入支架，使用“销钉”约束装入凸轮，使用“滑动杆”约束装入推杆，并建立推杆与凸轮之间的“槽”约束。此处使用的各种连接方式的约束关系详见文章：[Pro/E装配连接约束及相对运动关系](proe1.html)。\n\n### 4. 仿真\n\na. 进入应用程序“机构”模块\n\nb. 添加伺服电动机\n\n在凸轮“销钉”约束的转轴处添加伺服电动机，设置角速度为36deg/sec。\n\nc. 机构分析\n\n分析类型选择“动态”，此模式下可以测量速度和加速度，持续时间设置为10sec，使凸轮完成整一圈转动。\n\n{% img /images/proe/tulun2.gif 275 %}\n\nd. 测量结果\n\n推杆位置图像\n\n{% img /images/proe/tulun3.gif 275 %}\n\n推杆速度图像\n\n{% img /images/proe/tulun4.gif 275 %}\n\n推杆加速度图像\n\n{% img /images/proe/tulun5.gif 275 %}\n\n### 5. 圆柱凸轮建模\n\na. 添加圆柱凸轮参数\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>参数</th>\n\t\t\t<th>值</th>\n\t\t\t<th>名称</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>bottomr</td>\n\t\t\t<td>50</td>\n\t\t\t<td>圆柱底圆半径</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>baseh</td>\n\t\t\t<td>70</td>\n\t\t\t<td>圆柱基高</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>h</td>\n\t\t\t<td>15</td>\n\t\t\t<td>推程</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi1</td>\n\t\t\t<td>90</td>\n\t\t\t<td>推程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi2</td>\n\t\t\t<td>90</td>\n\t\t\t<td>远休止角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi3</td>\n\t\t\t<td>90</td>\n\t\t\t<td>回程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi4</td>\n\t\t\t<td>90</td>\n\t\t\t<td>近休止角</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\nb. 绘制凸轮轮廓曲线\n\n不同于盘形凸轮，这里使用圆柱坐标系（以推杆余弦加速度运动规律为例）：\n\n``` C\n/* 推程\nr=bottomr\ntheta=t*phi1\nz=baseh+h*(1-cos(180*t))/2\n\n/* 远休止\nr=bottomr\ntheta=phi1+phi2*t\nz=baseh+h\n\n/* 近休止\nr=bottomr\ntheta=phi1+phi2+phi3*t\nz=baseh+h*(1+cos(180*t))/2\n\n/* 回程\nr=bottomr\ntheta=phi1+phi2+phi3+phi4*t\nz=baseh\n```\n\nc. 提取轮廓曲线，在FRONT面草绘一个底圆\n\nd. 使用可变剖面扫描作4段圆柱体\n","source":"_posts/proe3.md","raw":"---\ntitle: 基于Pro/E的凸轮机构参数化设计及仿真\ndate: 2012-10-27 00:00:00\ncategories: Uncategorized\nkeywords: 凸轮机构参数化设计, 凸轮机构运动仿真, Pro/E\ndescription: 在Pro/E中盘形凸轮和圆柱凸轮的参数化建模，以及用Pro/E的运动学分析模块Mechanism仿真的过程\n---\n\n本文简要描述在Pro/E中盘形凸轮和圆柱凸轮的参数化建模，以及用Pro/E的运动学分析模块Mechanism仿真的过程。\n\n一般来说，凸轮机构主动件作等速转动，直接推动从动件（推杆）作直线往复运动。根据推杆位置，凸轮的轮廓划分为四部分，其对应的凸轮转角分别称为推程运动角、远休止角、回程运动角和近休止角。下图为各角度与推杆位置的对应关系。\n\n{% img /images/proe/tulun1.jpg 275 %}\n\nPro/E盘形凸轮建模、仿真过程为：\n\n### 1. 盘形凸轮建模\n\na. 添加盘形凸轮参数\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>参数</th>\n\t\t\t<th>值</th>\n\t\t\t<th>名称</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>baser</td>\n\t\t\t<td>50</td>\n\t\t\t<td>基圆半径</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>h</td>\n\t\t\t<td>15</td>\n\t\t\t<td>推程</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi1</td>\n\t\t\t<td>90</td>\n\t\t\t<td>推程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi2</td>\n\t\t\t<td>90</td>\n\t\t\t<td>远休止角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi3</td>\n\t\t\t<td>90</td>\n\t\t\t<td>回程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi4</td>\n\t\t\t<td>90</td>\n\t\t\t<td>近休止角</td>\n\t\t</tr>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n \n亦可添加凸轮厚度、转轴孔径等其他参数。\n\nb. 绘制凸轮轮廓曲线\n\n使用笛卡尔坐标下的方程形式，按推程运动角、远休止角、回程运动角和近休止角对应划分四段，绘制凸轮轮廓曲线（以推杆余弦加速度运动规律为例）。四段曲线具体方程式详见文章：[常用推杆运动规律的Pro/E曲线方程式](proe2.html)。\n\nc. 提取轮廓曲线，拉伸成为凸轮\n\n### 2. 推杆和支架建模\n\n支架用来安装凸轮和推杆，组合成为凸轮机构。\n\n### 3. 建立组件/装配体\n\n使用“缺省”约束装入支架，使用“销钉”约束装入凸轮，使用“滑动杆”约束装入推杆，并建立推杆与凸轮之间的“槽”约束。此处使用的各种连接方式的约束关系详见文章：[Pro/E装配连接约束及相对运动关系](proe1.html)。\n\n### 4. 仿真\n\na. 进入应用程序“机构”模块\n\nb. 添加伺服电动机\n\n在凸轮“销钉”约束的转轴处添加伺服电动机，设置角速度为36deg/sec。\n\nc. 机构分析\n\n分析类型选择“动态”，此模式下可以测量速度和加速度，持续时间设置为10sec，使凸轮完成整一圈转动。\n\n{% img /images/proe/tulun2.gif 275 %}\n\nd. 测量结果\n\n推杆位置图像\n\n{% img /images/proe/tulun3.gif 275 %}\n\n推杆速度图像\n\n{% img /images/proe/tulun4.gif 275 %}\n\n推杆加速度图像\n\n{% img /images/proe/tulun5.gif 275 %}\n\n### 5. 圆柱凸轮建模\n\na. 添加圆柱凸轮参数\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>参数</th>\n\t\t\t<th>值</th>\n\t\t\t<th>名称</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>bottomr</td>\n\t\t\t<td>50</td>\n\t\t\t<td>圆柱底圆半径</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>baseh</td>\n\t\t\t<td>70</td>\n\t\t\t<td>圆柱基高</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>h</td>\n\t\t\t<td>15</td>\n\t\t\t<td>推程</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi1</td>\n\t\t\t<td>90</td>\n\t\t\t<td>推程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi2</td>\n\t\t\t<td>90</td>\n\t\t\t<td>远休止角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi3</td>\n\t\t\t<td>90</td>\n\t\t\t<td>回程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi4</td>\n\t\t\t<td>90</td>\n\t\t\t<td>近休止角</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\nb. 绘制凸轮轮廓曲线\n\n不同于盘形凸轮，这里使用圆柱坐标系（以推杆余弦加速度运动规律为例）：\n\n``` C\n/* 推程\nr=bottomr\ntheta=t*phi1\nz=baseh+h*(1-cos(180*t))/2\n\n/* 远休止\nr=bottomr\ntheta=phi1+phi2*t\nz=baseh+h\n\n/* 近休止\nr=bottomr\ntheta=phi1+phi2+phi3*t\nz=baseh+h*(1+cos(180*t))/2\n\n/* 回程\nr=bottomr\ntheta=phi1+phi2+phi3+phi4*t\nz=baseh\n```\n\nc. 提取轮廓曲线，在FRONT面草绘一个底圆\n\nd. 使用可变剖面扫描作4段圆柱体\n","slug":"proe3","published":1,"updated":"2018-12-03T02:28:52.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emza002g3a8i8rwyhdta","content":"<p>本文简要描述在Pro/E中盘形凸轮和圆柱凸轮的参数化建模，以及用Pro/E的运动学分析模块Mechanism仿真的过程。</p>\n<p>一般来说，凸轮机构主动件作等速转动，直接推动从动件（推杆）作直线往复运动。根据推杆位置，凸轮的轮廓划分为四部分，其对应的凸轮转角分别称为推程运动角、远休止角、回程运动角和近休止角。下图为各角度与推杆位置的对应关系。</p>\n<img src=\"/images/proe/tulun1.jpg\" width=\"275\">\n<p>Pro/E盘形凸轮建模、仿真过程为：</p>\n<h3 id=\"1-盘形凸轮建模\"><a href=\"#1-盘形凸轮建模\" class=\"headerlink\" title=\"1. 盘形凸轮建模\"></a>1. 盘形凸轮建模</h3><p>a. 添加盘形凸轮参数</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>参数</th>\n\t\t\t<th>值</th>\n\t\t\t<th>名称</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>baser</td>\n\t\t\t<td>50</td>\n\t\t\t<td>基圆半径</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>h</td>\n\t\t\t<td>15</td>\n\t\t\t<td>推程</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi1</td>\n\t\t\t<td>90</td>\n\t\t\t<td>推程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi2</td>\n\t\t\t<td>90</td>\n\t\t\t<td>远休止角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi3</td>\n\t\t\t<td>90</td>\n\t\t\t<td>回程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi4</td>\n\t\t\t<td>90</td>\n\t\t\t<td>近休止角</td>\n\t\t</tr>\n\t\t\n\t</tbody>\n</table>\n\n<p>亦可添加凸轮厚度、转轴孔径等其他参数。</p>\n<p>b. 绘制凸轮轮廓曲线</p>\n<p>使用笛卡尔坐标下的方程形式，按推程运动角、远休止角、回程运动角和近休止角对应划分四段，绘制凸轮轮廓曲线（以推杆余弦加速度运动规律为例）。四段曲线具体方程式详见文章：<a href=\"proe2.html\">常用推杆运动规律的Pro/E曲线方程式</a>。</p>\n<p>c. 提取轮廓曲线，拉伸成为凸轮</p>\n<h3 id=\"2-推杆和支架建模\"><a href=\"#2-推杆和支架建模\" class=\"headerlink\" title=\"2. 推杆和支架建模\"></a>2. 推杆和支架建模</h3><p>支架用来安装凸轮和推杆，组合成为凸轮机构。</p>\n<h3 id=\"3-建立组件-装配体\"><a href=\"#3-建立组件-装配体\" class=\"headerlink\" title=\"3. 建立组件/装配体\"></a>3. 建立组件/装配体</h3><p>使用“缺省”约束装入支架，使用“销钉”约束装入凸轮，使用“滑动杆”约束装入推杆，并建立推杆与凸轮之间的“槽”约束。此处使用的各种连接方式的约束关系详见文章：<a href=\"proe1.html\">Pro/E装配连接约束及相对运动关系</a>。</p>\n<h3 id=\"4-仿真\"><a href=\"#4-仿真\" class=\"headerlink\" title=\"4. 仿真\"></a>4. 仿真</h3><p>a. 进入应用程序“机构”模块</p>\n<p>b. 添加伺服电动机</p>\n<p>在凸轮“销钉”约束的转轴处添加伺服电动机，设置角速度为36deg/sec。</p>\n<p>c. 机构分析</p>\n<p>分析类型选择“动态”，此模式下可以测量速度和加速度，持续时间设置为10sec，使凸轮完成整一圈转动。</p>\n<img src=\"/images/proe/tulun2.gif\" width=\"275\">\n<p>d. 测量结果</p>\n<p>推杆位置图像</p>\n<img src=\"/images/proe/tulun3.gif\" width=\"275\">\n<p>推杆速度图像</p>\n<img src=\"/images/proe/tulun4.gif\" width=\"275\">\n<p>推杆加速度图像</p>\n<img src=\"/images/proe/tulun5.gif\" width=\"275\">\n<h3 id=\"5-圆柱凸轮建模\"><a href=\"#5-圆柱凸轮建模\" class=\"headerlink\" title=\"5. 圆柱凸轮建模\"></a>5. 圆柱凸轮建模</h3><p>a. 添加圆柱凸轮参数</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>参数</th>\n\t\t\t<th>值</th>\n\t\t\t<th>名称</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>bottomr</td>\n\t\t\t<td>50</td>\n\t\t\t<td>圆柱底圆半径</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>baseh</td>\n\t\t\t<td>70</td>\n\t\t\t<td>圆柱基高</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>h</td>\n\t\t\t<td>15</td>\n\t\t\t<td>推程</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi1</td>\n\t\t\t<td>90</td>\n\t\t\t<td>推程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi2</td>\n\t\t\t<td>90</td>\n\t\t\t<td>远休止角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi3</td>\n\t\t\t<td>90</td>\n\t\t\t<td>回程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi4</td>\n\t\t\t<td>90</td>\n\t\t\t<td>近休止角</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>b. 绘制凸轮轮廓曲线</p>\n<p>不同于盘形凸轮，这里使用圆柱坐标系（以推杆余弦加速度运动规律为例）：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">r=bottomr</span></div><div class=\"line\"><span class=\"comment\">theta=t*phi1</span></div><div class=\"line\"><span class=\"comment\">z=baseh+h*(1-cos(180*t))/2</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">r=bottomr</span></div><div class=\"line\"><span class=\"comment\">theta=phi1+phi2*t</span></div><div class=\"line\"><span class=\"comment\">z=baseh+h</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">r=bottomr</span></div><div class=\"line\"><span class=\"comment\">theta=phi1+phi2+phi3*t</span></div><div class=\"line\"><span class=\"comment\">z=baseh+h*(1+cos(180*t))/2</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">r=bottomr</span></div><div class=\"line\"><span class=\"comment\">theta=phi1+phi2+phi3+phi4*t</span></div><div class=\"line\"><span class=\"comment\">z=baseh</span></div></pre></figure>\n<p>c. 提取轮廓曲线，在FRONT面草绘一个底圆</p>\n<p>d. 使用可变剖面扫描作4段圆柱体</p>\n","site":{"data":{}},"excerpt":"","more":"<p>本文简要描述在Pro/E中盘形凸轮和圆柱凸轮的参数化建模，以及用Pro/E的运动学分析模块Mechanism仿真的过程。</p>\n<p>一般来说，凸轮机构主动件作等速转动，直接推动从动件（推杆）作直线往复运动。根据推杆位置，凸轮的轮廓划分为四部分，其对应的凸轮转角分别称为推程运动角、远休止角、回程运动角和近休止角。下图为各角度与推杆位置的对应关系。</p>\n<img src=\"/images/proe/tulun1.jpg\" width=\"275\">\n<p>Pro/E盘形凸轮建模、仿真过程为：</p>\n<h3 id=\"1-盘形凸轮建模\"><a href=\"#1-盘形凸轮建模\" class=\"headerlink\" title=\"1. 盘形凸轮建模\"></a>1. 盘形凸轮建模</h3><p>a. 添加盘形凸轮参数</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>参数</th>\n\t\t\t<th>值</th>\n\t\t\t<th>名称</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>baser</td>\n\t\t\t<td>50</td>\n\t\t\t<td>基圆半径</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>h</td>\n\t\t\t<td>15</td>\n\t\t\t<td>推程</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi1</td>\n\t\t\t<td>90</td>\n\t\t\t<td>推程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi2</td>\n\t\t\t<td>90</td>\n\t\t\t<td>远休止角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi3</td>\n\t\t\t<td>90</td>\n\t\t\t<td>回程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi4</td>\n\t\t\t<td>90</td>\n\t\t\t<td>近休止角</td>\n\t\t</tr>\n\t\t\n\t</tbody>\n</table>\n\n<p>亦可添加凸轮厚度、转轴孔径等其他参数。</p>\n<p>b. 绘制凸轮轮廓曲线</p>\n<p>使用笛卡尔坐标下的方程形式，按推程运动角、远休止角、回程运动角和近休止角对应划分四段，绘制凸轮轮廓曲线（以推杆余弦加速度运动规律为例）。四段曲线具体方程式详见文章：<a href=\"proe2.html\">常用推杆运动规律的Pro/E曲线方程式</a>。</p>\n<p>c. 提取轮廓曲线，拉伸成为凸轮</p>\n<h3 id=\"2-推杆和支架建模\"><a href=\"#2-推杆和支架建模\" class=\"headerlink\" title=\"2. 推杆和支架建模\"></a>2. 推杆和支架建模</h3><p>支架用来安装凸轮和推杆，组合成为凸轮机构。</p>\n<h3 id=\"3-建立组件-装配体\"><a href=\"#3-建立组件-装配体\" class=\"headerlink\" title=\"3. 建立组件/装配体\"></a>3. 建立组件/装配体</h3><p>使用“缺省”约束装入支架，使用“销钉”约束装入凸轮，使用“滑动杆”约束装入推杆，并建立推杆与凸轮之间的“槽”约束。此处使用的各种连接方式的约束关系详见文章：<a href=\"proe1.html\">Pro/E装配连接约束及相对运动关系</a>。</p>\n<h3 id=\"4-仿真\"><a href=\"#4-仿真\" class=\"headerlink\" title=\"4. 仿真\"></a>4. 仿真</h3><p>a. 进入应用程序“机构”模块</p>\n<p>b. 添加伺服电动机</p>\n<p>在凸轮“销钉”约束的转轴处添加伺服电动机，设置角速度为36deg/sec。</p>\n<p>c. 机构分析</p>\n<p>分析类型选择“动态”，此模式下可以测量速度和加速度，持续时间设置为10sec，使凸轮完成整一圈转动。</p>\n<img src=\"/images/proe/tulun2.gif\" width=\"275\">\n<p>d. 测量结果</p>\n<p>推杆位置图像</p>\n<img src=\"/images/proe/tulun3.gif\" width=\"275\">\n<p>推杆速度图像</p>\n<img src=\"/images/proe/tulun4.gif\" width=\"275\">\n<p>推杆加速度图像</p>\n<img src=\"/images/proe/tulun5.gif\" width=\"275\">\n<h3 id=\"5-圆柱凸轮建模\"><a href=\"#5-圆柱凸轮建模\" class=\"headerlink\" title=\"5. 圆柱凸轮建模\"></a>5. 圆柱凸轮建模</h3><p>a. 添加圆柱凸轮参数</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>参数</th>\n\t\t\t<th>值</th>\n\t\t\t<th>名称</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>bottomr</td>\n\t\t\t<td>50</td>\n\t\t\t<td>圆柱底圆半径</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>baseh</td>\n\t\t\t<td>70</td>\n\t\t\t<td>圆柱基高</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>h</td>\n\t\t\t<td>15</td>\n\t\t\t<td>推程</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi1</td>\n\t\t\t<td>90</td>\n\t\t\t<td>推程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi2</td>\n\t\t\t<td>90</td>\n\t\t\t<td>远休止角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi3</td>\n\t\t\t<td>90</td>\n\t\t\t<td>回程运动角</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>phi4</td>\n\t\t\t<td>90</td>\n\t\t\t<td>近休止角</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>b. 绘制凸轮轮廓曲线</p>\n<p>不同于盘形凸轮，这里使用圆柱坐标系（以推杆余弦加速度运动规律为例）：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"comment\">/* 推程</span></div><div class=\"line\"><span class=\"comment\">r=bottomr</span></div><div class=\"line\"><span class=\"comment\">theta=t*phi1</span></div><div class=\"line\"><span class=\"comment\">z=baseh+h*(1-cos(180*t))/2</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 远休止</span></div><div class=\"line\"><span class=\"comment\">r=bottomr</span></div><div class=\"line\"><span class=\"comment\">theta=phi1+phi2*t</span></div><div class=\"line\"><span class=\"comment\">z=baseh+h</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 近休止</span></div><div class=\"line\"><span class=\"comment\">r=bottomr</span></div><div class=\"line\"><span class=\"comment\">theta=phi1+phi2+phi3*t</span></div><div class=\"line\"><span class=\"comment\">z=baseh+h*(1+cos(180*t))/2</span></div><div class=\"line\"><span class=\"comment\"></span></div><div class=\"line\"><span class=\"comment\">/* 回程</span></div><div class=\"line\"><span class=\"comment\">r=bottomr</span></div><div class=\"line\"><span class=\"comment\">theta=phi1+phi2+phi3+phi4*t</span></div><div class=\"line\"><span class=\"comment\">z=baseh</span></div></pre></figure>\n<p>c. 提取轮廓曲线，在FRONT面草绘一个底圆</p>\n<p>d. 使用可变剖面扫描作4段圆柱体</p>\n"},{"title":"Pro/E绘图格式的创建","date":"2012-11-04T16:00:00.000Z","keywords":"Pro/E绘图格式, Pro/E","description":"Pro/E绘图格式的创建过程","_content":"\n在Pro/E工程图中，格式其实就是图纸框，还包括表格中的图纸名称、比例、绘图日期、页码、版本号、绘图人等信息及其字体等的设定。\n\nPro/E绘图格式的创建过程为：\n\n1\\. 新建“格式”，其文件后缀为.frm，选择所需的“标准大小”（例如A4）；\n\n2\\. 右侧“启用草绘链”，使用“直线”，右键打开“绝对坐标”，绘制内框；\n\n3\\. 菜单打开“表”-“插入”-“表”，依次点选“升序”、“左对齐”、“按长度”、“顶点”，选择内框右下角顶点，依次输入表格列宽和行高，绘制表格；\n\n4\\. 菜单打开“表”-“合并单元格”，合并表格中的部分单元格；\n\n5\\. 菜单打开“格式”-“文本样式库”-“新建”，设置需要的文本字体大小、对齐等格式；\n\n6\\. 菜单打开“格式”-“缺省文本样式”，选择前面建立的“样式”，将其设置为默认文本样式；\n\n7\\. 双击表格单元格，填写信息，其中可以用到的注释标签有：\n\n{% raw %}\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&amp;model_name</td>\n\t\t\t<td>显示模型名称</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;todays_date</td>\n\t\t\t<td>显示当前日期</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;scale</td>\n\t\t\t<td>显示绘图比例</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;dwg_name</td>\n\t\t\t<td>显示工程图名称</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;current_sheet</td>\n\t\t\t<td>显示当前图纸页码</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;total_sheets</td>\n\t\t\t<td>显示总共图纸页码</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;format</td>\n\t\t\t<td>显示图纸规格</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;type</td>\n\t\t\t<td>显示模型类型</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\n需要注意的是，上表的注释标签与其他文字之间必须用空格隔开。\n","source":"_posts/proe4.md","raw":"---\ntitle: Pro/E绘图格式的创建\ndate: 2012-11-05 00:00:00\ncategories: Uncategorized\nkeywords: Pro/E绘图格式, Pro/E\ndescription: Pro/E绘图格式的创建过程\n---\n\n在Pro/E工程图中，格式其实就是图纸框，还包括表格中的图纸名称、比例、绘图日期、页码、版本号、绘图人等信息及其字体等的设定。\n\nPro/E绘图格式的创建过程为：\n\n1\\. 新建“格式”，其文件后缀为.frm，选择所需的“标准大小”（例如A4）；\n\n2\\. 右侧“启用草绘链”，使用“直线”，右键打开“绝对坐标”，绘制内框；\n\n3\\. 菜单打开“表”-“插入”-“表”，依次点选“升序”、“左对齐”、“按长度”、“顶点”，选择内框右下角顶点，依次输入表格列宽和行高，绘制表格；\n\n4\\. 菜单打开“表”-“合并单元格”，合并表格中的部分单元格；\n\n5\\. 菜单打开“格式”-“文本样式库”-“新建”，设置需要的文本字体大小、对齐等格式；\n\n6\\. 菜单打开“格式”-“缺省文本样式”，选择前面建立的“样式”，将其设置为默认文本样式；\n\n7\\. 双击表格单元格，填写信息，其中可以用到的注释标签有：\n\n{% raw %}\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&amp;model_name</td>\n\t\t\t<td>显示模型名称</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;todays_date</td>\n\t\t\t<td>显示当前日期</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;scale</td>\n\t\t\t<td>显示绘图比例</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;dwg_name</td>\n\t\t\t<td>显示工程图名称</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;current_sheet</td>\n\t\t\t<td>显示当前图纸页码</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;total_sheets</td>\n\t\t\t<td>显示总共图纸页码</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;format</td>\n\t\t\t<td>显示图纸规格</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;type</td>\n\t\t\t<td>显示模型类型</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\n需要注意的是，上表的注释标签与其他文字之间必须用空格隔开。\n","slug":"proe4","published":1,"updated":"2018-12-03T02:28:52.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzb002j3a8ipg7einvw","content":"<p>在Pro/E工程图中，格式其实就是图纸框，还包括表格中的图纸名称、比例、绘图日期、页码、版本号、绘图人等信息及其字体等的设定。</p>\n<p>Pro/E绘图格式的创建过程为：</p>\n<p>1. 新建“格式”，其文件后缀为.frm，选择所需的“标准大小”（例如A4）；</p>\n<p>2. 右侧“启用草绘链”，使用“直线”，右键打开“绝对坐标”，绘制内框；</p>\n<p>3. 菜单打开“表”-“插入”-“表”，依次点选“升序”、“左对齐”、“按长度”、“顶点”，选择内框右下角顶点，依次输入表格列宽和行高，绘制表格；</p>\n<p>4. 菜单打开“表”-“合并单元格”，合并表格中的部分单元格；</p>\n<p>5. 菜单打开“格式”-“文本样式库”-“新建”，设置需要的文本字体大小、对齐等格式；</p>\n<p>6. 菜单打开“格式”-“缺省文本样式”，选择前面建立的“样式”，将其设置为默认文本样式；</p>\n<p>7. 双击表格单元格，填写信息，其中可以用到的注释标签有：</p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&amp;model_name</td>\n\t\t\t<td>显示模型名称</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;todays_date</td>\n\t\t\t<td>显示当前日期</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;scale</td>\n\t\t\t<td>显示绘图比例</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;dwg_name</td>\n\t\t\t<td>显示工程图名称</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;current_sheet</td>\n\t\t\t<td>显示当前图纸页码</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;total_sheets</td>\n\t\t\t<td>显示总共图纸页码</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;format</td>\n\t\t\t<td>显示图纸规格</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;type</td>\n\t\t\t<td>显示模型类型</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>需要注意的是，上表的注释标签与其他文字之间必须用空格隔开。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在Pro/E工程图中，格式其实就是图纸框，还包括表格中的图纸名称、比例、绘图日期、页码、版本号、绘图人等信息及其字体等的设定。</p>\n<p>Pro/E绘图格式的创建过程为：</p>\n<p>1. 新建“格式”，其文件后缀为.frm，选择所需的“标准大小”（例如A4）；</p>\n<p>2. 右侧“启用草绘链”，使用“直线”，右键打开“绝对坐标”，绘制内框；</p>\n<p>3. 菜单打开“表”-“插入”-“表”，依次点选“升序”、“左对齐”、“按长度”、“顶点”，选择内框右下角顶点，依次输入表格列宽和行高，绘制表格；</p>\n<p>4. 菜单打开“表”-“合并单元格”，合并表格中的部分单元格；</p>\n<p>5. 菜单打开“格式”-“文本样式库”-“新建”，设置需要的文本字体大小、对齐等格式；</p>\n<p>6. 菜单打开“格式”-“缺省文本样式”，选择前面建立的“样式”，将其设置为默认文本样式；</p>\n<p>7. 双击表格单元格，填写信息，其中可以用到的注释标签有：</p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&amp;model_name</td>\n\t\t\t<td>显示模型名称</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;todays_date</td>\n\t\t\t<td>显示当前日期</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;scale</td>\n\t\t\t<td>显示绘图比例</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;dwg_name</td>\n\t\t\t<td>显示工程图名称</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;current_sheet</td>\n\t\t\t<td>显示当前图纸页码</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;total_sheets</td>\n\t\t\t<td>显示总共图纸页码</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;format</td>\n\t\t\t<td>显示图纸规格</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>&amp;type</td>\n\t\t\t<td>显示模型类型</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>需要注意的是，上表的注释标签与其他文字之间必须用空格隔开。</p>\n"},{"title":"新安装Pro/E后的常用配置","date":"2013-03-04T16:00:00.000Z","keywords":"Pro/E常用配置, Pro/E","description":"新安装Pro/E后的常用配置及工程图配置文件生成方法","_content":"\n菜单“工具” - “选项”命令，添加/更改下表选项，然后把工作目录下生成的current_session.pro改名为config.pro。\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>选项</th>\n\t\t\t<th>值</th>\n\t\t\t<th>说明</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>trail_dir</td>\n\t\t\t<td>D:\\proe4\\trail</td>\n\t\t\t<td>设置轨迹文件trail.txt的生成目录</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>web_browser_homepage</td>\n\t\t\t<td>about:blank</td>\n\t\t\t<td>设置浏览器主页为空白页面</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>drawing_setup_file</td>\n\t\t\t<td>D:\\proe4\\work\\drw.dtl</td>\n\t\t\t<td>设置工程图配置文件</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pdf_use_pentable</td>\n\t\t\t<td>yes</td>\n\t\t\t<td>导出PDF图纸时使用系统线宽设置</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pen_table_file</td>\n\t\t\t<td>D:\\proe4\\work\\table.pnt</td>\n\t\t\t<td>设置打印线宽配置文件</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pro_unit_sys</td>\n\t\t\t<td>mmns</td>\n\t\t\t<td>缺省单位</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_solidpart</td>\n\t\t\t<td>mmns_part_solid.prt</td>\n\t\t\t<td>缺省零件模板</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_sheetmetalpart</td>\n\t\t\t<td>mmns_part_sheetmetal.prt</td>\n\t\t\t<td>缺省钣金零件模板</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_designasm</td>\n\t\t\t<td>mmns_asm_design.asm</td>\n\t\t\t<td>缺省装配体模板</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\n打印线宽配置文件table.pnt中设置为：\n\n```\npen 1 color 0.0 0.0 0.0; thickness 0.03 cm\npen 2 color 0.0 0.0 0.0; thickness 0.013 cm\npen 3 color 0.0 0.0 0.0; thickness 0.01 cm\npen 4 color 0.0 0.0 0.0; thickness 0.01 cm\npen 5 color 0.0 0.0 0.0; thickness 0.01 cm\npen 6 color 0.0 0.0 0.0; thickness 0.01 cm\npen 7 color 0.0 0.0 0.0; thickness 0.01 cm\npen 8 color 0.0 0.0 0.0; thickness 0.01 cm\n```\n\n工程图配置文件生成方法为：进入绘图模块，菜单“文件” - “属性” - “绘图选项”命令，添加/更改需要选项，然后把文件保存为drw.dtl。\n","source":"_posts/proe5.md","raw":"---\ntitle: 新安装Pro/E后的常用配置\ndate: 2013-03-05 00:00:00\ncategories: Uncategorized\nkeywords: Pro/E常用配置, Pro/E\ndescription: 新安装Pro/E后的常用配置及工程图配置文件生成方法\n---\n\n菜单“工具” - “选项”命令，添加/更改下表选项，然后把工作目录下生成的current_session.pro改名为config.pro。\n\n{% raw %}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>选项</th>\n\t\t\t<th>值</th>\n\t\t\t<th>说明</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>trail_dir</td>\n\t\t\t<td>D:\\proe4\\trail</td>\n\t\t\t<td>设置轨迹文件trail.txt的生成目录</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>web_browser_homepage</td>\n\t\t\t<td>about:blank</td>\n\t\t\t<td>设置浏览器主页为空白页面</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>drawing_setup_file</td>\n\t\t\t<td>D:\\proe4\\work\\drw.dtl</td>\n\t\t\t<td>设置工程图配置文件</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pdf_use_pentable</td>\n\t\t\t<td>yes</td>\n\t\t\t<td>导出PDF图纸时使用系统线宽设置</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pen_table_file</td>\n\t\t\t<td>D:\\proe4\\work\\table.pnt</td>\n\t\t\t<td>设置打印线宽配置文件</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pro_unit_sys</td>\n\t\t\t<td>mmns</td>\n\t\t\t<td>缺省单位</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_solidpart</td>\n\t\t\t<td>mmns_part_solid.prt</td>\n\t\t\t<td>缺省零件模板</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_sheetmetalpart</td>\n\t\t\t<td>mmns_part_sheetmetal.prt</td>\n\t\t\t<td>缺省钣金零件模板</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_designasm</td>\n\t\t\t<td>mmns_asm_design.asm</td>\n\t\t\t<td>缺省装配体模板</td>\n\t\t</tr>\n\t</tbody>\n</table>\n{% endraw %}\n\n打印线宽配置文件table.pnt中设置为：\n\n```\npen 1 color 0.0 0.0 0.0; thickness 0.03 cm\npen 2 color 0.0 0.0 0.0; thickness 0.013 cm\npen 3 color 0.0 0.0 0.0; thickness 0.01 cm\npen 4 color 0.0 0.0 0.0; thickness 0.01 cm\npen 5 color 0.0 0.0 0.0; thickness 0.01 cm\npen 6 color 0.0 0.0 0.0; thickness 0.01 cm\npen 7 color 0.0 0.0 0.0; thickness 0.01 cm\npen 8 color 0.0 0.0 0.0; thickness 0.01 cm\n```\n\n工程图配置文件生成方法为：进入绘图模块，菜单“文件” - “属性” - “绘图选项”命令，添加/更改需要选项，然后把文件保存为drw.dtl。\n","slug":"proe5","published":1,"updated":"2018-12-03T02:28:52.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzc002l3a8ijy1vgu9z","content":"<p>菜单“工具” - “选项”命令，添加/更改下表选项，然后把工作目录下生成的current_session.pro改名为config.pro。</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>选项</th>\n\t\t\t<th>值</th>\n\t\t\t<th>说明</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>trail_dir</td>\n\t\t\t<td>D:\\proe4\\trail</td>\n\t\t\t<td>设置轨迹文件trail.txt的生成目录</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>web_browser_homepage</td>\n\t\t\t<td>about:blank</td>\n\t\t\t<td>设置浏览器主页为空白页面</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>drawing_setup_file</td>\n\t\t\t<td>D:\\proe4\\work\\drw.dtl</td>\n\t\t\t<td>设置工程图配置文件</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pdf_use_pentable</td>\n\t\t\t<td>yes</td>\n\t\t\t<td>导出PDF图纸时使用系统线宽设置</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pen_table_file</td>\n\t\t\t<td>D:\\proe4\\work\\table.pnt</td>\n\t\t\t<td>设置打印线宽配置文件</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pro_unit_sys</td>\n\t\t\t<td>mmns</td>\n\t\t\t<td>缺省单位</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_solidpart</td>\n\t\t\t<td>mmns_part_solid.prt</td>\n\t\t\t<td>缺省零件模板</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_sheetmetalpart</td>\n\t\t\t<td>mmns_part_sheetmetal.prt</td>\n\t\t\t<td>缺省钣金零件模板</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_designasm</td>\n\t\t\t<td>mmns_asm_design.asm</td>\n\t\t\t<td>缺省装配体模板</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>打印线宽配置文件table.pnt中设置为：</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">pen 1 color 0.0 0.0 0.0; thickness 0.03 cm</div><div class=\"line\">pen 2 color 0.0 0.0 0.0; thickness 0.013 cm</div><div class=\"line\">pen 3 color 0.0 0.0 0.0; thickness 0.01 cm</div><div class=\"line\">pen 4 color 0.0 0.0 0.0; thickness 0.01 cm</div><div class=\"line\">pen 5 color 0.0 0.0 0.0; thickness 0.01 cm</div><div class=\"line\">pen 6 color 0.0 0.0 0.0; thickness 0.01 cm</div><div class=\"line\">pen 7 color 0.0 0.0 0.0; thickness 0.01 cm</div><div class=\"line\">pen 8 color 0.0 0.0 0.0; thickness 0.01 cm</div></pre></figure>\n<p>工程图配置文件生成方法为：进入绘图模块，菜单“文件” - “属性” - “绘图选项”命令，添加/更改需要选项，然后把文件保存为drw.dtl。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>菜单“工具” - “选项”命令，添加/更改下表选项，然后把工作目录下生成的current_session.pro改名为config.pro。</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>选项</th>\n\t\t\t<th>值</th>\n\t\t\t<th>说明</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>trail_dir</td>\n\t\t\t<td>D:\\proe4\\trail</td>\n\t\t\t<td>设置轨迹文件trail.txt的生成目录</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>web_browser_homepage</td>\n\t\t\t<td>about:blank</td>\n\t\t\t<td>设置浏览器主页为空白页面</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>drawing_setup_file</td>\n\t\t\t<td>D:\\proe4\\work\\drw.dtl</td>\n\t\t\t<td>设置工程图配置文件</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pdf_use_pentable</td>\n\t\t\t<td>yes</td>\n\t\t\t<td>导出PDF图纸时使用系统线宽设置</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pen_table_file</td>\n\t\t\t<td>D:\\proe4\\work\\table.pnt</td>\n\t\t\t<td>设置打印线宽配置文件</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>pro_unit_sys</td>\n\t\t\t<td>mmns</td>\n\t\t\t<td>缺省单位</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_solidpart</td>\n\t\t\t<td>mmns_part_solid.prt</td>\n\t\t\t<td>缺省零件模板</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_sheetmetalpart</td>\n\t\t\t<td>mmns_part_sheetmetal.prt</td>\n\t\t\t<td>缺省钣金零件模板</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>template_designasm</td>\n\t\t\t<td>mmns_asm_design.asm</td>\n\t\t\t<td>缺省装配体模板</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>打印线宽配置文件table.pnt中设置为：</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">pen 1 color 0.0 0.0 0.0; thickness 0.03 cm</div><div class=\"line\">pen 2 color 0.0 0.0 0.0; thickness 0.013 cm</div><div class=\"line\">pen 3 color 0.0 0.0 0.0; thickness 0.01 cm</div><div class=\"line\">pen 4 color 0.0 0.0 0.0; thickness 0.01 cm</div><div class=\"line\">pen 5 color 0.0 0.0 0.0; thickness 0.01 cm</div><div class=\"line\">pen 6 color 0.0 0.0 0.0; thickness 0.01 cm</div><div class=\"line\">pen 7 color 0.0 0.0 0.0; thickness 0.01 cm</div><div class=\"line\">pen 8 color 0.0 0.0 0.0; thickness 0.01 cm</div></pre></figure>\n<p>工程图配置文件生成方法为：进入绘图模块，菜单“文件” - “属性” - “绘图选项”命令，添加/更改需要选项，然后把文件保存为drw.dtl。</p>\n"},{"title":"可避障的追踪光线机器小车","date":"2012-10-07T16:00:00.000Z","keywords":"追踪光线机器小车, 机器人","description":"在机器小车上配备光敏和接触两种传感器，使其对两种外界刺激都能产生反应","_content":"\n在机器小车上配备光敏和接触两种传感器，使其对两种外界刺激都能产生反应。光敏传感器的电阻值随着照射光线的强度按比例改变，其连续变化的输出信号决定电机的驱动电平。接触传感器为开关量，实现机器小车躲避障碍。\n\n编写程序，使机器小车在追踪光线行进的同时对接触传感器的触发也能产生相应反应：\n\n``` C\nvoid main() {\n    while(1) {\n        /* 右光敏传感器决定左电机转速 */\n        motor(LEFT_MOTOR, normalize(light(RIGHT_EYE)));\n        /* 左光敏传感器决定右电机转速 */\n        motor(RIGHT_MOTOR, normalize(light(LEFT_EYE)));\n\n        /* 检测接触传感器来壁障 */\n        if(sensor(LEFT_TOUCH)) {\n            backward();\n            sleep(.25);\n            right();\n            sleep(.4);\n        }\n        if(sensor(RIGHT_TOUCH)) {\n            backward();\n            sleep(.25);\n            left();\n            sleep(.4);\n        }\n    }\n}\n```\n\n光敏传感器接受的光照越强，输出的读数越小，而这里的电机控制却需要光照越强电机转速越快。控制电机转速的函数motor()，电平值从-100到+100变化，此小车不需要电机反转，仅使用0到+100的变化范围。于是需要将光敏传感器的读数转换为0到100之间的值，其中0代表光线最暗，100代表光线最强。编写读数格式化函数normalize()：\n\n``` C\nint normalize(int light) {\n    /* 定义光敏传感器可能输出的最大和最小读数 */\n    int MAX_LIGHT=10;\n    int MIN_LIGHT=200;\n\n    int output=100-(light- MAX_LIGHT)*100/(MIN_LIGHT-MAX_LIGHT);\n\n    if(output<0) output=0;\n    if(output>100) output=100;\n\n    return output;\n}\n```\n\n由于机器小车的运动速度与外界光强成正比，当外界环境光很弱时小车几乎不能运动也不能正常转弯。在机器小车上加装第三只光敏传感器，使其方向朝上检测环境光强，再将环境光强输出值合成到电机驱动信号中，这样小车运动速度就能保持相对稳定。\n\n<cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite>\n","source":"_posts/robot2.md","raw":"---\ntitle: 可避障的追踪光线机器小车\ndate: 2012-10-08 00:00:00\ncategories: Uncategorized\nkeywords: 追踪光线机器小车, 机器人\ndescription: 在机器小车上配备光敏和接触两种传感器，使其对两种外界刺激都能产生反应\n---\n\n在机器小车上配备光敏和接触两种传感器，使其对两种外界刺激都能产生反应。光敏传感器的电阻值随着照射光线的强度按比例改变，其连续变化的输出信号决定电机的驱动电平。接触传感器为开关量，实现机器小车躲避障碍。\n\n编写程序，使机器小车在追踪光线行进的同时对接触传感器的触发也能产生相应反应：\n\n``` C\nvoid main() {\n    while(1) {\n        /* 右光敏传感器决定左电机转速 */\n        motor(LEFT_MOTOR, normalize(light(RIGHT_EYE)));\n        /* 左光敏传感器决定右电机转速 */\n        motor(RIGHT_MOTOR, normalize(light(LEFT_EYE)));\n\n        /* 检测接触传感器来壁障 */\n        if(sensor(LEFT_TOUCH)) {\n            backward();\n            sleep(.25);\n            right();\n            sleep(.4);\n        }\n        if(sensor(RIGHT_TOUCH)) {\n            backward();\n            sleep(.25);\n            left();\n            sleep(.4);\n        }\n    }\n}\n```\n\n光敏传感器接受的光照越强，输出的读数越小，而这里的电机控制却需要光照越强电机转速越快。控制电机转速的函数motor()，电平值从-100到+100变化，此小车不需要电机反转，仅使用0到+100的变化范围。于是需要将光敏传感器的读数转换为0到100之间的值，其中0代表光线最暗，100代表光线最强。编写读数格式化函数normalize()：\n\n``` C\nint normalize(int light) {\n    /* 定义光敏传感器可能输出的最大和最小读数 */\n    int MAX_LIGHT=10;\n    int MIN_LIGHT=200;\n\n    int output=100-(light- MAX_LIGHT)*100/(MIN_LIGHT-MAX_LIGHT);\n\n    if(output<0) output=0;\n    if(output>100) output=100;\n\n    return output;\n}\n```\n\n由于机器小车的运动速度与外界光强成正比，当外界环境光很弱时小车几乎不能运动也不能正常转弯。在机器小车上加装第三只光敏传感器，使其方向朝上检测环境光强，再将环境光强输出值合成到电机驱动信号中，这样小车运动速度就能保持相对稳定。\n\n<cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite>\n","slug":"robot2","published":1,"updated":"2018-12-03T02:28:52.778Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzd002n3a8i6sfq98m7","content":"<p>在机器小车上配备光敏和接触两种传感器，使其对两种外界刺激都能产生反应。光敏传感器的电阻值随着照射光线的强度按比例改变，其连续变化的输出信号决定电机的驱动电平。接触传感器为开关量，实现机器小车躲避障碍。</p>\n<p>编写程序，使机器小车在追踪光线行进的同时对接触传感器的触发也能产生相应反应：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">/* 右光敏传感器决定左电机转速 */</span></div><div class=\"line\">        motor(LEFT_MOTOR, normalize(light(RIGHT_EYE)));</div><div class=\"line\">        <span class=\"comment\">/* 左光敏传感器决定右电机转速 */</span></div><div class=\"line\">        motor(RIGHT_MOTOR, normalize(light(LEFT_EYE)));</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"comment\">/* 检测接触传感器来壁障 */</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(sensor(LEFT_TOUCH)) &#123;</div><div class=\"line\">            backward();</div><div class=\"line\">            sleep(<span class=\"number\">.25</span>);</div><div class=\"line\">            right();</div><div class=\"line\">            sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(sensor(RIGHT_TOUCH)) &#123;</div><div class=\"line\">            backward();</div><div class=\"line\">            sleep(<span class=\"number\">.25</span>);</div><div class=\"line\">            left();</div><div class=\"line\">            sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>光敏传感器接受的光照越强，输出的读数越小，而这里的电机控制却需要光照越强电机转速越快。控制电机转速的函数motor()，电平值从-100到+100变化，此小车不需要电机反转，仅使用0到+100的变化范围。于是需要将光敏传感器的读数转换为0到100之间的值，其中0代表光线最暗，100代表光线最强。编写读数格式化函数normalize()：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">normalize</span><span class=\"params\">(<span class=\"keyword\">int</span> light)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">/* 定义光敏传感器可能输出的最大和最小读数 */</span></div><div class=\"line\">    <span class=\"keyword\">int</span> MAX_LIGHT=<span class=\"number\">10</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> MIN_LIGHT=<span class=\"number\">200</span>;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">int</span> output=<span class=\"number\">100</span>-(light- MAX_LIGHT)*<span class=\"number\">100</span>/(MIN_LIGHT-MAX_LIGHT);</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">if</span>(output&lt;<span class=\"number\">0</span>) output=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(output&gt;<span class=\"number\">100</span>) output=<span class=\"number\">100</span>;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">return</span> output;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>由于机器小车的运动速度与外界光强成正比，当外界环境光很弱时小车几乎不能运动也不能正常转弯。在机器小车上加装第三只光敏传感器，使其方向朝上检测环境光强，再将环境光强输出值合成到电机驱动信号中，这样小车运动速度就能保持相对稳定。</p>\n<p><cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在机器小车上配备光敏和接触两种传感器，使其对两种外界刺激都能产生反应。光敏传感器的电阻值随着照射光线的强度按比例改变，其连续变化的输出信号决定电机的驱动电平。接触传感器为开关量，实现机器小车躲避障碍。</p>\n<p>编写程序，使机器小车在追踪光线行进的同时对接触传感器的触发也能产生相应反应：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">/* 右光敏传感器决定左电机转速 */</span></div><div class=\"line\">        motor(LEFT_MOTOR, normalize(light(RIGHT_EYE)));</div><div class=\"line\">        <span class=\"comment\">/* 左光敏传感器决定右电机转速 */</span></div><div class=\"line\">        motor(RIGHT_MOTOR, normalize(light(LEFT_EYE)));</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"comment\">/* 检测接触传感器来壁障 */</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(sensor(LEFT_TOUCH)) &#123;</div><div class=\"line\">            backward();</div><div class=\"line\">            sleep(<span class=\"number\">.25</span>);</div><div class=\"line\">            right();</div><div class=\"line\">            sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(sensor(RIGHT_TOUCH)) &#123;</div><div class=\"line\">            backward();</div><div class=\"line\">            sleep(<span class=\"number\">.25</span>);</div><div class=\"line\">            left();</div><div class=\"line\">            sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>光敏传感器接受的光照越强，输出的读数越小，而这里的电机控制却需要光照越强电机转速越快。控制电机转速的函数motor()，电平值从-100到+100变化，此小车不需要电机反转，仅使用0到+100的变化范围。于是需要将光敏传感器的读数转换为0到100之间的值，其中0代表光线最暗，100代表光线最强。编写读数格式化函数normalize()：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">normalize</span><span class=\"params\">(<span class=\"keyword\">int</span> light)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">/* 定义光敏传感器可能输出的最大和最小读数 */</span></div><div class=\"line\">    <span class=\"keyword\">int</span> MAX_LIGHT=<span class=\"number\">10</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> MIN_LIGHT=<span class=\"number\">200</span>;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">int</span> output=<span class=\"number\">100</span>-(light- MAX_LIGHT)*<span class=\"number\">100</span>/(MIN_LIGHT-MAX_LIGHT);</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">if</span>(output&lt;<span class=\"number\">0</span>) output=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(output&gt;<span class=\"number\">100</span>) output=<span class=\"number\">100</span>;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">return</span> output;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>由于机器小车的运动速度与外界光强成正比，当外界环境光很弱时小车几乎不能运动也不能正常转弯。在机器小车上加装第三只光敏传感器，使其方向朝上检测环境光强，再将环境光强输出值合成到电机驱动信号中，这样小车运动速度就能保持相对稳定。</p>\n<p><cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite></p>\n"},{"title":"解决机器小车突发状况","date":"2012-10-09T16:00:00.000Z","keywords":"机器小车避障, 机器人","description":"模仿小虫的飞行，在机器小车的行动中增加一些随机性，使其获得同样的生存优势","_content":"\n自然界中的生物行为总有一定的随机性，如下图在瓶中的小虫被外部烛光吸引的情形。小虫总会朝有光的方向飞行，即便瓶口是打开的，小虫也一直被困在瓶中。然而，某些小虫的飞行行为具有随机性，它们就会有机会从瓶口飞出逃走。\n\n{% img /images/robot/robot31.jpg 275 %}\n\n模仿小虫的飞行，在机器小车的行动中增加一些随机性，使其获得同样的生存优势。这样，当机器小车在追踪光线途中被玻璃等遮挡卡住时，可以逃脱。\n\n``` C\nif(sensor(LEFT_TOUCH)) {\n    backward();\n    sleep(.25);\n    right();\n    if(random(4)==0) {\n        /* 转弯延时0.5到1.49秒 */\n        sleep((float)random(100)/100.+.5);\n    } else {\n        sleep(.4)\n    }\n}\n```\n\n机器小车在运动过程中可能遇到的另一情形是陷入某种循环动作，而不是简单的卡住不动。例如下图，小车向墙角运动，当其左侧接触传感器碰到左侧面墙后（图1），它将后退（图2）并向右转弯（图3），在转弯后前进时右侧接触传感器又碰到右侧面墙（图4），然后小车又后退（图5）并向左转弯（图6），此时小车又回到状态1，重新开始这个过程，如此循环不止。\n\n{% img /images/robot/robot32.jpg 275 %}\n\n除了借鉴动物行为增加随机性运动外，还可以给机器小车增加运动状态检测功能，找出无用的循环状态，然后启动避障功能。\n\n具体地，给程序增加两个参数，一个是碰撞计数器，用于记录连续的碰撞次数；另一个是计时器，用来判断碰撞是否为短时间内连续发生。当程序检测到连续发生5次碰撞，则判断很可能陷入墙角循环，启动避障程序。主程序如下：\n\n``` C\nint LEFT_TOUCH=10;\nint RIGHT_TOUCH=11;\n\nvoid main() {\n    int recent_bumps=0;\n    reset_timer();\n\n    while(1) {\n        forward();\n        if(sensor(LEFT_TOUCH)) {\n            if(timer()<2.) {\n                if(recent_bumps==5) {\n                    random_avoid();\n                    reset_timer();\n                    recent_bumps=0;\n                } else {\n                    left_avoid();\n                    reset_timer();\n                    recent_bumps++;\n                }\n            } else {\n                left_avoid();\n                reset_timer();\n                recent_bumps=1;\n            }\n        }\n\n        if(sensor(RIGHT_TOUCH)) {\n            if(timer()<2.) {\n                if(recent_bumps==5) {\n                    random_avoid();\n                    reset_timer();\n                    recent_bumps=0;\n                } else {\n                    right_avoid();\n                    reset_timer();\n                    recent_bumps++;\n                }\n            } else {\n                right_avoid();\n                reset_timer();\n                recent_bumps=1;\n            }\n        }\n    }\n}\n```\n\n其中，函数reset_timer()的功能是将计时器复位，函数timer()则返回从上次计时器复位到当前经历的时间。\n\n另外，程序中用到的避障函数为：\n\n``` C\nvoid random_avoid() {\n    backward();\n    sleep(.4);\n    if(random(2)==0) left();\n    else right();\n    sleep((float)random(100)/100.+.5);\n}\nvoid left_avoid() {\n    backward();\n    sleep(.4);\n    right();\n    sleep(.4);\n}\nvoid right_avoid() {\n    backward();\n    sleep(.4);\n    left();\n    sleep(.4);\n}\n```\n\n<cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite>\n","source":"_posts/robot3.md","raw":"---\ntitle: 解决机器小车突发状况\ndate: 2012-10-10 00:00:00\ncategories: Uncategorized\nkeywords: 机器小车避障, 机器人\ndescription: 模仿小虫的飞行，在机器小车的行动中增加一些随机性，使其获得同样的生存优势\n---\n\n自然界中的生物行为总有一定的随机性，如下图在瓶中的小虫被外部烛光吸引的情形。小虫总会朝有光的方向飞行，即便瓶口是打开的，小虫也一直被困在瓶中。然而，某些小虫的飞行行为具有随机性，它们就会有机会从瓶口飞出逃走。\n\n{% img /images/robot/robot31.jpg 275 %}\n\n模仿小虫的飞行，在机器小车的行动中增加一些随机性，使其获得同样的生存优势。这样，当机器小车在追踪光线途中被玻璃等遮挡卡住时，可以逃脱。\n\n``` C\nif(sensor(LEFT_TOUCH)) {\n    backward();\n    sleep(.25);\n    right();\n    if(random(4)==0) {\n        /* 转弯延时0.5到1.49秒 */\n        sleep((float)random(100)/100.+.5);\n    } else {\n        sleep(.4)\n    }\n}\n```\n\n机器小车在运动过程中可能遇到的另一情形是陷入某种循环动作，而不是简单的卡住不动。例如下图，小车向墙角运动，当其左侧接触传感器碰到左侧面墙后（图1），它将后退（图2）并向右转弯（图3），在转弯后前进时右侧接触传感器又碰到右侧面墙（图4），然后小车又后退（图5）并向左转弯（图6），此时小车又回到状态1，重新开始这个过程，如此循环不止。\n\n{% img /images/robot/robot32.jpg 275 %}\n\n除了借鉴动物行为增加随机性运动外，还可以给机器小车增加运动状态检测功能，找出无用的循环状态，然后启动避障功能。\n\n具体地，给程序增加两个参数，一个是碰撞计数器，用于记录连续的碰撞次数；另一个是计时器，用来判断碰撞是否为短时间内连续发生。当程序检测到连续发生5次碰撞，则判断很可能陷入墙角循环，启动避障程序。主程序如下：\n\n``` C\nint LEFT_TOUCH=10;\nint RIGHT_TOUCH=11;\n\nvoid main() {\n    int recent_bumps=0;\n    reset_timer();\n\n    while(1) {\n        forward();\n        if(sensor(LEFT_TOUCH)) {\n            if(timer()<2.) {\n                if(recent_bumps==5) {\n                    random_avoid();\n                    reset_timer();\n                    recent_bumps=0;\n                } else {\n                    left_avoid();\n                    reset_timer();\n                    recent_bumps++;\n                }\n            } else {\n                left_avoid();\n                reset_timer();\n                recent_bumps=1;\n            }\n        }\n\n        if(sensor(RIGHT_TOUCH)) {\n            if(timer()<2.) {\n                if(recent_bumps==5) {\n                    random_avoid();\n                    reset_timer();\n                    recent_bumps=0;\n                } else {\n                    right_avoid();\n                    reset_timer();\n                    recent_bumps++;\n                }\n            } else {\n                right_avoid();\n                reset_timer();\n                recent_bumps=1;\n            }\n        }\n    }\n}\n```\n\n其中，函数reset_timer()的功能是将计时器复位，函数timer()则返回从上次计时器复位到当前经历的时间。\n\n另外，程序中用到的避障函数为：\n\n``` C\nvoid random_avoid() {\n    backward();\n    sleep(.4);\n    if(random(2)==0) left();\n    else right();\n    sleep((float)random(100)/100.+.5);\n}\nvoid left_avoid() {\n    backward();\n    sleep(.4);\n    right();\n    sleep(.4);\n}\nvoid right_avoid() {\n    backward();\n    sleep(.4);\n    left();\n    sleep(.4);\n}\n```\n\n<cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite>\n","slug":"robot3","published":1,"updated":"2018-12-03T02:28:52.778Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzf002p3a8ise883br2","content":"<p>自然界中的生物行为总有一定的随机性，如下图在瓶中的小虫被外部烛光吸引的情形。小虫总会朝有光的方向飞行，即便瓶口是打开的，小虫也一直被困在瓶中。然而，某些小虫的飞行行为具有随机性，它们就会有机会从瓶口飞出逃走。</p>\n<img src=\"/images/robot/robot31.jpg\" width=\"275\">\n<p>模仿小虫的飞行，在机器小车的行动中增加一些随机性，使其获得同样的生存优势。这样，当机器小车在追踪光线途中被玻璃等遮挡卡住时，可以逃脱。</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(sensor(LEFT_TOUCH)) &#123;</div><div class=\"line\">    backward();</div><div class=\"line\">    sleep(<span class=\"number\">.25</span>);</div><div class=\"line\">    right();</div><div class=\"line\">    <span class=\"keyword\">if</span>(random(<span class=\"number\">4</span>)==<span class=\"number\">0</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">/* 转弯延时0.5到1.49秒 */</span></div><div class=\"line\">        sleep((<span class=\"keyword\">float</span>)random(<span class=\"number\">100</span>)/<span class=\"number\">100.</span>+<span class=\"number\">.5</span>);</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        sleep(<span class=\"number\">.4</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>机器小车在运动过程中可能遇到的另一情形是陷入某种循环动作，而不是简单的卡住不动。例如下图，小车向墙角运动，当其左侧接触传感器碰到左侧面墙后（图1），它将后退（图2）并向右转弯（图3），在转弯后前进时右侧接触传感器又碰到右侧面墙（图4），然后小车又后退（图5）并向左转弯（图6），此时小车又回到状态1，重新开始这个过程，如此循环不止。</p>\n<img src=\"/images/robot/robot32.jpg\" width=\"275\">\n<p>除了借鉴动物行为增加随机性运动外，还可以给机器小车增加运动状态检测功能，找出无用的循环状态，然后启动避障功能。</p>\n<p>具体地，给程序增加两个参数，一个是碰撞计数器，用于记录连续的碰撞次数；另一个是计时器，用来判断碰撞是否为短时间内连续发生。当程序检测到连续发生5次碰撞，则判断很可能陷入墙角循环，启动避障程序。主程序如下：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"keyword\">int</span> LEFT_TOUCH=<span class=\"number\">10</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> RIGHT_TOUCH=<span class=\"number\">11</span>;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> recent_bumps=<span class=\"number\">0</span>;</div><div class=\"line\">    reset_timer();</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>) &#123;</div><div class=\"line\">        forward();</div><div class=\"line\">        <span class=\"keyword\">if</span>(sensor(LEFT_TOUCH)) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(timer()&lt;<span class=\"number\">2.</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span>(recent_bumps==<span class=\"number\">5</span>) &#123;</div><div class=\"line\">                    random_avoid();</div><div class=\"line\">                    reset_timer();</div><div class=\"line\">                    recent_bumps=<span class=\"number\">0</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    left_avoid();</div><div class=\"line\">                    reset_timer();</div><div class=\"line\">                    recent_bumps++;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                left_avoid();</div><div class=\"line\">                reset_timer();</div><div class=\"line\">                recent_bumps=<span class=\"number\">1</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">if</span>(sensor(RIGHT_TOUCH)) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(timer()&lt;<span class=\"number\">2.</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span>(recent_bumps==<span class=\"number\">5</span>) &#123;</div><div class=\"line\">                    random_avoid();</div><div class=\"line\">                    reset_timer();</div><div class=\"line\">                    recent_bumps=<span class=\"number\">0</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    right_avoid();</div><div class=\"line\">                    reset_timer();</div><div class=\"line\">                    recent_bumps++;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                right_avoid();</div><div class=\"line\">                reset_timer();</div><div class=\"line\">                recent_bumps=<span class=\"number\">1</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>其中，函数reset_timer()的功能是将计时器复位，函数timer()则返回从上次计时器复位到当前经历的时间。</p>\n<p>另外，程序中用到的避障函数为：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">random_avoid</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    backward();</div><div class=\"line\">    sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span>(random(<span class=\"number\">2</span>)==<span class=\"number\">0</span>) left();</div><div class=\"line\">    <span class=\"keyword\">else</span> right();</div><div class=\"line\">    sleep((<span class=\"keyword\">float</span>)random(<span class=\"number\">100</span>)/<span class=\"number\">100.</span>+<span class=\"number\">.5</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">left_avoid</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    backward();</div><div class=\"line\">    sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">    right();</div><div class=\"line\">    sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">right_avoid</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    backward();</div><div class=\"line\">    sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">    left();</div><div class=\"line\">    sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">&#125;</div></pre></figure>\n<p><cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite></p>\n","site":{"data":{}},"excerpt":"","more":"<p>自然界中的生物行为总有一定的随机性，如下图在瓶中的小虫被外部烛光吸引的情形。小虫总会朝有光的方向飞行，即便瓶口是打开的，小虫也一直被困在瓶中。然而，某些小虫的飞行行为具有随机性，它们就会有机会从瓶口飞出逃走。</p>\n<img src=\"/images/robot/robot31.jpg\" width=\"275\">\n<p>模仿小虫的飞行，在机器小车的行动中增加一些随机性，使其获得同样的生存优势。这样，当机器小车在追踪光线途中被玻璃等遮挡卡住时，可以逃脱。</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(sensor(LEFT_TOUCH)) &#123;</div><div class=\"line\">    backward();</div><div class=\"line\">    sleep(<span class=\"number\">.25</span>);</div><div class=\"line\">    right();</div><div class=\"line\">    <span class=\"keyword\">if</span>(random(<span class=\"number\">4</span>)==<span class=\"number\">0</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">/* 转弯延时0.5到1.49秒 */</span></div><div class=\"line\">        sleep((<span class=\"keyword\">float</span>)random(<span class=\"number\">100</span>)/<span class=\"number\">100.</span>+<span class=\"number\">.5</span>);</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        sleep(<span class=\"number\">.4</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>机器小车在运动过程中可能遇到的另一情形是陷入某种循环动作，而不是简单的卡住不动。例如下图，小车向墙角运动，当其左侧接触传感器碰到左侧面墙后（图1），它将后退（图2）并向右转弯（图3），在转弯后前进时右侧接触传感器又碰到右侧面墙（图4），然后小车又后退（图5）并向左转弯（图6），此时小车又回到状态1，重新开始这个过程，如此循环不止。</p>\n<img src=\"/images/robot/robot32.jpg\" width=\"275\">\n<p>除了借鉴动物行为增加随机性运动外，还可以给机器小车增加运动状态检测功能，找出无用的循环状态，然后启动避障功能。</p>\n<p>具体地，给程序增加两个参数，一个是碰撞计数器，用于记录连续的碰撞次数；另一个是计时器，用来判断碰撞是否为短时间内连续发生。当程序检测到连续发生5次碰撞，则判断很可能陷入墙角循环，启动避障程序。主程序如下：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"keyword\">int</span> LEFT_TOUCH=<span class=\"number\">10</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> RIGHT_TOUCH=<span class=\"number\">11</span>;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> recent_bumps=<span class=\"number\">0</span>;</div><div class=\"line\">    reset_timer();</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>) &#123;</div><div class=\"line\">        forward();</div><div class=\"line\">        <span class=\"keyword\">if</span>(sensor(LEFT_TOUCH)) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(timer()&lt;<span class=\"number\">2.</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span>(recent_bumps==<span class=\"number\">5</span>) &#123;</div><div class=\"line\">                    random_avoid();</div><div class=\"line\">                    reset_timer();</div><div class=\"line\">                    recent_bumps=<span class=\"number\">0</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    left_avoid();</div><div class=\"line\">                    reset_timer();</div><div class=\"line\">                    recent_bumps++;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                left_avoid();</div><div class=\"line\">                reset_timer();</div><div class=\"line\">                recent_bumps=<span class=\"number\">1</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">if</span>(sensor(RIGHT_TOUCH)) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(timer()&lt;<span class=\"number\">2.</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span>(recent_bumps==<span class=\"number\">5</span>) &#123;</div><div class=\"line\">                    random_avoid();</div><div class=\"line\">                    reset_timer();</div><div class=\"line\">                    recent_bumps=<span class=\"number\">0</span>;</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    right_avoid();</div><div class=\"line\">                    reset_timer();</div><div class=\"line\">                    recent_bumps++;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                right_avoid();</div><div class=\"line\">                reset_timer();</div><div class=\"line\">                recent_bumps=<span class=\"number\">1</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>其中，函数reset_timer()的功能是将计时器复位，函数timer()则返回从上次计时器复位到当前经历的时间。</p>\n<p>另外，程序中用到的避障函数为：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">random_avoid</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    backward();</div><div class=\"line\">    sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span>(random(<span class=\"number\">2</span>)==<span class=\"number\">0</span>) left();</div><div class=\"line\">    <span class=\"keyword\">else</span> right();</div><div class=\"line\">    sleep((<span class=\"keyword\">float</span>)random(<span class=\"number\">100</span>)/<span class=\"number\">100.</span>+<span class=\"number\">.5</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">left_avoid</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    backward();</div><div class=\"line\">    sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">    right();</div><div class=\"line\">    sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">right_avoid</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    backward();</div><div class=\"line\">    sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">    left();</div><div class=\"line\">    sleep(<span class=\"number\">.4</span>);</div><div class=\"line\">&#125;</div></pre></figure>\n<p><cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite></p>\n"},{"title":"机器人设计的Uncanny Valley理论","date":"2012-11-03T16:00:00.000Z","keywords":"恐怖谷理论, 机器人","description":"“恐怖谷”理论（The uncanny valley）认为，当机器人的相似度逐渐接近人类，但未达到足够逼真时，会引起人类的反感和排斥","_content":"\n“恐怖谷”理论（The uncanny valley）是一个关于人类对机器人感觉的假设，用在机器人、三维动画、心理学等领域。该理论认为，当机器人的相似度逐渐接近人类，但未达到足够逼真时，会引起人类的反感和排斥，这些机器人怪异、恐怖、行尸走肉一般。\n\n{% img /images/robot/robot41.jpg 275 %}\n\n如上图，随着机器人与人类在外表﹑动作上相似度的增加，人类对其好感度也逐渐增加。到达某特定程度后，人类反应会骤降为极度反感，哪怕是机器人与人类的一点点差别，都会显得非常刺目，此时机器人僵硬恐怖，让人有面对僵尸的感觉。可是当机器人的相似度继续增加，穿越“恐怖谷”后，人类对它的情感反应又会重新变回正面。\n\n“恐怖谷”现象可以这样来解释，如果机器人充分地“不够拟人”，那它的类人特征就会非常容易辨认。但是如果它“非常拟人”，那它的非类人特征就会抢眼，在人类观察者眼中产生古怪的感觉。另外，一些类人机器人跟病患或尸体有视觉上的畸形相似，会引起观察者的惊慌和情绪剧变。这种对机器人的反应会比对尸体的反应更为糟糕，因为人们清楚自己对尸体产生厌恶感觉的原因，但却不了解自己为何对机器人产生了这种厌恶。\n\n为了避免“恐怖谷”的出现，在机器人设计中可遵循下面几项原则：\n\n- 机器人设计在图示曲线的两端，或者突出其物性，或者追求极度逼真性，从而避开“恐怖谷”；\n- 机器人的各项设计元素的逼真程度应该一致，若机器人在外观上与人类似，其动作行为也要同等程度拟人；\n- 通过外表、行为、能力三方面的统一，来消除矛盾和不确定性；\n- 机器人的面部器官比例类人时，其皮肤材质也应达到相应的逼真度。\n\n更多信息见：http://en.wikipedia.org/wiki/Uncanny_valley\n","source":"_posts/robot4.md","raw":"---\ntitle: 机器人设计的Uncanny Valley理论\ndate: 2012-11-04 00:00:00\ncategories: Uncategorized\nkeywords: 恐怖谷理论, 机器人\ndescription: “恐怖谷”理论（The uncanny valley）认为，当机器人的相似度逐渐接近人类，但未达到足够逼真时，会引起人类的反感和排斥\n---\n\n“恐怖谷”理论（The uncanny valley）是一个关于人类对机器人感觉的假设，用在机器人、三维动画、心理学等领域。该理论认为，当机器人的相似度逐渐接近人类，但未达到足够逼真时，会引起人类的反感和排斥，这些机器人怪异、恐怖、行尸走肉一般。\n\n{% img /images/robot/robot41.jpg 275 %}\n\n如上图，随着机器人与人类在外表﹑动作上相似度的增加，人类对其好感度也逐渐增加。到达某特定程度后，人类反应会骤降为极度反感，哪怕是机器人与人类的一点点差别，都会显得非常刺目，此时机器人僵硬恐怖，让人有面对僵尸的感觉。可是当机器人的相似度继续增加，穿越“恐怖谷”后，人类对它的情感反应又会重新变回正面。\n\n“恐怖谷”现象可以这样来解释，如果机器人充分地“不够拟人”，那它的类人特征就会非常容易辨认。但是如果它“非常拟人”，那它的非类人特征就会抢眼，在人类观察者眼中产生古怪的感觉。另外，一些类人机器人跟病患或尸体有视觉上的畸形相似，会引起观察者的惊慌和情绪剧变。这种对机器人的反应会比对尸体的反应更为糟糕，因为人们清楚自己对尸体产生厌恶感觉的原因，但却不了解自己为何对机器人产生了这种厌恶。\n\n为了避免“恐怖谷”的出现，在机器人设计中可遵循下面几项原则：\n\n- 机器人设计在图示曲线的两端，或者突出其物性，或者追求极度逼真性，从而避开“恐怖谷”；\n- 机器人的各项设计元素的逼真程度应该一致，若机器人在外观上与人类似，其动作行为也要同等程度拟人；\n- 通过外表、行为、能力三方面的统一，来消除矛盾和不确定性；\n- 机器人的面部器官比例类人时，其皮肤材质也应达到相应的逼真度。\n\n更多信息见：http://en.wikipedia.org/wiki/Uncanny_valley\n","slug":"robot4","published":1,"updated":"2019-01-04T01:55:39.753Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzg002r3a8iqztl6q5i","content":"<p>“恐怖谷”理论（The uncanny valley）是一个关于人类对机器人感觉的假设，用在机器人、三维动画、心理学等领域。该理论认为，当机器人的相似度逐渐接近人类，但未达到足够逼真时，会引起人类的反感和排斥，这些机器人怪异、恐怖、行尸走肉一般。</p>\n<img src=\"/images/robot/robot41.jpg\" width=\"275\">\n<p>如上图，随着机器人与人类在外表﹑动作上相似度的增加，人类对其好感度也逐渐增加。到达某特定程度后，人类反应会骤降为极度反感，哪怕是机器人与人类的一点点差别，都会显得非常刺目，此时机器人僵硬恐怖，让人有面对僵尸的感觉。可是当机器人的相似度继续增加，穿越“恐怖谷”后，人类对它的情感反应又会重新变回正面。</p>\n<p>“恐怖谷”现象可以这样来解释，如果机器人充分地“不够拟人”，那它的类人特征就会非常容易辨认。但是如果它“非常拟人”，那它的非类人特征就会抢眼，在人类观察者眼中产生古怪的感觉。另外，一些类人机器人跟病患或尸体有视觉上的畸形相似，会引起观察者的惊慌和情绪剧变。这种对机器人的反应会比对尸体的反应更为糟糕，因为人们清楚自己对尸体产生厌恶感觉的原因，但却不了解自己为何对机器人产生了这种厌恶。</p>\n<p>为了避免“恐怖谷”的出现，在机器人设计中可遵循下面几项原则：</p>\n<ul>\n<li>机器人设计在图示曲线的两端，或者突出其物性，或者追求极度逼真性，从而避开“恐怖谷”；</li>\n<li>机器人的各项设计元素的逼真程度应该一致，若机器人在外观上与人类似，其动作行为也要同等程度拟人；</li>\n<li>通过外表、行为、能力三方面的统一，来消除矛盾和不确定性；</li>\n<li>机器人的面部器官比例类人时，其皮肤材质也应达到相应的逼真度。</li>\n</ul>\n<p>更多信息见：<a href=\"http://en.wikipedia.org/wiki/Uncanny_valley\" target=\"_blank\" rel=\"noopener\">http://en.wikipedia.org/wiki/Uncanny_valley</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>“恐怖谷”理论（The uncanny valley）是一个关于人类对机器人感觉的假设，用在机器人、三维动画、心理学等领域。该理论认为，当机器人的相似度逐渐接近人类，但未达到足够逼真时，会引起人类的反感和排斥，这些机器人怪异、恐怖、行尸走肉一般。</p>\n<img src=\"/images/robot/robot41.jpg\" width=\"275\">\n<p>如上图，随着机器人与人类在外表﹑动作上相似度的增加，人类对其好感度也逐渐增加。到达某特定程度后，人类反应会骤降为极度反感，哪怕是机器人与人类的一点点差别，都会显得非常刺目，此时机器人僵硬恐怖，让人有面对僵尸的感觉。可是当机器人的相似度继续增加，穿越“恐怖谷”后，人类对它的情感反应又会重新变回正面。</p>\n<p>“恐怖谷”现象可以这样来解释，如果机器人充分地“不够拟人”，那它的类人特征就会非常容易辨认。但是如果它“非常拟人”，那它的非类人特征就会抢眼，在人类观察者眼中产生古怪的感觉。另外，一些类人机器人跟病患或尸体有视觉上的畸形相似，会引起观察者的惊慌和情绪剧变。这种对机器人的反应会比对尸体的反应更为糟糕，因为人们清楚自己对尸体产生厌恶感觉的原因，但却不了解自己为何对机器人产生了这种厌恶。</p>\n<p>为了避免“恐怖谷”的出现，在机器人设计中可遵循下面几项原则：</p>\n<ul>\n<li>机器人设计在图示曲线的两端，或者突出其物性，或者追求极度逼真性，从而避开“恐怖谷”；</li>\n<li>机器人的各项设计元素的逼真程度应该一致，若机器人在外观上与人类似，其动作行为也要同等程度拟人；</li>\n<li>通过外表、行为、能力三方面的统一，来消除矛盾和不确定性；</li>\n<li>机器人的面部器官比例类人时，其皮肤材质也应达到相应的逼真度。</li>\n</ul>\n<p>更多信息见：<a href=\"http://en.wikipedia.org/wiki/Uncanny_valley\" target=\"_blank\" rel=\"noopener\">http://en.wikipedia.org/wiki/Uncanny_valley</a></p>\n"},{"title":"第一台机器小车","date":"2012-10-01T16:00:00.000Z","keywords":"机器小车, 机器人","description":"单个电机的控制、传感器的使用，机器小车的5种基本运动模块，以及通过传感器反馈控制机器小车的方法","_content":"\n第一台机器小车是由左右两个电机驱动的机器人原型。本文简要描述了单个电机的控制、传感器的使用，机器小车的5种基本运动模块，以及通过传感器反馈控制机器小车的方法。\n\n## 1. 电机、传感器等的基本定义\n\n电机（当位于端口0时）正向转动：\n\n``` C\nfd(0);\n```\n\n电机反向转动：\n\n``` C\nbk(0);\n```\n\n电机停止转动：\n\n``` C\noff(0);\n```\n\n电机转速控制，第一个参数为端口值，第二个为电平值。电平值从-100到+100变化，其中-100代表电机全速反转，0代表电机停转，+100代表全速正转。如正向半速转动：\n\n``` C\nmotor(0,50);\n```\n\n传感器（当位于端口15时），开关量，闭合返回“真/1”，断开返回“假/0”：\n\n``` C\nsensor(15);\n```\n\n系统等待/延时（2秒）：\n\n``` C\nsleep(2.0);\n```\n\n## 2. 机器小车的5种基本运动模块\n\n机器小车的复杂动作均可由一些基本的运动模块组合实现，例如前进模块、后退模块、转弯模块等。事先创建好这些模块，方便后面直接调用。\n\n- 前进，即两个电机同时正向转动\n- 后退，即两个电机同时反向转动\n- 左转，右侧电机正向转动，左侧电机反向转动\n- 右转，左侧电机正向转动，右侧电机反向转动\n- 停止，即两个电机同时停止转动\n\n编写定义下面5种基本运动函数，其中LEFT\\_MOTOR和RIGHT\\_MOTOR为左右车轮电机对应的端口：\n\n``` C\nint LEFT_MOTOR=0;\nint RIGHT_MOTOR=3;\n\nvoid forward() {\n    fd(LEFT_MOTOR);\n    fd(RIGHT_MOTOR);\n}\nvoid backward() {\n    bk(LEFT_MOTOR);\n    bk(RIGHT_MOTOR);\n}\nvoid right() {\n    fd(LEFT_MOTOR);\n    bk(RIGHT_MOTOR);\n}\nvoid left() {\n    bk(LEFT_MOTOR);\n    fd(RIGHT_MOTOR);\n}\nvoid stop() {\n    off(LEFT_MOTOR);\n    off(RIGHT_MOTOR);\n}\n```\n\n## 3. 通过传感器反馈控制机器小车\n\n下图为双电机与双传感器小车，其传感器与电机信号采用正比控制关系，即传感器离光源越近，与其连接的电机转速越快。\n\n{% img /images/robot/robot11.jpg 275 %}\n\n负反馈通常能将系统引导到目标状态。第一辆小车的传感器交叉连接电机，如图示，由于左侧传感器距离光源更近，它将接受比右侧传感器更强的刺激，从而驱动右侧电机以更快速度转动，使小车向左侧转动，朝光源方向移动。通过连续的矫正行为，最终找到光源。\n\n正反馈通常能使系统远离稳定状态。第二辆小车改变传感器与电机的连接方式，如图示，同理，小车向右侧转动，远离光源，奔向黑暗。\n\n<cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite>\n","source":"_posts/robot1.md","raw":"---\ntitle: 第一台机器小车\ndate: 2012-10-02 00:00:00\ncategories: Uncategorized\nkeywords: 机器小车, 机器人\ndescription: 单个电机的控制、传感器的使用，机器小车的5种基本运动模块，以及通过传感器反馈控制机器小车的方法\n---\n\n第一台机器小车是由左右两个电机驱动的机器人原型。本文简要描述了单个电机的控制、传感器的使用，机器小车的5种基本运动模块，以及通过传感器反馈控制机器小车的方法。\n\n## 1. 电机、传感器等的基本定义\n\n电机（当位于端口0时）正向转动：\n\n``` C\nfd(0);\n```\n\n电机反向转动：\n\n``` C\nbk(0);\n```\n\n电机停止转动：\n\n``` C\noff(0);\n```\n\n电机转速控制，第一个参数为端口值，第二个为电平值。电平值从-100到+100变化，其中-100代表电机全速反转，0代表电机停转，+100代表全速正转。如正向半速转动：\n\n``` C\nmotor(0,50);\n```\n\n传感器（当位于端口15时），开关量，闭合返回“真/1”，断开返回“假/0”：\n\n``` C\nsensor(15);\n```\n\n系统等待/延时（2秒）：\n\n``` C\nsleep(2.0);\n```\n\n## 2. 机器小车的5种基本运动模块\n\n机器小车的复杂动作均可由一些基本的运动模块组合实现，例如前进模块、后退模块、转弯模块等。事先创建好这些模块，方便后面直接调用。\n\n- 前进，即两个电机同时正向转动\n- 后退，即两个电机同时反向转动\n- 左转，右侧电机正向转动，左侧电机反向转动\n- 右转，左侧电机正向转动，右侧电机反向转动\n- 停止，即两个电机同时停止转动\n\n编写定义下面5种基本运动函数，其中LEFT\\_MOTOR和RIGHT\\_MOTOR为左右车轮电机对应的端口：\n\n``` C\nint LEFT_MOTOR=0;\nint RIGHT_MOTOR=3;\n\nvoid forward() {\n    fd(LEFT_MOTOR);\n    fd(RIGHT_MOTOR);\n}\nvoid backward() {\n    bk(LEFT_MOTOR);\n    bk(RIGHT_MOTOR);\n}\nvoid right() {\n    fd(LEFT_MOTOR);\n    bk(RIGHT_MOTOR);\n}\nvoid left() {\n    bk(LEFT_MOTOR);\n    fd(RIGHT_MOTOR);\n}\nvoid stop() {\n    off(LEFT_MOTOR);\n    off(RIGHT_MOTOR);\n}\n```\n\n## 3. 通过传感器反馈控制机器小车\n\n下图为双电机与双传感器小车，其传感器与电机信号采用正比控制关系，即传感器离光源越近，与其连接的电机转速越快。\n\n{% img /images/robot/robot11.jpg 275 %}\n\n负反馈通常能将系统引导到目标状态。第一辆小车的传感器交叉连接电机，如图示，由于左侧传感器距离光源更近，它将接受比右侧传感器更强的刺激，从而驱动右侧电机以更快速度转动，使小车向左侧转动，朝光源方向移动。通过连续的矫正行为，最终找到光源。\n\n正反馈通常能使系统远离稳定状态。第二辆小车改变传感器与电机的连接方式，如图示，同理，小车向右侧转动，远离光源，奔向黑暗。\n\n<cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite>\n","slug":"robot1","published":1,"updated":"2018-12-03T02:28:52.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzh002t3a8izszgcwiz","content":"<p>第一台机器小车是由左右两个电机驱动的机器人原型。本文简要描述了单个电机的控制、传感器的使用，机器小车的5种基本运动模块，以及通过传感器反馈控制机器小车的方法。</p>\n<h2 id=\"1-电机、传感器等的基本定义\"><a href=\"#1-电机、传感器等的基本定义\" class=\"headerlink\" title=\"1. 电机、传感器等的基本定义\"></a>1. 电机、传感器等的基本定义</h2><p>电机（当位于端口0时）正向转动：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">fd(<span class=\"number\">0</span>);</div></pre></figure>\n<p>电机反向转动：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">bk(<span class=\"number\">0</span>);</div></pre></figure>\n<p>电机停止转动：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">off(<span class=\"number\">0</span>);</div></pre></figure>\n<p>电机转速控制，第一个参数为端口值，第二个为电平值。电平值从-100到+100变化，其中-100代表电机全速反转，0代表电机停转，+100代表全速正转。如正向半速转动：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">motor(<span class=\"number\">0</span>,<span class=\"number\">50</span>);</div></pre></figure>\n<p>传感器（当位于端口15时），开关量，闭合返回“真/1”，断开返回“假/0”：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">sensor(<span class=\"number\">15</span>);</div></pre></figure>\n<p>系统等待/延时（2秒）：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">sleep(<span class=\"number\">2.0</span>);</div></pre></figure>\n<h2 id=\"2-机器小车的5种基本运动模块\"><a href=\"#2-机器小车的5种基本运动模块\" class=\"headerlink\" title=\"2. 机器小车的5种基本运动模块\"></a>2. 机器小车的5种基本运动模块</h2><p>机器小车的复杂动作均可由一些基本的运动模块组合实现，例如前进模块、后退模块、转弯模块等。事先创建好这些模块，方便后面直接调用。</p>\n<ul>\n<li>前进，即两个电机同时正向转动</li>\n<li>后退，即两个电机同时反向转动</li>\n<li>左转，右侧电机正向转动，左侧电机反向转动</li>\n<li>右转，左侧电机正向转动，右侧电机反向转动</li>\n<li>停止，即两个电机同时停止转动</li>\n</ul>\n<p>编写定义下面5种基本运动函数，其中LEFT_MOTOR和RIGHT_MOTOR为左右车轮电机对应的端口：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"keyword\">int</span> LEFT_MOTOR=<span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> RIGHT_MOTOR=<span class=\"number\">3</span>;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">forward</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    fd(LEFT_MOTOR);</div><div class=\"line\">    fd(RIGHT_MOTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">backward</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    bk(LEFT_MOTOR);</div><div class=\"line\">    bk(RIGHT_MOTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">right</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    fd(LEFT_MOTOR);</div><div class=\"line\">    bk(RIGHT_MOTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">left</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    bk(LEFT_MOTOR);</div><div class=\"line\">    fd(RIGHT_MOTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    off(LEFT_MOTOR);</div><div class=\"line\">    off(RIGHT_MOTOR);</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"3-通过传感器反馈控制机器小车\"><a href=\"#3-通过传感器反馈控制机器小车\" class=\"headerlink\" title=\"3. 通过传感器反馈控制机器小车\"></a>3. 通过传感器反馈控制机器小车</h2><p>下图为双电机与双传感器小车，其传感器与电机信号采用正比控制关系，即传感器离光源越近，与其连接的电机转速越快。</p>\n<img src=\"/images/robot/robot11.jpg\" width=\"275\">\n<p>负反馈通常能将系统引导到目标状态。第一辆小车的传感器交叉连接电机，如图示，由于左侧传感器距离光源更近，它将接受比右侧传感器更强的刺激，从而驱动右侧电机以更快速度转动，使小车向左侧转动，朝光源方向移动。通过连续的矫正行为，最终找到光源。</p>\n<p>正反馈通常能使系统远离稳定状态。第二辆小车改变传感器与电机的连接方式，如图示，同理，小车向右侧转动，远离光源，奔向黑暗。</p>\n<p><cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite></p>\n","site":{"data":{}},"excerpt":"","more":"<p>第一台机器小车是由左右两个电机驱动的机器人原型。本文简要描述了单个电机的控制、传感器的使用，机器小车的5种基本运动模块，以及通过传感器反馈控制机器小车的方法。</p>\n<h2 id=\"1-电机、传感器等的基本定义\"><a href=\"#1-电机、传感器等的基本定义\" class=\"headerlink\" title=\"1. 电机、传感器等的基本定义\"></a>1. 电机、传感器等的基本定义</h2><p>电机（当位于端口0时）正向转动：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">fd(<span class=\"number\">0</span>);</div></pre></figure>\n<p>电机反向转动：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">bk(<span class=\"number\">0</span>);</div></pre></figure>\n<p>电机停止转动：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">off(<span class=\"number\">0</span>);</div></pre></figure>\n<p>电机转速控制，第一个参数为端口值，第二个为电平值。电平值从-100到+100变化，其中-100代表电机全速反转，0代表电机停转，+100代表全速正转。如正向半速转动：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">motor(<span class=\"number\">0</span>,<span class=\"number\">50</span>);</div></pre></figure>\n<p>传感器（当位于端口15时），开关量，闭合返回“真/1”，断开返回“假/0”：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">sensor(<span class=\"number\">15</span>);</div></pre></figure>\n<p>系统等待/延时（2秒）：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\">sleep(<span class=\"number\">2.0</span>);</div></pre></figure>\n<h2 id=\"2-机器小车的5种基本运动模块\"><a href=\"#2-机器小车的5种基本运动模块\" class=\"headerlink\" title=\"2. 机器小车的5种基本运动模块\"></a>2. 机器小车的5种基本运动模块</h2><p>机器小车的复杂动作均可由一些基本的运动模块组合实现，例如前进模块、后退模块、转弯模块等。事先创建好这些模块，方便后面直接调用。</p>\n<ul>\n<li>前进，即两个电机同时正向转动</li>\n<li>后退，即两个电机同时反向转动</li>\n<li>左转，右侧电机正向转动，左侧电机反向转动</li>\n<li>右转，左侧电机正向转动，右侧电机反向转动</li>\n<li>停止，即两个电机同时停止转动</li>\n</ul>\n<p>编写定义下面5种基本运动函数，其中LEFT_MOTOR和RIGHT_MOTOR为左右车轮电机对应的端口：</p>\n<figure class=\"highlight c\"><pre><div class=\"line\"><span class=\"keyword\">int</span> LEFT_MOTOR=<span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> RIGHT_MOTOR=<span class=\"number\">3</span>;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">forward</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    fd(LEFT_MOTOR);</div><div class=\"line\">    fd(RIGHT_MOTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">backward</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    bk(LEFT_MOTOR);</div><div class=\"line\">    bk(RIGHT_MOTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">right</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    fd(LEFT_MOTOR);</div><div class=\"line\">    bk(RIGHT_MOTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">left</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    bk(LEFT_MOTOR);</div><div class=\"line\">    fd(RIGHT_MOTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    off(LEFT_MOTOR);</div><div class=\"line\">    off(RIGHT_MOTOR);</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"3-通过传感器反馈控制机器小车\"><a href=\"#3-通过传感器反馈控制机器小车\" class=\"headerlink\" title=\"3. 通过传感器反馈控制机器小车\"></a>3. 通过传感器反馈控制机器小车</h2><p>下图为双电机与双传感器小车，其传感器与电机信号采用正比控制关系，即传感器离光源越近，与其连接的电机转速越快。</p>\n<img src=\"/images/robot/robot11.jpg\" width=\"275\">\n<p>负反馈通常能将系统引导到目标状态。第一辆小车的传感器交叉连接电机，如图示，由于左侧传感器距离光源更近，它将接受比右侧传感器更强的刺激，从而驱动右侧电机以更快速度转动，使小车向左侧转动，朝光源方向移动。通过连续的矫正行为，最终找到光源。</p>\n<p>正反馈通常能使系统远离稳定状态。第二辆小车改变传感器与电机的连接方式，如图示，同理，小车向右侧转动，远离光源，奔向黑暗。</p>\n<p><cite>参考：Fred G.Martin. 机器人探索：工程实践指南. 电子工业出版社. 2004</cite></p>\n"},{"title":"蛇形机器人关节结构设计","date":"2012-11-05T16:00:00.000Z","keywords":"蛇形机器人, 机器人","description":"两栖蛇形机器人ACM-R5，它不仅能在陆地爬行，还能在水中游动","_content":"\n蛇形机器人是仿生机器人家族中的一员，具有生物蛇的运动机理和行为方式，适应各种地形，并可攀爬障碍物，在许多领域具有广泛应用前景。\n\n蛇靠身体的变形与地面作用产生驱动力，最典型的运动方式为S形蜿蜒运动，即借助身体侧面接触凸凹不平的地面从而产生前进力，这种运动方式普遍而高效。\n\n[东京工业大学机器人实验室](http://www-robot.mes.titech.ac.jp)研制了一种两栖蛇形机器人ACM-R5，它不仅能在陆地爬行，还能在水中游动。\n\nACM-R5采用模块化设计，所有关节结构相同，不仅节约设计和加工成本，而且便于维护。\n\nACM-R5的关节设计巧妙，每个关节有两个自由度，由两个伺服电机带动十字转轴上的齿轮来转动。关节由伸缩膜覆盖来防水，关节连接处用O型圈密封，具体机械结构如下图示：\n\n{% img /images/robot/robot52.jpg 275 %}\n\n{% img /images/robot/robot51.jpg 275 %}\n","source":"_posts/robot5.md","raw":"---\ntitle: 蛇形机器人关节结构设计\ndate: 2012-11-06 00:00:00\ncategories: Uncategorized\nkeywords: 蛇形机器人, 机器人\ndescription: 两栖蛇形机器人ACM-R5，它不仅能在陆地爬行，还能在水中游动\n---\n\n蛇形机器人是仿生机器人家族中的一员，具有生物蛇的运动机理和行为方式，适应各种地形，并可攀爬障碍物，在许多领域具有广泛应用前景。\n\n蛇靠身体的变形与地面作用产生驱动力，最典型的运动方式为S形蜿蜒运动，即借助身体侧面接触凸凹不平的地面从而产生前进力，这种运动方式普遍而高效。\n\n[东京工业大学机器人实验室](http://www-robot.mes.titech.ac.jp)研制了一种两栖蛇形机器人ACM-R5，它不仅能在陆地爬行，还能在水中游动。\n\nACM-R5采用模块化设计，所有关节结构相同，不仅节约设计和加工成本，而且便于维护。\n\nACM-R5的关节设计巧妙，每个关节有两个自由度，由两个伺服电机带动十字转轴上的齿轮来转动。关节由伸缩膜覆盖来防水，关节连接处用O型圈密封，具体机械结构如下图示：\n\n{% img /images/robot/robot52.jpg 275 %}\n\n{% img /images/robot/robot51.jpg 275 %}\n","slug":"robot5","published":1,"updated":"2018-12-03T02:28:52.779Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzi002v3a8ijdgcwnpm","content":"<p>蛇形机器人是仿生机器人家族中的一员，具有生物蛇的运动机理和行为方式，适应各种地形，并可攀爬障碍物，在许多领域具有广泛应用前景。</p>\n<p>蛇靠身体的变形与地面作用产生驱动力，最典型的运动方式为S形蜿蜒运动，即借助身体侧面接触凸凹不平的地面从而产生前进力，这种运动方式普遍而高效。</p>\n<p><a href=\"http://www-robot.mes.titech.ac.jp\" target=\"_blank\" rel=\"noopener\">东京工业大学机器人实验室</a>研制了一种两栖蛇形机器人ACM-R5，它不仅能在陆地爬行，还能在水中游动。</p>\n<p>ACM-R5采用模块化设计，所有关节结构相同，不仅节约设计和加工成本，而且便于维护。</p>\n<p>ACM-R5的关节设计巧妙，每个关节有两个自由度，由两个伺服电机带动十字转轴上的齿轮来转动。关节由伸缩膜覆盖来防水，关节连接处用O型圈密封，具体机械结构如下图示：</p>\n<img src=\"/images/robot/robot52.jpg\" width=\"275\">\n<img src=\"/images/robot/robot51.jpg\" width=\"275\">\n","site":{"data":{}},"excerpt":"","more":"<p>蛇形机器人是仿生机器人家族中的一员，具有生物蛇的运动机理和行为方式，适应各种地形，并可攀爬障碍物，在许多领域具有广泛应用前景。</p>\n<p>蛇靠身体的变形与地面作用产生驱动力，最典型的运动方式为S形蜿蜒运动，即借助身体侧面接触凸凹不平的地面从而产生前进力，这种运动方式普遍而高效。</p>\n<p><a href=\"http://www-robot.mes.titech.ac.jp\" target=\"_blank\" rel=\"noopener\">东京工业大学机器人实验室</a>研制了一种两栖蛇形机器人ACM-R5，它不仅能在陆地爬行，还能在水中游动。</p>\n<p>ACM-R5采用模块化设计，所有关节结构相同，不仅节约设计和加工成本，而且便于维护。</p>\n<p>ACM-R5的关节设计巧妙，每个关节有两个自由度，由两个伺服电机带动十字转轴上的齿轮来转动。关节由伸缩膜覆盖来防水，关节连接处用O型圈密封，具体机械结构如下图示：</p>\n<img src=\"/images/robot/robot52.jpg\" width=\"275\">\n<img src=\"/images/robot/robot51.jpg\" width=\"275\">\n"},{"title":"防倾覆和侧滑的机器人脚部结构设计","date":"2012-11-27T16:00:00.000Z","keywords":"机器人脚部结构设计, 机器人","description":"机器人脚部结构设计，自动调节机器人重心、缓减脚部着地冲击、增加摩擦，防止侧滑","_content":"\n双足机器人步行时，左右脚交替地落地支撑，形成一个不断移动和变化的支撑面，如果在行走过程中，整个机器人的重心在地面上的投影点始终保持在支撑面内，就可以保证机器人不绕其支撑脚边缘倾覆。\n\n另外，双足稳定步行还需保证处于支撑状态的脚与地面相对瞬时静止,使机器人在步行过程中不至发生侧向滑动。\n\n一般的解决办法是用陀螺仪测得重心偏差，反馈给舵机调整步态。\n\n而本文提出一种巧妙的机器人脚部结构设计，可实现如下功能：\n\n- 自动调节机器人重心\n- 缓减脚部着地冲击\n- 增加摩擦，防止侧滑\n\n具体结构如下图示，两根受力接触杆为半椭圆形，在脚后跟处分别与等臂杠杆两端铰接，等臂杠杆与中间支架铰接，两接触杆铰链处与脚底板之间安装弹簧。\n\n{% img /images/robot/robot61.jpg 275 %}\n\n身体外侧的接触杆椭圆半径比内侧大，其高度低于内侧，故而落地支撑下压时机器人身体向外侧倾斜。这样在双足机器人步行时，左右脚交替落地支撑，可以调整身体左右摆动，调整重心。\n\n两根弹簧构成的柔软后跟可以减缓脚部着地冲击带来的不稳定性。\n\n接触杆有橡胶涂层，增加脚部与地面摩擦力，防止机器人单脚支撑时侧滑。\n\n双足机器人步行体态和重心路径见下面示意图：\n\n{% img /images/robot/robot62.jpg 275 %}\n\n<cite>参考：Steven H. Collins. A Three-Dimensional Passive-Dynamic Walking Robot with Two Legs and Knees</cite>\n","source":"_posts/robot6.md","raw":"---\ntitle: 防倾覆和侧滑的机器人脚部结构设计\ndate: 2012-11-28 00:00:00\ncategories: Uncategorized\nkeywords: 机器人脚部结构设计, 机器人\ndescription: 机器人脚部结构设计，自动调节机器人重心、缓减脚部着地冲击、增加摩擦，防止侧滑\n---\n\n双足机器人步行时，左右脚交替地落地支撑，形成一个不断移动和变化的支撑面，如果在行走过程中，整个机器人的重心在地面上的投影点始终保持在支撑面内，就可以保证机器人不绕其支撑脚边缘倾覆。\n\n另外，双足稳定步行还需保证处于支撑状态的脚与地面相对瞬时静止,使机器人在步行过程中不至发生侧向滑动。\n\n一般的解决办法是用陀螺仪测得重心偏差，反馈给舵机调整步态。\n\n而本文提出一种巧妙的机器人脚部结构设计，可实现如下功能：\n\n- 自动调节机器人重心\n- 缓减脚部着地冲击\n- 增加摩擦，防止侧滑\n\n具体结构如下图示，两根受力接触杆为半椭圆形，在脚后跟处分别与等臂杠杆两端铰接，等臂杠杆与中间支架铰接，两接触杆铰链处与脚底板之间安装弹簧。\n\n{% img /images/robot/robot61.jpg 275 %}\n\n身体外侧的接触杆椭圆半径比内侧大，其高度低于内侧，故而落地支撑下压时机器人身体向外侧倾斜。这样在双足机器人步行时，左右脚交替落地支撑，可以调整身体左右摆动，调整重心。\n\n两根弹簧构成的柔软后跟可以减缓脚部着地冲击带来的不稳定性。\n\n接触杆有橡胶涂层，增加脚部与地面摩擦力，防止机器人单脚支撑时侧滑。\n\n双足机器人步行体态和重心路径见下面示意图：\n\n{% img /images/robot/robot62.jpg 275 %}\n\n<cite>参考：Steven H. Collins. A Three-Dimensional Passive-Dynamic Walking Robot with Two Legs and Knees</cite>\n","slug":"robot6","published":1,"updated":"2018-12-03T02:28:52.779Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzj002x3a8ih4v82ofj","content":"<p>双足机器人步行时，左右脚交替地落地支撑，形成一个不断移动和变化的支撑面，如果在行走过程中，整个机器人的重心在地面上的投影点始终保持在支撑面内，就可以保证机器人不绕其支撑脚边缘倾覆。</p>\n<p>另外，双足稳定步行还需保证处于支撑状态的脚与地面相对瞬时静止,使机器人在步行过程中不至发生侧向滑动。</p>\n<p>一般的解决办法是用陀螺仪测得重心偏差，反馈给舵机调整步态。</p>\n<p>而本文提出一种巧妙的机器人脚部结构设计，可实现如下功能：</p>\n<ul>\n<li>自动调节机器人重心</li>\n<li>缓减脚部着地冲击</li>\n<li>增加摩擦，防止侧滑</li>\n</ul>\n<p>具体结构如下图示，两根受力接触杆为半椭圆形，在脚后跟处分别与等臂杠杆两端铰接，等臂杠杆与中间支架铰接，两接触杆铰链处与脚底板之间安装弹簧。</p>\n<img src=\"/images/robot/robot61.jpg\" width=\"275\">\n<p>身体外侧的接触杆椭圆半径比内侧大，其高度低于内侧，故而落地支撑下压时机器人身体向外侧倾斜。这样在双足机器人步行时，左右脚交替落地支撑，可以调整身体左右摆动，调整重心。</p>\n<p>两根弹簧构成的柔软后跟可以减缓脚部着地冲击带来的不稳定性。</p>\n<p>接触杆有橡胶涂层，增加脚部与地面摩擦力，防止机器人单脚支撑时侧滑。</p>\n<p>双足机器人步行体态和重心路径见下面示意图：</p>\n<img src=\"/images/robot/robot62.jpg\" width=\"275\">\n<p><cite>参考：Steven H. Collins. A Three-Dimensional Passive-Dynamic Walking Robot with Two Legs and Knees</cite></p>\n","site":{"data":{}},"excerpt":"","more":"<p>双足机器人步行时，左右脚交替地落地支撑，形成一个不断移动和变化的支撑面，如果在行走过程中，整个机器人的重心在地面上的投影点始终保持在支撑面内，就可以保证机器人不绕其支撑脚边缘倾覆。</p>\n<p>另外，双足稳定步行还需保证处于支撑状态的脚与地面相对瞬时静止,使机器人在步行过程中不至发生侧向滑动。</p>\n<p>一般的解决办法是用陀螺仪测得重心偏差，反馈给舵机调整步态。</p>\n<p>而本文提出一种巧妙的机器人脚部结构设计，可实现如下功能：</p>\n<ul>\n<li>自动调节机器人重心</li>\n<li>缓减脚部着地冲击</li>\n<li>增加摩擦，防止侧滑</li>\n</ul>\n<p>具体结构如下图示，两根受力接触杆为半椭圆形，在脚后跟处分别与等臂杠杆两端铰接，等臂杠杆与中间支架铰接，两接触杆铰链处与脚底板之间安装弹簧。</p>\n<img src=\"/images/robot/robot61.jpg\" width=\"275\">\n<p>身体外侧的接触杆椭圆半径比内侧大，其高度低于内侧，故而落地支撑下压时机器人身体向外侧倾斜。这样在双足机器人步行时，左右脚交替落地支撑，可以调整身体左右摆动，调整重心。</p>\n<p>两根弹簧构成的柔软后跟可以减缓脚部着地冲击带来的不稳定性。</p>\n<p>接触杆有橡胶涂层，增加脚部与地面摩擦力，防止机器人单脚支撑时侧滑。</p>\n<p>双足机器人步行体态和重心路径见下面示意图：</p>\n<img src=\"/images/robot/robot62.jpg\" width=\"275\">\n<p><cite>参考：Steven H. Collins. A Three-Dimensional Passive-Dynamic Walking Robot with Two Legs and Knees</cite></p>\n"},{"title":"基于切比雪夫连杆机构的机器人腿部设计","date":"2013-03-23T16:00:00.000Z","keywords":"切比雪夫连杆机构, 机器人","description":"基于切比雪夫连杆机构的机器人腿部设计及其运动仿真","_content":"\n可以用作机器人腿部的机构有埃万斯连杆机构、切比雪夫连杆机构等，这里简要描述基于切比雪夫连杆机构的机器人腿部设计及其运动仿真。\n\n如下运动简图左侧，由静止节、原动节、从动节、中间节和延长中间节组成的四杆机构即为切比雪夫连杆机构，实现机器人腿部的抬腿、迈步、蹬地、前行的周期性动作。其余未标注名称的杆件与部分切比雪夫连杆组成平行四边形机构，用来保持机器人脚面与地面的平行。\n\n{% img /images/robot/robot71.jpg 275 %}\n\n其中，切比雪夫连杆机构各杆件的长度比须符合：\n静止节 : 原动节 : 从动节 : 中间节 : 延长中间节 = 2 : 1 : 2.5 : 2.5 : 2.5\n\n使用Pro/E软件建模，并对机器人腿部步态做运动仿真：\n\n{% img /images/robot/robot72.gif 275 %}\n\n机器人腿部位置如下图所示，上半部分为水平方向位置，下半部分为竖直方向位置：\n\n{% img /images/robot/robot73.gif 275 %}\n\n<cite>参考：坂本范行. 双足步行机器人DIY. 科学出版社. 2010</cite>\n","source":"_posts/robot7.md","raw":"---\ntitle: 基于切比雪夫连杆机构的机器人腿部设计\ndate: 2013-03-24 00:00:00\ncategories: Uncategorized\nkeywords: 切比雪夫连杆机构, 机器人\ndescription: 基于切比雪夫连杆机构的机器人腿部设计及其运动仿真\n---\n\n可以用作机器人腿部的机构有埃万斯连杆机构、切比雪夫连杆机构等，这里简要描述基于切比雪夫连杆机构的机器人腿部设计及其运动仿真。\n\n如下运动简图左侧，由静止节、原动节、从动节、中间节和延长中间节组成的四杆机构即为切比雪夫连杆机构，实现机器人腿部的抬腿、迈步、蹬地、前行的周期性动作。其余未标注名称的杆件与部分切比雪夫连杆组成平行四边形机构，用来保持机器人脚面与地面的平行。\n\n{% img /images/robot/robot71.jpg 275 %}\n\n其中，切比雪夫连杆机构各杆件的长度比须符合：\n静止节 : 原动节 : 从动节 : 中间节 : 延长中间节 = 2 : 1 : 2.5 : 2.5 : 2.5\n\n使用Pro/E软件建模，并对机器人腿部步态做运动仿真：\n\n{% img /images/robot/robot72.gif 275 %}\n\n机器人腿部位置如下图所示，上半部分为水平方向位置，下半部分为竖直方向位置：\n\n{% img /images/robot/robot73.gif 275 %}\n\n<cite>参考：坂本范行. 双足步行机器人DIY. 科学出版社. 2010</cite>\n","slug":"robot7","published":1,"updated":"2018-12-03T02:28:52.779Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzj002z3a8ipnmvdgaf","content":"<p>可以用作机器人腿部的机构有埃万斯连杆机构、切比雪夫连杆机构等，这里简要描述基于切比雪夫连杆机构的机器人腿部设计及其运动仿真。</p>\n<p>如下运动简图左侧，由静止节、原动节、从动节、中间节和延长中间节组成的四杆机构即为切比雪夫连杆机构，实现机器人腿部的抬腿、迈步、蹬地、前行的周期性动作。其余未标注名称的杆件与部分切比雪夫连杆组成平行四边形机构，用来保持机器人脚面与地面的平行。</p>\n<img src=\"/images/robot/robot71.jpg\" width=\"275\">\n<p>其中，切比雪夫连杆机构各杆件的长度比须符合：<br>静止节 : 原动节 : 从动节 : 中间节 : 延长中间节 = 2 : 1 : 2.5 : 2.5 : 2.5</p>\n<p>使用Pro/E软件建模，并对机器人腿部步态做运动仿真：</p>\n<img src=\"/images/robot/robot72.gif\" width=\"275\">\n<p>机器人腿部位置如下图所示，上半部分为水平方向位置，下半部分为竖直方向位置：</p>\n<img src=\"/images/robot/robot73.gif\" width=\"275\">\n<p><cite>参考：坂本范行. 双足步行机器人DIY. 科学出版社. 2010</cite></p>\n","site":{"data":{}},"excerpt":"","more":"<p>可以用作机器人腿部的机构有埃万斯连杆机构、切比雪夫连杆机构等，这里简要描述基于切比雪夫连杆机构的机器人腿部设计及其运动仿真。</p>\n<p>如下运动简图左侧，由静止节、原动节、从动节、中间节和延长中间节组成的四杆机构即为切比雪夫连杆机构，实现机器人腿部的抬腿、迈步、蹬地、前行的周期性动作。其余未标注名称的杆件与部分切比雪夫连杆组成平行四边形机构，用来保持机器人脚面与地面的平行。</p>\n<img src=\"/images/robot/robot71.jpg\" width=\"275\">\n<p>其中，切比雪夫连杆机构各杆件的长度比须符合：<br>静止节 : 原动节 : 从动节 : 中间节 : 延长中间节 = 2 : 1 : 2.5 : 2.5 : 2.5</p>\n<p>使用Pro/E软件建模，并对机器人腿部步态做运动仿真：</p>\n<img src=\"/images/robot/robot72.gif\" width=\"275\">\n<p>机器人腿部位置如下图所示，上半部分为水平方向位置，下半部分为竖直方向位置：</p>\n<img src=\"/images/robot/robot73.gif\" width=\"275\">\n<p><cite>参考：坂本范行. 双足步行机器人DIY. 科学出版社. 2010</cite></p>\n"},{"title":"四自由度步行机器人结构设计","date":"2013-04-24T16:00:00.000Z","keywords":"四自由度步行机器人, 机器人","description":"机器人由4个舵机提供双腿的4个自由度，可简单模拟人的步行","_content":"\n该步行机器人整体结构由3mm厚铝合金板构成，铝合金经裁剪、钻孔、弯曲成所需零件。机器人由4个舵机提供双腿的4个自由度，可简单模拟人的步行。\n\n装配过程为，首先将两个装好舵盘的舵机安装在身体框架上，再用身体腹部钣金件锁紧身体框架。\n\n{% img /images/robot/walk1.gif 275 %}\n\n接着调整腹部两个舵机至中心角度位置，将两个腿部框架分别用螺丝安装在腹部舵机上，然后将另外两个装好舵盘的舵机安装在腿部框架上。\n\n{% img /images/robot/walk2.gif 275 %}\n\n最后调整腿部两个舵机至中心角度位置，安装脚踝和脚底板，脚踝前部直接与舵盘连接，后部使用类似套筒的轴承连接。\n\n{% img /images/robot/walk3.gif 275 %}\n\n上面图片均省略了螺丝，电路板、电池和配线等也没有添加。实际制作时，电路板安装在机器人背部，电池放置在机器人腹腔内。\n\n该四自由度步行机器人的步行姿态如下：\n\n{% img /images/robot/walk4.gif 275 %}\n\n<cite>参考：浅草ギ研. 双足步行机器人制作入门. 科学出版社. 2011</cite>\n","source":"_posts/robot8.md","raw":"---\ntitle: 四自由度步行机器人结构设计\ndate: 2013-04-25 00:00:00\ncategories: Uncategorized\nkeywords: 四自由度步行机器人, 机器人\ndescription: 机器人由4个舵机提供双腿的4个自由度，可简单模拟人的步行\n---\n\n该步行机器人整体结构由3mm厚铝合金板构成，铝合金经裁剪、钻孔、弯曲成所需零件。机器人由4个舵机提供双腿的4个自由度，可简单模拟人的步行。\n\n装配过程为，首先将两个装好舵盘的舵机安装在身体框架上，再用身体腹部钣金件锁紧身体框架。\n\n{% img /images/robot/walk1.gif 275 %}\n\n接着调整腹部两个舵机至中心角度位置，将两个腿部框架分别用螺丝安装在腹部舵机上，然后将另外两个装好舵盘的舵机安装在腿部框架上。\n\n{% img /images/robot/walk2.gif 275 %}\n\n最后调整腿部两个舵机至中心角度位置，安装脚踝和脚底板，脚踝前部直接与舵盘连接，后部使用类似套筒的轴承连接。\n\n{% img /images/robot/walk3.gif 275 %}\n\n上面图片均省略了螺丝，电路板、电池和配线等也没有添加。实际制作时，电路板安装在机器人背部，电池放置在机器人腹腔内。\n\n该四自由度步行机器人的步行姿态如下：\n\n{% img /images/robot/walk4.gif 275 %}\n\n<cite>参考：浅草ギ研. 双足步行机器人制作入门. 科学出版社. 2011</cite>\n","slug":"robot8","published":1,"updated":"2018-12-03T02:28:52.780Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzk00313a8i1im9x5w8","content":"<p>该步行机器人整体结构由3mm厚铝合金板构成，铝合金经裁剪、钻孔、弯曲成所需零件。机器人由4个舵机提供双腿的4个自由度，可简单模拟人的步行。</p>\n<p>装配过程为，首先将两个装好舵盘的舵机安装在身体框架上，再用身体腹部钣金件锁紧身体框架。</p>\n<img src=\"/images/robot/walk1.gif\" width=\"275\">\n<p>接着调整腹部两个舵机至中心角度位置，将两个腿部框架分别用螺丝安装在腹部舵机上，然后将另外两个装好舵盘的舵机安装在腿部框架上。</p>\n<img src=\"/images/robot/walk2.gif\" width=\"275\">\n<p>最后调整腿部两个舵机至中心角度位置，安装脚踝和脚底板，脚踝前部直接与舵盘连接，后部使用类似套筒的轴承连接。</p>\n<img src=\"/images/robot/walk3.gif\" width=\"275\">\n<p>上面图片均省略了螺丝，电路板、电池和配线等也没有添加。实际制作时，电路板安装在机器人背部，电池放置在机器人腹腔内。</p>\n<p>该四自由度步行机器人的步行姿态如下：</p>\n<img src=\"/images/robot/walk4.gif\" width=\"275\">\n<p><cite>参考：浅草ギ研. 双足步行机器人制作入门. 科学出版社. 2011</cite></p>\n","site":{"data":{}},"excerpt":"","more":"<p>该步行机器人整体结构由3mm厚铝合金板构成，铝合金经裁剪、钻孔、弯曲成所需零件。机器人由4个舵机提供双腿的4个自由度，可简单模拟人的步行。</p>\n<p>装配过程为，首先将两个装好舵盘的舵机安装在身体框架上，再用身体腹部钣金件锁紧身体框架。</p>\n<img src=\"/images/robot/walk1.gif\" width=\"275\">\n<p>接着调整腹部两个舵机至中心角度位置，将两个腿部框架分别用螺丝安装在腹部舵机上，然后将另外两个装好舵盘的舵机安装在腿部框架上。</p>\n<img src=\"/images/robot/walk2.gif\" width=\"275\">\n<p>最后调整腿部两个舵机至中心角度位置，安装脚踝和脚底板，脚踝前部直接与舵盘连接，后部使用类似套筒的轴承连接。</p>\n<img src=\"/images/robot/walk3.gif\" width=\"275\">\n<p>上面图片均省略了螺丝，电路板、电池和配线等也没有添加。实际制作时，电路板安装在机器人背部，电池放置在机器人腹腔内。</p>\n<p>该四自由度步行机器人的步行姿态如下：</p>\n<img src=\"/images/robot/walk4.gif\" width=\"275\">\n<p><cite>参考：浅草ギ研. 双足步行机器人制作入门. 科学出版社. 2011</cite></p>\n"},{"title":"图片快速切换动效","date":"2019-04-10T16:00:00.000Z","keywords":"动效, TweenMax","description":null,"_content":"\nTweenMax是GreenSock Animation Platform(GSAP)动画平台核心文件，包含动画和时间轴相关的核心功能、基础插件、时间曲线等。Tween功能可用来构建[补间动画](flash3.html)，Timeline功能可创建时间轴，精确控制和管理动画序列。这里使用TweenMax实现图片快速切换动效。\n\n单个切换区块对象，包含背景图片和使用[splitText](split-text.html)将文本打散分离的标题。\n\n``` JavaScript\nclass Slide {\n    constructor(el) {\n        this.DOM = { el }\n        this.DOM.img = this.DOM.el.querySelector('.slide__image')\n        this.DOM.title = this.DOM.el.querySelector('.slide__title')\n        splitText(this.DOM.title)\n        this.DOM.titleLetters = Array.from(this.DOM.title.querySelectorAll('span'))\n        this.titleLettersTotal = this.DOM.titleLetters.length\n    }\n}\n```\n\n图片切换对象，包含一组切换区块、控制切换的button和事件、具体的切换动画实现等。难点是如何控制各动画元素的时间轴先后关系实现需要的动效。\n\n``` JavaScript\nclass Slides {\n    constructor(el) {\n        this.DOM = { el }\n        this.slides = []\n        Array.from(this.DOM.el.querySelectorAll('.slide')).forEach(slide => this.slides.push(new Slide(slide)))\n        this.slidesTotal = this.slides.length\n        this.current = 0\n        this.slides[this.current].DOM.el.classList.add('slide--current')\n        this.navigationCtrls = {\n            next: this.DOM.el.querySelector('.nav__button--next'),\n            prev: this.DOM.el.querySelector('.nav__button--previous')\n        }\n        this.initEvents()\n    }\n    initEvents() {\n        this.navigationCtrls.next.addEventListener('click', () => this.navigate('next'))\n        this.navigationCtrls.prev.addEventListener('click', () => this.navigate('prev'))\n\n        document.addEventListener('keydown', ev => {\n            const keyCode = ev.keyCode || ev.which\n            if (keyCode === 38) {\n                this.navigate('prev')\n            } else if (keyCode === 40) {\n                this.navigate('next')\n            }\n        })\n    }\n    navigate(direction = 'next') {\n        if (this.isAnimating) return\n        this.isAnimating = true\n\n        const currentSlide = this.slides[this.current]\n        this.current = direction === 'next' ?\n            (this.current < this.slidesTotal - 1 ? this.current + 1 : 0) :\n            (this.current > 0 ? this.current - 1 : this.slidesTotal - 1)\n        const upcomingSlide = this.slides[this.current]\n\n        const currentImg = currentSlide.DOM.img\n        const currentTitle = currentSlide.DOM.title\n        const currentTitleLetters = currentSlide.DOM.titleLetters\n        const currentTitleLettersTotal = currentSlide.titleLettersTotal\n        const upcomingImg = upcomingSlide.DOM.img\n        const upcomingTitle = upcomingSlide.DOM.title\n\n        this.tl = new TimelineMax({\n            onStart: () => {\n                upcomingSlide.DOM.el.classList.add('slide--current')\n            },\n            onComplete: () => {\n                currentSlide.DOM.el.classList.remove('slide--current')\n                this.isAnimating = false\n            }\n        }).add('begin')\n\n        this.tl\n            .set(upcomingImg, {\n                transformOrigin: direction === 'next' ? '50% 0%' : '50% 100%',\n                y: direction === 'next' ? winsize.height : -1 * winsize.height,\n                scaleY: 1.5,\n                scaleX: 0.8,\n                opacity: 0\n            })\n            // 省略...\n            .to(currentImg, 0.3, {\n                ease: Power1.easeOut,\n                scaleY: 2,\n                scaleX: 0.85,\n                opacity: 0.5\n            }, 'begin')\n            // 省略...\n            .staggerTo(currentTitleLetters.sort((a, b) => 0.5 - Math.random()), 0.2, {\n                ease: Expo.easeOut,\n                cycle: {\n                    y: () => direction === 'next' ? getRandomNumber(-800, -400) : getRandomNumber(400, 800),\n                    x: () => getRandomNumber(-100, 100),\n                },\n                opacity: 0\n            }, 0.5 / currentTitleLettersTotal, 'begin+=0.6')\n            // 省略...\n            .set(currentTitleLetters, {\n                x: 0,\n                y: 0,\n                opacity: 1\n            })\n\n        this.tl.addCallback(() => {\n            main.classList.add('show-deco')\n        }, 'begin+=0.2')\n\n        this.tl.addCallback(() => {\n            main.classList.remove('show-deco')\n        }, 'begin+=1.1')\n    }\n}\n```\n\n图片切换实例，并使用imagesLoaded判断页面内图片是否加载完成。\n\n``` JavaScript\nnew Slides(document.querySelector('.slides'))\n\nimagesLoaded(document.querySelectorAll('.slide__image'), {\n    background: true\n}, () => main.classList.remove('loading'))\n```\n\n{% raw %}\n<p class=\"demo-p\"><button type=\"button\" onclick=\"openIframe('/demo/speedy-transition-effect/index.html')\">查看demo »</button></p>\n{% endraw %}\n\n<cite>参考：https://github.com/codrops/MotionTransitionEffect</cite>\n","source":"_posts/speedy-transition-effect.md","raw":"---\ntitle: 图片快速切换动效\ndate: 2019-04-11 00:00:00\ncategories: Uncategorized\nkeywords: 动效, TweenMax\ndescription: \n---\n\nTweenMax是GreenSock Animation Platform(GSAP)动画平台核心文件，包含动画和时间轴相关的核心功能、基础插件、时间曲线等。Tween功能可用来构建[补间动画](flash3.html)，Timeline功能可创建时间轴，精确控制和管理动画序列。这里使用TweenMax实现图片快速切换动效。\n\n单个切换区块对象，包含背景图片和使用[splitText](split-text.html)将文本打散分离的标题。\n\n``` JavaScript\nclass Slide {\n    constructor(el) {\n        this.DOM = { el }\n        this.DOM.img = this.DOM.el.querySelector('.slide__image')\n        this.DOM.title = this.DOM.el.querySelector('.slide__title')\n        splitText(this.DOM.title)\n        this.DOM.titleLetters = Array.from(this.DOM.title.querySelectorAll('span'))\n        this.titleLettersTotal = this.DOM.titleLetters.length\n    }\n}\n```\n\n图片切换对象，包含一组切换区块、控制切换的button和事件、具体的切换动画实现等。难点是如何控制各动画元素的时间轴先后关系实现需要的动效。\n\n``` JavaScript\nclass Slides {\n    constructor(el) {\n        this.DOM = { el }\n        this.slides = []\n        Array.from(this.DOM.el.querySelectorAll('.slide')).forEach(slide => this.slides.push(new Slide(slide)))\n        this.slidesTotal = this.slides.length\n        this.current = 0\n        this.slides[this.current].DOM.el.classList.add('slide--current')\n        this.navigationCtrls = {\n            next: this.DOM.el.querySelector('.nav__button--next'),\n            prev: this.DOM.el.querySelector('.nav__button--previous')\n        }\n        this.initEvents()\n    }\n    initEvents() {\n        this.navigationCtrls.next.addEventListener('click', () => this.navigate('next'))\n        this.navigationCtrls.prev.addEventListener('click', () => this.navigate('prev'))\n\n        document.addEventListener('keydown', ev => {\n            const keyCode = ev.keyCode || ev.which\n            if (keyCode === 38) {\n                this.navigate('prev')\n            } else if (keyCode === 40) {\n                this.navigate('next')\n            }\n        })\n    }\n    navigate(direction = 'next') {\n        if (this.isAnimating) return\n        this.isAnimating = true\n\n        const currentSlide = this.slides[this.current]\n        this.current = direction === 'next' ?\n            (this.current < this.slidesTotal - 1 ? this.current + 1 : 0) :\n            (this.current > 0 ? this.current - 1 : this.slidesTotal - 1)\n        const upcomingSlide = this.slides[this.current]\n\n        const currentImg = currentSlide.DOM.img\n        const currentTitle = currentSlide.DOM.title\n        const currentTitleLetters = currentSlide.DOM.titleLetters\n        const currentTitleLettersTotal = currentSlide.titleLettersTotal\n        const upcomingImg = upcomingSlide.DOM.img\n        const upcomingTitle = upcomingSlide.DOM.title\n\n        this.tl = new TimelineMax({\n            onStart: () => {\n                upcomingSlide.DOM.el.classList.add('slide--current')\n            },\n            onComplete: () => {\n                currentSlide.DOM.el.classList.remove('slide--current')\n                this.isAnimating = false\n            }\n        }).add('begin')\n\n        this.tl\n            .set(upcomingImg, {\n                transformOrigin: direction === 'next' ? '50% 0%' : '50% 100%',\n                y: direction === 'next' ? winsize.height : -1 * winsize.height,\n                scaleY: 1.5,\n                scaleX: 0.8,\n                opacity: 0\n            })\n            // 省略...\n            .to(currentImg, 0.3, {\n                ease: Power1.easeOut,\n                scaleY: 2,\n                scaleX: 0.85,\n                opacity: 0.5\n            }, 'begin')\n            // 省略...\n            .staggerTo(currentTitleLetters.sort((a, b) => 0.5 - Math.random()), 0.2, {\n                ease: Expo.easeOut,\n                cycle: {\n                    y: () => direction === 'next' ? getRandomNumber(-800, -400) : getRandomNumber(400, 800),\n                    x: () => getRandomNumber(-100, 100),\n                },\n                opacity: 0\n            }, 0.5 / currentTitleLettersTotal, 'begin+=0.6')\n            // 省略...\n            .set(currentTitleLetters, {\n                x: 0,\n                y: 0,\n                opacity: 1\n            })\n\n        this.tl.addCallback(() => {\n            main.classList.add('show-deco')\n        }, 'begin+=0.2')\n\n        this.tl.addCallback(() => {\n            main.classList.remove('show-deco')\n        }, 'begin+=1.1')\n    }\n}\n```\n\n图片切换实例，并使用imagesLoaded判断页面内图片是否加载完成。\n\n``` JavaScript\nnew Slides(document.querySelector('.slides'))\n\nimagesLoaded(document.querySelectorAll('.slide__image'), {\n    background: true\n}, () => main.classList.remove('loading'))\n```\n\n{% raw %}\n<p class=\"demo-p\"><button type=\"button\" onclick=\"openIframe('/demo/speedy-transition-effect/index.html')\">查看demo »</button></p>\n{% endraw %}\n\n<cite>参考：https://github.com/codrops/MotionTransitionEffect</cite>\n","slug":"speedy-transition-effect","published":1,"updated":"2019-04-11T06:53:48.961Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzm00333a8iut1wja42","content":"<p>TweenMax是GreenSock Animation Platform(GSAP)动画平台核心文件，包含动画和时间轴相关的核心功能、基础插件、时间曲线等。Tween功能可用来构建<a href=\"flash3.html\">补间动画</a>，Timeline功能可创建时间轴，精确控制和管理动画序列。这里使用TweenMax实现图片快速切换动效。</p>\n<p>单个切换区块对象，包含背景图片和使用<a href=\"split-text.html\">splitText</a>将文本打散分离的标题。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Slide</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(el) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.DOM = &#123; el &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.DOM.img = <span class=\"keyword\">this</span>.DOM.el.querySelector(<span class=\"string\">'.slide__image'</span>)</div><div class=\"line\">        <span class=\"keyword\">this</span>.DOM.title = <span class=\"keyword\">this</span>.DOM.el.querySelector(<span class=\"string\">'.slide__title'</span>)</div><div class=\"line\">        splitText(<span class=\"keyword\">this</span>.DOM.title)</div><div class=\"line\">        <span class=\"keyword\">this</span>.DOM.titleLetters = <span class=\"built_in\">Array</span>.from(<span class=\"keyword\">this</span>.DOM.title.querySelectorAll(<span class=\"string\">'span'</span>))</div><div class=\"line\">        <span class=\"keyword\">this</span>.titleLettersTotal = <span class=\"keyword\">this</span>.DOM.titleLetters.length</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>图片切换对象，包含一组切换区块、控制切换的button和事件、具体的切换动画实现等。难点是如何控制各动画元素的时间轴先后关系实现需要的动效。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Slides</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(el) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.DOM = &#123; el &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.slides = []</div><div class=\"line\">        <span class=\"built_in\">Array</span>.from(<span class=\"keyword\">this</span>.DOM.el.querySelectorAll(<span class=\"string\">'.slide'</span>)).forEach(<span class=\"function\"><span class=\"params\">slide</span> =&gt;</span> <span class=\"keyword\">this</span>.slides.push(<span class=\"keyword\">new</span> Slide(slide)))</div><div class=\"line\">        <span class=\"keyword\">this</span>.slidesTotal = <span class=\"keyword\">this</span>.slides.length</div><div class=\"line\">        <span class=\"keyword\">this</span>.current = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.slides[<span class=\"keyword\">this</span>.current].DOM.el.classList.add(<span class=\"string\">'slide--current'</span>)</div><div class=\"line\">        <span class=\"keyword\">this</span>.navigationCtrls = &#123;</div><div class=\"line\">            next: <span class=\"keyword\">this</span>.DOM.el.querySelector(<span class=\"string\">'.nav__button--next'</span>),</div><div class=\"line\">            prev: <span class=\"keyword\">this</span>.DOM.el.querySelector(<span class=\"string\">'.nav__button--previous'</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.initEvents()</div><div class=\"line\">    &#125;</div><div class=\"line\">    initEvents() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.navigationCtrls.next.addEventListener(<span class=\"string\">'click'</span>, () =&gt; <span class=\"keyword\">this</span>.navigate(<span class=\"string\">'next'</span>))</div><div class=\"line\">        <span class=\"keyword\">this</span>.navigationCtrls.prev.addEventListener(<span class=\"string\">'click'</span>, () =&gt; <span class=\"keyword\">this</span>.navigate(<span class=\"string\">'prev'</span>))</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'keydown'</span>, ev =&gt; &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> keyCode = ev.keyCode || ev.which</div><div class=\"line\">            <span class=\"keyword\">if</span> (keyCode === <span class=\"number\">38</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.navigate(<span class=\"string\">'prev'</span>)</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (keyCode === <span class=\"number\">40</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.navigate(<span class=\"string\">'next'</span>)</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">    navigate(direction = <span class=\"string\">'next'</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.isAnimating) <span class=\"keyword\">return</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.isAnimating = <span class=\"literal\">true</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> currentSlide = <span class=\"keyword\">this</span>.slides[<span class=\"keyword\">this</span>.current]</div><div class=\"line\">        <span class=\"keyword\">this</span>.current = direction === <span class=\"string\">'next'</span> ?</div><div class=\"line\">            (<span class=\"keyword\">this</span>.current &lt; <span class=\"keyword\">this</span>.slidesTotal - <span class=\"number\">1</span> ? <span class=\"keyword\">this</span>.current + <span class=\"number\">1</span> : <span class=\"number\">0</span>) :</div><div class=\"line\">            (<span class=\"keyword\">this</span>.current &gt; <span class=\"number\">0</span> ? <span class=\"keyword\">this</span>.current - <span class=\"number\">1</span> : <span class=\"keyword\">this</span>.slidesTotal - <span class=\"number\">1</span>)</div><div class=\"line\">        <span class=\"keyword\">const</span> upcomingSlide = <span class=\"keyword\">this</span>.slides[<span class=\"keyword\">this</span>.current]</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> currentImg = currentSlide.DOM.img</div><div class=\"line\">        <span class=\"keyword\">const</span> currentTitle = currentSlide.DOM.title</div><div class=\"line\">        <span class=\"keyword\">const</span> currentTitleLetters = currentSlide.DOM.titleLetters</div><div class=\"line\">        <span class=\"keyword\">const</span> currentTitleLettersTotal = currentSlide.titleLettersTotal</div><div class=\"line\">        <span class=\"keyword\">const</span> upcomingImg = upcomingSlide.DOM.img</div><div class=\"line\">        <span class=\"keyword\">const</span> upcomingTitle = upcomingSlide.DOM.title</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.tl = <span class=\"keyword\">new</span> TimelineMax(&#123;</div><div class=\"line\">            onStart: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">                upcomingSlide.DOM.el.classList.add(<span class=\"string\">'slide--current'</span>)</div><div class=\"line\">            &#125;,</div><div class=\"line\">            onComplete: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">                currentSlide.DOM.el.classList.remove(<span class=\"string\">'slide--current'</span>)</div><div class=\"line\">                <span class=\"keyword\">this</span>.isAnimating = <span class=\"literal\">false</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;).add(<span class=\"string\">'begin'</span>)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.tl</div><div class=\"line\">            .set(upcomingImg, &#123;</div><div class=\"line\">                transformOrigin: direction === <span class=\"string\">'next'</span> ? <span class=\"string\">'50% 0%'</span> : <span class=\"string\">'50% 100%'</span>,</div><div class=\"line\">                y: direction === <span class=\"string\">'next'</span> ? winsize.height : <span class=\"number\">-1</span> * winsize.height,</div><div class=\"line\">                scaleY: <span class=\"number\">1.5</span>,</div><div class=\"line\">                scaleX: <span class=\"number\">0.8</span>,</div><div class=\"line\">                opacity: <span class=\"number\">0</span></div><div class=\"line\">            &#125;)</div><div class=\"line\">            <span class=\"comment\">// 省略...</span></div><div class=\"line\">            .to(currentImg, <span class=\"number\">0.3</span>, &#123;</div><div class=\"line\">                ease: Power1.easeOut,</div><div class=\"line\">                scaleY: <span class=\"number\">2</span>,</div><div class=\"line\">                scaleX: <span class=\"number\">0.85</span>,</div><div class=\"line\">                opacity: <span class=\"number\">0.5</span></div><div class=\"line\">            &#125;, <span class=\"string\">'begin'</span>)</div><div class=\"line\">            <span class=\"comment\">// 省略...</span></div><div class=\"line\">            .staggerTo(currentTitleLetters.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> <span class=\"number\">0.5</span> - <span class=\"built_in\">Math</span>.random()), <span class=\"number\">0.2</span>, &#123;</div><div class=\"line\">                ease: Expo.easeOut,</div><div class=\"line\">                cycle: &#123;</div><div class=\"line\">                    y: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> direction === <span class=\"string\">'next'</span> ? getRandomNumber(<span class=\"number\">-800</span>, <span class=\"number\">-400</span>) : getRandomNumber(<span class=\"number\">400</span>, <span class=\"number\">800</span>),</div><div class=\"line\">                    x: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> getRandomNumber(<span class=\"number\">-100</span>, <span class=\"number\">100</span>),</div><div class=\"line\">                &#125;,</div><div class=\"line\">                opacity: <span class=\"number\">0</span></div><div class=\"line\">            &#125;, <span class=\"number\">0.5</span> / currentTitleLettersTotal, <span class=\"string\">'begin+=0.6'</span>)</div><div class=\"line\">            <span class=\"comment\">// 省略...</span></div><div class=\"line\">            .set(currentTitleLetters, &#123;</div><div class=\"line\">                x: <span class=\"number\">0</span>,</div><div class=\"line\">                y: <span class=\"number\">0</span>,</div><div class=\"line\">                opacity: <span class=\"number\">1</span></div><div class=\"line\">            &#125;)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.tl.addCallback(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            main.classList.add(<span class=\"string\">'show-deco'</span>)</div><div class=\"line\">        &#125;, <span class=\"string\">'begin+=0.2'</span>)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.tl.addCallback(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            main.classList.remove(<span class=\"string\">'show-deco'</span>)</div><div class=\"line\">        &#125;, <span class=\"string\">'begin+=1.1'</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>图片切换实例，并使用imagesLoaded判断页面内图片是否加载完成。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Slides(<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.slides'</span>))</div><div class=\"line\"><br></div><div class=\"line\">imagesLoaded(<span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.slide__image'</span>), &#123;</div><div class=\"line\">    background: <span class=\"literal\">true</span></div><div class=\"line\">&#125;, () =&gt; main.classList.remove(<span class=\"string\">'loading'</span>))</div></pre></figure>\n\n<p class=\"demo-p\"><button type=\"button\" onclick=\"openIframe('/demo/speedy-transition-effect/index.html')\">查看demo »</button></p>\n\n<p><cite>参考：<a href=\"https://github.com/codrops/MotionTransitionEffect\" target=\"_blank\" rel=\"noopener\">https://github.com/codrops/MotionTransitionEffect</a></cite></p>\n","site":{"data":{}},"excerpt":"","more":"<p>TweenMax是GreenSock Animation Platform(GSAP)动画平台核心文件，包含动画和时间轴相关的核心功能、基础插件、时间曲线等。Tween功能可用来构建<a href=\"flash3.html\">补间动画</a>，Timeline功能可创建时间轴，精确控制和管理动画序列。这里使用TweenMax实现图片快速切换动效。</p>\n<p>单个切换区块对象，包含背景图片和使用<a href=\"split-text.html\">splitText</a>将文本打散分离的标题。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Slide</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(el) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.DOM = &#123; el &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.DOM.img = <span class=\"keyword\">this</span>.DOM.el.querySelector(<span class=\"string\">'.slide__image'</span>)</div><div class=\"line\">        <span class=\"keyword\">this</span>.DOM.title = <span class=\"keyword\">this</span>.DOM.el.querySelector(<span class=\"string\">'.slide__title'</span>)</div><div class=\"line\">        splitText(<span class=\"keyword\">this</span>.DOM.title)</div><div class=\"line\">        <span class=\"keyword\">this</span>.DOM.titleLetters = <span class=\"built_in\">Array</span>.from(<span class=\"keyword\">this</span>.DOM.title.querySelectorAll(<span class=\"string\">'span'</span>))</div><div class=\"line\">        <span class=\"keyword\">this</span>.titleLettersTotal = <span class=\"keyword\">this</span>.DOM.titleLetters.length</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>图片切换对象，包含一组切换区块、控制切换的button和事件、具体的切换动画实现等。难点是如何控制各动画元素的时间轴先后关系实现需要的动效。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Slides</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(el) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.DOM = &#123; el &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.slides = []</div><div class=\"line\">        <span class=\"built_in\">Array</span>.from(<span class=\"keyword\">this</span>.DOM.el.querySelectorAll(<span class=\"string\">'.slide'</span>)).forEach(<span class=\"function\"><span class=\"params\">slide</span> =&gt;</span> <span class=\"keyword\">this</span>.slides.push(<span class=\"keyword\">new</span> Slide(slide)))</div><div class=\"line\">        <span class=\"keyword\">this</span>.slidesTotal = <span class=\"keyword\">this</span>.slides.length</div><div class=\"line\">        <span class=\"keyword\">this</span>.current = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.slides[<span class=\"keyword\">this</span>.current].DOM.el.classList.add(<span class=\"string\">'slide--current'</span>)</div><div class=\"line\">        <span class=\"keyword\">this</span>.navigationCtrls = &#123;</div><div class=\"line\">            next: <span class=\"keyword\">this</span>.DOM.el.querySelector(<span class=\"string\">'.nav__button--next'</span>),</div><div class=\"line\">            prev: <span class=\"keyword\">this</span>.DOM.el.querySelector(<span class=\"string\">'.nav__button--previous'</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.initEvents()</div><div class=\"line\">    &#125;</div><div class=\"line\">    initEvents() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.navigationCtrls.next.addEventListener(<span class=\"string\">'click'</span>, () =&gt; <span class=\"keyword\">this</span>.navigate(<span class=\"string\">'next'</span>))</div><div class=\"line\">        <span class=\"keyword\">this</span>.navigationCtrls.prev.addEventListener(<span class=\"string\">'click'</span>, () =&gt; <span class=\"keyword\">this</span>.navigate(<span class=\"string\">'prev'</span>))</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'keydown'</span>, ev =&gt; &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> keyCode = ev.keyCode || ev.which</div><div class=\"line\">            <span class=\"keyword\">if</span> (keyCode === <span class=\"number\">38</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.navigate(<span class=\"string\">'prev'</span>)</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (keyCode === <span class=\"number\">40</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.navigate(<span class=\"string\">'next'</span>)</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">    navigate(direction = <span class=\"string\">'next'</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.isAnimating) <span class=\"keyword\">return</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.isAnimating = <span class=\"literal\">true</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> currentSlide = <span class=\"keyword\">this</span>.slides[<span class=\"keyword\">this</span>.current]</div><div class=\"line\">        <span class=\"keyword\">this</span>.current = direction === <span class=\"string\">'next'</span> ?</div><div class=\"line\">            (<span class=\"keyword\">this</span>.current &lt; <span class=\"keyword\">this</span>.slidesTotal - <span class=\"number\">1</span> ? <span class=\"keyword\">this</span>.current + <span class=\"number\">1</span> : <span class=\"number\">0</span>) :</div><div class=\"line\">            (<span class=\"keyword\">this</span>.current &gt; <span class=\"number\">0</span> ? <span class=\"keyword\">this</span>.current - <span class=\"number\">1</span> : <span class=\"keyword\">this</span>.slidesTotal - <span class=\"number\">1</span>)</div><div class=\"line\">        <span class=\"keyword\">const</span> upcomingSlide = <span class=\"keyword\">this</span>.slides[<span class=\"keyword\">this</span>.current]</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> currentImg = currentSlide.DOM.img</div><div class=\"line\">        <span class=\"keyword\">const</span> currentTitle = currentSlide.DOM.title</div><div class=\"line\">        <span class=\"keyword\">const</span> currentTitleLetters = currentSlide.DOM.titleLetters</div><div class=\"line\">        <span class=\"keyword\">const</span> currentTitleLettersTotal = currentSlide.titleLettersTotal</div><div class=\"line\">        <span class=\"keyword\">const</span> upcomingImg = upcomingSlide.DOM.img</div><div class=\"line\">        <span class=\"keyword\">const</span> upcomingTitle = upcomingSlide.DOM.title</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.tl = <span class=\"keyword\">new</span> TimelineMax(&#123;</div><div class=\"line\">            onStart: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">                upcomingSlide.DOM.el.classList.add(<span class=\"string\">'slide--current'</span>)</div><div class=\"line\">            &#125;,</div><div class=\"line\">            onComplete: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">                currentSlide.DOM.el.classList.remove(<span class=\"string\">'slide--current'</span>)</div><div class=\"line\">                <span class=\"keyword\">this</span>.isAnimating = <span class=\"literal\">false</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;).add(<span class=\"string\">'begin'</span>)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.tl</div><div class=\"line\">            .set(upcomingImg, &#123;</div><div class=\"line\">                transformOrigin: direction === <span class=\"string\">'next'</span> ? <span class=\"string\">'50% 0%'</span> : <span class=\"string\">'50% 100%'</span>,</div><div class=\"line\">                y: direction === <span class=\"string\">'next'</span> ? winsize.height : <span class=\"number\">-1</span> * winsize.height,</div><div class=\"line\">                scaleY: <span class=\"number\">1.5</span>,</div><div class=\"line\">                scaleX: <span class=\"number\">0.8</span>,</div><div class=\"line\">                opacity: <span class=\"number\">0</span></div><div class=\"line\">            &#125;)</div><div class=\"line\">            <span class=\"comment\">// 省略...</span></div><div class=\"line\">            .to(currentImg, <span class=\"number\">0.3</span>, &#123;</div><div class=\"line\">                ease: Power1.easeOut,</div><div class=\"line\">                scaleY: <span class=\"number\">2</span>,</div><div class=\"line\">                scaleX: <span class=\"number\">0.85</span>,</div><div class=\"line\">                opacity: <span class=\"number\">0.5</span></div><div class=\"line\">            &#125;, <span class=\"string\">'begin'</span>)</div><div class=\"line\">            <span class=\"comment\">// 省略...</span></div><div class=\"line\">            .staggerTo(currentTitleLetters.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> <span class=\"number\">0.5</span> - <span class=\"built_in\">Math</span>.random()), <span class=\"number\">0.2</span>, &#123;</div><div class=\"line\">                ease: Expo.easeOut,</div><div class=\"line\">                cycle: &#123;</div><div class=\"line\">                    y: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> direction === <span class=\"string\">'next'</span> ? getRandomNumber(<span class=\"number\">-800</span>, <span class=\"number\">-400</span>) : getRandomNumber(<span class=\"number\">400</span>, <span class=\"number\">800</span>),</div><div class=\"line\">                    x: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> getRandomNumber(<span class=\"number\">-100</span>, <span class=\"number\">100</span>),</div><div class=\"line\">                &#125;,</div><div class=\"line\">                opacity: <span class=\"number\">0</span></div><div class=\"line\">            &#125;, <span class=\"number\">0.5</span> / currentTitleLettersTotal, <span class=\"string\">'begin+=0.6'</span>)</div><div class=\"line\">            <span class=\"comment\">// 省略...</span></div><div class=\"line\">            .set(currentTitleLetters, &#123;</div><div class=\"line\">                x: <span class=\"number\">0</span>,</div><div class=\"line\">                y: <span class=\"number\">0</span>,</div><div class=\"line\">                opacity: <span class=\"number\">1</span></div><div class=\"line\">            &#125;)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.tl.addCallback(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            main.classList.add(<span class=\"string\">'show-deco'</span>)</div><div class=\"line\">        &#125;, <span class=\"string\">'begin+=0.2'</span>)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.tl.addCallback(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            main.classList.remove(<span class=\"string\">'show-deco'</span>)</div><div class=\"line\">        &#125;, <span class=\"string\">'begin+=1.1'</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>图片切换实例，并使用imagesLoaded判断页面内图片是否加载完成。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">new</span> Slides(<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.slides'</span>))</div><div class=\"line\"><br></div><div class=\"line\">imagesLoaded(<span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'.slide__image'</span>), &#123;</div><div class=\"line\">    background: <span class=\"literal\">true</span></div><div class=\"line\">&#125;, () =&gt; main.classList.remove(<span class=\"string\">'loading'</span>))</div></pre></figure>\n\n<p class=\"demo-p\"><button type=\"button\" onclick=\"openIframe('/demo/speedy-transition-effect/index.html')\">查看demo »</button></p>\n\n<p><cite>参考：<a href=\"https://github.com/codrops/MotionTransitionEffect\" target=\"_blank\" rel=\"noopener\">https://github.com/codrops/MotionTransitionEffect</a></cite></p>\n"},{"title":"splitText文本打散分离","date":"2019-04-02T16:00:00.000Z","keywords":"SplitText, Lettering.js","description":"文本打散分离的原生JS实现","_content":"\n{% raw %}\n<style>\n.animation-wrapper {\n\tposition: relative;\n\twidth: 100%;\n\tmin-height: 200px;\n\tpadding-top: 40%;\n\tbackground: linear-gradient(to bottom, #405166 0%, #656f6f 100%);\n\toverflow: hidden;\n\tuser-select: none;\n}\n.animation-wrapper > div {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -56%);\n}\n.animation-wrapper h3 {\n\tmargin: 0;\n\tline-height: 40px;\n\tfont-size: 36px;\n\tfont-weight: 500;\n\ttext-align: center;\n\ttext-transform: uppercase;\n\twhite-space: nowrap;\n\ttransform: rotate(-10deg);\n}\n.animation-wrapper h3:nth-child(1) {\n\tcolor: #e55643;\n}\n.animation-wrapper h3:nth-child(2) {\n\tcolor: #2b9f5e;\n}\n.animation-wrapper h3:nth-child(3) {\n\tcolor: #f1c83c;\n}\n.animation-wrapper h3 span {\n\tdisplay: inline-block;\n\tmin-width: 10px;\n\tmin-height: 40px;\n\ttext-shadow: #533d4a 1px 1px, #533d4a 2px 2px, #533d4a 3px 3px, #533d4a 4px 4px, #533d4a 5px 5px, #533d4a 6px 6px;\n\ttransform: skew(-10deg);\n}\n</style>\n\n<div class=\"scrollable-wrapper\">\n\t<div class=\"animation-wrapper\"><div>\n\t\t<h3>The cloud</h3>\n\t\t<h3>wishes</h3>\n\t\t<h3>it were a bird</h3>\n\t</div></div>\n</div>\n{% endraw %}\n\n实现类似上面的文字动画，需要DOM中将文本打散分离成单个字符。可用的工具有jQuery的Lettering.js，GreenSock动画平台的SplitText等插件。这里是文本打散分离的原生JS实现。\n\n``` JavaScript\nconst splitText = (el, options = {}) => {\n    const {\n        splitRegex,\n        tagName,\n        classPrefix\n    } = {\n        splitRegex: null,\n        tagName: 'span',\n        classPrefix: 'char',\n        ...options\n    }\n\n    // 删除空的、合并相邻的文本节点\n    el.normalize()\n    let count = 1\n\n    const inject = el => {\n        const parentNode = el.parentNode\n        const str = el.nodeValue\n        const split = splitRegex ? str.split(splitRegex) : str\n        const l = split.length\n        let i = -1\n        while (++i < l) {\n            const node = document.createElement(tagName)\n            if (classPrefix) {\n                node.className = classPrefix + count\n                count++\n            }\n            node.appendChild(document.createTextNode(split[i]))\n            node.setAttribute('aria-hidden', 'true')\n            parentNode.insertBefore(node, el)\n        }\n        if (str.trim() !== '') {\n            // 无障碍\n            parentNode.setAttribute('aria-label', str)\n        }\n        parentNode.removeChild(el)\n    }\n\n    (function traverse(el) {\n        // el为文本节点\n        if (el.nodeType === 3) {\n            return inject(el)\n        }\n\n        const childNodes = [].slice.call(el.childNodes)\n        const l = childNodes.length\n\n        // el只有一个子文本节点\n        if (l === 1 && childNodes[0].nodeType === 3) {\n            return inject(childNodes[0])\n        }\n\n        // el有多个子文本节点\n        let i = -1\n        while (++i < l) {\n            traverse(childNodes[i])\n        }\n    }(el))\n}\n```\n\n<cite>参考：https://github.com/yuanqing/charming</cite>\n\n\n{% raw %}\n<script src='/scripts/TweenMax.min.js'></script>\n<script>\nconst splitText = (el, options = {}) => {\n\tconst {\n\t\tsplitRegex,\n\t\ttagName,\n\t\tclassPrefix\n\t} = {\n\t\tsplitRegex: null,\n\t\ttagName: 'span',\n\t\tclassPrefix: 'char',\n\t\t...options\n\t}\n\n\tel.normalize()\n\tlet count = 1\n\n\tconst inject = el => {\n\t\tconst parentNode = el.parentNode\n\t\tconst str = el.nodeValue\n\t\tconst split = splitRegex ? str.split(splitRegex) : str\n\t\tconst l = split.length\n\t\tlet i = -1\n\t\twhile (++i < l) {\n\t\t\tconst node = document.createElement(tagName)\n\t\t\tif (classPrefix) {\n\t\t\t\tnode.className = classPrefix + count\n\t\t\t\tcount++\n\t\t\t}\n\t\t\tnode.appendChild(document.createTextNode(split[i]))\n\t\t\tnode.setAttribute('aria-hidden', 'true')\n\t\t\tparentNode.insertBefore(node, el)\n\t\t}\n\t\tif (str.trim() !== '') {\n\t\t\tparentNode.setAttribute('aria-label', str)\n\t\t}\n\t\tparentNode.removeChild(el)\n\t}\n\n\t(function traverse(el) {\n\t\tif (el.nodeType === 3) {\n\t\t\treturn inject(el)\n\t\t}\n\n\t\tconst childNodes = [].slice.call(el.childNodes)\n\t\tconst l = childNodes.length\n\n\t\tif (l === 1 && childNodes[0].nodeType === 3) {\n\t\t\treturn inject(childNodes[0])\n\t\t}\n\n\t\tlet i = -1\n\t\twhile (++i < l) {\n\t\t\ttraverse(childNodes[i])\n\t\t}\n\t}(el))\n}\n\n(function run() {\n\tconst wrapper = document.querySelector('.animation-wrapper')\n\tconst lines = wrapper.querySelectorAll('h3')\n\tArray.prototype.forEach.call(lines, line => splitText(line))\n\tconst els = wrapper.querySelectorAll('span')\n\n\tnew TimelineMax({\n\t\trepeat: -1\n\t}).staggerFromTo(els, .5, {\n\t\topacity: 0,\n\t\ty: 90\n\t}, {\n\t\tease: Back.easeOut.config(1.8),\n\t\topacity: 1,\n\t\ty: 0\n\t}, .05, .5).staggerTo(els, .5, {\n\t\topacity: 0,\n\t\ty: -90\n\t}, .05, '+=1.5')\n}())\n</script>\n{% endraw %}\n","source":"_posts/split-text.md","raw":"---\ntitle: splitText文本打散分离\ndate: 2019-04-03 00:00:00\ncategories: Uncategorized\nkeywords: SplitText, Lettering.js\ndescription: 文本打散分离的原生JS实现\n---\n\n{% raw %}\n<style>\n.animation-wrapper {\n\tposition: relative;\n\twidth: 100%;\n\tmin-height: 200px;\n\tpadding-top: 40%;\n\tbackground: linear-gradient(to bottom, #405166 0%, #656f6f 100%);\n\toverflow: hidden;\n\tuser-select: none;\n}\n.animation-wrapper > div {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -56%);\n}\n.animation-wrapper h3 {\n\tmargin: 0;\n\tline-height: 40px;\n\tfont-size: 36px;\n\tfont-weight: 500;\n\ttext-align: center;\n\ttext-transform: uppercase;\n\twhite-space: nowrap;\n\ttransform: rotate(-10deg);\n}\n.animation-wrapper h3:nth-child(1) {\n\tcolor: #e55643;\n}\n.animation-wrapper h3:nth-child(2) {\n\tcolor: #2b9f5e;\n}\n.animation-wrapper h3:nth-child(3) {\n\tcolor: #f1c83c;\n}\n.animation-wrapper h3 span {\n\tdisplay: inline-block;\n\tmin-width: 10px;\n\tmin-height: 40px;\n\ttext-shadow: #533d4a 1px 1px, #533d4a 2px 2px, #533d4a 3px 3px, #533d4a 4px 4px, #533d4a 5px 5px, #533d4a 6px 6px;\n\ttransform: skew(-10deg);\n}\n</style>\n\n<div class=\"scrollable-wrapper\">\n\t<div class=\"animation-wrapper\"><div>\n\t\t<h3>The cloud</h3>\n\t\t<h3>wishes</h3>\n\t\t<h3>it were a bird</h3>\n\t</div></div>\n</div>\n{% endraw %}\n\n实现类似上面的文字动画，需要DOM中将文本打散分离成单个字符。可用的工具有jQuery的Lettering.js，GreenSock动画平台的SplitText等插件。这里是文本打散分离的原生JS实现。\n\n``` JavaScript\nconst splitText = (el, options = {}) => {\n    const {\n        splitRegex,\n        tagName,\n        classPrefix\n    } = {\n        splitRegex: null,\n        tagName: 'span',\n        classPrefix: 'char',\n        ...options\n    }\n\n    // 删除空的、合并相邻的文本节点\n    el.normalize()\n    let count = 1\n\n    const inject = el => {\n        const parentNode = el.parentNode\n        const str = el.nodeValue\n        const split = splitRegex ? str.split(splitRegex) : str\n        const l = split.length\n        let i = -1\n        while (++i < l) {\n            const node = document.createElement(tagName)\n            if (classPrefix) {\n                node.className = classPrefix + count\n                count++\n            }\n            node.appendChild(document.createTextNode(split[i]))\n            node.setAttribute('aria-hidden', 'true')\n            parentNode.insertBefore(node, el)\n        }\n        if (str.trim() !== '') {\n            // 无障碍\n            parentNode.setAttribute('aria-label', str)\n        }\n        parentNode.removeChild(el)\n    }\n\n    (function traverse(el) {\n        // el为文本节点\n        if (el.nodeType === 3) {\n            return inject(el)\n        }\n\n        const childNodes = [].slice.call(el.childNodes)\n        const l = childNodes.length\n\n        // el只有一个子文本节点\n        if (l === 1 && childNodes[0].nodeType === 3) {\n            return inject(childNodes[0])\n        }\n\n        // el有多个子文本节点\n        let i = -1\n        while (++i < l) {\n            traverse(childNodes[i])\n        }\n    }(el))\n}\n```\n\n<cite>参考：https://github.com/yuanqing/charming</cite>\n\n\n{% raw %}\n<script src='/scripts/TweenMax.min.js'></script>\n<script>\nconst splitText = (el, options = {}) => {\n\tconst {\n\t\tsplitRegex,\n\t\ttagName,\n\t\tclassPrefix\n\t} = {\n\t\tsplitRegex: null,\n\t\ttagName: 'span',\n\t\tclassPrefix: 'char',\n\t\t...options\n\t}\n\n\tel.normalize()\n\tlet count = 1\n\n\tconst inject = el => {\n\t\tconst parentNode = el.parentNode\n\t\tconst str = el.nodeValue\n\t\tconst split = splitRegex ? str.split(splitRegex) : str\n\t\tconst l = split.length\n\t\tlet i = -1\n\t\twhile (++i < l) {\n\t\t\tconst node = document.createElement(tagName)\n\t\t\tif (classPrefix) {\n\t\t\t\tnode.className = classPrefix + count\n\t\t\t\tcount++\n\t\t\t}\n\t\t\tnode.appendChild(document.createTextNode(split[i]))\n\t\t\tnode.setAttribute('aria-hidden', 'true')\n\t\t\tparentNode.insertBefore(node, el)\n\t\t}\n\t\tif (str.trim() !== '') {\n\t\t\tparentNode.setAttribute('aria-label', str)\n\t\t}\n\t\tparentNode.removeChild(el)\n\t}\n\n\t(function traverse(el) {\n\t\tif (el.nodeType === 3) {\n\t\t\treturn inject(el)\n\t\t}\n\n\t\tconst childNodes = [].slice.call(el.childNodes)\n\t\tconst l = childNodes.length\n\n\t\tif (l === 1 && childNodes[0].nodeType === 3) {\n\t\t\treturn inject(childNodes[0])\n\t\t}\n\n\t\tlet i = -1\n\t\twhile (++i < l) {\n\t\t\ttraverse(childNodes[i])\n\t\t}\n\t}(el))\n}\n\n(function run() {\n\tconst wrapper = document.querySelector('.animation-wrapper')\n\tconst lines = wrapper.querySelectorAll('h3')\n\tArray.prototype.forEach.call(lines, line => splitText(line))\n\tconst els = wrapper.querySelectorAll('span')\n\n\tnew TimelineMax({\n\t\trepeat: -1\n\t}).staggerFromTo(els, .5, {\n\t\topacity: 0,\n\t\ty: 90\n\t}, {\n\t\tease: Back.easeOut.config(1.8),\n\t\topacity: 1,\n\t\ty: 0\n\t}, .05, .5).staggerTo(els, .5, {\n\t\topacity: 0,\n\t\ty: -90\n\t}, .05, '+=1.5')\n}())\n</script>\n{% endraw %}\n","slug":"split-text","published":1,"updated":"2019-04-03T09:27:28.959Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzo00353a8i7bccm1db","content":"\n<style>\n.animation-wrapper {\n\tposition: relative;\n\twidth: 100%;\n\tmin-height: 200px;\n\tpadding-top: 40%;\n\tbackground: linear-gradient(to bottom, #405166 0%, #656f6f 100%);\n\toverflow: hidden;\n\tuser-select: none;\n}\n.animation-wrapper > div {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -56%);\n}\n.animation-wrapper h3 {\n\tmargin: 0;\n\tline-height: 40px;\n\tfont-size: 36px;\n\tfont-weight: 500;\n\ttext-align: center;\n\ttext-transform: uppercase;\n\twhite-space: nowrap;\n\ttransform: rotate(-10deg);\n}\n.animation-wrapper h3:nth-child(1) {\n\tcolor: #e55643;\n}\n.animation-wrapper h3:nth-child(2) {\n\tcolor: #2b9f5e;\n}\n.animation-wrapper h3:nth-child(3) {\n\tcolor: #f1c83c;\n}\n.animation-wrapper h3 span {\n\tdisplay: inline-block;\n\tmin-width: 10px;\n\tmin-height: 40px;\n\ttext-shadow: #533d4a 1px 1px, #533d4a 2px 2px, #533d4a 3px 3px, #533d4a 4px 4px, #533d4a 5px 5px, #533d4a 6px 6px;\n\ttransform: skew(-10deg);\n}\n</style>\n\n<div class=\"scrollable-wrapper\">\n\t<div class=\"animation-wrapper\"><div>\n\t\t<h3>The cloud</h3>\n\t\t<h3>wishes</h3>\n\t\t<h3>it were a bird</h3>\n\t</div></div>\n</div>\n\n<p>实现类似上面的文字动画，需要DOM中将文本打散分离成单个字符。可用的工具有jQuery的Lettering.js，GreenSock动画平台的SplitText等插件。这里是文本打散分离的原生JS实现。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> splitText = <span class=\"function\">(<span class=\"params\">el, options = &#123;&#125;</span>) =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> &#123;</div><div class=\"line\">        splitRegex,</div><div class=\"line\">        tagName,</div><div class=\"line\">        classPrefix</div><div class=\"line\">    &#125; = &#123;</div><div class=\"line\">        splitRegex: <span class=\"literal\">null</span>,</div><div class=\"line\">        tagName: <span class=\"string\">'span'</span>,</div><div class=\"line\">        classPrefix: <span class=\"string\">'char'</span>,</div><div class=\"line\">        ...options</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 删除空的、合并相邻的文本节点</span></div><div class=\"line\">    el.normalize()</div><div class=\"line\">    <span class=\"keyword\">let</span> count = <span class=\"number\">1</span></div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">const</span> inject = <span class=\"function\"><span class=\"params\">el</span> =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> parentNode = el.parentNode</div><div class=\"line\">        <span class=\"keyword\">const</span> str = el.nodeValue</div><div class=\"line\">        <span class=\"keyword\">const</span> split = splitRegex ? str.split(splitRegex) : str</div><div class=\"line\">        <span class=\"keyword\">const</span> l = split.length</div><div class=\"line\">        <span class=\"keyword\">let</span> i = <span class=\"number\">-1</span></div><div class=\"line\">        <span class=\"keyword\">while</span> (++i &lt; l) &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> node = <span class=\"built_in\">document</span>.createElement(tagName)</div><div class=\"line\">            <span class=\"keyword\">if</span> (classPrefix) &#123;</div><div class=\"line\">                node.className = classPrefix + count</div><div class=\"line\">                count++</div><div class=\"line\">            &#125;</div><div class=\"line\">            node.appendChild(<span class=\"built_in\">document</span>.createTextNode(split[i]))</div><div class=\"line\">            node.setAttribute(<span class=\"string\">'aria-hidden'</span>, <span class=\"string\">'true'</span>)</div><div class=\"line\">            parentNode.insertBefore(node, el)</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (str.trim() !== <span class=\"string\">''</span>) &#123;</div><div class=\"line\">            <span class=\"comment\">// 无障碍</span></div><div class=\"line\">            parentNode.setAttribute(<span class=\"string\">'aria-label'</span>, str)</div><div class=\"line\">        &#125;</div><div class=\"line\">        parentNode.removeChild(el)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">traverse</span>(<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// el为文本节点</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (el.nodeType === <span class=\"number\">3</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> inject(el)</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> childNodes = [].slice.call(el.childNodes)</div><div class=\"line\">        <span class=\"keyword\">const</span> l = childNodes.length</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"comment\">// el只有一个子文本节点</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (l === <span class=\"number\">1</span> &amp;&amp; childNodes[<span class=\"number\">0</span>].nodeType === <span class=\"number\">3</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> inject(childNodes[<span class=\"number\">0</span>])</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"comment\">// el有多个子文本节点</span></div><div class=\"line\">        <span class=\"keyword\">let</span> i = <span class=\"number\">-1</span></div><div class=\"line\">        <span class=\"keyword\">while</span> (++i &lt; l) &#123;</div><div class=\"line\">            traverse(childNodes[i])</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;(el))</div><div class=\"line\">&#125;</div></pre></figure>\n<p><cite>参考：<a href=\"https://github.com/yuanqing/charming\" target=\"_blank\" rel=\"noopener\">https://github.com/yuanqing/charming</a></cite></p>\n\n<script src=\"/scripts/TweenMax.min.js\"></script>\n<script>\nconst splitText = (el, options = {}) => {\n\tconst {\n\t\tsplitRegex,\n\t\ttagName,\n\t\tclassPrefix\n\t} = {\n\t\tsplitRegex: null,\n\t\ttagName: 'span',\n\t\tclassPrefix: 'char',\n\t\t...options\n\t}\n\n\tel.normalize()\n\tlet count = 1\n\n\tconst inject = el => {\n\t\tconst parentNode = el.parentNode\n\t\tconst str = el.nodeValue\n\t\tconst split = splitRegex ? str.split(splitRegex) : str\n\t\tconst l = split.length\n\t\tlet i = -1\n\t\twhile (++i < l) {\n\t\t\tconst node = document.createElement(tagName)\n\t\t\tif (classPrefix) {\n\t\t\t\tnode.className = classPrefix + count\n\t\t\t\tcount++\n\t\t\t}\n\t\t\tnode.appendChild(document.createTextNode(split[i]))\n\t\t\tnode.setAttribute('aria-hidden', 'true')\n\t\t\tparentNode.insertBefore(node, el)\n\t\t}\n\t\tif (str.trim() !== '') {\n\t\t\tparentNode.setAttribute('aria-label', str)\n\t\t}\n\t\tparentNode.removeChild(el)\n\t}\n\n\t(function traverse(el) {\n\t\tif (el.nodeType === 3) {\n\t\t\treturn inject(el)\n\t\t}\n\n\t\tconst childNodes = [].slice.call(el.childNodes)\n\t\tconst l = childNodes.length\n\n\t\tif (l === 1 && childNodes[0].nodeType === 3) {\n\t\t\treturn inject(childNodes[0])\n\t\t}\n\n\t\tlet i = -1\n\t\twhile (++i < l) {\n\t\t\ttraverse(childNodes[i])\n\t\t}\n\t}(el))\n}\n\n(function run() {\n\tconst wrapper = document.querySelector('.animation-wrapper')\n\tconst lines = wrapper.querySelectorAll('h3')\n\tArray.prototype.forEach.call(lines, line => splitText(line))\n\tconst els = wrapper.querySelectorAll('span')\n\n\tnew TimelineMax({\n\t\trepeat: -1\n\t}).staggerFromTo(els, .5, {\n\t\topacity: 0,\n\t\ty: 90\n\t}, {\n\t\tease: Back.easeOut.config(1.8),\n\t\topacity: 1,\n\t\ty: 0\n\t}, .05, .5).staggerTo(els, .5, {\n\t\topacity: 0,\n\t\ty: -90\n\t}, .05, '+=1.5')\n}())\n</script>\n\n","site":{"data":{}},"excerpt":"","more":"\n<style>\n.animation-wrapper {\n\tposition: relative;\n\twidth: 100%;\n\tmin-height: 200px;\n\tpadding-top: 40%;\n\tbackground: linear-gradient(to bottom, #405166 0%, #656f6f 100%);\n\toverflow: hidden;\n\tuser-select: none;\n}\n.animation-wrapper > div {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -56%);\n}\n.animation-wrapper h3 {\n\tmargin: 0;\n\tline-height: 40px;\n\tfont-size: 36px;\n\tfont-weight: 500;\n\ttext-align: center;\n\ttext-transform: uppercase;\n\twhite-space: nowrap;\n\ttransform: rotate(-10deg);\n}\n.animation-wrapper h3:nth-child(1) {\n\tcolor: #e55643;\n}\n.animation-wrapper h3:nth-child(2) {\n\tcolor: #2b9f5e;\n}\n.animation-wrapper h3:nth-child(3) {\n\tcolor: #f1c83c;\n}\n.animation-wrapper h3 span {\n\tdisplay: inline-block;\n\tmin-width: 10px;\n\tmin-height: 40px;\n\ttext-shadow: #533d4a 1px 1px, #533d4a 2px 2px, #533d4a 3px 3px, #533d4a 4px 4px, #533d4a 5px 5px, #533d4a 6px 6px;\n\ttransform: skew(-10deg);\n}\n</style>\n\n<div class=\"scrollable-wrapper\">\n\t<div class=\"animation-wrapper\"><div>\n\t\t<h3>The cloud</h3>\n\t\t<h3>wishes</h3>\n\t\t<h3>it were a bird</h3>\n\t</div></div>\n</div>\n\n<p>实现类似上面的文字动画，需要DOM中将文本打散分离成单个字符。可用的工具有jQuery的Lettering.js，GreenSock动画平台的SplitText等插件。这里是文本打散分离的原生JS实现。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> splitText = <span class=\"function\">(<span class=\"params\">el, options = &#123;&#125;</span>) =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> &#123;</div><div class=\"line\">        splitRegex,</div><div class=\"line\">        tagName,</div><div class=\"line\">        classPrefix</div><div class=\"line\">    &#125; = &#123;</div><div class=\"line\">        splitRegex: <span class=\"literal\">null</span>,</div><div class=\"line\">        tagName: <span class=\"string\">'span'</span>,</div><div class=\"line\">        classPrefix: <span class=\"string\">'char'</span>,</div><div class=\"line\">        ...options</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 删除空的、合并相邻的文本节点</span></div><div class=\"line\">    el.normalize()</div><div class=\"line\">    <span class=\"keyword\">let</span> count = <span class=\"number\">1</span></div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">const</span> inject = <span class=\"function\"><span class=\"params\">el</span> =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> parentNode = el.parentNode</div><div class=\"line\">        <span class=\"keyword\">const</span> str = el.nodeValue</div><div class=\"line\">        <span class=\"keyword\">const</span> split = splitRegex ? str.split(splitRegex) : str</div><div class=\"line\">        <span class=\"keyword\">const</span> l = split.length</div><div class=\"line\">        <span class=\"keyword\">let</span> i = <span class=\"number\">-1</span></div><div class=\"line\">        <span class=\"keyword\">while</span> (++i &lt; l) &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> node = <span class=\"built_in\">document</span>.createElement(tagName)</div><div class=\"line\">            <span class=\"keyword\">if</span> (classPrefix) &#123;</div><div class=\"line\">                node.className = classPrefix + count</div><div class=\"line\">                count++</div><div class=\"line\">            &#125;</div><div class=\"line\">            node.appendChild(<span class=\"built_in\">document</span>.createTextNode(split[i]))</div><div class=\"line\">            node.setAttribute(<span class=\"string\">'aria-hidden'</span>, <span class=\"string\">'true'</span>)</div><div class=\"line\">            parentNode.insertBefore(node, el)</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (str.trim() !== <span class=\"string\">''</span>) &#123;</div><div class=\"line\">            <span class=\"comment\">// 无障碍</span></div><div class=\"line\">            parentNode.setAttribute(<span class=\"string\">'aria-label'</span>, str)</div><div class=\"line\">        &#125;</div><div class=\"line\">        parentNode.removeChild(el)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">traverse</span>(<span class=\"params\">el</span>) </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// el为文本节点</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (el.nodeType === <span class=\"number\">3</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> inject(el)</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> childNodes = [].slice.call(el.childNodes)</div><div class=\"line\">        <span class=\"keyword\">const</span> l = childNodes.length</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"comment\">// el只有一个子文本节点</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (l === <span class=\"number\">1</span> &amp;&amp; childNodes[<span class=\"number\">0</span>].nodeType === <span class=\"number\">3</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> inject(childNodes[<span class=\"number\">0</span>])</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"comment\">// el有多个子文本节点</span></div><div class=\"line\">        <span class=\"keyword\">let</span> i = <span class=\"number\">-1</span></div><div class=\"line\">        <span class=\"keyword\">while</span> (++i &lt; l) &#123;</div><div class=\"line\">            traverse(childNodes[i])</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;(el))</div><div class=\"line\">&#125;</div></pre></figure>\n<p><cite>参考：<a href=\"https://github.com/yuanqing/charming\" target=\"_blank\" rel=\"noopener\">https://github.com/yuanqing/charming</a></cite></p>\n\n<script src=\"/scripts/TweenMax.min.js\"></script>\n<script>\nconst splitText = (el, options = {}) => {\n\tconst {\n\t\tsplitRegex,\n\t\ttagName,\n\t\tclassPrefix\n\t} = {\n\t\tsplitRegex: null,\n\t\ttagName: 'span',\n\t\tclassPrefix: 'char',\n\t\t...options\n\t}\n\n\tel.normalize()\n\tlet count = 1\n\n\tconst inject = el => {\n\t\tconst parentNode = el.parentNode\n\t\tconst str = el.nodeValue\n\t\tconst split = splitRegex ? str.split(splitRegex) : str\n\t\tconst l = split.length\n\t\tlet i = -1\n\t\twhile (++i < l) {\n\t\t\tconst node = document.createElement(tagName)\n\t\t\tif (classPrefix) {\n\t\t\t\tnode.className = classPrefix + count\n\t\t\t\tcount++\n\t\t\t}\n\t\t\tnode.appendChild(document.createTextNode(split[i]))\n\t\t\tnode.setAttribute('aria-hidden', 'true')\n\t\t\tparentNode.insertBefore(node, el)\n\t\t}\n\t\tif (str.trim() !== '') {\n\t\t\tparentNode.setAttribute('aria-label', str)\n\t\t}\n\t\tparentNode.removeChild(el)\n\t}\n\n\t(function traverse(el) {\n\t\tif (el.nodeType === 3) {\n\t\t\treturn inject(el)\n\t\t}\n\n\t\tconst childNodes = [].slice.call(el.childNodes)\n\t\tconst l = childNodes.length\n\n\t\tif (l === 1 && childNodes[0].nodeType === 3) {\n\t\t\treturn inject(childNodes[0])\n\t\t}\n\n\t\tlet i = -1\n\t\twhile (++i < l) {\n\t\t\ttraverse(childNodes[i])\n\t\t}\n\t}(el))\n}\n\n(function run() {\n\tconst wrapper = document.querySelector('.animation-wrapper')\n\tconst lines = wrapper.querySelectorAll('h3')\n\tArray.prototype.forEach.call(lines, line => splitText(line))\n\tconst els = wrapper.querySelectorAll('span')\n\n\tnew TimelineMax({\n\t\trepeat: -1\n\t}).staggerFromTo(els, .5, {\n\t\topacity: 0,\n\t\ty: 90\n\t}, {\n\t\tease: Back.easeOut.config(1.8),\n\t\topacity: 1,\n\t\ty: 0\n\t}, .05, .5).staggerTo(els, .5, {\n\t\topacity: 0,\n\t\ty: -90\n\t}, .05, '+=1.5')\n}())\n</script>\n\n"},{"title":"webpack点滴","date":"2019-09-29T16:00:00.000Z","keywords":"webpack","description":"webpack","_content":"\n## 初始化项目，安装webpack\n\n```\nmkdir my-project\ncd my-project\nnpm init -y\nnpm install webpack webpack-cli --save-dev\n```\n\n## webpack.config.js配置\n\n``` JavaScript\nconst path = require('path')\n\nmodule.exports = {\n    entry: './src/index.js',\n    output: {\n        filename: 'bundle.js',\n        path: path.resolve(__dirname, 'dist')\n    },\n    mode: 'development' // production或none\n}\n```\n\n## entry\n\n``` JavaScript\n// 单入口\nentry: './path/to/my/entry/file.js'\n\n// 多入口\nentry: {\n    app: './src/app.js',\n    vendors: './src/vendors.js'\n}\n```\n\n## output\n\n``` JavaScript\noutput: {\n    filename: 'bundle.js',\n    path: path.resolve(__dirname, 'dist')\n}\n\n// 多个入口起点，可使用[hash]、[chunkhash]、[name]、[id]、[query]\nfilename: '[name].bundle.js',\n```\n\n## loader\n\n``` JavaScript\nmodule: {\n    rules: [\n        { test: /\\.css$/, use: 'css-loader' },\n        { test: /\\.ts$/, use: 'ts-loader' }\n    ]\n}\n```\n\n## plugins\n\n常用的plugins\n\nName | Description\n--- | ---\nCommonsChunkPlugin | 将chunks相同的模块代码提取成公共js\nCleanWebpackPlugin | 清理构建目录\nMiniCssExtractPlugin | 将CSS从bundle文件里提取成独立的CSS文件\nCopyWebpackPlugin | 将文件或目录拷贝到构建目录\nHtmlWebpackPlugin | 创建html文件以承载输出的bundle\nUglifyjsWebpackPlugin | 压缩js\n\n``` JavaScript\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst webpack = require('webpack')\nplugins: [\n    new HtmlWebpackPlugin({template: './src/index.html'}),\n    new webpack.optimize.UglifyJsPlugin()\n]\n```\n\n## 解析ES6\n\n``` JavaScript\nrules: [\n    { test: /\\.js$/, use: 'babel-loader' }\n]\n```\n\n安装\n\n```\nnpm i babel-loader @babel/core @babel/preset-env -D\n```\n\n配置\n\n``` JSON .babelrc\n{\n    \"presets\": [\n        \"@babel/preset-env\"\n    ]\n}\n```\n\n## 解析Less\n\n``` JavaScript\nrules: [\n    {\n        test: /\\.less$/,\n        use: ['style-loader', 'css-loader', 'less-loader']\n    }\n]\n```\n\n## 解析图片\n\n``` JavaScript\nrules: [\n    {\n        test: /\\.(png|jpg|jpeg|gif)$/,\n        use: ['file-loader']\n    }\n]\n```\n\n可使用url-loader将小图片用base64引入。\n\n## 文件监听\n\n``` JavaScript\nmodule.exports = {\n    watch: true\n}\n```\n\n## 热更新\n\n``` JavaScript\nconst webpack = require('webpack')\nmodule.exports = {\n    plugins: [\n        new webpack.HotModuleReplacementPlugin()\n    ],\n    devServer: {\n        contentBase: './dist',\n        hot: true\n    },\n    mode: 'development'\n}\n```\n\n命令\n\n``` JSON\n\"scripts\": {\n    \"dev\": \"webpack-dev-server --open\"\n}\n```\n\n也可以使用webpack-dev-middleware实现热更新。\n\n``` JavaScript server.js\nconst express = require('express')\nconst webpack = require('webpack')\nconst webpackDevMiddleware = require('webpack-dev-middleware')\n\nconst app = express()\nconst config = require('./webpack.config.js')\nconst compiler = webpack(config)\n\napp.use(webpackDevMiddleware(compiler, {\n    publicPath: '/'\n}))\n\napp.listen(3000, function () {\n    console.log('Listening on port 3000');\n})\n```\n\n命令\n\n``` JSON\n\"scripts\": {\n    \"server\": \"node server.js\"\n}\n```\n\n## 文件指纹\n\n- hash: 和整个项目的构建相关，只要项目文件有修改，整个项目的hash值就会更改\n- chunkhash: 和打包的chunk相关，不同entry会生成不同的chunkhash\n- contenthash: 由文件内容生成\n\n__JS文件__\n\n``` JavaScript\noutput: {\n    filename: '[name][chunkhash:8].js'\n}\n```\n\n__CSS文件__\n\n``` JavaScript\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\n\nmodule.exports = {\n    plugins: [\n        new MiniCssExtractPlugin({\n            filename: '[name][contenthash:8].css',\n        })\n    ],\n    rules: [\n        {\n            test: /\\.less$/,\n            use: [\n                MiniCssExtractPlugin.loader,\n                'css-loader',\n                'less-loader'\n            ]\n        }\n    ]\n}\n```\n\n__图片、字体__\n\n``` JavaScript\n// file-loader中的hash即为contenthash\nrules: [\n    {\n        test: /\\.(woff2?|eot|ttf|otf)$/,\n        use: [\n            loader: 'file-loader',\n            options: {\n                name: '[name][hash:8].[ext]'\n            }\n        ]\n    }\n]\n```\n\n## 代码压缩\n\n__JS文件__\n\nwebpack4中已经内置并默认开启了uglifyjs-webpack-plugin，用于JS文件的压缩。\n\n__CSS文件__\n\n``` JavaScript\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin')\n\nmodule.exports = {\n    plugins: [\n        new MiniCssExtractPlugin({\n            filename: '[name][contenthash:8].css',\n        }),\n        new OptimizeCSSAssetsPlugin({\n            assetNameRegExp: /\\.css$/g,\n            cssProcessor: require('cssnano')\n        })\n    ]\n}\n```\n\n__HTML文件__\n\n通过设置html-webpack-plugin的压缩参数实现。\n\n``` JavaScript\nplugins: [\n    new HtmlWebpackPlugin({\n        template: './src/index.html',\n        filename: 'index.html',\n        chunks: ['index'],\n        minify: {\n            collapseWhitespace: true,\n            removeComments: true\n        }\n    })\n]\n```\n\n## 清理构建目录\n\n``` JavaScript\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin')\n\n// webpack's output.path directory will be removed\nplugins: [\n    new CleanWebpackPlugin()\n]\n```\n\n## 补齐CSS3前缀\n\n安装\n\n```\nnpm i postcss-loader autoprefixer -D\n```\n\n``` JavaScript\nuse: [\n    MiniCssExtractPlugin.loader,\n    'css-loader',\n    'less-loader',\n    {\n        loader: 'postcss-loader',\n        options: {\n            ident: 'postcss',\n            plugins: [\n                require('autoprefixer')({\n                    browsers: ['> 1%', 'last 2 versions', 'not ie <= 8']\n                })\n            ]\n        }\n    }\n]\n```\n\n## px转换成rem\n\n``` JavaScript\n{\n    loader: 'px2rem-loader',\n    options: {\n        remUnit: 75,\n        remPrecision: 8\n    }\n}\n```\n\n在html文件中添加根元素font-size自动计算方法。\n\n_待续 ~_\n\n\n\n\n\n\n\n","source":"_posts/webpack.md","raw":"---\ntitle: webpack点滴\ndate: 2019-09-30 00:00:00\ncategories: Uncategorized\nkeywords: webpack\ndescription: webpack\n---\n\n## 初始化项目，安装webpack\n\n```\nmkdir my-project\ncd my-project\nnpm init -y\nnpm install webpack webpack-cli --save-dev\n```\n\n## webpack.config.js配置\n\n``` JavaScript\nconst path = require('path')\n\nmodule.exports = {\n    entry: './src/index.js',\n    output: {\n        filename: 'bundle.js',\n        path: path.resolve(__dirname, 'dist')\n    },\n    mode: 'development' // production或none\n}\n```\n\n## entry\n\n``` JavaScript\n// 单入口\nentry: './path/to/my/entry/file.js'\n\n// 多入口\nentry: {\n    app: './src/app.js',\n    vendors: './src/vendors.js'\n}\n```\n\n## output\n\n``` JavaScript\noutput: {\n    filename: 'bundle.js',\n    path: path.resolve(__dirname, 'dist')\n}\n\n// 多个入口起点，可使用[hash]、[chunkhash]、[name]、[id]、[query]\nfilename: '[name].bundle.js',\n```\n\n## loader\n\n``` JavaScript\nmodule: {\n    rules: [\n        { test: /\\.css$/, use: 'css-loader' },\n        { test: /\\.ts$/, use: 'ts-loader' }\n    ]\n}\n```\n\n## plugins\n\n常用的plugins\n\nName | Description\n--- | ---\nCommonsChunkPlugin | 将chunks相同的模块代码提取成公共js\nCleanWebpackPlugin | 清理构建目录\nMiniCssExtractPlugin | 将CSS从bundle文件里提取成独立的CSS文件\nCopyWebpackPlugin | 将文件或目录拷贝到构建目录\nHtmlWebpackPlugin | 创建html文件以承载输出的bundle\nUglifyjsWebpackPlugin | 压缩js\n\n``` JavaScript\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst webpack = require('webpack')\nplugins: [\n    new HtmlWebpackPlugin({template: './src/index.html'}),\n    new webpack.optimize.UglifyJsPlugin()\n]\n```\n\n## 解析ES6\n\n``` JavaScript\nrules: [\n    { test: /\\.js$/, use: 'babel-loader' }\n]\n```\n\n安装\n\n```\nnpm i babel-loader @babel/core @babel/preset-env -D\n```\n\n配置\n\n``` JSON .babelrc\n{\n    \"presets\": [\n        \"@babel/preset-env\"\n    ]\n}\n```\n\n## 解析Less\n\n``` JavaScript\nrules: [\n    {\n        test: /\\.less$/,\n        use: ['style-loader', 'css-loader', 'less-loader']\n    }\n]\n```\n\n## 解析图片\n\n``` JavaScript\nrules: [\n    {\n        test: /\\.(png|jpg|jpeg|gif)$/,\n        use: ['file-loader']\n    }\n]\n```\n\n可使用url-loader将小图片用base64引入。\n\n## 文件监听\n\n``` JavaScript\nmodule.exports = {\n    watch: true\n}\n```\n\n## 热更新\n\n``` JavaScript\nconst webpack = require('webpack')\nmodule.exports = {\n    plugins: [\n        new webpack.HotModuleReplacementPlugin()\n    ],\n    devServer: {\n        contentBase: './dist',\n        hot: true\n    },\n    mode: 'development'\n}\n```\n\n命令\n\n``` JSON\n\"scripts\": {\n    \"dev\": \"webpack-dev-server --open\"\n}\n```\n\n也可以使用webpack-dev-middleware实现热更新。\n\n``` JavaScript server.js\nconst express = require('express')\nconst webpack = require('webpack')\nconst webpackDevMiddleware = require('webpack-dev-middleware')\n\nconst app = express()\nconst config = require('./webpack.config.js')\nconst compiler = webpack(config)\n\napp.use(webpackDevMiddleware(compiler, {\n    publicPath: '/'\n}))\n\napp.listen(3000, function () {\n    console.log('Listening on port 3000');\n})\n```\n\n命令\n\n``` JSON\n\"scripts\": {\n    \"server\": \"node server.js\"\n}\n```\n\n## 文件指纹\n\n- hash: 和整个项目的构建相关，只要项目文件有修改，整个项目的hash值就会更改\n- chunkhash: 和打包的chunk相关，不同entry会生成不同的chunkhash\n- contenthash: 由文件内容生成\n\n__JS文件__\n\n``` JavaScript\noutput: {\n    filename: '[name][chunkhash:8].js'\n}\n```\n\n__CSS文件__\n\n``` JavaScript\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\n\nmodule.exports = {\n    plugins: [\n        new MiniCssExtractPlugin({\n            filename: '[name][contenthash:8].css',\n        })\n    ],\n    rules: [\n        {\n            test: /\\.less$/,\n            use: [\n                MiniCssExtractPlugin.loader,\n                'css-loader',\n                'less-loader'\n            ]\n        }\n    ]\n}\n```\n\n__图片、字体__\n\n``` JavaScript\n// file-loader中的hash即为contenthash\nrules: [\n    {\n        test: /\\.(woff2?|eot|ttf|otf)$/,\n        use: [\n            loader: 'file-loader',\n            options: {\n                name: '[name][hash:8].[ext]'\n            }\n        ]\n    }\n]\n```\n\n## 代码压缩\n\n__JS文件__\n\nwebpack4中已经内置并默认开启了uglifyjs-webpack-plugin，用于JS文件的压缩。\n\n__CSS文件__\n\n``` JavaScript\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin')\n\nmodule.exports = {\n    plugins: [\n        new MiniCssExtractPlugin({\n            filename: '[name][contenthash:8].css',\n        }),\n        new OptimizeCSSAssetsPlugin({\n            assetNameRegExp: /\\.css$/g,\n            cssProcessor: require('cssnano')\n        })\n    ]\n}\n```\n\n__HTML文件__\n\n通过设置html-webpack-plugin的压缩参数实现。\n\n``` JavaScript\nplugins: [\n    new HtmlWebpackPlugin({\n        template: './src/index.html',\n        filename: 'index.html',\n        chunks: ['index'],\n        minify: {\n            collapseWhitespace: true,\n            removeComments: true\n        }\n    })\n]\n```\n\n## 清理构建目录\n\n``` JavaScript\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin')\n\n// webpack's output.path directory will be removed\nplugins: [\n    new CleanWebpackPlugin()\n]\n```\n\n## 补齐CSS3前缀\n\n安装\n\n```\nnpm i postcss-loader autoprefixer -D\n```\n\n``` JavaScript\nuse: [\n    MiniCssExtractPlugin.loader,\n    'css-loader',\n    'less-loader',\n    {\n        loader: 'postcss-loader',\n        options: {\n            ident: 'postcss',\n            plugins: [\n                require('autoprefixer')({\n                    browsers: ['> 1%', 'last 2 versions', 'not ie <= 8']\n                })\n            ]\n        }\n    }\n]\n```\n\n## px转换成rem\n\n``` JavaScript\n{\n    loader: 'px2rem-loader',\n    options: {\n        remUnit: 75,\n        remPrecision: 8\n    }\n}\n```\n\n在html文件中添加根元素font-size自动计算方法。\n\n_待续 ~_\n\n\n\n\n\n\n\n","slug":"webpack","published":1,"updated":"2019-10-12T06:57:22.423Z","_id":"ck160emzp00373a8imdi86qx1","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"初始化项目，安装webpack\"><a href=\"#初始化项目，安装webpack\" class=\"headerlink\" title=\"初始化项目，安装webpack\"></a>初始化项目，安装webpack</h2><figure class=\"highlight plain\"><pre><div class=\"line\">mkdir my-project</div><div class=\"line\">cd my-project</div><div class=\"line\">npm init -y</div><div class=\"line\">npm install webpack webpack-cli --save-dev</div></pre></figure>\n<h2 id=\"webpack-config-js配置\"><a href=\"#webpack-config-js配置\" class=\"headerlink\" title=\"webpack.config.js配置\"></a>webpack.config.js配置</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    entry: <span class=\"string\">'./src/index.js'</span>,</div><div class=\"line\">    output: &#123;</div><div class=\"line\">        filename: <span class=\"string\">'bundle.js'</span>,</div><div class=\"line\">        path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    mode: <span class=\"string\">'development'</span> <span class=\"comment\">// production或none</span></div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"entry\"><a href=\"#entry\" class=\"headerlink\" title=\"entry\"></a>entry</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// 单入口</span></div><div class=\"line\">entry: <span class=\"string\">'./path/to/my/entry/file.js'</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 多入口</span></div><div class=\"line\">entry: &#123;</div><div class=\"line\">    app: <span class=\"string\">'./src/app.js'</span>,</div><div class=\"line\">    vendors: <span class=\"string\">'./src/vendors.js'</span></div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"output\"><a href=\"#output\" class=\"headerlink\" title=\"output\"></a>output</h2><figure class=\"highlight javascript\"><pre><div class=\"line\">output: &#123;</div><div class=\"line\">    filename: <span class=\"string\">'bundle.js'</span>,</div><div class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 多个入口起点，可使用[hash]、[chunkhash]、[name]、[id]、[query]</span></div><div class=\"line\">filename: <span class=\"string\">'[name].bundle.js'</span>,</div></pre></figure>\n<h2 id=\"loader\"><a href=\"#loader\" class=\"headerlink\" title=\"loader\"></a>loader</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"built_in\">module</span>: &#123;</div><div class=\"line\">    rules: [</div><div class=\"line\">        &#123; <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>, <span class=\"attr\">use</span>: <span class=\"string\">'css-loader'</span> &#125;,</div><div class=\"line\">        &#123; <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.ts$/</span>, <span class=\"attr\">use</span>: <span class=\"string\">'ts-loader'</span> &#125;</div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"plugins\"><a href=\"#plugins\" class=\"headerlink\" title=\"plugins\"></a>plugins</h2><p>常用的plugins</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CommonsChunkPlugin</td>\n<td>将chunks相同的模块代码提取成公共js</td>\n</tr>\n<tr>\n<td>CleanWebpackPlugin</td>\n<td>清理构建目录</td>\n</tr>\n<tr>\n<td>MiniCssExtractPlugin</td>\n<td>将CSS从bundle文件里提取成独立的CSS文件</td>\n</tr>\n<tr>\n<td>CopyWebpackPlugin</td>\n<td>将文件或目录拷贝到构建目录</td>\n</tr>\n<tr>\n<td>HtmlWebpackPlugin</td>\n<td>创建html文件以承载输出的bundle</td>\n</tr>\n<tr>\n<td>UglifyjsWebpackPlugin</td>\n<td>压缩js</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</div><div class=\"line\">plugins: [</div><div class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;<span class=\"attr\">template</span>: <span class=\"string\">'./src/index.html'</span>&#125;),</div><div class=\"line\">    <span class=\"keyword\">new</span> webpack.optimize.UglifyJsPlugin()</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"解析ES6\"><a href=\"#解析ES6\" class=\"headerlink\" title=\"解析ES6\"></a>解析ES6</h2><figure class=\"highlight javascript\"><pre><div class=\"line\">rules: [</div><div class=\"line\">    &#123; <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.js$/</span>, <span class=\"attr\">use</span>: <span class=\"string\">'babel-loader'</span> &#125;</div><div class=\"line\">]</div></pre></figure>\n<p>安装</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">npm i babel-loader @babel/core @babel/preset-env -D</div></pre></figure>\n<p>配置</p>\n<figure class=\"highlight json\"><figcaption><span>.babelrc</span></figcaption><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">\"presets\"</span>: [</div><div class=\"line\">        <span class=\"string\">\"@babel/preset-env\"</span></div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"解析Less\"><a href=\"#解析Less\" class=\"headerlink\" title=\"解析Less\"></a>解析Less</h2><figure class=\"highlight javascript\"><pre><div class=\"line\">rules: [</div><div class=\"line\">    &#123;</div><div class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</div><div class=\"line\">        use: [<span class=\"string\">'style-loader'</span>, <span class=\"string\">'css-loader'</span>, <span class=\"string\">'less-loader'</span>]</div><div class=\"line\">    &#125;</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"解析图片\"><a href=\"#解析图片\" class=\"headerlink\" title=\"解析图片\"></a>解析图片</h2><figure class=\"highlight javascript\"><pre><div class=\"line\">rules: [</div><div class=\"line\">    &#123;</div><div class=\"line\">        test: <span class=\"regexp\">/\\.(png|jpg|jpeg|gif)$/</span>,</div><div class=\"line\">        use: [<span class=\"string\">'file-loader'</span>]</div><div class=\"line\">    &#125;</div><div class=\"line\">]</div></pre></figure>\n<p>可使用url-loader将小图片用base64引入。</p>\n<h2 id=\"文件监听\"><a href=\"#文件监听\" class=\"headerlink\" title=\"文件监听\"></a>文件监听</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    watch: <span class=\"literal\">true</span></div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"热更新\"><a href=\"#热更新\" class=\"headerlink\" title=\"热更新\"></a>热更新</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    plugins: [</div><div class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin()</div><div class=\"line\">    ],</div><div class=\"line\">    devServer: &#123;</div><div class=\"line\">        contentBase: <span class=\"string\">'./dist'</span>,</div><div class=\"line\">        hot: <span class=\"literal\">true</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    mode: <span class=\"string\">'development'</span></div><div class=\"line\">&#125;</div></pre></figure>\n<p>命令</p>\n<figure class=\"highlight\"><pre><div class=\"line\">\"scripts\": &#123;</div><div class=\"line\">    \"dev\": \"webpack-dev-server --open\"</div><div class=\"line\">&#125;</div></pre></figure>\n<p>也可以使用webpack-dev-middleware实现热更新。</p>\n<figure class=\"highlight javascript\"><figcaption><span>server.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> webpackDevMiddleware = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-dev-middleware'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> app = express()</div><div class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.config.js'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> compiler = webpack(config)</div><div class=\"line\"><br></div><div class=\"line\">app.use(webpackDevMiddleware(compiler, &#123;</div><div class=\"line\">    publicPath: <span class=\"string\">'/'</span></div><div class=\"line\">&#125;))</div><div class=\"line\"><br></div><div class=\"line\">app.listen(<span class=\"number\">3000</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Listening on port 3000'</span>);</div><div class=\"line\">&#125;)</div></pre></figure>\n<p>命令</p>\n<figure class=\"highlight\"><pre><div class=\"line\">\"scripts\": &#123;</div><div class=\"line\">    \"server\": \"node server.js\"</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"文件指纹\"><a href=\"#文件指纹\" class=\"headerlink\" title=\"文件指纹\"></a>文件指纹</h2><ul>\n<li>hash: 和整个项目的构建相关，只要项目文件有修改，整个项目的hash值就会更改</li>\n<li>chunkhash: 和打包的chunk相关，不同entry会生成不同的chunkhash</li>\n<li>contenthash: 由文件内容生成</li>\n</ul>\n<p><strong>JS文件</strong></p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">output: &#123;</div><div class=\"line\">    filename: <span class=\"string\">'[name][chunkhash:8].js'</span></div><div class=\"line\">&#125;</div></pre></figure>\n<p><strong>CSS文件</strong></p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'mini-css-extract-plugin'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    plugins: [</div><div class=\"line\">        <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</div><div class=\"line\">            filename: <span class=\"string\">'[name][contenthash:8].css'</span>,</div><div class=\"line\">        &#125;)</div><div class=\"line\">    ],</div><div class=\"line\">    rules: [</div><div class=\"line\">        &#123;</div><div class=\"line\">            test: <span class=\"regexp\">/\\.less$/</span>,</div><div class=\"line\">            use: [</div><div class=\"line\">                MiniCssExtractPlugin.loader,</div><div class=\"line\">                <span class=\"string\">'css-loader'</span>,</div><div class=\"line\">                <span class=\"string\">'less-loader'</span></div><div class=\"line\">            ]</div><div class=\"line\">        &#125;</div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></figure>\n<p><strong>图片、字体</strong></p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// file-loader中的hash即为contenthash</span></div><div class=\"line\">rules: [</div><div class=\"line\">    &#123;</div><div class=\"line\">        test: <span class=\"regexp\">/\\.(woff2?|eot|ttf|otf)$/</span>,</div><div class=\"line\">        use: [</div><div class=\"line\">            loader: <span class=\"string\">'file-loader'</span>,</div><div class=\"line\">            options: &#123;</div><div class=\"line\">                name: <span class=\"string\">'[name][hash:8].[ext]'</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        ]</div><div class=\"line\">    &#125;</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"代码压缩\"><a href=\"#代码压缩\" class=\"headerlink\" title=\"代码压缩\"></a>代码压缩</h2><p><strong>JS文件</strong></p>\n<p>webpack4中已经内置并默认开启了uglifyjs-webpack-plugin，用于JS文件的压缩。</p>\n<p><strong>CSS文件</strong></p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'mini-css-extract-plugin'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> OptimizeCSSAssetsPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'optimize-css-assets-webpack-plugin'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    plugins: [</div><div class=\"line\">        <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</div><div class=\"line\">            filename: <span class=\"string\">'[name][contenthash:8].css'</span>,</div><div class=\"line\">        &#125;),</div><div class=\"line\">        <span class=\"keyword\">new</span> OptimizeCSSAssetsPlugin(&#123;</div><div class=\"line\">            assetNameRegExp: <span class=\"regexp\">/\\.css$/g</span>,</div><div class=\"line\">            cssProcessor: <span class=\"built_in\">require</span>(<span class=\"string\">'cssnano'</span>)</div><div class=\"line\">        &#125;)</div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></figure>\n<p><strong>HTML文件</strong></p>\n<p>通过设置html-webpack-plugin的压缩参数实现。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">plugins: [</div><div class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</div><div class=\"line\">        template: <span class=\"string\">'./src/index.html'</span>,</div><div class=\"line\">        filename: <span class=\"string\">'index.html'</span>,</div><div class=\"line\">        chunks: [<span class=\"string\">'index'</span>],</div><div class=\"line\">        minify: &#123;</div><div class=\"line\">            collapseWhitespace: <span class=\"literal\">true</span>,</div><div class=\"line\">            removeComments: <span class=\"literal\">true</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"清理构建目录\"><a href=\"#清理构建目录\" class=\"headerlink\" title=\"清理构建目录\"></a>清理构建目录</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> &#123; CleanWebpackPlugin &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'clean-webpack-plugin'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// webpack's output.path directory will be removed</span></div><div class=\"line\">plugins: [</div><div class=\"line\">    <span class=\"keyword\">new</span> CleanWebpackPlugin()</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"补齐CSS3前缀\"><a href=\"#补齐CSS3前缀\" class=\"headerlink\" title=\"补齐CSS3前缀\"></a>补齐CSS3前缀</h2><p>安装</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">npm i postcss-loader autoprefixer -D</div></pre></figure>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">use: [</div><div class=\"line\">    MiniCssExtractPlugin.loader,</div><div class=\"line\">    <span class=\"string\">'css-loader'</span>,</div><div class=\"line\">    <span class=\"string\">'less-loader'</span>,</div><div class=\"line\">    &#123;</div><div class=\"line\">        loader: <span class=\"string\">'postcss-loader'</span>,</div><div class=\"line\">        options: &#123;</div><div class=\"line\">            ident: <span class=\"string\">'postcss'</span>,</div><div class=\"line\">            plugins: [</div><div class=\"line\">                <span class=\"built_in\">require</span>(<span class=\"string\">'autoprefixer'</span>)(&#123;</div><div class=\"line\">                    browsers: [<span class=\"string\">'&gt; 1%'</span>, <span class=\"string\">'last 2 versions'</span>, <span class=\"string\">'not ie &lt;= 8'</span>]</div><div class=\"line\">                &#125;)</div><div class=\"line\">            ]</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"px转换成rem\"><a href=\"#px转换成rem\" class=\"headerlink\" title=\"px转换成rem\"></a>px转换成rem</h2><figure class=\"highlight javascript\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    loader: <span class=\"string\">'px2rem-loader'</span>,</div><div class=\"line\">    options: &#123;</div><div class=\"line\">        remUnit: <span class=\"number\">75</span>,</div><div class=\"line\">        remPrecision: <span class=\"number\">8</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>在html文件中添加根元素font-size自动计算方法。</p>\n<p><em>待续 ~</em></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"初始化项目，安装webpack\"><a href=\"#初始化项目，安装webpack\" class=\"headerlink\" title=\"初始化项目，安装webpack\"></a>初始化项目，安装webpack</h2><figure class=\"highlight plain\"><pre><div class=\"line\">mkdir my-project</div><div class=\"line\">cd my-project</div><div class=\"line\">npm init -y</div><div class=\"line\">npm install webpack webpack-cli --save-dev</div></pre></figure>\n<h2 id=\"webpack-config-js配置\"><a href=\"#webpack-config-js配置\" class=\"headerlink\" title=\"webpack.config.js配置\"></a>webpack.config.js配置</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    entry: <span class=\"string\">'./src/index.js'</span>,</div><div class=\"line\">    output: &#123;</div><div class=\"line\">        filename: <span class=\"string\">'bundle.js'</span>,</div><div class=\"line\">        path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</div><div class=\"line\">    &#125;,</div><div class=\"line\">    mode: <span class=\"string\">'development'</span> <span class=\"comment\">// production或none</span></div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"entry\"><a href=\"#entry\" class=\"headerlink\" title=\"entry\"></a>entry</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// 单入口</span></div><div class=\"line\">entry: <span class=\"string\">'./path/to/my/entry/file.js'</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 多入口</span></div><div class=\"line\">entry: &#123;</div><div class=\"line\">    app: <span class=\"string\">'./src/app.js'</span>,</div><div class=\"line\">    vendors: <span class=\"string\">'./src/vendors.js'</span></div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"output\"><a href=\"#output\" class=\"headerlink\" title=\"output\"></a>output</h2><figure class=\"highlight javascript\"><pre><div class=\"line\">output: &#123;</div><div class=\"line\">    filename: <span class=\"string\">'bundle.js'</span>,</div><div class=\"line\">    path: path.resolve(__dirname, <span class=\"string\">'dist'</span>)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 多个入口起点，可使用[hash]、[chunkhash]、[name]、[id]、[query]</span></div><div class=\"line\">filename: <span class=\"string\">'[name].bundle.js'</span>,</div></pre></figure>\n<h2 id=\"loader\"><a href=\"#loader\" class=\"headerlink\" title=\"loader\"></a>loader</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"built_in\">module</span>: &#123;</div><div class=\"line\">    rules: [</div><div class=\"line\">        &#123; <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>, <span class=\"attr\">use</span>: <span class=\"string\">'css-loader'</span> &#125;,</div><div class=\"line\">        &#123; <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.ts$/</span>, <span class=\"attr\">use</span>: <span class=\"string\">'ts-loader'</span> &#125;</div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"plugins\"><a href=\"#plugins\" class=\"headerlink\" title=\"plugins\"></a>plugins</h2><p>常用的plugins</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CommonsChunkPlugin</td>\n<td>将chunks相同的模块代码提取成公共js</td>\n</tr>\n<tr>\n<td>CleanWebpackPlugin</td>\n<td>清理构建目录</td>\n</tr>\n<tr>\n<td>MiniCssExtractPlugin</td>\n<td>将CSS从bundle文件里提取成独立的CSS文件</td>\n</tr>\n<tr>\n<td>CopyWebpackPlugin</td>\n<td>将文件或目录拷贝到构建目录</td>\n</tr>\n<tr>\n<td>HtmlWebpackPlugin</td>\n<td>创建html文件以承载输出的bundle</td>\n</tr>\n<tr>\n<td>UglifyjsWebpackPlugin</td>\n<td>压缩js</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</div><div class=\"line\">plugins: [</div><div class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;<span class=\"attr\">template</span>: <span class=\"string\">'./src/index.html'</span>&#125;),</div><div class=\"line\">    <span class=\"keyword\">new</span> webpack.optimize.UglifyJsPlugin()</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"解析ES6\"><a href=\"#解析ES6\" class=\"headerlink\" title=\"解析ES6\"></a>解析ES6</h2><figure class=\"highlight javascript\"><pre><div class=\"line\">rules: [</div><div class=\"line\">    &#123; <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.js$/</span>, <span class=\"attr\">use</span>: <span class=\"string\">'babel-loader'</span> &#125;</div><div class=\"line\">]</div></pre></figure>\n<p>安装</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">npm i babel-loader @babel/core @babel/preset-env -D</div></pre></figure>\n<p>配置</p>\n<figure class=\"highlight json\"><figcaption><span>.babelrc</span></figcaption><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">\"presets\"</span>: [</div><div class=\"line\">        <span class=\"string\">\"@babel/preset-env\"</span></div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"解析Less\"><a href=\"#解析Less\" class=\"headerlink\" title=\"解析Less\"></a>解析Less</h2><figure class=\"highlight javascript\"><pre><div class=\"line\">rules: [</div><div class=\"line\">    &#123;</div><div class=\"line\">        test: <span class=\"regexp\">/\\.less$/</span>,</div><div class=\"line\">        use: [<span class=\"string\">'style-loader'</span>, <span class=\"string\">'css-loader'</span>, <span class=\"string\">'less-loader'</span>]</div><div class=\"line\">    &#125;</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"解析图片\"><a href=\"#解析图片\" class=\"headerlink\" title=\"解析图片\"></a>解析图片</h2><figure class=\"highlight javascript\"><pre><div class=\"line\">rules: [</div><div class=\"line\">    &#123;</div><div class=\"line\">        test: <span class=\"regexp\">/\\.(png|jpg|jpeg|gif)$/</span>,</div><div class=\"line\">        use: [<span class=\"string\">'file-loader'</span>]</div><div class=\"line\">    &#125;</div><div class=\"line\">]</div></pre></figure>\n<p>可使用url-loader将小图片用base64引入。</p>\n<h2 id=\"文件监听\"><a href=\"#文件监听\" class=\"headerlink\" title=\"文件监听\"></a>文件监听</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    watch: <span class=\"literal\">true</span></div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"热更新\"><a href=\"#热更新\" class=\"headerlink\" title=\"热更新\"></a>热更新</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    plugins: [</div><div class=\"line\">        <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin()</div><div class=\"line\">    ],</div><div class=\"line\">    devServer: &#123;</div><div class=\"line\">        contentBase: <span class=\"string\">'./dist'</span>,</div><div class=\"line\">        hot: <span class=\"literal\">true</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    mode: <span class=\"string\">'development'</span></div><div class=\"line\">&#125;</div></pre></figure>\n<p>命令</p>\n<figure class=\"highlight\"><pre><div class=\"line\">\"scripts\": &#123;</div><div class=\"line\">    \"dev\": \"webpack-dev-server --open\"</div><div class=\"line\">&#125;</div></pre></figure>\n<p>也可以使用webpack-dev-middleware实现热更新。</p>\n<figure class=\"highlight javascript\"><figcaption><span>server.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> webpackDevMiddleware = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-dev-middleware'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">const</span> app = express()</div><div class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.config.js'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> compiler = webpack(config)</div><div class=\"line\"><br></div><div class=\"line\">app.use(webpackDevMiddleware(compiler, &#123;</div><div class=\"line\">    publicPath: <span class=\"string\">'/'</span></div><div class=\"line\">&#125;))</div><div class=\"line\"><br></div><div class=\"line\">app.listen(<span class=\"number\">3000</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Listening on port 3000'</span>);</div><div class=\"line\">&#125;)</div></pre></figure>\n<p>命令</p>\n<figure class=\"highlight\"><pre><div class=\"line\">\"scripts\": &#123;</div><div class=\"line\">    \"server\": \"node server.js\"</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"文件指纹\"><a href=\"#文件指纹\" class=\"headerlink\" title=\"文件指纹\"></a>文件指纹</h2><ul>\n<li>hash: 和整个项目的构建相关，只要项目文件有修改，整个项目的hash值就会更改</li>\n<li>chunkhash: 和打包的chunk相关，不同entry会生成不同的chunkhash</li>\n<li>contenthash: 由文件内容生成</li>\n</ul>\n<p><strong>JS文件</strong></p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">output: &#123;</div><div class=\"line\">    filename: <span class=\"string\">'[name][chunkhash:8].js'</span></div><div class=\"line\">&#125;</div></pre></figure>\n<p><strong>CSS文件</strong></p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'mini-css-extract-plugin'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    plugins: [</div><div class=\"line\">        <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</div><div class=\"line\">            filename: <span class=\"string\">'[name][contenthash:8].css'</span>,</div><div class=\"line\">        &#125;)</div><div class=\"line\">    ],</div><div class=\"line\">    rules: [</div><div class=\"line\">        &#123;</div><div class=\"line\">            test: <span class=\"regexp\">/\\.less$/</span>,</div><div class=\"line\">            use: [</div><div class=\"line\">                MiniCssExtractPlugin.loader,</div><div class=\"line\">                <span class=\"string\">'css-loader'</span>,</div><div class=\"line\">                <span class=\"string\">'less-loader'</span></div><div class=\"line\">            ]</div><div class=\"line\">        &#125;</div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></figure>\n<p><strong>图片、字体</strong></p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// file-loader中的hash即为contenthash</span></div><div class=\"line\">rules: [</div><div class=\"line\">    &#123;</div><div class=\"line\">        test: <span class=\"regexp\">/\\.(woff2?|eot|ttf|otf)$/</span>,</div><div class=\"line\">        use: [</div><div class=\"line\">            loader: <span class=\"string\">'file-loader'</span>,</div><div class=\"line\">            options: &#123;</div><div class=\"line\">                name: <span class=\"string\">'[name][hash:8].[ext]'</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        ]</div><div class=\"line\">    &#125;</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"代码压缩\"><a href=\"#代码压缩\" class=\"headerlink\" title=\"代码压缩\"></a>代码压缩</h2><p><strong>JS文件</strong></p>\n<p>webpack4中已经内置并默认开启了uglifyjs-webpack-plugin，用于JS文件的压缩。</p>\n<p><strong>CSS文件</strong></p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> MiniCssExtractPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'mini-css-extract-plugin'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> OptimizeCSSAssetsPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'optimize-css-assets-webpack-plugin'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    plugins: [</div><div class=\"line\">        <span class=\"keyword\">new</span> MiniCssExtractPlugin(&#123;</div><div class=\"line\">            filename: <span class=\"string\">'[name][contenthash:8].css'</span>,</div><div class=\"line\">        &#125;),</div><div class=\"line\">        <span class=\"keyword\">new</span> OptimizeCSSAssetsPlugin(&#123;</div><div class=\"line\">            assetNameRegExp: <span class=\"regexp\">/\\.css$/g</span>,</div><div class=\"line\">            cssProcessor: <span class=\"built_in\">require</span>(<span class=\"string\">'cssnano'</span>)</div><div class=\"line\">        &#125;)</div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></figure>\n<p><strong>HTML文件</strong></p>\n<p>通过设置html-webpack-plugin的压缩参数实现。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">plugins: [</div><div class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</div><div class=\"line\">        template: <span class=\"string\">'./src/index.html'</span>,</div><div class=\"line\">        filename: <span class=\"string\">'index.html'</span>,</div><div class=\"line\">        chunks: [<span class=\"string\">'index'</span>],</div><div class=\"line\">        minify: &#123;</div><div class=\"line\">            collapseWhitespace: <span class=\"literal\">true</span>,</div><div class=\"line\">            removeComments: <span class=\"literal\">true</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"清理构建目录\"><a href=\"#清理构建目录\" class=\"headerlink\" title=\"清理构建目录\"></a>清理构建目录</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> &#123; CleanWebpackPlugin &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'clean-webpack-plugin'</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// webpack's output.path directory will be removed</span></div><div class=\"line\">plugins: [</div><div class=\"line\">    <span class=\"keyword\">new</span> CleanWebpackPlugin()</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"补齐CSS3前缀\"><a href=\"#补齐CSS3前缀\" class=\"headerlink\" title=\"补齐CSS3前缀\"></a>补齐CSS3前缀</h2><p>安装</p>\n<figure class=\"highlight plain\"><pre><div class=\"line\">npm i postcss-loader autoprefixer -D</div></pre></figure>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">use: [</div><div class=\"line\">    MiniCssExtractPlugin.loader,</div><div class=\"line\">    <span class=\"string\">'css-loader'</span>,</div><div class=\"line\">    <span class=\"string\">'less-loader'</span>,</div><div class=\"line\">    &#123;</div><div class=\"line\">        loader: <span class=\"string\">'postcss-loader'</span>,</div><div class=\"line\">        options: &#123;</div><div class=\"line\">            ident: <span class=\"string\">'postcss'</span>,</div><div class=\"line\">            plugins: [</div><div class=\"line\">                <span class=\"built_in\">require</span>(<span class=\"string\">'autoprefixer'</span>)(&#123;</div><div class=\"line\">                    browsers: [<span class=\"string\">'&gt; 1%'</span>, <span class=\"string\">'last 2 versions'</span>, <span class=\"string\">'not ie &lt;= 8'</span>]</div><div class=\"line\">                &#125;)</div><div class=\"line\">            ]</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">]</div></pre></figure>\n<h2 id=\"px转换成rem\"><a href=\"#px转换成rem\" class=\"headerlink\" title=\"px转换成rem\"></a>px转换成rem</h2><figure class=\"highlight javascript\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    loader: <span class=\"string\">'px2rem-loader'</span>,</div><div class=\"line\">    options: &#123;</div><div class=\"line\">        remUnit: <span class=\"number\">75</span>,</div><div class=\"line\">        remPrecision: <span class=\"number\">8</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>在html文件中添加根元素font-size自动计算方法。</p>\n<p><em>待续 ~</em></p>\n"},{"title":"使用vue-drag-drop实现拖放","date":"2019-04-16T16:00:00.000Z","keywords":"vue-drag-drop, Vue拖放, Vue","description":"使用vue-drag-drop实现拖放，借助Vuex在Drag和Drop组件之间共享拖放状态","_content":"\nvue-drag-drop是[HTML中Drag/Drop拖放接口](https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API)在Vue中的封装。\n\nHTML元素拖放的基本原理是：\n\n- 鼠标选中一个可拖动的元素，移动鼠标到一个可放置的元素上，然后释放鼠标\n- 在拖动放置操作期间，会触发一系列事件，通过监听响应这些事件实现界面交互\n- 可拖动元素需添加属性draggable=\"true\"\n- 可放置元素需设置ondragover和ondrop响应事件\n- 在可拖动元素的ondragstart事件中，在dataTransfer属性上设置拖动的数据、图像和效果\n- 在可放置元素的ondrop事件中，获取放置上来的元素所携带的数据\n\n这里是Vue中使用vue-drag-drop实现的拖放，演示将诗词列表拖动到唐诗或宋词区域中实现分类收藏，借助Vuex在drag-panel和drop-panel组件之间共享拖放状态。\n\n拖动相关的store模块，dragType存放当前拖动元素的类型，是唐诗还是宋词。\n\n``` JavaScript store/modules/drag.js\nimport { DRAG } from '../types'\n\nexport default {\n    state: {\n        dragType: null\n    },\n\n    getters: {\n        dragType: state => state.dragType\n    },\n\n    mutations: {\n        [DRAG.TYPE](state, dragType) {\n            state.dragType = dragType\n        }\n    }\n}\n```\n\n可拖动元素组件，拖动数据为诗词内容，开始拖动时设置dragType，拖动结束后清空dragType。通过slot设置了拖动时跟随鼠标的显示图像，相当于调用事件的dataTransfer.setDragImage方法。\n\n``` Vue drag-panel.vue\n<template lang=\"pug\">\nul.list\n    li(\n        v-for=\"(item, index) in list\"\n        :key=\"index\"\n    )\n        drag(\n            :transfer-data=\"item\"\n            @dragstart=\"setDragType(item.type)\"\n            @dragend=\"setDragType(null)\"\n        )\n            .drag-wrapper\n                icon\n                | {{ item.title }}\n            div.drag-content(slot=\"image\")\n                | {{ item.title }}\n                p {{ item.content }}\n</template>\n\n<script>\nimport { mapMutations } from 'vuex'\nimport { Drag } from 'vue-drag-drop'\nimport Icon from './icon'\n\nexport default {\n    components: { Drag, Icon },\n\n    props: {\n        list: Array\n    },\n\n    methods: {\n        ...mapMutations({\n            setDragType: 'DRAG_TYPE'\n        })\n        // 除使用辅助函数映射，也可通过$store提交mutation\n        // setDragType(type) {\n        //  this.$store.commit('DRAG_TYPE', type)\n        // }\n    }\n}\n</script>\n```\n\n诗词的分类区域为可放置元素，当可拖动元素开始拖动时，与dragType相同的分类区域样式提示可放置，而其他分类区域则样式置灰，并通过@dragover事件将拖动效果dropEffect设为none。释放鼠标时，通过@drop事件获取诗词信息，保存收藏数据。\n\n``` Vue drop-panel.vue\n<template lang=\"pug\">\n.drop-container\n    drop.drop-wrapper(\n        v-for=\"(v, k) in collections\"\n        :key=\"k\"\n        :class=\"{ active: k === dragType, passive: dragType && k !== dragType }\"\n        @dragover=\"handleDragover(k, ...arguments)\"\n        @drop=\"handleDrop\"\n    )\n        h2 {{ v.des }}收藏：\n        ul\n            li(\n                v-for=\"(item, index) in v.list\"\n                :key=\"index\"\n            ) {{ item }}\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex'\nimport { Drop } from 'vue-drag-drop'\n\nexport default {\n    components: { Drop },\n\n    computed: {\n        ...mapGetters(['collections', 'dragType'])\n    },\n\n    methods: {\n        ...mapMutations({\n            addCollection: 'COLLECTIONS_ADD'\n        }),\n\n        handleDragover(type, data, event) {\n            if (type !== data.type) {\n                event.dataTransfer.dropEffect = 'none'\n            }\n        },\n\n        handleDrop({ title }) {\n            const list = this.collections[this.dragType].list\n            if (list.indexOf(title) === -1) {\n                this.addCollection({\n                    type: this.dragType,\n                    title\n                })\n            } else {\n                alert('重复收藏')\n            }\n        }\n    }\n}\n</script>\n```\n\n主页面，组合拖动和放置组件，获取数据。\n\n``` Vue App.vue\n<template lang=\"pug\">\n.row\n    .col.col-l\n        drop-panel\n    .col.col-r\n        drag-panel(:list=\"list\")\n</template>\n\n<script>\nimport DragPanel from './drag-drop/drag-panel'\nimport DropPanel from './drag-drop/drop-panel'\nimport { list } from './drag-drop/list'\n\nexport default {\n    components: { DragPanel, DropPanel },\n\n    data() {\n        return {\n            list: this._.shuffle(list)\n        }\n    }\n}\n</script>\n```\n\n诗词数据列表。\n\n``` JavaScript list.js\nexport const list = [{\n    title: '早发白帝城',\n    type: 't',\n    content: '朝辞白帝彩云间，千里江陵一日还。两岸猿声啼不住，轻舟已过万重山。'\n},\n// 省略...\n{\n    title: '如梦令·昨夜雨疏风骤',\n    type: 's',\n    content: '昨夜雨疏风骤，浓睡不消残酒。试问卷帘人，却道海棠依旧。知否，知否？应是绿肥红瘦。'\n}]\n```\n\n{% raw %}\n<p class=\"demo-p\"><button type=\"button\" onclick=\"openIframe('/demo/vue-drag-drop/index.html')\">查看demo »</button></p>\n{% endraw %}\n","source":"_posts/vue-drag-drop.md","raw":"---\ntitle: 使用vue-drag-drop实现拖放\ndate: 2019-04-17 00:00:00\ncategories: Vue\nkeywords: vue-drag-drop, Vue拖放, Vue\ndescription: 使用vue-drag-drop实现拖放，借助Vuex在Drag和Drop组件之间共享拖放状态\n---\n\nvue-drag-drop是[HTML中Drag/Drop拖放接口](https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API)在Vue中的封装。\n\nHTML元素拖放的基本原理是：\n\n- 鼠标选中一个可拖动的元素，移动鼠标到一个可放置的元素上，然后释放鼠标\n- 在拖动放置操作期间，会触发一系列事件，通过监听响应这些事件实现界面交互\n- 可拖动元素需添加属性draggable=\"true\"\n- 可放置元素需设置ondragover和ondrop响应事件\n- 在可拖动元素的ondragstart事件中，在dataTransfer属性上设置拖动的数据、图像和效果\n- 在可放置元素的ondrop事件中，获取放置上来的元素所携带的数据\n\n这里是Vue中使用vue-drag-drop实现的拖放，演示将诗词列表拖动到唐诗或宋词区域中实现分类收藏，借助Vuex在drag-panel和drop-panel组件之间共享拖放状态。\n\n拖动相关的store模块，dragType存放当前拖动元素的类型，是唐诗还是宋词。\n\n``` JavaScript store/modules/drag.js\nimport { DRAG } from '../types'\n\nexport default {\n    state: {\n        dragType: null\n    },\n\n    getters: {\n        dragType: state => state.dragType\n    },\n\n    mutations: {\n        [DRAG.TYPE](state, dragType) {\n            state.dragType = dragType\n        }\n    }\n}\n```\n\n可拖动元素组件，拖动数据为诗词内容，开始拖动时设置dragType，拖动结束后清空dragType。通过slot设置了拖动时跟随鼠标的显示图像，相当于调用事件的dataTransfer.setDragImage方法。\n\n``` Vue drag-panel.vue\n<template lang=\"pug\">\nul.list\n    li(\n        v-for=\"(item, index) in list\"\n        :key=\"index\"\n    )\n        drag(\n            :transfer-data=\"item\"\n            @dragstart=\"setDragType(item.type)\"\n            @dragend=\"setDragType(null)\"\n        )\n            .drag-wrapper\n                icon\n                | {{ item.title }}\n            div.drag-content(slot=\"image\")\n                | {{ item.title }}\n                p {{ item.content }}\n</template>\n\n<script>\nimport { mapMutations } from 'vuex'\nimport { Drag } from 'vue-drag-drop'\nimport Icon from './icon'\n\nexport default {\n    components: { Drag, Icon },\n\n    props: {\n        list: Array\n    },\n\n    methods: {\n        ...mapMutations({\n            setDragType: 'DRAG_TYPE'\n        })\n        // 除使用辅助函数映射，也可通过$store提交mutation\n        // setDragType(type) {\n        //  this.$store.commit('DRAG_TYPE', type)\n        // }\n    }\n}\n</script>\n```\n\n诗词的分类区域为可放置元素，当可拖动元素开始拖动时，与dragType相同的分类区域样式提示可放置，而其他分类区域则样式置灰，并通过@dragover事件将拖动效果dropEffect设为none。释放鼠标时，通过@drop事件获取诗词信息，保存收藏数据。\n\n``` Vue drop-panel.vue\n<template lang=\"pug\">\n.drop-container\n    drop.drop-wrapper(\n        v-for=\"(v, k) in collections\"\n        :key=\"k\"\n        :class=\"{ active: k === dragType, passive: dragType && k !== dragType }\"\n        @dragover=\"handleDragover(k, ...arguments)\"\n        @drop=\"handleDrop\"\n    )\n        h2 {{ v.des }}收藏：\n        ul\n            li(\n                v-for=\"(item, index) in v.list\"\n                :key=\"index\"\n            ) {{ item }}\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex'\nimport { Drop } from 'vue-drag-drop'\n\nexport default {\n    components: { Drop },\n\n    computed: {\n        ...mapGetters(['collections', 'dragType'])\n    },\n\n    methods: {\n        ...mapMutations({\n            addCollection: 'COLLECTIONS_ADD'\n        }),\n\n        handleDragover(type, data, event) {\n            if (type !== data.type) {\n                event.dataTransfer.dropEffect = 'none'\n            }\n        },\n\n        handleDrop({ title }) {\n            const list = this.collections[this.dragType].list\n            if (list.indexOf(title) === -1) {\n                this.addCollection({\n                    type: this.dragType,\n                    title\n                })\n            } else {\n                alert('重复收藏')\n            }\n        }\n    }\n}\n</script>\n```\n\n主页面，组合拖动和放置组件，获取数据。\n\n``` Vue App.vue\n<template lang=\"pug\">\n.row\n    .col.col-l\n        drop-panel\n    .col.col-r\n        drag-panel(:list=\"list\")\n</template>\n\n<script>\nimport DragPanel from './drag-drop/drag-panel'\nimport DropPanel from './drag-drop/drop-panel'\nimport { list } from './drag-drop/list'\n\nexport default {\n    components: { DragPanel, DropPanel },\n\n    data() {\n        return {\n            list: this._.shuffle(list)\n        }\n    }\n}\n</script>\n```\n\n诗词数据列表。\n\n``` JavaScript list.js\nexport const list = [{\n    title: '早发白帝城',\n    type: 't',\n    content: '朝辞白帝彩云间，千里江陵一日还。两岸猿声啼不住，轻舟已过万重山。'\n},\n// 省略...\n{\n    title: '如梦令·昨夜雨疏风骤',\n    type: 's',\n    content: '昨夜雨疏风骤，浓睡不消残酒。试问卷帘人，却道海棠依旧。知否，知否？应是绿肥红瘦。'\n}]\n```\n\n{% raw %}\n<p class=\"demo-p\"><button type=\"button\" onclick=\"openIframe('/demo/vue-drag-drop/index.html')\">查看demo »</button></p>\n{% endraw %}\n","slug":"vue-drag-drop","published":1,"updated":"2019-04-17T07:54:50.912Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160emzr00393a8imdgwuew6","content":"<p>vue-drag-drop是<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API\" target=\"_blank\" rel=\"noopener\">HTML中Drag/Drop拖放接口</a>在Vue中的封装。</p>\n<p>HTML元素拖放的基本原理是：</p>\n<ul>\n<li>鼠标选中一个可拖动的元素，移动鼠标到一个可放置的元素上，然后释放鼠标</li>\n<li>在拖动放置操作期间，会触发一系列事件，通过监听响应这些事件实现界面交互</li>\n<li>可拖动元素需添加属性draggable=”true”</li>\n<li>可放置元素需设置ondragover和ondrop响应事件</li>\n<li>在可拖动元素的ondragstart事件中，在dataTransfer属性上设置拖动的数据、图像和效果</li>\n<li>在可放置元素的ondrop事件中，获取放置上来的元素所携带的数据</li>\n</ul>\n<p>这里是Vue中使用vue-drag-drop实现的拖放，演示将诗词列表拖动到唐诗或宋词区域中实现分类收藏，借助Vuex在drag-panel和drop-panel组件之间共享拖放状态。</p>\n<p>拖动相关的store模块，dragType存放当前拖动元素的类型，是唐诗还是宋词。</p>\n<figure class=\"highlight javascript\"><figcaption><span>store/modules/drag.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123; DRAG &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../types'</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">    state: &#123;</div><div class=\"line\">        dragType: <span class=\"literal\">null</span></div><div class=\"line\">    &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    getters: &#123;</div><div class=\"line\">        dragType: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> state.dragType</div><div class=\"line\">    &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    mutations: &#123;</div><div class=\"line\">        [DRAG.TYPE](state, dragType) &#123;</div><div class=\"line\">            state.dragType = dragType</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>可拖动元素组件，拖动数据为诗词内容，开始拖动时设置dragType，拖动结束后清空dragType。通过slot设置了拖动时跟随鼠标的显示图像，相当于调用事件的dataTransfer.setDragImage方法。</p>\n<figure class=\"highlight plain\"><figcaption><span>drag-panel.vue</span></figcaption><pre><div class=\"line\">&lt;template lang=&quot;pug&quot;&gt;</div><div class=\"line\">ul.list</div><div class=\"line\">    li(</div><div class=\"line\">        v-for=&quot;(item, index) in list&quot;</div><div class=\"line\">        :key=&quot;index&quot;</div><div class=\"line\">    )</div><div class=\"line\">        drag(</div><div class=\"line\">            :transfer-data=&quot;item&quot;</div><div class=\"line\">            @dragstart=&quot;setDragType(item.type)&quot;</div><div class=\"line\">            @dragend=&quot;setDragType(null)&quot;</div><div class=\"line\">        )</div><div class=\"line\">            .drag-wrapper</div><div class=\"line\">                icon</div><div class=\"line\">                | &#123;&#123; item.title &#125;&#125;</div><div class=\"line\">            div.drag-content(slot=&quot;image&quot;)</div><div class=\"line\">                | &#123;&#123; item.title &#125;&#125;</div><div class=\"line\">                p &#123;&#123; item.content &#125;&#125;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"><br></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import &#123; mapMutations &#125; from &apos;vuex&apos;</div><div class=\"line\">import &#123; Drag &#125; from &apos;vue-drag-drop&apos;</div><div class=\"line\">import Icon from &apos;./icon&apos;</div><div class=\"line\"><br></div><div class=\"line\">export default &#123;</div><div class=\"line\">    components: &#123; Drag, Icon &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    props: &#123;</div><div class=\"line\">        list: Array</div><div class=\"line\">    &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        ...mapMutations(&#123;</div><div class=\"line\">            setDragType: &apos;DRAG_TYPE&apos;</div><div class=\"line\">        &#125;)</div><div class=\"line\">        // 除使用辅助函数映射，也可通过$store提交mutation</div><div class=\"line\">        // setDragType(type) &#123;</div><div class=\"line\">        //  this.$store.commit(&apos;DRAG_TYPE&apos;, type)</div><div class=\"line\">        // &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></figure>\n<p>诗词的分类区域为可放置元素，当可拖动元素开始拖动时，与dragType相同的分类区域样式提示可放置，而其他分类区域则样式置灰，并通过@dragover事件将拖动效果dropEffect设为none。释放鼠标时，通过@drop事件获取诗词信息，保存收藏数据。</p>\n<figure class=\"highlight plain\"><figcaption><span>drop-panel.vue</span></figcaption><pre><div class=\"line\">&lt;template lang=&quot;pug&quot;&gt;</div><div class=\"line\">.drop-container</div><div class=\"line\">    drop.drop-wrapper(</div><div class=\"line\">        v-for=&quot;(v, k) in collections&quot;</div><div class=\"line\">        :key=&quot;k&quot;</div><div class=\"line\">        :class=&quot;&#123; active: k === dragType, passive: dragType &amp;&amp; k !== dragType &#125;&quot;</div><div class=\"line\">        @dragover=&quot;handleDragover(k, ...arguments)&quot;</div><div class=\"line\">        @drop=&quot;handleDrop&quot;</div><div class=\"line\">    )</div><div class=\"line\">        h2 &#123;&#123; v.des &#125;&#125;收藏：</div><div class=\"line\">        ul</div><div class=\"line\">            li(</div><div class=\"line\">                v-for=&quot;(item, index) in v.list&quot;</div><div class=\"line\">                :key=&quot;index&quot;</div><div class=\"line\">            ) &#123;&#123; item &#125;&#125;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"><br></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import &#123; mapGetters, mapMutations &#125; from &apos;vuex&apos;</div><div class=\"line\">import &#123; Drop &#125; from &apos;vue-drag-drop&apos;</div><div class=\"line\"><br></div><div class=\"line\">export default &#123;</div><div class=\"line\">    components: &#123; Drop &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    computed: &#123;</div><div class=\"line\">        ...mapGetters([&apos;collections&apos;, &apos;dragType&apos;])</div><div class=\"line\">    &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        ...mapMutations(&#123;</div><div class=\"line\">            addCollection: &apos;COLLECTIONS_ADD&apos;</div><div class=\"line\">        &#125;),</div><div class=\"line\"><br></div><div class=\"line\">        handleDragover(type, data, event) &#123;</div><div class=\"line\">            if (type !== data.type) &#123;</div><div class=\"line\">                event.dataTransfer.dropEffect = &apos;none&apos;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;,</div><div class=\"line\"><br></div><div class=\"line\">        handleDrop(&#123; title &#125;) &#123;</div><div class=\"line\">            const list = this.collections[this.dragType].list</div><div class=\"line\">            if (list.indexOf(title) === -1) &#123;</div><div class=\"line\">                this.addCollection(&#123;</div><div class=\"line\">                    type: this.dragType,</div><div class=\"line\">                    title</div><div class=\"line\">                &#125;)</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                alert(&apos;重复收藏&apos;)</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></figure>\n<p>主页面，组合拖动和放置组件，获取数据。</p>\n<figure class=\"highlight plain\"><figcaption><span>App.vue</span></figcaption><pre><div class=\"line\">&lt;template lang=&quot;pug&quot;&gt;</div><div class=\"line\">.row</div><div class=\"line\">    .col.col-l</div><div class=\"line\">        drop-panel</div><div class=\"line\">    .col.col-r</div><div class=\"line\">        drag-panel(:list=&quot;list&quot;)</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"><br></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import DragPanel from &apos;./drag-drop/drag-panel&apos;</div><div class=\"line\">import DropPanel from &apos;./drag-drop/drop-panel&apos;</div><div class=\"line\">import &#123; list &#125; from &apos;./drag-drop/list&apos;</div><div class=\"line\"><br></div><div class=\"line\">export default &#123;</div><div class=\"line\">    components: &#123; DragPanel, DropPanel &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            list: this._.shuffle(list)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></figure>\n<p>诗词数据列表。</p>\n<figure class=\"highlight javascript\"><figcaption><span>list.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> list = [&#123;</div><div class=\"line\">    title: <span class=\"string\">'早发白帝城'</span>,</div><div class=\"line\">    type: <span class=\"string\">'t'</span>,</div><div class=\"line\">    content: <span class=\"string\">'朝辞白帝彩云间，千里江陵一日还。两岸猿声啼不住，轻舟已过万重山。'</span></div><div class=\"line\">&#125;,</div><div class=\"line\"><span class=\"comment\">// 省略...</span></div><div class=\"line\">&#123;</div><div class=\"line\">    title: <span class=\"string\">'如梦令·昨夜雨疏风骤'</span>,</div><div class=\"line\">    type: <span class=\"string\">'s'</span>,</div><div class=\"line\">    content: <span class=\"string\">'昨夜雨疏风骤，浓睡不消残酒。试问卷帘人，却道海棠依旧。知否，知否？应是绿肥红瘦。'</span></div><div class=\"line\">&#125;]</div></pre></figure>\n\n<p class=\"demo-p\"><button type=\"button\" onclick=\"openIframe('/demo/vue-drag-drop/index.html')\">查看demo »</button></p>\n\n","site":{"data":{}},"excerpt":"","more":"<p>vue-drag-drop是<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API\" target=\"_blank\" rel=\"noopener\">HTML中Drag/Drop拖放接口</a>在Vue中的封装。</p>\n<p>HTML元素拖放的基本原理是：</p>\n<ul>\n<li>鼠标选中一个可拖动的元素，移动鼠标到一个可放置的元素上，然后释放鼠标</li>\n<li>在拖动放置操作期间，会触发一系列事件，通过监听响应这些事件实现界面交互</li>\n<li>可拖动元素需添加属性draggable=”true”</li>\n<li>可放置元素需设置ondragover和ondrop响应事件</li>\n<li>在可拖动元素的ondragstart事件中，在dataTransfer属性上设置拖动的数据、图像和效果</li>\n<li>在可放置元素的ondrop事件中，获取放置上来的元素所携带的数据</li>\n</ul>\n<p>这里是Vue中使用vue-drag-drop实现的拖放，演示将诗词列表拖动到唐诗或宋词区域中实现分类收藏，借助Vuex在drag-panel和drop-panel组件之间共享拖放状态。</p>\n<p>拖动相关的store模块，dragType存放当前拖动元素的类型，是唐诗还是宋词。</p>\n<figure class=\"highlight javascript\"><figcaption><span>store/modules/drag.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123; DRAG &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../types'</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">    state: &#123;</div><div class=\"line\">        dragType: <span class=\"literal\">null</span></div><div class=\"line\">    &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    getters: &#123;</div><div class=\"line\">        dragType: <span class=\"function\"><span class=\"params\">state</span> =&gt;</span> state.dragType</div><div class=\"line\">    &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    mutations: &#123;</div><div class=\"line\">        [DRAG.TYPE](state, dragType) &#123;</div><div class=\"line\">            state.dragType = dragType</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>可拖动元素组件，拖动数据为诗词内容，开始拖动时设置dragType，拖动结束后清空dragType。通过slot设置了拖动时跟随鼠标的显示图像，相当于调用事件的dataTransfer.setDragImage方法。</p>\n<figure class=\"highlight plain\"><figcaption><span>drag-panel.vue</span></figcaption><pre><div class=\"line\">&lt;template lang=&quot;pug&quot;&gt;</div><div class=\"line\">ul.list</div><div class=\"line\">    li(</div><div class=\"line\">        v-for=&quot;(item, index) in list&quot;</div><div class=\"line\">        :key=&quot;index&quot;</div><div class=\"line\">    )</div><div class=\"line\">        drag(</div><div class=\"line\">            :transfer-data=&quot;item&quot;</div><div class=\"line\">            @dragstart=&quot;setDragType(item.type)&quot;</div><div class=\"line\">            @dragend=&quot;setDragType(null)&quot;</div><div class=\"line\">        )</div><div class=\"line\">            .drag-wrapper</div><div class=\"line\">                icon</div><div class=\"line\">                | &#123;&#123; item.title &#125;&#125;</div><div class=\"line\">            div.drag-content(slot=&quot;image&quot;)</div><div class=\"line\">                | &#123;&#123; item.title &#125;&#125;</div><div class=\"line\">                p &#123;&#123; item.content &#125;&#125;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"><br></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import &#123; mapMutations &#125; from &apos;vuex&apos;</div><div class=\"line\">import &#123; Drag &#125; from &apos;vue-drag-drop&apos;</div><div class=\"line\">import Icon from &apos;./icon&apos;</div><div class=\"line\"><br></div><div class=\"line\">export default &#123;</div><div class=\"line\">    components: &#123; Drag, Icon &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    props: &#123;</div><div class=\"line\">        list: Array</div><div class=\"line\">    &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        ...mapMutations(&#123;</div><div class=\"line\">            setDragType: &apos;DRAG_TYPE&apos;</div><div class=\"line\">        &#125;)</div><div class=\"line\">        // 除使用辅助函数映射，也可通过$store提交mutation</div><div class=\"line\">        // setDragType(type) &#123;</div><div class=\"line\">        //  this.$store.commit(&apos;DRAG_TYPE&apos;, type)</div><div class=\"line\">        // &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></figure>\n<p>诗词的分类区域为可放置元素，当可拖动元素开始拖动时，与dragType相同的分类区域样式提示可放置，而其他分类区域则样式置灰，并通过@dragover事件将拖动效果dropEffect设为none。释放鼠标时，通过@drop事件获取诗词信息，保存收藏数据。</p>\n<figure class=\"highlight plain\"><figcaption><span>drop-panel.vue</span></figcaption><pre><div class=\"line\">&lt;template lang=&quot;pug&quot;&gt;</div><div class=\"line\">.drop-container</div><div class=\"line\">    drop.drop-wrapper(</div><div class=\"line\">        v-for=&quot;(v, k) in collections&quot;</div><div class=\"line\">        :key=&quot;k&quot;</div><div class=\"line\">        :class=&quot;&#123; active: k === dragType, passive: dragType &amp;&amp; k !== dragType &#125;&quot;</div><div class=\"line\">        @dragover=&quot;handleDragover(k, ...arguments)&quot;</div><div class=\"line\">        @drop=&quot;handleDrop&quot;</div><div class=\"line\">    )</div><div class=\"line\">        h2 &#123;&#123; v.des &#125;&#125;收藏：</div><div class=\"line\">        ul</div><div class=\"line\">            li(</div><div class=\"line\">                v-for=&quot;(item, index) in v.list&quot;</div><div class=\"line\">                :key=&quot;index&quot;</div><div class=\"line\">            ) &#123;&#123; item &#125;&#125;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"><br></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import &#123; mapGetters, mapMutations &#125; from &apos;vuex&apos;</div><div class=\"line\">import &#123; Drop &#125; from &apos;vue-drag-drop&apos;</div><div class=\"line\"><br></div><div class=\"line\">export default &#123;</div><div class=\"line\">    components: &#123; Drop &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    computed: &#123;</div><div class=\"line\">        ...mapGetters([&apos;collections&apos;, &apos;dragType&apos;])</div><div class=\"line\">    &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        ...mapMutations(&#123;</div><div class=\"line\">            addCollection: &apos;COLLECTIONS_ADD&apos;</div><div class=\"line\">        &#125;),</div><div class=\"line\"><br></div><div class=\"line\">        handleDragover(type, data, event) &#123;</div><div class=\"line\">            if (type !== data.type) &#123;</div><div class=\"line\">                event.dataTransfer.dropEffect = &apos;none&apos;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;,</div><div class=\"line\"><br></div><div class=\"line\">        handleDrop(&#123; title &#125;) &#123;</div><div class=\"line\">            const list = this.collections[this.dragType].list</div><div class=\"line\">            if (list.indexOf(title) === -1) &#123;</div><div class=\"line\">                this.addCollection(&#123;</div><div class=\"line\">                    type: this.dragType,</div><div class=\"line\">                    title</div><div class=\"line\">                &#125;)</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                alert(&apos;重复收藏&apos;)</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></figure>\n<p>主页面，组合拖动和放置组件，获取数据。</p>\n<figure class=\"highlight plain\"><figcaption><span>App.vue</span></figcaption><pre><div class=\"line\">&lt;template lang=&quot;pug&quot;&gt;</div><div class=\"line\">.row</div><div class=\"line\">    .col.col-l</div><div class=\"line\">        drop-panel</div><div class=\"line\">    .col.col-r</div><div class=\"line\">        drag-panel(:list=&quot;list&quot;)</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"><br></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import DragPanel from &apos;./drag-drop/drag-panel&apos;</div><div class=\"line\">import DropPanel from &apos;./drag-drop/drop-panel&apos;</div><div class=\"line\">import &#123; list &#125; from &apos;./drag-drop/list&apos;</div><div class=\"line\"><br></div><div class=\"line\">export default &#123;</div><div class=\"line\">    components: &#123; DragPanel, DropPanel &#125;,</div><div class=\"line\"><br></div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            list: this._.shuffle(list)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></figure>\n<p>诗词数据列表。</p>\n<figure class=\"highlight javascript\"><figcaption><span>list.js</span></figcaption><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> list = [&#123;</div><div class=\"line\">    title: <span class=\"string\">'早发白帝城'</span>,</div><div class=\"line\">    type: <span class=\"string\">'t'</span>,</div><div class=\"line\">    content: <span class=\"string\">'朝辞白帝彩云间，千里江陵一日还。两岸猿声啼不住，轻舟已过万重山。'</span></div><div class=\"line\">&#125;,</div><div class=\"line\"><span class=\"comment\">// 省略...</span></div><div class=\"line\">&#123;</div><div class=\"line\">    title: <span class=\"string\">'如梦令·昨夜雨疏风骤'</span>,</div><div class=\"line\">    type: <span class=\"string\">'s'</span>,</div><div class=\"line\">    content: <span class=\"string\">'昨夜雨疏风骤，浓睡不消残酒。试问卷帘人，却道海棠依旧。知否，知否？应是绿肥红瘦。'</span></div><div class=\"line\">&#125;]</div></pre></figure>\n\n<p class=\"demo-p\"><button type=\"button\" onclick=\"openIframe('/demo/vue-drag-drop/index.html')\">查看demo »</button></p>\n\n"},{"title":"cubic-bezier三次贝塞尔时间函数","date":"2018-12-29T16:00:00.000Z","keywords":"cubic-bezier, 三次贝塞尔, Vue, SVG","description":"用Vue实现响应式SVG来简单模拟cubic-bezier三次贝塞尔时间函数","_content":"\n{% raw %}\n<style>\n#app p {\n\ttext-align: center;\n}\n.svg-wrapper {\n\tmargin-top: 1.25em;\n}\n.svg-wrapper svg {\n\tposition: relative;\n\tdisplay: block;\n\tmargin: 0 auto;\n\toverflow: visible;\n\t-webkit-touch-callout: none;\n\t-webkit-user-select:none;\n\tuser-select: none;\n}\nsvg circle.draggable {\n\tfill: #f2f6ed;\n\ttransition: all .1s;\n\tcursor: move;\n}\nsvg circle.draggable:hover {\n\tstroke: #232520;\n}\n@keyframes animation{\n\tfrom { cy: 200 }\n\tto { cy: 0 }\n}\n</style>\n\n<div id=\"app\">\n\t<div class=\"svg-wrapper\">\n\t\t<svg width=\"280\" height=\"280\">\n\t\t\t<defs>\n\t\t\t\t<marker id=\"arrow\" markerWidth=\"6\" markerHeight=\"6\" refx=\"0\" refy=\"3\" orient=\"auto\">\n\t\t\t\t\t<path d=\"M0,0 L0,6 L6,3 Z\" fill=\"#83887c\"></path>\n\t\t\t\t</marker>\n\t\t\t</defs>\n\t\t\t<g transform=\"translate(20, 40)\" stroke=\"#83887c\" fill=\"none\">\n\t\t\t\t<g stroke-dasharray=\"3 2\">\n\t\t\t\t\t<rect width=\"200\" height=\"200\"></rect>\n\t\t\t\t\t<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"-20\" marker-end=\"url(#arrow)\"></line>\n\t\t\t\t\t<line x1=\"200\" y1=\"200\" x2=\"220\" y2=\"200\" marker-end=\"url(#arrow)\"></line>\n\t\t\t\t</g>\n\t\t\t\t<g fill=\"#83887c\">\n\t\t\t\t\t<circle cx=\"0\" cy=\"200\" r=\"3\"></circle>\n\t\t\t\t\t<circle cx=\"200\" cy=\"0\" r=\"3\"></circle>\n\t\t\t\t</g>\n\t\t\t\t<g stroke=\"none\" fill=\"#83887c\" font-size=\"12\">\n\t\t\t\t\t<text x=\"5\" y=\"215\">time ratio</text>\n\t\t\t\t\t<g transform=\"translate(-8, 198), rotate(-90)\">\n\t\t\t\t\t\t<text>output ratio</text>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<g stroke=\"#d7dcd2\">\n\t\t\t\t\t<line x1=\"250\" y1=\"0\" x2=\"250\" y2=\"200\"></line>\n\t\t\t\t\t<line x1=\"240\" y1=\"0\" x2=\"260\" y2=\"0\"></line>\n\t\t\t\t\t<line x1=\"240\" y1=\"200\" x2=\"260\" y2=\"200\"></line>\n\t\t\t\t</g>\n\t\t\t\t<g fill=\"#0791c6\">\n\t\t\t\t\t<circle cx=\"250\" cy=\"200\" r=\"4.5\"\n\t\t\t\t\t:style=\"{ animation: `animation 2s ${cubicBezierStr} infinite alternate` }\"></circle>\n\t\t\t\t</g>\n\t\t\t\t<g stroke-width=\"1.5\">\n\t\t\t\t\t<path :d=\"`M0,200 C${x1},${y1} ${x2},${y2} 200,0`\"></path>\n\t\t\t\t\t<line :x1=\"x1\" :y1=\"y1\" x2=\"0\" y2=\"200\"></line>\n\t\t\t\t\t<line x1=\"200\" y1=\"0\" :x2=\"x2\" :y2=\"y2\"></line>\n\t\t\t\t</g>\n\t\t\t\t<g :transform=\"`translate(${x1}, ${y1})`\"\n\t\t\t\t\t@mousedown=\"handleStart($event, 1)\"\n\t\t\t\t\t@touchstart=\"handleStart($event, 1)\">\n\t\t\t\t\t<circle r=\"6\" class=\"draggable\"></circle>\n\t\t\t\t</g>\n\t\t\t\t<g :transform=\"`translate(${x2}, ${y2})`\"\n\t\t\t\t\t@mousedown=\"handleStart($event, 2)\"\n\t\t\t\t\t@touchstart=\"handleStart($event, 2)\">\n\t\t\t\t\t<circle r=\"6\" class=\"draggable\"></circle>\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t</svg>\n\t</div>\n\n\t<p>{{ cubicBezierStr }}</p>\n</div>\n{% endraw %}\n\n用在CSS的transition或者animation动画中的时间函数timing-function，描述在过渡或动画中一维数值的速度改变，通常称为缓动函数。\n\n三次/立方贝塞尔曲线（cubic Bézier curves）是CSS时间函数常用的一种。语法为：\n\n``` CSS\ncubic-bezier(x1, y1, x2, y2)\n```\n\n- 横轴为时间比例（time ratio），纵轴为完成状态（output ratio）\n\n- 曲线由四个点来定义，P<sub>0</sub>、P<sub>1</sub>、P<sub>2</sub>和P<sub>3</sub>\n\n- P<sub>0</sub>(0, 0)和P<sub>3</sub>(1, 1)是固定在坐标系上的起点和终点\n\n- 语法中x1, y1, x2, y2表示两个过渡点P<sub>1</sub>和P<sub>2</sub>的横纵坐标\n\n- x1和x2是时间值，必须在[0, 1]范围内\n\n- y1和y2可以是负数或者大于1，从而实现弹跳动画效果\n\n- y值超过实际允许范围（比如颜色值大于255或小于0）会被修改为允许范围内的最接近值\n\n常用的命名过渡效果，等同于某些数值的cubic-bezier。\n\n名称 | 过渡效果 | 等同于\n--- | --- | ---\nlinear | 以相同速度开始至结束 | cubic-bezier(0, 0, 1, 1)\nease | 慢速开始，然后变快，然后慢速结束 | cubic-bezier(.25, .1, .25, 1)\nease-in | 慢速开始 | cubic-bezier(.42, 0, 1, 1)\nease-out | 慢速结束 | cubic-bezier(0, 0, .58, 1)\nease-in-out | 慢速开始和结束 | cubic-bezier(.42, 0, .58, 1)\n\n本页面用Vue实现响应式SVG来简单模拟cubic-bezier三次贝塞尔时间函数。\n\nSVG画布和cubic-bezier过渡点的坐标系不同需要分别定义。\n\n``` JavaScript\ndata: {\n    // SVG画布中的坐标\n    x1: 50,\n    y1: 180,\n    x2: 50,\n    y2: 0,\n\n    // cubic-bezier过渡点的坐标\n    cx1: 0.25,\n    cy1: 0.1,\n    cx2: 0.25,\n    cy2: 1,\n}\n```\n\n坐标转换，将时间值约束在[0, 1]范围内。\n\n``` JavaScript\ncomputed: {\n    cubicBezierStr() {\n        const f = n => {\n            let r = String(n.toFixed(2))\n            r = r.replace(/^0+|0+$/g, '')\n            r = r.replace(/\\.$/, '')\n            if (r === '') r = 0\n            return r\n        }\n        const { x1, y1, x2, y2 } = this\n        const cx1 = x1 / 200\n        const cy1 = (200 - y1) / 200\n        const cx2 = x2 / 200\n        const cy2 = (200 - y2) / 200\n        return `cubic-bezier(${f(cx1)}, ${f(cy1)}, ${f(cx2)}, ${f(cy2)})`\n    }\n}\n```\n\n实现过渡点的拖动与计算，兼容桌面和移动设备mousemove/touchmove。\n\n``` JavaScript\nmethods: {\n    handleStart(event, point) {\n    \tevent.preventDefault()\n        const isTouch = !!event.touches\n        if (isTouch && event.touches.length > 1) return\n        if (isTouch) event = event.touches[0]\n\n        const { x1, y1, x2, y2 } = this\n        this.dragState = {\n            dragging: true,\n            left: event.clientX,\n            top: event.clientY\n        }\n\n        document.onselectstart = () => false\n        document.ondragstart = () => false\n\n        const handleMove = event => {\n            event.preventDefault()\n            if (isTouch) event = event.touches[0]\n\n            const constrain = n => Math.min(Math.max(0, n), 200)\n            const deltaLeft = event.clientX - this.dragState.left\n            const deltaTop = event.clientY - this.dragState.top\n            if (point === 1) {\n                this.x1 = constrain(x1 + deltaLeft)\n                this.y1 = y1 + deltaTop\n            } else if (point === 2) {\n                this.x2 = constrain(x2 + deltaLeft)\n                this.y2 = y2 + deltaTop\n            }\n        }\n\n        const handleEnd = () => {\n            this.dragState.dragging = false\n            if (isTouch) {\n                document.removeEventListener('touchmove', handleMove)\n                document.removeEventListener('touchend', handleEnd)\n            } else {\n                document.removeEventListener('mousemove', handleMove)\n                document.removeEventListener('mouseup', handleEnd)\n            }\n            document.onselectstart = null\n            document.ondragstart = null\n        }\n\n        if (isTouch) {\n            document.addEventListener('touchmove', handleMove, {\n                passive: false\n            })\n            document.addEventListener('touchend', handleEnd)\n        } else {\n            document.addEventListener('mousemove', handleMove)\n            document.addEventListener('mouseup', handleEnd)\n        }\n    }\n}\n```\n\n\n{% raw %}\n<script src=\"/scripts/vue.min.js\"></script>\n<script>\nconst app = new Vue({\n    el: '#app',\n\n    data: {\n        x1: 50,\n        y1: 180,\n        x2: 50,\n        y2: 0,\n\n        cx1: 0.25,\n        cy1: 0.1,\n        cx2: 0.25,\n        cy2: 1,\n\n        dragState: {\n            dragging: false,\n            left: 0,\n            top: 0,\n        }\n    },\n\n    computed: {\n        cubicBezierStr() {\n            const f = n => {\n                let r = String(n.toFixed(2))\n                r = r.replace(/^0+|0+$/g, '')\n                r = r.replace(/\\.$/, '')\n                if (r === '') r = 0\n                return r\n            }\n            const { x1, y1, x2, y2 } = this\n            const cx1 = x1 / 200\n            const cy1 = (200 - y1) / 200\n            const cx2 = x2 / 200\n            const cy2 = (200 - y2) / 200\n            return `cubic-bezier(${f(cx1)}, ${f(cy1)}, ${f(cx2)}, ${f(cy2)})`\n        }\n    },\n\n    methods: {\n        handleStart(event, point) {\n        \tevent.preventDefault()\n            const isTouch = !!event.touches\n            if (isTouch && event.touches.length > 1) return\n            if (isTouch) event = event.touches[0]\n\n            const { x1, y1, x2, y2 } = this\n            this.dragState = {\n                dragging: true,\n                left: event.clientX,\n                top: event.clientY\n            }\n\n            document.onselectstart = () => false\n            document.ondragstart = () => false\n\n            const handleMove = event => {\n                event.preventDefault()\n                if (isTouch) event = event.touches[0]\n\n                const constrain = n => Math.min(Math.max(0, n), 200)\n                const deltaLeft = event.clientX - this.dragState.left\n                const deltaTop = event.clientY - this.dragState.top\n                if (point === 1) {\n                    this.x1 = constrain(x1 + deltaLeft)\n                    this.y1 = y1 + deltaTop\n                } else if (point === 2) {\n                    this.x2 = constrain(x2 + deltaLeft)\n                    this.y2 = y2 + deltaTop\n                }\n            }\n\n            const handleEnd = () => {\n                this.dragState.dragging = false\n                if (isTouch) {\n                    document.removeEventListener('touchmove', handleMove)\n                    document.removeEventListener('touchend', handleEnd)\n                } else {\n                    document.removeEventListener('mousemove', handleMove)\n                    document.removeEventListener('mouseup', handleEnd)\n                }\n                document.onselectstart = null\n                document.ondragstart = null\n            }\n\n            if (isTouch) {\n                document.addEventListener('touchmove', handleMove, {\n                    passive: false\n                })\n                document.addEventListener('touchend', handleEnd)\n            } else {\n                document.addEventListener('mousemove', handleMove)\n                document.addEventListener('mouseup', handleEnd)\n            }\n        }\n    }\n})\n</script>\n{% endraw %}\n","source":"_posts/cubic-bezier.md","raw":"---\ntitle: cubic-bezier三次贝塞尔时间函数\ndate: 2018-12-30 00:00:00\ncategories: Uncategorized\nkeywords: cubic-bezier, 三次贝塞尔, Vue, SVG\ndescription: 用Vue实现响应式SVG来简单模拟cubic-bezier三次贝塞尔时间函数\n---\n\n{% raw %}\n<style>\n#app p {\n\ttext-align: center;\n}\n.svg-wrapper {\n\tmargin-top: 1.25em;\n}\n.svg-wrapper svg {\n\tposition: relative;\n\tdisplay: block;\n\tmargin: 0 auto;\n\toverflow: visible;\n\t-webkit-touch-callout: none;\n\t-webkit-user-select:none;\n\tuser-select: none;\n}\nsvg circle.draggable {\n\tfill: #f2f6ed;\n\ttransition: all .1s;\n\tcursor: move;\n}\nsvg circle.draggable:hover {\n\tstroke: #232520;\n}\n@keyframes animation{\n\tfrom { cy: 200 }\n\tto { cy: 0 }\n}\n</style>\n\n<div id=\"app\">\n\t<div class=\"svg-wrapper\">\n\t\t<svg width=\"280\" height=\"280\">\n\t\t\t<defs>\n\t\t\t\t<marker id=\"arrow\" markerWidth=\"6\" markerHeight=\"6\" refx=\"0\" refy=\"3\" orient=\"auto\">\n\t\t\t\t\t<path d=\"M0,0 L0,6 L6,3 Z\" fill=\"#83887c\"></path>\n\t\t\t\t</marker>\n\t\t\t</defs>\n\t\t\t<g transform=\"translate(20, 40)\" stroke=\"#83887c\" fill=\"none\">\n\t\t\t\t<g stroke-dasharray=\"3 2\">\n\t\t\t\t\t<rect width=\"200\" height=\"200\"></rect>\n\t\t\t\t\t<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"-20\" marker-end=\"url(#arrow)\"></line>\n\t\t\t\t\t<line x1=\"200\" y1=\"200\" x2=\"220\" y2=\"200\" marker-end=\"url(#arrow)\"></line>\n\t\t\t\t</g>\n\t\t\t\t<g fill=\"#83887c\">\n\t\t\t\t\t<circle cx=\"0\" cy=\"200\" r=\"3\"></circle>\n\t\t\t\t\t<circle cx=\"200\" cy=\"0\" r=\"3\"></circle>\n\t\t\t\t</g>\n\t\t\t\t<g stroke=\"none\" fill=\"#83887c\" font-size=\"12\">\n\t\t\t\t\t<text x=\"5\" y=\"215\">time ratio</text>\n\t\t\t\t\t<g transform=\"translate(-8, 198), rotate(-90)\">\n\t\t\t\t\t\t<text>output ratio</text>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<g stroke=\"#d7dcd2\">\n\t\t\t\t\t<line x1=\"250\" y1=\"0\" x2=\"250\" y2=\"200\"></line>\n\t\t\t\t\t<line x1=\"240\" y1=\"0\" x2=\"260\" y2=\"0\"></line>\n\t\t\t\t\t<line x1=\"240\" y1=\"200\" x2=\"260\" y2=\"200\"></line>\n\t\t\t\t</g>\n\t\t\t\t<g fill=\"#0791c6\">\n\t\t\t\t\t<circle cx=\"250\" cy=\"200\" r=\"4.5\"\n\t\t\t\t\t:style=\"{ animation: `animation 2s ${cubicBezierStr} infinite alternate` }\"></circle>\n\t\t\t\t</g>\n\t\t\t\t<g stroke-width=\"1.5\">\n\t\t\t\t\t<path :d=\"`M0,200 C${x1},${y1} ${x2},${y2} 200,0`\"></path>\n\t\t\t\t\t<line :x1=\"x1\" :y1=\"y1\" x2=\"0\" y2=\"200\"></line>\n\t\t\t\t\t<line x1=\"200\" y1=\"0\" :x2=\"x2\" :y2=\"y2\"></line>\n\t\t\t\t</g>\n\t\t\t\t<g :transform=\"`translate(${x1}, ${y1})`\"\n\t\t\t\t\t@mousedown=\"handleStart($event, 1)\"\n\t\t\t\t\t@touchstart=\"handleStart($event, 1)\">\n\t\t\t\t\t<circle r=\"6\" class=\"draggable\"></circle>\n\t\t\t\t</g>\n\t\t\t\t<g :transform=\"`translate(${x2}, ${y2})`\"\n\t\t\t\t\t@mousedown=\"handleStart($event, 2)\"\n\t\t\t\t\t@touchstart=\"handleStart($event, 2)\">\n\t\t\t\t\t<circle r=\"6\" class=\"draggable\"></circle>\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t</svg>\n\t</div>\n\n\t<p>{{ cubicBezierStr }}</p>\n</div>\n{% endraw %}\n\n用在CSS的transition或者animation动画中的时间函数timing-function，描述在过渡或动画中一维数值的速度改变，通常称为缓动函数。\n\n三次/立方贝塞尔曲线（cubic Bézier curves）是CSS时间函数常用的一种。语法为：\n\n``` CSS\ncubic-bezier(x1, y1, x2, y2)\n```\n\n- 横轴为时间比例（time ratio），纵轴为完成状态（output ratio）\n\n- 曲线由四个点来定义，P<sub>0</sub>、P<sub>1</sub>、P<sub>2</sub>和P<sub>3</sub>\n\n- P<sub>0</sub>(0, 0)和P<sub>3</sub>(1, 1)是固定在坐标系上的起点和终点\n\n- 语法中x1, y1, x2, y2表示两个过渡点P<sub>1</sub>和P<sub>2</sub>的横纵坐标\n\n- x1和x2是时间值，必须在[0, 1]范围内\n\n- y1和y2可以是负数或者大于1，从而实现弹跳动画效果\n\n- y值超过实际允许范围（比如颜色值大于255或小于0）会被修改为允许范围内的最接近值\n\n常用的命名过渡效果，等同于某些数值的cubic-bezier。\n\n名称 | 过渡效果 | 等同于\n--- | --- | ---\nlinear | 以相同速度开始至结束 | cubic-bezier(0, 0, 1, 1)\nease | 慢速开始，然后变快，然后慢速结束 | cubic-bezier(.25, .1, .25, 1)\nease-in | 慢速开始 | cubic-bezier(.42, 0, 1, 1)\nease-out | 慢速结束 | cubic-bezier(0, 0, .58, 1)\nease-in-out | 慢速开始和结束 | cubic-bezier(.42, 0, .58, 1)\n\n本页面用Vue实现响应式SVG来简单模拟cubic-bezier三次贝塞尔时间函数。\n\nSVG画布和cubic-bezier过渡点的坐标系不同需要分别定义。\n\n``` JavaScript\ndata: {\n    // SVG画布中的坐标\n    x1: 50,\n    y1: 180,\n    x2: 50,\n    y2: 0,\n\n    // cubic-bezier过渡点的坐标\n    cx1: 0.25,\n    cy1: 0.1,\n    cx2: 0.25,\n    cy2: 1,\n}\n```\n\n坐标转换，将时间值约束在[0, 1]范围内。\n\n``` JavaScript\ncomputed: {\n    cubicBezierStr() {\n        const f = n => {\n            let r = String(n.toFixed(2))\n            r = r.replace(/^0+|0+$/g, '')\n            r = r.replace(/\\.$/, '')\n            if (r === '') r = 0\n            return r\n        }\n        const { x1, y1, x2, y2 } = this\n        const cx1 = x1 / 200\n        const cy1 = (200 - y1) / 200\n        const cx2 = x2 / 200\n        const cy2 = (200 - y2) / 200\n        return `cubic-bezier(${f(cx1)}, ${f(cy1)}, ${f(cx2)}, ${f(cy2)})`\n    }\n}\n```\n\n实现过渡点的拖动与计算，兼容桌面和移动设备mousemove/touchmove。\n\n``` JavaScript\nmethods: {\n    handleStart(event, point) {\n    \tevent.preventDefault()\n        const isTouch = !!event.touches\n        if (isTouch && event.touches.length > 1) return\n        if (isTouch) event = event.touches[0]\n\n        const { x1, y1, x2, y2 } = this\n        this.dragState = {\n            dragging: true,\n            left: event.clientX,\n            top: event.clientY\n        }\n\n        document.onselectstart = () => false\n        document.ondragstart = () => false\n\n        const handleMove = event => {\n            event.preventDefault()\n            if (isTouch) event = event.touches[0]\n\n            const constrain = n => Math.min(Math.max(0, n), 200)\n            const deltaLeft = event.clientX - this.dragState.left\n            const deltaTop = event.clientY - this.dragState.top\n            if (point === 1) {\n                this.x1 = constrain(x1 + deltaLeft)\n                this.y1 = y1 + deltaTop\n            } else if (point === 2) {\n                this.x2 = constrain(x2 + deltaLeft)\n                this.y2 = y2 + deltaTop\n            }\n        }\n\n        const handleEnd = () => {\n            this.dragState.dragging = false\n            if (isTouch) {\n                document.removeEventListener('touchmove', handleMove)\n                document.removeEventListener('touchend', handleEnd)\n            } else {\n                document.removeEventListener('mousemove', handleMove)\n                document.removeEventListener('mouseup', handleEnd)\n            }\n            document.onselectstart = null\n            document.ondragstart = null\n        }\n\n        if (isTouch) {\n            document.addEventListener('touchmove', handleMove, {\n                passive: false\n            })\n            document.addEventListener('touchend', handleEnd)\n        } else {\n            document.addEventListener('mousemove', handleMove)\n            document.addEventListener('mouseup', handleEnd)\n        }\n    }\n}\n```\n\n\n{% raw %}\n<script src=\"/scripts/vue.min.js\"></script>\n<script>\nconst app = new Vue({\n    el: '#app',\n\n    data: {\n        x1: 50,\n        y1: 180,\n        x2: 50,\n        y2: 0,\n\n        cx1: 0.25,\n        cy1: 0.1,\n        cx2: 0.25,\n        cy2: 1,\n\n        dragState: {\n            dragging: false,\n            left: 0,\n            top: 0,\n        }\n    },\n\n    computed: {\n        cubicBezierStr() {\n            const f = n => {\n                let r = String(n.toFixed(2))\n                r = r.replace(/^0+|0+$/g, '')\n                r = r.replace(/\\.$/, '')\n                if (r === '') r = 0\n                return r\n            }\n            const { x1, y1, x2, y2 } = this\n            const cx1 = x1 / 200\n            const cy1 = (200 - y1) / 200\n            const cx2 = x2 / 200\n            const cy2 = (200 - y2) / 200\n            return `cubic-bezier(${f(cx1)}, ${f(cy1)}, ${f(cx2)}, ${f(cy2)})`\n        }\n    },\n\n    methods: {\n        handleStart(event, point) {\n        \tevent.preventDefault()\n            const isTouch = !!event.touches\n            if (isTouch && event.touches.length > 1) return\n            if (isTouch) event = event.touches[0]\n\n            const { x1, y1, x2, y2 } = this\n            this.dragState = {\n                dragging: true,\n                left: event.clientX,\n                top: event.clientY\n            }\n\n            document.onselectstart = () => false\n            document.ondragstart = () => false\n\n            const handleMove = event => {\n                event.preventDefault()\n                if (isTouch) event = event.touches[0]\n\n                const constrain = n => Math.min(Math.max(0, n), 200)\n                const deltaLeft = event.clientX - this.dragState.left\n                const deltaTop = event.clientY - this.dragState.top\n                if (point === 1) {\n                    this.x1 = constrain(x1 + deltaLeft)\n                    this.y1 = y1 + deltaTop\n                } else if (point === 2) {\n                    this.x2 = constrain(x2 + deltaLeft)\n                    this.y2 = y2 + deltaTop\n                }\n            }\n\n            const handleEnd = () => {\n                this.dragState.dragging = false\n                if (isTouch) {\n                    document.removeEventListener('touchmove', handleMove)\n                    document.removeEventListener('touchend', handleEnd)\n                } else {\n                    document.removeEventListener('mousemove', handleMove)\n                    document.removeEventListener('mouseup', handleEnd)\n                }\n                document.onselectstart = null\n                document.ondragstart = null\n            }\n\n            if (isTouch) {\n                document.addEventListener('touchmove', handleMove, {\n                    passive: false\n                })\n                document.addEventListener('touchend', handleEnd)\n            } else {\n                document.addEventListener('mousemove', handleMove)\n                document.addEventListener('mouseup', handleEnd)\n            }\n        }\n    }\n})\n</script>\n{% endraw %}\n","slug":"cubic-bezier","published":1,"updated":"2018-12-31T06:56:11.319Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160en02003g3a8iisoatbzu","content":"\n<style>\n#app p {\n\ttext-align: center;\n}\n.svg-wrapper {\n\tmargin-top: 1.25em;\n}\n.svg-wrapper svg {\n\tposition: relative;\n\tdisplay: block;\n\tmargin: 0 auto;\n\toverflow: visible;\n\t-webkit-touch-callout: none;\n\t-webkit-user-select:none;\n\tuser-select: none;\n}\nsvg circle.draggable {\n\tfill: #f2f6ed;\n\ttransition: all .1s;\n\tcursor: move;\n}\nsvg circle.draggable:hover {\n\tstroke: #232520;\n}\n@keyframes animation{\n\tfrom { cy: 200 }\n\tto { cy: 0 }\n}\n</style>\n\n<div id=\"app\">\n\t<div class=\"svg-wrapper\">\n\t\t<svg width=\"280\" height=\"280\">\n\t\t\t<defs>\n\t\t\t\t<marker id=\"arrow\" markerwidth=\"6\" markerheight=\"6\" refx=\"0\" refy=\"3\" orient=\"auto\">\n\t\t\t\t\t<path d=\"M0,0 L0,6 L6,3 Z\" fill=\"#83887c\"/>\n\t\t\t\t</marker>\n\t\t\t</defs>\n\t\t\t<g transform=\"translate(20, 40)\" stroke=\"#83887c\" fill=\"none\">\n\t\t\t\t<g stroke-dasharray=\"3 2\">\n\t\t\t\t\t<rect width=\"200\" height=\"200\"/>\n\t\t\t\t\t<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"-20\" marker-end=\"url(#arrow)\"/>\n\t\t\t\t\t<line x1=\"200\" y1=\"200\" x2=\"220\" y2=\"200\" marker-end=\"url(#arrow)\"/>\n\t\t\t\t</g>\n\t\t\t\t<g fill=\"#83887c\">\n\t\t\t\t\t<circle cx=\"0\" cy=\"200\" r=\"3\"/>\n\t\t\t\t\t<circle cx=\"200\" cy=\"0\" r=\"3\"/>\n\t\t\t\t</g>\n\t\t\t\t<g stroke=\"none\" fill=\"#83887c\" font-size=\"12\">\n\t\t\t\t\t<text x=\"5\" y=\"215\">time ratio</text>\n\t\t\t\t\t<g transform=\"translate(-8, 198), rotate(-90)\">\n\t\t\t\t\t\t<text>output ratio</text>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<g stroke=\"#d7dcd2\">\n\t\t\t\t\t<line x1=\"250\" y1=\"0\" x2=\"250\" y2=\"200\"/>\n\t\t\t\t\t<line x1=\"240\" y1=\"0\" x2=\"260\" y2=\"0\"/>\n\t\t\t\t\t<line x1=\"240\" y1=\"200\" x2=\"260\" y2=\"200\"/>\n\t\t\t\t</g>\n\t\t\t\t<g fill=\"#0791c6\">\n\t\t\t\t\t<circle cx=\"250\" cy=\"200\" r=\"4.5\" :style=\"{ animation: `animation 2s ${cubicBezierStr} infinite alternate` }\"/>\n\t\t\t\t</g>\n\t\t\t\t<g stroke-width=\"1.5\">\n\t\t\t\t\t<path :d=\"`M0,200 C${x1},${y1} ${x2},${y2} 200,0`\"/>\n\t\t\t\t\t<line :x1=\"x1\" :y1=\"y1\" x2=\"0\" y2=\"200\"/>\n\t\t\t\t\t<line x1=\"200\" y1=\"0\" :x2=\"x2\" :y2=\"y2\"/>\n\t\t\t\t</g>\n\t\t\t\t<g :transform=\"`translate(${x1}, ${y1})`\" @mousedown=\"handleStart($event, 1)\" @touchstart=\"handleStart($event, 1)\">\n\t\t\t\t\t<circle r=\"6\" class=\"draggable\"/>\n\t\t\t\t</g>\n\t\t\t\t<g :transform=\"`translate(${x2}, ${y2})`\" @mousedown=\"handleStart($event, 2)\" @touchstart=\"handleStart($event, 2)\">\n\t\t\t\t\t<circle r=\"6\" class=\"draggable\"/>\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t</svg>\n\t</div>\n\n\t<p>{{ cubicBezierStr }}</p>\n</div>\n\n<p>用在CSS的transition或者animation动画中的时间函数timing-function，描述在过渡或动画中一维数值的速度改变，通常称为缓动函数。</p>\n<p>三次/立方贝塞尔曲线（cubic Bézier curves）是CSS时间函数常用的一种。语法为：</p>\n<figure class=\"highlight css\"><pre><div class=\"line\"><span class=\"selector-tag\">cubic-bezier</span>(<span class=\"selector-tag\">x1</span>, <span class=\"selector-tag\">y1</span>, <span class=\"selector-tag\">x2</span>, <span class=\"selector-tag\">y2</span>)</div></pre></figure>\n<ul>\n<li><p>横轴为时间比例（time ratio），纵轴为完成状态（output ratio）</p>\n</li>\n<li><p>曲线由四个点来定义，P<sub>0</sub>、P<sub>1</sub>、P<sub>2</sub>和P<sub>3</sub></p>\n</li>\n<li><p>P<sub>0</sub>(0, 0)和P<sub>3</sub>(1, 1)是固定在坐标系上的起点和终点</p>\n</li>\n<li><p>语法中x1, y1, x2, y2表示两个过渡点P<sub>1</sub>和P<sub>2</sub>的横纵坐标</p>\n</li>\n<li><p>x1和x2是时间值，必须在[0, 1]范围内</p>\n</li>\n<li><p>y1和y2可以是负数或者大于1，从而实现弹跳动画效果</p>\n</li>\n<li><p>y值超过实际允许范围（比如颜色值大于255或小于0）会被修改为允许范围内的最接近值</p>\n</li>\n</ul>\n<p>常用的命名过渡效果，等同于某些数值的cubic-bezier。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>过渡效果</th>\n<th>等同于</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>linear</td>\n<td>以相同速度开始至结束</td>\n<td>cubic-bezier(0, 0, 1, 1)</td>\n</tr>\n<tr>\n<td>ease</td>\n<td>慢速开始，然后变快，然后慢速结束</td>\n<td>cubic-bezier(.25, .1, .25, 1)</td>\n</tr>\n<tr>\n<td>ease-in</td>\n<td>慢速开始</td>\n<td>cubic-bezier(.42, 0, 1, 1)</td>\n</tr>\n<tr>\n<td>ease-out</td>\n<td>慢速结束</td>\n<td>cubic-bezier(0, 0, .58, 1)</td>\n</tr>\n<tr>\n<td>ease-in-out</td>\n<td>慢速开始和结束</td>\n<td>cubic-bezier(.42, 0, .58, 1)</td>\n</tr>\n</tbody>\n</table>\n<p>本页面用Vue实现响应式SVG来简单模拟cubic-bezier三次贝塞尔时间函数。</p>\n<p>SVG画布和cubic-bezier过渡点的坐标系不同需要分别定义。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">data: &#123;</div><div class=\"line\">    <span class=\"comment\">// SVG画布中的坐标</span></div><div class=\"line\">    x1: <span class=\"number\">50</span>,</div><div class=\"line\">    y1: <span class=\"number\">180</span>,</div><div class=\"line\">    x2: <span class=\"number\">50</span>,</div><div class=\"line\">    y2: <span class=\"number\">0</span>,</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// cubic-bezier过渡点的坐标</span></div><div class=\"line\">    cx1: <span class=\"number\">0.25</span>,</div><div class=\"line\">    cy1: <span class=\"number\">0.1</span>,</div><div class=\"line\">    cx2: <span class=\"number\">0.25</span>,</div><div class=\"line\">    cy2: <span class=\"number\">1</span>,</div><div class=\"line\">&#125;</div></pre></figure>\n<p>坐标转换，将时间值约束在[0, 1]范围内。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">computed: &#123;</div><div class=\"line\">    cubicBezierStr() &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> f = <span class=\"function\"><span class=\"params\">n</span> =&gt;</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> r = <span class=\"built_in\">String</span>(n.toFixed(<span class=\"number\">2</span>))</div><div class=\"line\">            r = r.replace(<span class=\"regexp\">/^0+|0+$/g</span>, <span class=\"string\">''</span>)</div><div class=\"line\">            r = r.replace(<span class=\"regexp\">/\\.$/</span>, <span class=\"string\">''</span>)</div><div class=\"line\">            <span class=\"keyword\">if</span> (r === <span class=\"string\">''</span>) r = <span class=\"number\">0</span></div><div class=\"line\">            <span class=\"keyword\">return</span> r</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">const</span> &#123; x1, y1, x2, y2 &#125; = <span class=\"keyword\">this</span></div><div class=\"line\">        <span class=\"keyword\">const</span> cx1 = x1 / <span class=\"number\">200</span></div><div class=\"line\">        <span class=\"keyword\">const</span> cy1 = (<span class=\"number\">200</span> - y1) / <span class=\"number\">200</span></div><div class=\"line\">        <span class=\"keyword\">const</span> cx2 = x2 / <span class=\"number\">200</span></div><div class=\"line\">        <span class=\"keyword\">const</span> cy2 = (<span class=\"number\">200</span> - y2) / <span class=\"number\">200</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`cubic-bezier(<span class=\"subst\">$&#123;f(cx1)&#125;</span>, <span class=\"subst\">$&#123;f(cy1)&#125;</span>, <span class=\"subst\">$&#123;f(cx2)&#125;</span>, <span class=\"subst\">$&#123;f(cy2)&#125;</span>)`</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>实现过渡点的拖动与计算，兼容桌面和移动设备mousemove/touchmove。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">methods: &#123;</div><div class=\"line\">    handleStart(event, point) &#123;</div><div class=\"line\">    \tevent.preventDefault()</div><div class=\"line\">        <span class=\"keyword\">const</span> isTouch = !!event.touches</div><div class=\"line\">        <span class=\"keyword\">if</span> (isTouch &amp;&amp; event.touches.length &gt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (isTouch) event = event.touches[<span class=\"number\">0</span>]</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> &#123; x1, y1, x2, y2 &#125; = <span class=\"keyword\">this</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.dragState = &#123;</div><div class=\"line\">            dragging: <span class=\"literal\">true</span>,</div><div class=\"line\">            left: event.clientX,</div><div class=\"line\">            top: event.clientY</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"built_in\">document</span>.onselectstart = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"literal\">false</span></div><div class=\"line\">        <span class=\"built_in\">document</span>.ondragstart = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"literal\">false</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> handleMove = <span class=\"function\"><span class=\"params\">event</span> =&gt;</span> &#123;</div><div class=\"line\">            event.preventDefault()</div><div class=\"line\">            <span class=\"keyword\">if</span> (isTouch) event = event.touches[<span class=\"number\">0</span>]</div><div class=\"line\"><br></div><div class=\"line\">            <span class=\"keyword\">const</span> constrain = <span class=\"function\"><span class=\"params\">n</span> =&gt;</span> <span class=\"built_in\">Math</span>.min(<span class=\"built_in\">Math</span>.max(<span class=\"number\">0</span>, n), <span class=\"number\">200</span>)</div><div class=\"line\">            <span class=\"keyword\">const</span> deltaLeft = event.clientX - <span class=\"keyword\">this</span>.dragState.left</div><div class=\"line\">            <span class=\"keyword\">const</span> deltaTop = event.clientY - <span class=\"keyword\">this</span>.dragState.top</div><div class=\"line\">            <span class=\"keyword\">if</span> (point === <span class=\"number\">1</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.x1 = constrain(x1 + deltaLeft)</div><div class=\"line\">                <span class=\"keyword\">this</span>.y1 = y1 + deltaTop</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (point === <span class=\"number\">2</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.x2 = constrain(x2 + deltaLeft)</div><div class=\"line\">                <span class=\"keyword\">this</span>.y2 = y2 + deltaTop</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> handleEnd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.dragState.dragging = <span class=\"literal\">false</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (isTouch) &#123;</div><div class=\"line\">                <span class=\"built_in\">document</span>.removeEventListener(<span class=\"string\">'touchmove'</span>, handleMove)</div><div class=\"line\">                <span class=\"built_in\">document</span>.removeEventListener(<span class=\"string\">'touchend'</span>, handleEnd)</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                <span class=\"built_in\">document</span>.removeEventListener(<span class=\"string\">'mousemove'</span>, handleMove)</div><div class=\"line\">                <span class=\"built_in\">document</span>.removeEventListener(<span class=\"string\">'mouseup'</span>, handleEnd)</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"built_in\">document</span>.onselectstart = <span class=\"literal\">null</span></div><div class=\"line\">            <span class=\"built_in\">document</span>.ondragstart = <span class=\"literal\">null</span></div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">if</span> (isTouch) &#123;</div><div class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'touchmove'</span>, handleMove, &#123;</div><div class=\"line\">                passive: <span class=\"literal\">false</span></div><div class=\"line\">            &#125;)</div><div class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'touchend'</span>, handleEnd)</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'mousemove'</span>, handleMove)</div><div class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'mouseup'</span>, handleEnd)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n\n<script src=\"/scripts/vue.min.js\"></script>\n<script>\nconst app = new Vue({\n    el: '#app',\n\n    data: {\n        x1: 50,\n        y1: 180,\n        x2: 50,\n        y2: 0,\n\n        cx1: 0.25,\n        cy1: 0.1,\n        cx2: 0.25,\n        cy2: 1,\n\n        dragState: {\n            dragging: false,\n            left: 0,\n            top: 0,\n        }\n    },\n\n    computed: {\n        cubicBezierStr() {\n            const f = n => {\n                let r = String(n.toFixed(2))\n                r = r.replace(/^0+|0+$/g, '')\n                r = r.replace(/\\.$/, '')\n                if (r === '') r = 0\n                return r\n            }\n            const { x1, y1, x2, y2 } = this\n            const cx1 = x1 / 200\n            const cy1 = (200 - y1) / 200\n            const cx2 = x2 / 200\n            const cy2 = (200 - y2) / 200\n            return `cubic-bezier(${f(cx1)}, ${f(cy1)}, ${f(cx2)}, ${f(cy2)})`\n        }\n    },\n\n    methods: {\n        handleStart(event, point) {\n        \tevent.preventDefault()\n            const isTouch = !!event.touches\n            if (isTouch && event.touches.length > 1) return\n            if (isTouch) event = event.touches[0]\n\n            const { x1, y1, x2, y2 } = this\n            this.dragState = {\n                dragging: true,\n                left: event.clientX,\n                top: event.clientY\n            }\n\n            document.onselectstart = () => false\n            document.ondragstart = () => false\n\n            const handleMove = event => {\n                event.preventDefault()\n                if (isTouch) event = event.touches[0]\n\n                const constrain = n => Math.min(Math.max(0, n), 200)\n                const deltaLeft = event.clientX - this.dragState.left\n                const deltaTop = event.clientY - this.dragState.top\n                if (point === 1) {\n                    this.x1 = constrain(x1 + deltaLeft)\n                    this.y1 = y1 + deltaTop\n                } else if (point === 2) {\n                    this.x2 = constrain(x2 + deltaLeft)\n                    this.y2 = y2 + deltaTop\n                }\n            }\n\n            const handleEnd = () => {\n                this.dragState.dragging = false\n                if (isTouch) {\n                    document.removeEventListener('touchmove', handleMove)\n                    document.removeEventListener('touchend', handleEnd)\n                } else {\n                    document.removeEventListener('mousemove', handleMove)\n                    document.removeEventListener('mouseup', handleEnd)\n                }\n                document.onselectstart = null\n                document.ondragstart = null\n            }\n\n            if (isTouch) {\n                document.addEventListener('touchmove', handleMove, {\n                    passive: false\n                })\n                document.addEventListener('touchend', handleEnd)\n            } else {\n                document.addEventListener('mousemove', handleMove)\n                document.addEventListener('mouseup', handleEnd)\n            }\n        }\n    }\n})\n</script>\n\n","site":{"data":{}},"excerpt":"","more":"\n<style>\n#app p {\n\ttext-align: center;\n}\n.svg-wrapper {\n\tmargin-top: 1.25em;\n}\n.svg-wrapper svg {\n\tposition: relative;\n\tdisplay: block;\n\tmargin: 0 auto;\n\toverflow: visible;\n\t-webkit-touch-callout: none;\n\t-webkit-user-select:none;\n\tuser-select: none;\n}\nsvg circle.draggable {\n\tfill: #f2f6ed;\n\ttransition: all .1s;\n\tcursor: move;\n}\nsvg circle.draggable:hover {\n\tstroke: #232520;\n}\n@keyframes animation{\n\tfrom { cy: 200 }\n\tto { cy: 0 }\n}\n</style>\n\n<div id=\"app\">\n\t<div class=\"svg-wrapper\">\n\t\t<svg width=\"280\" height=\"280\">\n\t\t\t<defs>\n\t\t\t\t<marker id=\"arrow\" markerwidth=\"6\" markerheight=\"6\" refx=\"0\" refy=\"3\" orient=\"auto\">\n\t\t\t\t\t<path d=\"M0,0 L0,6 L6,3 Z\" fill=\"#83887c\"/>\n\t\t\t\t</marker>\n\t\t\t</defs>\n\t\t\t<g transform=\"translate(20, 40)\" stroke=\"#83887c\" fill=\"none\">\n\t\t\t\t<g stroke-dasharray=\"3 2\">\n\t\t\t\t\t<rect width=\"200\" height=\"200\"/>\n\t\t\t\t\t<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"-20\" marker-end=\"url(#arrow)\"/>\n\t\t\t\t\t<line x1=\"200\" y1=\"200\" x2=\"220\" y2=\"200\" marker-end=\"url(#arrow)\"/>\n\t\t\t\t</g>\n\t\t\t\t<g fill=\"#83887c\">\n\t\t\t\t\t<circle cx=\"0\" cy=\"200\" r=\"3\"/>\n\t\t\t\t\t<circle cx=\"200\" cy=\"0\" r=\"3\"/>\n\t\t\t\t</g>\n\t\t\t\t<g stroke=\"none\" fill=\"#83887c\" font-size=\"12\">\n\t\t\t\t\t<text x=\"5\" y=\"215\">time ratio</text>\n\t\t\t\t\t<g transform=\"translate(-8, 198), rotate(-90)\">\n\t\t\t\t\t\t<text>output ratio</text>\n\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<g stroke=\"#d7dcd2\">\n\t\t\t\t\t<line x1=\"250\" y1=\"0\" x2=\"250\" y2=\"200\"/>\n\t\t\t\t\t<line x1=\"240\" y1=\"0\" x2=\"260\" y2=\"0\"/>\n\t\t\t\t\t<line x1=\"240\" y1=\"200\" x2=\"260\" y2=\"200\"/>\n\t\t\t\t</g>\n\t\t\t\t<g fill=\"#0791c6\">\n\t\t\t\t\t<circle cx=\"250\" cy=\"200\" r=\"4.5\" :style=\"{ animation: `animation 2s ${cubicBezierStr} infinite alternate` }\"/>\n\t\t\t\t</g>\n\t\t\t\t<g stroke-width=\"1.5\">\n\t\t\t\t\t<path :d=\"`M0,200 C${x1},${y1} ${x2},${y2} 200,0`\"/>\n\t\t\t\t\t<line :x1=\"x1\" :y1=\"y1\" x2=\"0\" y2=\"200\"/>\n\t\t\t\t\t<line x1=\"200\" y1=\"0\" :x2=\"x2\" :y2=\"y2\"/>\n\t\t\t\t</g>\n\t\t\t\t<g :transform=\"`translate(${x1}, ${y1})`\" @mousedown=\"handleStart($event, 1)\" @touchstart=\"handleStart($event, 1)\">\n\t\t\t\t\t<circle r=\"6\" class=\"draggable\"/>\n\t\t\t\t</g>\n\t\t\t\t<g :transform=\"`translate(${x2}, ${y2})`\" @mousedown=\"handleStart($event, 2)\" @touchstart=\"handleStart($event, 2)\">\n\t\t\t\t\t<circle r=\"6\" class=\"draggable\"/>\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t</svg>\n\t</div>\n\n\t<p>{{ cubicBezierStr }}</p>\n</div>\n\n<p>用在CSS的transition或者animation动画中的时间函数timing-function，描述在过渡或动画中一维数值的速度改变，通常称为缓动函数。</p>\n<p>三次/立方贝塞尔曲线（cubic Bézier curves）是CSS时间函数常用的一种。语法为：</p>\n<figure class=\"highlight css\"><pre><div class=\"line\"><span class=\"selector-tag\">cubic-bezier</span>(<span class=\"selector-tag\">x1</span>, <span class=\"selector-tag\">y1</span>, <span class=\"selector-tag\">x2</span>, <span class=\"selector-tag\">y2</span>)</div></pre></figure>\n<ul>\n<li><p>横轴为时间比例（time ratio），纵轴为完成状态（output ratio）</p>\n</li>\n<li><p>曲线由四个点来定义，P<sub>0</sub>、P<sub>1</sub>、P<sub>2</sub>和P<sub>3</sub></p>\n</li>\n<li><p>P<sub>0</sub>(0, 0)和P<sub>3</sub>(1, 1)是固定在坐标系上的起点和终点</p>\n</li>\n<li><p>语法中x1, y1, x2, y2表示两个过渡点P<sub>1</sub>和P<sub>2</sub>的横纵坐标</p>\n</li>\n<li><p>x1和x2是时间值，必须在[0, 1]范围内</p>\n</li>\n<li><p>y1和y2可以是负数或者大于1，从而实现弹跳动画效果</p>\n</li>\n<li><p>y值超过实际允许范围（比如颜色值大于255或小于0）会被修改为允许范围内的最接近值</p>\n</li>\n</ul>\n<p>常用的命名过渡效果，等同于某些数值的cubic-bezier。</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>过渡效果</th>\n<th>等同于</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>linear</td>\n<td>以相同速度开始至结束</td>\n<td>cubic-bezier(0, 0, 1, 1)</td>\n</tr>\n<tr>\n<td>ease</td>\n<td>慢速开始，然后变快，然后慢速结束</td>\n<td>cubic-bezier(.25, .1, .25, 1)</td>\n</tr>\n<tr>\n<td>ease-in</td>\n<td>慢速开始</td>\n<td>cubic-bezier(.42, 0, 1, 1)</td>\n</tr>\n<tr>\n<td>ease-out</td>\n<td>慢速结束</td>\n<td>cubic-bezier(0, 0, .58, 1)</td>\n</tr>\n<tr>\n<td>ease-in-out</td>\n<td>慢速开始和结束</td>\n<td>cubic-bezier(.42, 0, .58, 1)</td>\n</tr>\n</tbody>\n</table>\n<p>本页面用Vue实现响应式SVG来简单模拟cubic-bezier三次贝塞尔时间函数。</p>\n<p>SVG画布和cubic-bezier过渡点的坐标系不同需要分别定义。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">data: &#123;</div><div class=\"line\">    <span class=\"comment\">// SVG画布中的坐标</span></div><div class=\"line\">    x1: <span class=\"number\">50</span>,</div><div class=\"line\">    y1: <span class=\"number\">180</span>,</div><div class=\"line\">    x2: <span class=\"number\">50</span>,</div><div class=\"line\">    y2: <span class=\"number\">0</span>,</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// cubic-bezier过渡点的坐标</span></div><div class=\"line\">    cx1: <span class=\"number\">0.25</span>,</div><div class=\"line\">    cy1: <span class=\"number\">0.1</span>,</div><div class=\"line\">    cx2: <span class=\"number\">0.25</span>,</div><div class=\"line\">    cy2: <span class=\"number\">1</span>,</div><div class=\"line\">&#125;</div></pre></figure>\n<p>坐标转换，将时间值约束在[0, 1]范围内。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">computed: &#123;</div><div class=\"line\">    cubicBezierStr() &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> f = <span class=\"function\"><span class=\"params\">n</span> =&gt;</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> r = <span class=\"built_in\">String</span>(n.toFixed(<span class=\"number\">2</span>))</div><div class=\"line\">            r = r.replace(<span class=\"regexp\">/^0+|0+$/g</span>, <span class=\"string\">''</span>)</div><div class=\"line\">            r = r.replace(<span class=\"regexp\">/\\.$/</span>, <span class=\"string\">''</span>)</div><div class=\"line\">            <span class=\"keyword\">if</span> (r === <span class=\"string\">''</span>) r = <span class=\"number\">0</span></div><div class=\"line\">            <span class=\"keyword\">return</span> r</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">const</span> &#123; x1, y1, x2, y2 &#125; = <span class=\"keyword\">this</span></div><div class=\"line\">        <span class=\"keyword\">const</span> cx1 = x1 / <span class=\"number\">200</span></div><div class=\"line\">        <span class=\"keyword\">const</span> cy1 = (<span class=\"number\">200</span> - y1) / <span class=\"number\">200</span></div><div class=\"line\">        <span class=\"keyword\">const</span> cx2 = x2 / <span class=\"number\">200</span></div><div class=\"line\">        <span class=\"keyword\">const</span> cy2 = (<span class=\"number\">200</span> - y2) / <span class=\"number\">200</span></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`cubic-bezier(<span class=\"subst\">$&#123;f(cx1)&#125;</span>, <span class=\"subst\">$&#123;f(cy1)&#125;</span>, <span class=\"subst\">$&#123;f(cx2)&#125;</span>, <span class=\"subst\">$&#123;f(cy2)&#125;</span>)`</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>实现过渡点的拖动与计算，兼容桌面和移动设备mousemove/touchmove。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">methods: &#123;</div><div class=\"line\">    handleStart(event, point) &#123;</div><div class=\"line\">    \tevent.preventDefault()</div><div class=\"line\">        <span class=\"keyword\">const</span> isTouch = !!event.touches</div><div class=\"line\">        <span class=\"keyword\">if</span> (isTouch &amp;&amp; event.touches.length &gt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (isTouch) event = event.touches[<span class=\"number\">0</span>]</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> &#123; x1, y1, x2, y2 &#125; = <span class=\"keyword\">this</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.dragState = &#123;</div><div class=\"line\">            dragging: <span class=\"literal\">true</span>,</div><div class=\"line\">            left: event.clientX,</div><div class=\"line\">            top: event.clientY</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"built_in\">document</span>.onselectstart = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"literal\">false</span></div><div class=\"line\">        <span class=\"built_in\">document</span>.ondragstart = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"literal\">false</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> handleMove = <span class=\"function\"><span class=\"params\">event</span> =&gt;</span> &#123;</div><div class=\"line\">            event.preventDefault()</div><div class=\"line\">            <span class=\"keyword\">if</span> (isTouch) event = event.touches[<span class=\"number\">0</span>]</div><div class=\"line\"><br></div><div class=\"line\">            <span class=\"keyword\">const</span> constrain = <span class=\"function\"><span class=\"params\">n</span> =&gt;</span> <span class=\"built_in\">Math</span>.min(<span class=\"built_in\">Math</span>.max(<span class=\"number\">0</span>, n), <span class=\"number\">200</span>)</div><div class=\"line\">            <span class=\"keyword\">const</span> deltaLeft = event.clientX - <span class=\"keyword\">this</span>.dragState.left</div><div class=\"line\">            <span class=\"keyword\">const</span> deltaTop = event.clientY - <span class=\"keyword\">this</span>.dragState.top</div><div class=\"line\">            <span class=\"keyword\">if</span> (point === <span class=\"number\">1</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.x1 = constrain(x1 + deltaLeft)</div><div class=\"line\">                <span class=\"keyword\">this</span>.y1 = y1 + deltaTop</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (point === <span class=\"number\">2</span>) &#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.x2 = constrain(x2 + deltaLeft)</div><div class=\"line\">                <span class=\"keyword\">this</span>.y2 = y2 + deltaTop</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> handleEnd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.dragState.dragging = <span class=\"literal\">false</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (isTouch) &#123;</div><div class=\"line\">                <span class=\"built_in\">document</span>.removeEventListener(<span class=\"string\">'touchmove'</span>, handleMove)</div><div class=\"line\">                <span class=\"built_in\">document</span>.removeEventListener(<span class=\"string\">'touchend'</span>, handleEnd)</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                <span class=\"built_in\">document</span>.removeEventListener(<span class=\"string\">'mousemove'</span>, handleMove)</div><div class=\"line\">                <span class=\"built_in\">document</span>.removeEventListener(<span class=\"string\">'mouseup'</span>, handleEnd)</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"built_in\">document</span>.onselectstart = <span class=\"literal\">null</span></div><div class=\"line\">            <span class=\"built_in\">document</span>.ondragstart = <span class=\"literal\">null</span></div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">if</span> (isTouch) &#123;</div><div class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'touchmove'</span>, handleMove, &#123;</div><div class=\"line\">                passive: <span class=\"literal\">false</span></div><div class=\"line\">            &#125;)</div><div class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'touchend'</span>, handleEnd)</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'mousemove'</span>, handleMove)</div><div class=\"line\">            <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'mouseup'</span>, handleEnd)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n\n<script src=\"/scripts/vue.min.js\"></script>\n<script>\nconst app = new Vue({\n    el: '#app',\n\n    data: {\n        x1: 50,\n        y1: 180,\n        x2: 50,\n        y2: 0,\n\n        cx1: 0.25,\n        cy1: 0.1,\n        cx2: 0.25,\n        cy2: 1,\n\n        dragState: {\n            dragging: false,\n            left: 0,\n            top: 0,\n        }\n    },\n\n    computed: {\n        cubicBezierStr() {\n            const f = n => {\n                let r = String(n.toFixed(2))\n                r = r.replace(/^0+|0+$/g, '')\n                r = r.replace(/\\.$/, '')\n                if (r === '') r = 0\n                return r\n            }\n            const { x1, y1, x2, y2 } = this\n            const cx1 = x1 / 200\n            const cy1 = (200 - y1) / 200\n            const cx2 = x2 / 200\n            const cy2 = (200 - y2) / 200\n            return `cubic-bezier(${f(cx1)}, ${f(cy1)}, ${f(cx2)}, ${f(cy2)})`\n        }\n    },\n\n    methods: {\n        handleStart(event, point) {\n        \tevent.preventDefault()\n            const isTouch = !!event.touches\n            if (isTouch && event.touches.length > 1) return\n            if (isTouch) event = event.touches[0]\n\n            const { x1, y1, x2, y2 } = this\n            this.dragState = {\n                dragging: true,\n                left: event.clientX,\n                top: event.clientY\n            }\n\n            document.onselectstart = () => false\n            document.ondragstart = () => false\n\n            const handleMove = event => {\n                event.preventDefault()\n                if (isTouch) event = event.touches[0]\n\n                const constrain = n => Math.min(Math.max(0, n), 200)\n                const deltaLeft = event.clientX - this.dragState.left\n                const deltaTop = event.clientY - this.dragState.top\n                if (point === 1) {\n                    this.x1 = constrain(x1 + deltaLeft)\n                    this.y1 = y1 + deltaTop\n                } else if (point === 2) {\n                    this.x2 = constrain(x2 + deltaLeft)\n                    this.y2 = y2 + deltaTop\n                }\n            }\n\n            const handleEnd = () => {\n                this.dragState.dragging = false\n                if (isTouch) {\n                    document.removeEventListener('touchmove', handleMove)\n                    document.removeEventListener('touchend', handleEnd)\n                } else {\n                    document.removeEventListener('mousemove', handleMove)\n                    document.removeEventListener('mouseup', handleEnd)\n                }\n                document.onselectstart = null\n                document.ondragstart = null\n            }\n\n            if (isTouch) {\n                document.addEventListener('touchmove', handleMove, {\n                    passive: false\n                })\n                document.addEventListener('touchend', handleEnd)\n            } else {\n                document.addEventListener('mousemove', handleMove)\n                document.addEventListener('mouseup', handleEnd)\n            }\n        }\n    }\n})\n</script>\n\n"},{"title":"ES5中类的封装","date":"2019-01-18T16:00:00.000Z","keywords":"JS类, JS属性和方法, JavaScript","description":"JavaScript中类的封装、私有属性和方法、公有属性和方法、特权方法、公共属性和方法、静态属性和方法","_content":"\n通过this在当前对象自身上添加属性和方法，通过原型prototype继承公共属性和方法。\n\nJavaScript的函数作用域，即函数内部的变量和方法在外界是访问不到的，通过此特性即可创建私有属性和方法。\n\n在函数内部通过this创建的属性和方法，每个实例化对象都拥有一份，并且外部可访问。\n\n通过this创建的方法，不仅可以访问公有属性和方法，还能访问类的私有属性和方法，故而可以用这些特权方法来初始化实例对象，创建对象时调用特权方法可以看作是类的构造器。\n\n类外部通过点语法添加的属性和方法，在使用new关键字创建对象时没有执行到，所以对象实例无法获取，称为静态属性和方法。\n\n由于JavaScript原型链的特性，新实例对象的prototype和类的prototype指向的是同一个对象，所以实例对象可以共享在原型上定义的公共属性和方法。\n\n{% img /images/else/class.gif 305 %}\n\n下面示例中，person的name和race在出生时设定，并且永远不变。创建时，从一岁开始，并定好了寿命，寿命值隐藏外部不可见。对于体重，进食时增加，锻炼时减少。每次进食或者锻炼，都会长大一岁。人物对象具有公开的clothing属性，任何人都可以查看修改。公开的dirtFactor污垢因子，可以手动修改增加灰尘或清除污垢，每次进食或者锻炼，它也会增加，但可以通过shower()方法减少。\n\n``` JavaScript\nfunction Person(name, race) {\n    this.constructor.population++\n\n    // 私有属性和方法\n    var alive = true, age = 1\n    var maxAge = 70 + Math.round(Math.random() * 30)\n    function makeOlder() {\n        return alive = (++age <= maxAge)\n    }\n\n    var myName = name ? name : 'John Doe'\n    var weight = 1\n\n    // 特权方法\n    this.toString = this.getName = function() {\n        return myName\n    }\n\n    this.eat = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight *= 3\n        } else {\n            console.log(myName + ' can\\'t eat, he\\'s dead!')\n        }\n    }\n    this.exercise = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight /= 2\n        } else {\n            console.log(myName + ' can\\'t exercise, he\\'s dead!')\n        }\n    }\n    this.weigh = function() {\n        return weight\n    }\n    this.getRace = function() {\n        return race\n    }\n    this.getAge = function() {\n        return age\n    }\n    this.muchTimePasses = function() {\n        age += 50\n        this.dirtFactor = 10\n    }\n\n    // 公有属性\n    this.clothing = 'nothing/naked'\n    this.dirtFactor = 0\n}\n\n// 公共属性 \nPerson.prototype.legs = 2\n\n// 公共方法\nPerson.prototype.beCool = function() {\n    this.clothing = 'khakis and black shirt'\n}\nPerson.prototype.shower = function() {\n    this.dirtFactor = 2\n}\nPerson.prototype.showLegs = function() {\n    console.log(this + ' has ' + this.legs + ' legs')\n}\nPerson.prototype.amputate = function() {\n    this.legs--\n}\n\n// 静态属性\nPerson.population = 0\n```\n\n下面是Person类使用示例。\n\n``` JavaScript\nfunction runLives() {\n    // 创建两个新实例对象\n    var gk = new Person('Gavin', 'caucasian')\n    var lk = new Person('Lisa', 'caucasian')\n    console.log('There are ' + Person.population + ' people')\n\n    // 两个对象读取this.legs时共用原型属性\n    gk.showLegs()\n    lk.showLegs()\n\n    // 设置公有属性，不会覆盖私有属性race\n    gk.race = 'hispanic'\n    // 返回创建时设置的私有属性race\n    console.log(gk + '\\'s real race is ' + gk.getRace())\n\n    // 进食，体重增加到3、9、27\n    gk.eat()\n    gk.eat()\n    gk.eat()\n    console.log(gk + ' weighs ' + gk.weigh() +\n        ' pounds and has a dirt factor of ' + gk.dirtFactor)\n\n    // 锻炼，体重减至13.5\n    gk.exercise()\n\n    // 跟上潮流服饰\n    gk.beCool()\n    // 公有属性clothing可以随意设置\n    gk.clothing = 'Pimp Outfit'\n\n    // 洗澡，变干净\n    gk.shower()\n    console.log('Existing shower technology has gotten ' +\n        gk + ' to a dirt factor of ' + gk.dirtFactor)\n\n    // 50年过去了\n    gk.muchTimePasses()\n    // 更新所有人的公共洗澡方式\n    Person.prototype.shower = function() {\n        this.dirtFactor = 0\n    }\n\n    // 只给Gavin设置新酷炫着装方法\n    gk.beCool = function() {\n        this.clothing = 'tinfoil'\n    }\n\n    gk.beCool()\n    gk.shower()\n    console.log('Fashionable ' + gk + ' at ' +\n        gk.getAge() + ' years old is now wearing ' +\n        gk.clothing + ' with dirt factor ' +\n        gk.dirtFactor)\n\n    // 使用原型方法设置Gavin的公有属性\n    gk.amputate()\n    gk.showLegs()\n    // Lisa的依旧维持原公有属性\n    lk.showLegs()\n\n    // 又50年过去了\n    gk.muchTimePasses()\n    // Gavin去世了，不再进食\n    gk.eat()\n}\n\nrunLives()\n```\n\n<cite>参考：http://phrogz.net/JS/Classes/OOPinJS.html</cite>\n\n\n{% raw %}\n<script>\nfunction Person(name, race) {\n    this.constructor.population++\n\n    // 私有属性和方法\n    var alive = true, age = 1\n    var maxAge = 70 + Math.round(Math.random() * 30)\n    function makeOlder() {\n        return alive = (++age <= maxAge)\n    }\n\n    var myName = name ? name : 'John Doe'\n    var weight = 1\n\n    // 特权方法\n    this.toString = this.getName = function() {\n        return myName\n    }\n\n    this.eat = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight *= 3\n        } else {\n            console.log(myName + ' can\\'t eat, he\\'s dead!')\n        }\n    }\n    this.exercise = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight /= 2\n        } else {\n            console.log(myName + ' can\\'t exercise, he\\'s dead!')\n        }\n    }\n    this.weigh = function() {\n        return weight\n    }\n    this.getRace = function() {\n        return race\n    }\n    this.getAge = function() {\n        return age\n    }\n    this.muchTimePasses = function() {\n        age += 50\n        this.dirtFactor = 10\n    }\n\n    // 公有属性\n    this.clothing = 'nothing/naked'\n    this.dirtFactor = 0\n}\n\n// 公共属性 \nPerson.prototype.legs = 2\n\n// 公共方法\nPerson.prototype.beCool = function() {\n    this.clothing = 'khakis and black shirt'\n}\nPerson.prototype.shower = function() {\n    this.dirtFactor = 2\n}\nPerson.prototype.showLegs = function() {\n    console.log(this + ' has ' + this.legs + ' legs')\n}\nPerson.prototype.amputate = function() {\n    this.legs--\n}\n\n// 静态属性\nPerson.population = 0\n\nfunction runLives() {\n    // 创建两个新实例对象\n    var gk = new Person('Gavin', 'caucasian')\n    var lk = new Person('Lisa', 'caucasian')\n    console.log('There are ' + Person.population + ' people')\n\n    // 两个对象读取this.legs时共用原型属性\n    gk.showLegs()\n    lk.showLegs()\n\n    // 设置公有属性，不会覆盖私有属性race\n    gk.race = 'hispanic'\n    // 返回创建时设置的私有属性race\n    console.log(gk + '\\'s real race is ' + gk.getRace())\n\n    // 进食，体重增加到3、9、27\n    gk.eat()\n    gk.eat()\n    gk.eat()\n    console.log(gk + ' weighs ' + gk.weigh() +\n        ' pounds and has a dirt factor of ' + gk.dirtFactor)\n\n    // 锻炼，体重减至13.5\n    gk.exercise()\n\n    // 跟上潮流服饰\n    gk.beCool()\n    // 公有属性clothing可以随意设置\n    gk.clothing = 'Pimp Outfit'\n\n    // 洗澡，变干净\n    gk.shower()\n    console.log('Existing shower technology has gotten ' +\n        gk + ' to a dirt factor of ' + gk.dirtFactor)\n\n    // 50年过去了\n    gk.muchTimePasses()\n    // 更新所有人的公共洗澡方式\n    Person.prototype.shower = function() {\n        this.dirtFactor = 0\n    }\n\n    // 只给Gavin设置新酷炫着装方法\n    gk.beCool = function() {\n        this.clothing = 'tinfoil'\n    }\n\n    gk.beCool()\n    gk.shower()\n    console.log('Fashionable ' + gk + ' at ' +\n        gk.getAge() + ' years old is now wearing ' +\n        gk.clothing + ' with dirt factor ' +\n        gk.dirtFactor)\n\n    // 使用原型方法设置Gavin的公有属性\n    gk.amputate()\n    gk.showLegs()\n    // Lisa的依旧维持原公有属性\n    lk.showLegs()\n\n    // 又50年过去了\n    gk.muchTimePasses()\n    // Gavin去世了，不再进食\n    gk.eat()\n}\n\nrunLives()\n</script>\n{% endraw %}\n","source":"_posts/es5-class.md","raw":"---\ntitle: ES5中类的封装\ndate: 2019-01-19 00:00:00\ncategories: JavaScript\nkeywords: JS类, JS属性和方法, JavaScript\ndescription: JavaScript中类的封装、私有属性和方法、公有属性和方法、特权方法、公共属性和方法、静态属性和方法\n---\n\n通过this在当前对象自身上添加属性和方法，通过原型prototype继承公共属性和方法。\n\nJavaScript的函数作用域，即函数内部的变量和方法在外界是访问不到的，通过此特性即可创建私有属性和方法。\n\n在函数内部通过this创建的属性和方法，每个实例化对象都拥有一份，并且外部可访问。\n\n通过this创建的方法，不仅可以访问公有属性和方法，还能访问类的私有属性和方法，故而可以用这些特权方法来初始化实例对象，创建对象时调用特权方法可以看作是类的构造器。\n\n类外部通过点语法添加的属性和方法，在使用new关键字创建对象时没有执行到，所以对象实例无法获取，称为静态属性和方法。\n\n由于JavaScript原型链的特性，新实例对象的prototype和类的prototype指向的是同一个对象，所以实例对象可以共享在原型上定义的公共属性和方法。\n\n{% img /images/else/class.gif 305 %}\n\n下面示例中，person的name和race在出生时设定，并且永远不变。创建时，从一岁开始，并定好了寿命，寿命值隐藏外部不可见。对于体重，进食时增加，锻炼时减少。每次进食或者锻炼，都会长大一岁。人物对象具有公开的clothing属性，任何人都可以查看修改。公开的dirtFactor污垢因子，可以手动修改增加灰尘或清除污垢，每次进食或者锻炼，它也会增加，但可以通过shower()方法减少。\n\n``` JavaScript\nfunction Person(name, race) {\n    this.constructor.population++\n\n    // 私有属性和方法\n    var alive = true, age = 1\n    var maxAge = 70 + Math.round(Math.random() * 30)\n    function makeOlder() {\n        return alive = (++age <= maxAge)\n    }\n\n    var myName = name ? name : 'John Doe'\n    var weight = 1\n\n    // 特权方法\n    this.toString = this.getName = function() {\n        return myName\n    }\n\n    this.eat = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight *= 3\n        } else {\n            console.log(myName + ' can\\'t eat, he\\'s dead!')\n        }\n    }\n    this.exercise = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight /= 2\n        } else {\n            console.log(myName + ' can\\'t exercise, he\\'s dead!')\n        }\n    }\n    this.weigh = function() {\n        return weight\n    }\n    this.getRace = function() {\n        return race\n    }\n    this.getAge = function() {\n        return age\n    }\n    this.muchTimePasses = function() {\n        age += 50\n        this.dirtFactor = 10\n    }\n\n    // 公有属性\n    this.clothing = 'nothing/naked'\n    this.dirtFactor = 0\n}\n\n// 公共属性 \nPerson.prototype.legs = 2\n\n// 公共方法\nPerson.prototype.beCool = function() {\n    this.clothing = 'khakis and black shirt'\n}\nPerson.prototype.shower = function() {\n    this.dirtFactor = 2\n}\nPerson.prototype.showLegs = function() {\n    console.log(this + ' has ' + this.legs + ' legs')\n}\nPerson.prototype.amputate = function() {\n    this.legs--\n}\n\n// 静态属性\nPerson.population = 0\n```\n\n下面是Person类使用示例。\n\n``` JavaScript\nfunction runLives() {\n    // 创建两个新实例对象\n    var gk = new Person('Gavin', 'caucasian')\n    var lk = new Person('Lisa', 'caucasian')\n    console.log('There are ' + Person.population + ' people')\n\n    // 两个对象读取this.legs时共用原型属性\n    gk.showLegs()\n    lk.showLegs()\n\n    // 设置公有属性，不会覆盖私有属性race\n    gk.race = 'hispanic'\n    // 返回创建时设置的私有属性race\n    console.log(gk + '\\'s real race is ' + gk.getRace())\n\n    // 进食，体重增加到3、9、27\n    gk.eat()\n    gk.eat()\n    gk.eat()\n    console.log(gk + ' weighs ' + gk.weigh() +\n        ' pounds and has a dirt factor of ' + gk.dirtFactor)\n\n    // 锻炼，体重减至13.5\n    gk.exercise()\n\n    // 跟上潮流服饰\n    gk.beCool()\n    // 公有属性clothing可以随意设置\n    gk.clothing = 'Pimp Outfit'\n\n    // 洗澡，变干净\n    gk.shower()\n    console.log('Existing shower technology has gotten ' +\n        gk + ' to a dirt factor of ' + gk.dirtFactor)\n\n    // 50年过去了\n    gk.muchTimePasses()\n    // 更新所有人的公共洗澡方式\n    Person.prototype.shower = function() {\n        this.dirtFactor = 0\n    }\n\n    // 只给Gavin设置新酷炫着装方法\n    gk.beCool = function() {\n        this.clothing = 'tinfoil'\n    }\n\n    gk.beCool()\n    gk.shower()\n    console.log('Fashionable ' + gk + ' at ' +\n        gk.getAge() + ' years old is now wearing ' +\n        gk.clothing + ' with dirt factor ' +\n        gk.dirtFactor)\n\n    // 使用原型方法设置Gavin的公有属性\n    gk.amputate()\n    gk.showLegs()\n    // Lisa的依旧维持原公有属性\n    lk.showLegs()\n\n    // 又50年过去了\n    gk.muchTimePasses()\n    // Gavin去世了，不再进食\n    gk.eat()\n}\n\nrunLives()\n```\n\n<cite>参考：http://phrogz.net/JS/Classes/OOPinJS.html</cite>\n\n\n{% raw %}\n<script>\nfunction Person(name, race) {\n    this.constructor.population++\n\n    // 私有属性和方法\n    var alive = true, age = 1\n    var maxAge = 70 + Math.round(Math.random() * 30)\n    function makeOlder() {\n        return alive = (++age <= maxAge)\n    }\n\n    var myName = name ? name : 'John Doe'\n    var weight = 1\n\n    // 特权方法\n    this.toString = this.getName = function() {\n        return myName\n    }\n\n    this.eat = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight *= 3\n        } else {\n            console.log(myName + ' can\\'t eat, he\\'s dead!')\n        }\n    }\n    this.exercise = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight /= 2\n        } else {\n            console.log(myName + ' can\\'t exercise, he\\'s dead!')\n        }\n    }\n    this.weigh = function() {\n        return weight\n    }\n    this.getRace = function() {\n        return race\n    }\n    this.getAge = function() {\n        return age\n    }\n    this.muchTimePasses = function() {\n        age += 50\n        this.dirtFactor = 10\n    }\n\n    // 公有属性\n    this.clothing = 'nothing/naked'\n    this.dirtFactor = 0\n}\n\n// 公共属性 \nPerson.prototype.legs = 2\n\n// 公共方法\nPerson.prototype.beCool = function() {\n    this.clothing = 'khakis and black shirt'\n}\nPerson.prototype.shower = function() {\n    this.dirtFactor = 2\n}\nPerson.prototype.showLegs = function() {\n    console.log(this + ' has ' + this.legs + ' legs')\n}\nPerson.prototype.amputate = function() {\n    this.legs--\n}\n\n// 静态属性\nPerson.population = 0\n\nfunction runLives() {\n    // 创建两个新实例对象\n    var gk = new Person('Gavin', 'caucasian')\n    var lk = new Person('Lisa', 'caucasian')\n    console.log('There are ' + Person.population + ' people')\n\n    // 两个对象读取this.legs时共用原型属性\n    gk.showLegs()\n    lk.showLegs()\n\n    // 设置公有属性，不会覆盖私有属性race\n    gk.race = 'hispanic'\n    // 返回创建时设置的私有属性race\n    console.log(gk + '\\'s real race is ' + gk.getRace())\n\n    // 进食，体重增加到3、9、27\n    gk.eat()\n    gk.eat()\n    gk.eat()\n    console.log(gk + ' weighs ' + gk.weigh() +\n        ' pounds and has a dirt factor of ' + gk.dirtFactor)\n\n    // 锻炼，体重减至13.5\n    gk.exercise()\n\n    // 跟上潮流服饰\n    gk.beCool()\n    // 公有属性clothing可以随意设置\n    gk.clothing = 'Pimp Outfit'\n\n    // 洗澡，变干净\n    gk.shower()\n    console.log('Existing shower technology has gotten ' +\n        gk + ' to a dirt factor of ' + gk.dirtFactor)\n\n    // 50年过去了\n    gk.muchTimePasses()\n    // 更新所有人的公共洗澡方式\n    Person.prototype.shower = function() {\n        this.dirtFactor = 0\n    }\n\n    // 只给Gavin设置新酷炫着装方法\n    gk.beCool = function() {\n        this.clothing = 'tinfoil'\n    }\n\n    gk.beCool()\n    gk.shower()\n    console.log('Fashionable ' + gk + ' at ' +\n        gk.getAge() + ' years old is now wearing ' +\n        gk.clothing + ' with dirt factor ' +\n        gk.dirtFactor)\n\n    // 使用原型方法设置Gavin的公有属性\n    gk.amputate()\n    gk.showLegs()\n    // Lisa的依旧维持原公有属性\n    lk.showLegs()\n\n    // 又50年过去了\n    gk.muchTimePasses()\n    // Gavin去世了，不再进食\n    gk.eat()\n}\n\nrunLives()\n</script>\n{% endraw %}\n","slug":"es5-class","published":1,"updated":"2019-03-08T06:01:41.360Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160en03003h3a8ihun0aaro","content":"<p>通过this在当前对象自身上添加属性和方法，通过原型prototype继承公共属性和方法。</p>\n<p>JavaScript的函数作用域，即函数内部的变量和方法在外界是访问不到的，通过此特性即可创建私有属性和方法。</p>\n<p>在函数内部通过this创建的属性和方法，每个实例化对象都拥有一份，并且外部可访问。</p>\n<p>通过this创建的方法，不仅可以访问公有属性和方法，还能访问类的私有属性和方法，故而可以用这些特权方法来初始化实例对象，创建对象时调用特权方法可以看作是类的构造器。</p>\n<p>类外部通过点语法添加的属性和方法，在使用new关键字创建对象时没有执行到，所以对象实例无法获取，称为静态属性和方法。</p>\n<p>由于JavaScript原型链的特性，新实例对象的prototype和类的prototype指向的是同一个对象，所以实例对象可以共享在原型上定义的公共属性和方法。</p>\n<img src=\"/images/else/class.gif\" width=\"305\">\n<p>下面示例中，person的name和race在出生时设定，并且永远不变。创建时，从一岁开始，并定好了寿命，寿命值隐藏外部不可见。对于体重，进食时增加，锻炼时减少。每次进食或者锻炼，都会长大一岁。人物对象具有公开的clothing属性，任何人都可以查看修改。公开的dirtFactor污垢因子，可以手动修改增加灰尘或清除污垢，每次进食或者锻炼，它也会增加，但可以通过shower()方法减少。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, race</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.constructor.population++</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 私有属性和方法</span></div><div class=\"line\">    <span class=\"keyword\">var</span> alive = <span class=\"literal\">true</span>, age = <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">var</span> maxAge = <span class=\"number\">70</span> + <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">30</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeOlder</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> alive = (++age &lt;= maxAge)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">var</span> myName = name ? name : <span class=\"string\">'John Doe'</span></div><div class=\"line\">    <span class=\"keyword\">var</span> weight = <span class=\"number\">1</span></div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 特权方法</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.toString = <span class=\"keyword\">this</span>.getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> myName</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">this</span>.eat = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (makeOlder()) &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.dirtFactor++</div><div class=\"line\">            <span class=\"keyword\">return</span> weight *= <span class=\"number\">3</span></div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"built_in\">console</span>.log(myName + <span class=\"string\">' can\\'t eat, he\\'s dead!'</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">this</span>.exercise = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (makeOlder()) &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.dirtFactor++</div><div class=\"line\">            <span class=\"keyword\">return</span> weight /= <span class=\"number\">2</span></div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"built_in\">console</span>.log(myName + <span class=\"string\">' can\\'t exercise, he\\'s dead!'</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">this</span>.weigh = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> weight</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">this</span>.getRace = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> race</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">this</span>.getAge = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> age</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">this</span>.muchTimePasses = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        age += <span class=\"number\">50</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.dirtFactor = <span class=\"number\">10</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 公有属性</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.clothing = <span class=\"string\">'nothing/naked'</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.dirtFactor = <span class=\"number\">0</span></div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 公共属性 </span></div><div class=\"line\">Person.prototype.legs = <span class=\"number\">2</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 公共方法</span></div><div class=\"line\">Person.prototype.beCool = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.clothing = <span class=\"string\">'khakis and black shirt'</span></div><div class=\"line\">&#125;</div><div class=\"line\">Person.prototype.shower = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.dirtFactor = <span class=\"number\">2</span></div><div class=\"line\">&#125;</div><div class=\"line\">Person.prototype.showLegs = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span> + <span class=\"string\">' has '</span> + <span class=\"keyword\">this</span>.legs + <span class=\"string\">' legs'</span>)</div><div class=\"line\">&#125;</div><div class=\"line\">Person.prototype.amputate = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.legs--</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 静态属性</span></div><div class=\"line\">Person.population = <span class=\"number\">0</span></div></pre></figure>\n<p>下面是Person类使用示例。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">runLives</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 创建两个新实例对象</span></div><div class=\"line\">    <span class=\"keyword\">var</span> gk = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Gavin'</span>, <span class=\"string\">'caucasian'</span>)</div><div class=\"line\">    <span class=\"keyword\">var</span> lk = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Lisa'</span>, <span class=\"string\">'caucasian'</span>)</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'There are '</span> + Person.population + <span class=\"string\">' people'</span>)</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 两个对象读取this.legs时共用原型属性</span></div><div class=\"line\">    gk.showLegs()</div><div class=\"line\">    lk.showLegs()</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 设置公有属性，不会覆盖私有属性race</span></div><div class=\"line\">    gk.race = <span class=\"string\">'hispanic'</span></div><div class=\"line\">    <span class=\"comment\">// 返回创建时设置的私有属性race</span></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(gk + <span class=\"string\">'\\'s real race is '</span> + gk.getRace())</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 进食，体重增加到3、9、27</span></div><div class=\"line\">    gk.eat()</div><div class=\"line\">    gk.eat()</div><div class=\"line\">    gk.eat()</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(gk + <span class=\"string\">' weighs '</span> + gk.weigh() +</div><div class=\"line\">        <span class=\"string\">' pounds and has a dirt factor of '</span> + gk.dirtFactor)</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 锻炼，体重减至13.5</span></div><div class=\"line\">    gk.exercise()</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 跟上潮流服饰</span></div><div class=\"line\">    gk.beCool()</div><div class=\"line\">    <span class=\"comment\">// 公有属性clothing可以随意设置</span></div><div class=\"line\">    gk.clothing = <span class=\"string\">'Pimp Outfit'</span></div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 洗澡，变干净</span></div><div class=\"line\">    gk.shower()</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Existing shower technology has gotten '</span> +</div><div class=\"line\">        gk + <span class=\"string\">' to a dirt factor of '</span> + gk.dirtFactor)</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 50年过去了</span></div><div class=\"line\">    gk.muchTimePasses()</div><div class=\"line\">    <span class=\"comment\">// 更新所有人的公共洗澡方式</span></div><div class=\"line\">    Person.prototype.shower = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.dirtFactor = <span class=\"number\">0</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 只给Gavin设置新酷炫着装方法</span></div><div class=\"line\">    gk.beCool = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.clothing = <span class=\"string\">'tinfoil'</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    gk.beCool()</div><div class=\"line\">    gk.shower()</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Fashionable '</span> + gk + <span class=\"string\">' at '</span> +</div><div class=\"line\">        gk.getAge() + <span class=\"string\">' years old is now wearing '</span> +</div><div class=\"line\">        gk.clothing + <span class=\"string\">' with dirt factor '</span> +</div><div class=\"line\">        gk.dirtFactor)</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 使用原型方法设置Gavin的公有属性</span></div><div class=\"line\">    gk.amputate()</div><div class=\"line\">    gk.showLegs()</div><div class=\"line\">    <span class=\"comment\">// Lisa的依旧维持原公有属性</span></div><div class=\"line\">    lk.showLegs()</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 又50年过去了</span></div><div class=\"line\">    gk.muchTimePasses()</div><div class=\"line\">    <span class=\"comment\">// Gavin去世了，不再进食</span></div><div class=\"line\">    gk.eat()</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">runLives()</div></pre></figure>\n<p><cite>参考：<a href=\"http://phrogz.net/JS/Classes/OOPinJS.html\" target=\"_blank\" rel=\"noopener\">http://phrogz.net/JS/Classes/OOPinJS.html</a></cite></p>\n\n<script>\nfunction Person(name, race) {\n    this.constructor.population++\n\n    // 私有属性和方法\n    var alive = true, age = 1\n    var maxAge = 70 + Math.round(Math.random() * 30)\n    function makeOlder() {\n        return alive = (++age <= maxAge)\n    }\n\n    var myName = name ? name : 'John Doe'\n    var weight = 1\n\n    // 特权方法\n    this.toString = this.getName = function() {\n        return myName\n    }\n\n    this.eat = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight *= 3\n        } else {\n            console.log(myName + ' can\\'t eat, he\\'s dead!')\n        }\n    }\n    this.exercise = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight /= 2\n        } else {\n            console.log(myName + ' can\\'t exercise, he\\'s dead!')\n        }\n    }\n    this.weigh = function() {\n        return weight\n    }\n    this.getRace = function() {\n        return race\n    }\n    this.getAge = function() {\n        return age\n    }\n    this.muchTimePasses = function() {\n        age += 50\n        this.dirtFactor = 10\n    }\n\n    // 公有属性\n    this.clothing = 'nothing/naked'\n    this.dirtFactor = 0\n}\n\n// 公共属性 \nPerson.prototype.legs = 2\n\n// 公共方法\nPerson.prototype.beCool = function() {\n    this.clothing = 'khakis and black shirt'\n}\nPerson.prototype.shower = function() {\n    this.dirtFactor = 2\n}\nPerson.prototype.showLegs = function() {\n    console.log(this + ' has ' + this.legs + ' legs')\n}\nPerson.prototype.amputate = function() {\n    this.legs--\n}\n\n// 静态属性\nPerson.population = 0\n\nfunction runLives() {\n    // 创建两个新实例对象\n    var gk = new Person('Gavin', 'caucasian')\n    var lk = new Person('Lisa', 'caucasian')\n    console.log('There are ' + Person.population + ' people')\n\n    // 两个对象读取this.legs时共用原型属性\n    gk.showLegs()\n    lk.showLegs()\n\n    // 设置公有属性，不会覆盖私有属性race\n    gk.race = 'hispanic'\n    // 返回创建时设置的私有属性race\n    console.log(gk + '\\'s real race is ' + gk.getRace())\n\n    // 进食，体重增加到3、9、27\n    gk.eat()\n    gk.eat()\n    gk.eat()\n    console.log(gk + ' weighs ' + gk.weigh() +\n        ' pounds and has a dirt factor of ' + gk.dirtFactor)\n\n    // 锻炼，体重减至13.5\n    gk.exercise()\n\n    // 跟上潮流服饰\n    gk.beCool()\n    // 公有属性clothing可以随意设置\n    gk.clothing = 'Pimp Outfit'\n\n    // 洗澡，变干净\n    gk.shower()\n    console.log('Existing shower technology has gotten ' +\n        gk + ' to a dirt factor of ' + gk.dirtFactor)\n\n    // 50年过去了\n    gk.muchTimePasses()\n    // 更新所有人的公共洗澡方式\n    Person.prototype.shower = function() {\n        this.dirtFactor = 0\n    }\n\n    // 只给Gavin设置新酷炫着装方法\n    gk.beCool = function() {\n        this.clothing = 'tinfoil'\n    }\n\n    gk.beCool()\n    gk.shower()\n    console.log('Fashionable ' + gk + ' at ' +\n        gk.getAge() + ' years old is now wearing ' +\n        gk.clothing + ' with dirt factor ' +\n        gk.dirtFactor)\n\n    // 使用原型方法设置Gavin的公有属性\n    gk.amputate()\n    gk.showLegs()\n    // Lisa的依旧维持原公有属性\n    lk.showLegs()\n\n    // 又50年过去了\n    gk.muchTimePasses()\n    // Gavin去世了，不再进食\n    gk.eat()\n}\n\nrunLives()\n</script>\n\n","site":{"data":{}},"excerpt":"","more":"<p>通过this在当前对象自身上添加属性和方法，通过原型prototype继承公共属性和方法。</p>\n<p>JavaScript的函数作用域，即函数内部的变量和方法在外界是访问不到的，通过此特性即可创建私有属性和方法。</p>\n<p>在函数内部通过this创建的属性和方法，每个实例化对象都拥有一份，并且外部可访问。</p>\n<p>通过this创建的方法，不仅可以访问公有属性和方法，还能访问类的私有属性和方法，故而可以用这些特权方法来初始化实例对象，创建对象时调用特权方法可以看作是类的构造器。</p>\n<p>类外部通过点语法添加的属性和方法，在使用new关键字创建对象时没有执行到，所以对象实例无法获取，称为静态属性和方法。</p>\n<p>由于JavaScript原型链的特性，新实例对象的prototype和类的prototype指向的是同一个对象，所以实例对象可以共享在原型上定义的公共属性和方法。</p>\n<img src=\"/images/else/class.gif\" width=\"305\">\n<p>下面示例中，person的name和race在出生时设定，并且永远不变。创建时，从一岁开始，并定好了寿命，寿命值隐藏外部不可见。对于体重，进食时增加，锻炼时减少。每次进食或者锻炼，都会长大一岁。人物对象具有公开的clothing属性，任何人都可以查看修改。公开的dirtFactor污垢因子，可以手动修改增加灰尘或清除污垢，每次进食或者锻炼，它也会增加，但可以通过shower()方法减少。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, race</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.constructor.population++</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 私有属性和方法</span></div><div class=\"line\">    <span class=\"keyword\">var</span> alive = <span class=\"literal\">true</span>, age = <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">var</span> maxAge = <span class=\"number\">70</span> + <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">30</span>)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeOlder</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> alive = (++age &lt;= maxAge)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">var</span> myName = name ? name : <span class=\"string\">'John Doe'</span></div><div class=\"line\">    <span class=\"keyword\">var</span> weight = <span class=\"number\">1</span></div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 特权方法</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.toString = <span class=\"keyword\">this</span>.getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> myName</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">this</span>.eat = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (makeOlder()) &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.dirtFactor++</div><div class=\"line\">            <span class=\"keyword\">return</span> weight *= <span class=\"number\">3</span></div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"built_in\">console</span>.log(myName + <span class=\"string\">' can\\'t eat, he\\'s dead!'</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">this</span>.exercise = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (makeOlder()) &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.dirtFactor++</div><div class=\"line\">            <span class=\"keyword\">return</span> weight /= <span class=\"number\">2</span></div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"built_in\">console</span>.log(myName + <span class=\"string\">' can\\'t exercise, he\\'s dead!'</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">this</span>.weigh = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> weight</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">this</span>.getRace = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> race</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">this</span>.getAge = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> age</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">this</span>.muchTimePasses = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        age += <span class=\"number\">50</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.dirtFactor = <span class=\"number\">10</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 公有属性</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.clothing = <span class=\"string\">'nothing/naked'</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.dirtFactor = <span class=\"number\">0</span></div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 公共属性 </span></div><div class=\"line\">Person.prototype.legs = <span class=\"number\">2</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 公共方法</span></div><div class=\"line\">Person.prototype.beCool = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.clothing = <span class=\"string\">'khakis and black shirt'</span></div><div class=\"line\">&#125;</div><div class=\"line\">Person.prototype.shower = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.dirtFactor = <span class=\"number\">2</span></div><div class=\"line\">&#125;</div><div class=\"line\">Person.prototype.showLegs = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span> + <span class=\"string\">' has '</span> + <span class=\"keyword\">this</span>.legs + <span class=\"string\">' legs'</span>)</div><div class=\"line\">&#125;</div><div class=\"line\">Person.prototype.amputate = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.legs--</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 静态属性</span></div><div class=\"line\">Person.population = <span class=\"number\">0</span></div></pre></figure>\n<p>下面是Person类使用示例。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">runLives</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 创建两个新实例对象</span></div><div class=\"line\">    <span class=\"keyword\">var</span> gk = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Gavin'</span>, <span class=\"string\">'caucasian'</span>)</div><div class=\"line\">    <span class=\"keyword\">var</span> lk = <span class=\"keyword\">new</span> Person(<span class=\"string\">'Lisa'</span>, <span class=\"string\">'caucasian'</span>)</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'There are '</span> + Person.population + <span class=\"string\">' people'</span>)</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 两个对象读取this.legs时共用原型属性</span></div><div class=\"line\">    gk.showLegs()</div><div class=\"line\">    lk.showLegs()</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 设置公有属性，不会覆盖私有属性race</span></div><div class=\"line\">    gk.race = <span class=\"string\">'hispanic'</span></div><div class=\"line\">    <span class=\"comment\">// 返回创建时设置的私有属性race</span></div><div class=\"line\">    <span class=\"built_in\">console</span>.log(gk + <span class=\"string\">'\\'s real race is '</span> + gk.getRace())</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 进食，体重增加到3、9、27</span></div><div class=\"line\">    gk.eat()</div><div class=\"line\">    gk.eat()</div><div class=\"line\">    gk.eat()</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(gk + <span class=\"string\">' weighs '</span> + gk.weigh() +</div><div class=\"line\">        <span class=\"string\">' pounds and has a dirt factor of '</span> + gk.dirtFactor)</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 锻炼，体重减至13.5</span></div><div class=\"line\">    gk.exercise()</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 跟上潮流服饰</span></div><div class=\"line\">    gk.beCool()</div><div class=\"line\">    <span class=\"comment\">// 公有属性clothing可以随意设置</span></div><div class=\"line\">    gk.clothing = <span class=\"string\">'Pimp Outfit'</span></div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 洗澡，变干净</span></div><div class=\"line\">    gk.shower()</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Existing shower technology has gotten '</span> +</div><div class=\"line\">        gk + <span class=\"string\">' to a dirt factor of '</span> + gk.dirtFactor)</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 50年过去了</span></div><div class=\"line\">    gk.muchTimePasses()</div><div class=\"line\">    <span class=\"comment\">// 更新所有人的公共洗澡方式</span></div><div class=\"line\">    Person.prototype.shower = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.dirtFactor = <span class=\"number\">0</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 只给Gavin设置新酷炫着装方法</span></div><div class=\"line\">    gk.beCool = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.clothing = <span class=\"string\">'tinfoil'</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    gk.beCool()</div><div class=\"line\">    gk.shower()</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Fashionable '</span> + gk + <span class=\"string\">' at '</span> +</div><div class=\"line\">        gk.getAge() + <span class=\"string\">' years old is now wearing '</span> +</div><div class=\"line\">        gk.clothing + <span class=\"string\">' with dirt factor '</span> +</div><div class=\"line\">        gk.dirtFactor)</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 使用原型方法设置Gavin的公有属性</span></div><div class=\"line\">    gk.amputate()</div><div class=\"line\">    gk.showLegs()</div><div class=\"line\">    <span class=\"comment\">// Lisa的依旧维持原公有属性</span></div><div class=\"line\">    lk.showLegs()</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"comment\">// 又50年过去了</span></div><div class=\"line\">    gk.muchTimePasses()</div><div class=\"line\">    <span class=\"comment\">// Gavin去世了，不再进食</span></div><div class=\"line\">    gk.eat()</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">runLives()</div></pre></figure>\n<p><cite>参考：<a href=\"http://phrogz.net/JS/Classes/OOPinJS.html\" target=\"_blank\" rel=\"noopener\">http://phrogz.net/JS/Classes/OOPinJS.html</a></cite></p>\n\n<script>\nfunction Person(name, race) {\n    this.constructor.population++\n\n    // 私有属性和方法\n    var alive = true, age = 1\n    var maxAge = 70 + Math.round(Math.random() * 30)\n    function makeOlder() {\n        return alive = (++age <= maxAge)\n    }\n\n    var myName = name ? name : 'John Doe'\n    var weight = 1\n\n    // 特权方法\n    this.toString = this.getName = function() {\n        return myName\n    }\n\n    this.eat = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight *= 3\n        } else {\n            console.log(myName + ' can\\'t eat, he\\'s dead!')\n        }\n    }\n    this.exercise = function() {\n        if (makeOlder()) {\n            this.dirtFactor++\n            return weight /= 2\n        } else {\n            console.log(myName + ' can\\'t exercise, he\\'s dead!')\n        }\n    }\n    this.weigh = function() {\n        return weight\n    }\n    this.getRace = function() {\n        return race\n    }\n    this.getAge = function() {\n        return age\n    }\n    this.muchTimePasses = function() {\n        age += 50\n        this.dirtFactor = 10\n    }\n\n    // 公有属性\n    this.clothing = 'nothing/naked'\n    this.dirtFactor = 0\n}\n\n// 公共属性 \nPerson.prototype.legs = 2\n\n// 公共方法\nPerson.prototype.beCool = function() {\n    this.clothing = 'khakis and black shirt'\n}\nPerson.prototype.shower = function() {\n    this.dirtFactor = 2\n}\nPerson.prototype.showLegs = function() {\n    console.log(this + ' has ' + this.legs + ' legs')\n}\nPerson.prototype.amputate = function() {\n    this.legs--\n}\n\n// 静态属性\nPerson.population = 0\n\nfunction runLives() {\n    // 创建两个新实例对象\n    var gk = new Person('Gavin', 'caucasian')\n    var lk = new Person('Lisa', 'caucasian')\n    console.log('There are ' + Person.population + ' people')\n\n    // 两个对象读取this.legs时共用原型属性\n    gk.showLegs()\n    lk.showLegs()\n\n    // 设置公有属性，不会覆盖私有属性race\n    gk.race = 'hispanic'\n    // 返回创建时设置的私有属性race\n    console.log(gk + '\\'s real race is ' + gk.getRace())\n\n    // 进食，体重增加到3、9、27\n    gk.eat()\n    gk.eat()\n    gk.eat()\n    console.log(gk + ' weighs ' + gk.weigh() +\n        ' pounds and has a dirt factor of ' + gk.dirtFactor)\n\n    // 锻炼，体重减至13.5\n    gk.exercise()\n\n    // 跟上潮流服饰\n    gk.beCool()\n    // 公有属性clothing可以随意设置\n    gk.clothing = 'Pimp Outfit'\n\n    // 洗澡，变干净\n    gk.shower()\n    console.log('Existing shower technology has gotten ' +\n        gk + ' to a dirt factor of ' + gk.dirtFactor)\n\n    // 50年过去了\n    gk.muchTimePasses()\n    // 更新所有人的公共洗澡方式\n    Person.prototype.shower = function() {\n        this.dirtFactor = 0\n    }\n\n    // 只给Gavin设置新酷炫着装方法\n    gk.beCool = function() {\n        this.clothing = 'tinfoil'\n    }\n\n    gk.beCool()\n    gk.shower()\n    console.log('Fashionable ' + gk + ' at ' +\n        gk.getAge() + ' years old is now wearing ' +\n        gk.clothing + ' with dirt factor ' +\n        gk.dirtFactor)\n\n    // 使用原型方法设置Gavin的公有属性\n    gk.amputate()\n    gk.showLegs()\n    // Lisa的依旧维持原公有属性\n    lk.showLegs()\n\n    // 又50年过去了\n    gk.muchTimePasses()\n    // Gavin去世了，不再进食\n    gk.eat()\n}\n\nrunLives()\n</script>\n\n"},{"title":"Event Loop事件循环执行过程","date":"2019-06-30T16:00:00.000Z","keywords":"事件循环, event Loop, JavaScript","description":"同步任务在主线程上执行，形成stack执行栈，主线程从task queue任务队列中读取事件的过程不断循环的运行机制称为event loop事件循环","_content":"\nJavaScript语言是单线程的，同步任务在主线程上执行，形成一个执行栈(JS stack)。\n\n异步任务，包括setTimeout、setInterval、setImmediate、requestAnimationFrame、I/O、UI rendering等，也被称作宏任务(macrotask)。\n\n主线程之外存在一个先进先出的任务队列(Task queue)，异步任务的运行结果会在任务队列中放置对应事件(callback)。\n\n一旦执行栈中的所有同步任务执行完毕，系统就会读取任务队列的事件并执行之。主线程从任务队列中读取事件的过程是不断重复循环的，这种运行机制便称为事件循环Event Loop。\n\nJavaScript中还存在另外的一类异步任务，包括process.nextTick、Promise、MutationObserver，以及已经废弃的Object.observe，被称做微任务(microtask)，它们的回调函数会被放进微任务队列(Microtask queue)。\n\n执行栈中的当前任务执行结束后，会立即检查并处理微任务队列，处理过程中产生的微任务也会被立即处理掉，而不用等下次事件循环。\n\n通俗来讲，macrotask的规则是等下一班车，microtask的规则是挂在当前车尾，而且允许现做现卖。\n\n下面是JavaScript事件循环Event Loop执行示例：\n\n{% raw %}\n<style>\n.event-loop-walkthrough {\n\tposition: relative;\n\tmargin: 2em 0;\n\tborder-radius: 3px;\n\toverflow: hidden;\n}\n\n.event-loop-walkthrough .highlight,\n.event-loop-walkthrough table {\n\tmargin: 0;\n}\n\n.event-loop-walkthrough table td {\n\tline-height: 1.4em;\n\tpadding: 0 1rem;\n\tvertical-align: top;\n\toverflow: hidden;\n}\n\n.event-loop-walkthrough table td+td {\n\tpadding: 0;\n\tborder-left: 1px solid #d7dcd2;\n}\n\n.event-loop-label {\n\theight: calc(1.4em + 5px);\n\tmargin-top: 5px;\n}\n\n.event-loop-items {\n\tdisplay: flex;\n\tmargin-top: 5px;\n}\n\n.event-loop-log .event-loop-items {\n\tflex-flow: row wrap;\n}\n\n.event-loop-item {\n\tmargin: 0 0 5px 5px;\n\tpadding: 0 5px;\n\tbackground-color: #d7dcd2;\n\twhite-space: nowrap;\n\topacity: 0;\n}\n\n.event-loop-commentary {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\theight: 320px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 0 1rem;\n\tfont-size: 1.25rem;\n\tcolor: #fff;\n}\n\n.event-loop-commentary-item {\n\tpadding: .5rem 1rem;\n\tbackground-color: rgba(0, 0, 0, .8);\n\tborder-radius: 3px;\n\topacity: 0;\n}\n\n.js-source {\n\tposition: relative;\n\tborder-bottom: 1px solid #d7dcd2;\n}\n\n.js-source .line-highlight {\n\tposition: absolute;\n\ttop: 1rem;\n\tright: 0;\n\tleft: 0;\n\tbackground-color: rgba(0, 0, 0, .15);\n\tborder-left: .5em solid rgba(0, 0, 0, .2);\n\tz-index: 1;\n\topacity: 0;\n}\n\n.js-source .line-highlight::after {\n\tcontent: 'yo';\n\tline-height: 1.4em;\n\tcolor: transparent;\n}\n\n.event-loop-controls {\n\tpadding: 1rem 0;\n}\n\n.event-loop-controls button {\n\tposition: relative;\n\tmargin-right: .1em;\n\tpadding: 0 1em;\n\tbackground-color: #f2f6ed;\n\tborder: 1px solid #d7dcd2;\n\tborder-radius: 3px;\n\tcursor: pointer;\n}\n\n.event-loop-walkthrough .prev-btn::after,\n.event-loop-walkthrough .next-btn::after {\n\tcontent: '';\n\tdisplay: block;\n\tposition: absolute;\n\ttop: .3em;\n\twidth: 0;\n\theight: 0;\n\tborder-width: .3em .5em;\n\tborder-style: solid;\n\tborder-color: transparent;\n}\n\n.event-loop-walkthrough .prev-btn::after {\n\tleft: .3em;\n\tborder-right-color: #08a8e6;\n}\n\n.event-loop-walkthrough .next-btn::after {\n\tright: .3em;\n\tborder-left-color: #08a8e6;\n}\n\n.event-loop-controls .prev-btn:hover::after {\n\tborder-right-color: #0791c6;\n}\n\n.event-loop-controls .prev-btn:active::after {\n\tborder-right-color: #0677a2;\n}\n\n.event-loop-controls .next-btn:hover::after {\n\tborder-left-color: #0791c6;\n}\n\n.event-loop-controls .next-btn:active::after {\n\tborder-left-color: #0677a2;\n}\n\n.event-loop-controls span {\n\tmargin: 0 0 0 1em;\n\ttext-align: center;\n\tcolor: #83887c\n}\n</style>\n{% endraw %}\n\n\n{% raw %}\n<div class=\"event-loop-walkthrough content\">\n\t<div class=\"js-source\">\n\t\t<div class=\"line-highlight\"></div>\n\t\t<div class=\"code-highlight\">\n{% endraw %}\n``` JavaScript\nconsole.log('script start')\n\nsetTimeout(function() {\n    console.log('setTimeout')\n}, 0)\n\nPromise.resolve().then(function() {\n    console.log('promise1')\n}).then(function() {\n    console.log('promise2')\n})\n\nconsole.log('script end')\n```\n{% raw %}\n\t\t</div>\n\t</div>\n\t<table>\n\t\t<tr class=\"task-queue\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Task queue</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">Run script</div>\n\t\t\t\t\t<div class=\"event-loop-item\">setTimeout callback</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"microtask-queue\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Microtask queue</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">Promise then</div>\n\t\t\t\t\t<div class=\"event-loop-item\">Promise then</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"js-stack\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">JS stack</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\"></div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"event-loop-log\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Log</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">script start</div>\n\t\t\t\t\t<div class=\"event-loop-item\">script end</div>\n\t\t\t\t\t<div class=\"event-loop-item\">promise1</div>\n\t\t\t\t\t<div class=\"event-loop-item\">promise2</div>\n\t\t\t\t\t<div class=\"event-loop-item\">setTimeout</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<div class=\"event-loop-controls\">\n\t\t<button type=\"button\" class=\"prev-btn\">&nbsp;</button>\n\t\t<button type=\"button\" class=\"next-btn\">&nbsp;</button>\n\t\t<span>点击按钮切换执行步骤</span>\n\t</div>\n\t<div class=\"event-loop-commentary\">\n\t\t<div class=\"event-loop-commentary-item\"></div>\n\t</div>\n</div>\n{% endraw %}\n\n具体执行过程大致如下：\n\n1. JS线程启动，创建事件循环\n2. 当前同步代码Run script为任务队列的第一项\n3. script加入执行栈\n4. 执行`console.log('script start')`，输出日志“script start”\n5. 执行`setTimeout...`，其回调函数被插入任务队列\n6. 执行`Promise.resolve()...`，其回调函数`console.log('promise1')`被插入微任务队列\n7. 执行`console.log('script end')`，输出日志“script end”\n8. script出栈，执行栈为空，立即检查并处理微任务队列\n9. 微任务`console.log('promise1')`入执行栈执行，输出日志“promise1”\n10. 处理过程中产生新的微任务`console.log('promise2')`立即入执行栈处理，输出日志“promise2”\n11. Run script事件结束，开始检查任务队列\n12. `console.log('setTimeout')`入执行栈执行，输出日志“setTimeout”\n13. 进行新一轮事件循环\n\n所以这段代码Log日志的出现顺序为：script start、script end、promise1、promise2、setTimeout。\n\n<cite>参考：\nhttps://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\nhttp://www.ruanyifeng.com/blog/2014/10/event-loop.html\nhttp://www.ayqy.net/blog/javascript-macrotask-vs-microtask/</cite>\n\n\n{% raw %}\n<script>\n(function() {\n\tfunction transition(el, obj, duration) {\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tif (obj.transform) {\n\t\t\t\tobj['-webkit-transform'] = obj.transform;\n\t\t\t}\n\n\t\t\tvar objKeys = Object.keys(obj);\n\n\t\t\tif (duration) {\n\t\t\t\tel.style.transitionProperty = objKeys.join();\n\t\t\t\tel.style.transitionTimingFunction = 'ease-in-out';\n\t\t\t\tel.style.transitionDuration = duration + 's';\n\t\t\t\tel.offsetLeft; // style recalc\n\n\t\t\t\tel.addEventListener('transitionend', function te() {\n\t\t\t\t\tel.style.transitionProperty = '';\n\t\t\t\t\tel.style.transitionTimingFunction = '';\n\t\t\t\t\tel.style.transitionDuration = '';\n\t\t\t\t\tresolve();\n\t\t\t\t\tel.removeEventListener('transitionend', te);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\n\t\t\tobjKeys.forEach(function(key) {\n\t\t\t\tel.style.setProperty(key, obj[key]);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction EventLoopAnimation(el) {\n\t\tthis._initalState = el;\n\t\tthis._states = [];\n\t\tthis._el = el;\n\t\tthis._queue = Promise.resolve();\n\t\tthis._reset();\n\t}\n\n\tEventLoopAnimation.prototype._reset = function() {\n\t\tvar newEl = this._initalState.cloneNode(true);\n\t\tthis._tasksShown = 0;\n\t\tthis._microtasksShown = 0;\n\t\tthis._tasksRemoved = 0;\n\t\tthis._microtasksRemoved = 0;\n\t\tthis._logsShown = 0;\n\t\tthis._currentPos = 0;\n\n\t\tthis._el.parentNode.insertBefore(newEl, this._el);\n\t\tthis._el.parentNode.removeChild(this._el);\n\t\tthis._el = newEl;\n\t\tthis._taskRail = this._el.querySelector('.task-queue .event-loop-items');\n\t\tthis._microtaskRail = this._el.querySelector('.microtask-queue .event-loop-items');\n\t\tthis._jsStack = this._el.querySelector('.js-stack .event-loop-items');\n\t\tthis._log = this._el.querySelector('.event-loop-log .event-loop-items');\n\t\tthis._codeBar = this._el.querySelector('.line-highlight');\n\t\tthis._commentary = this._el.querySelector('.event-loop-commentary-item');\n\n\t\tvar onClick = function(event) {\n\t\t\tvar className = event.target.getAttribute('class');\n\t\t\tif (className === 'prev-btn') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (event.type == 'click') {\n\t\t\t\t\tthis.back();\n\t\t\t\t}\n\t\t\t} else if (className === 'next-btn') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (event.type == 'click') {\n\t\t\t\t\tthis.forward(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\n\t\tthis._el.addEventListener('click', onClick);\n\t};\n\n\tEventLoopAnimation.prototype.forward = function(animate) {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tvar state = this._states[this._currentPos];\n\t\t\tif (!state) return this.goTo(0);\n\t\t\tthis._currentPos++;\n\t\t\treturn Promise.all(\n\t\t\t\tstate.map(function(func) {\n\t\t\t\t\treturn func(animate);\n\t\t\t\t})\n\t\t\t);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.goTo = function(pos) {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tthis._reset();\n\t\t\twhile (pos--) {\n\t\t\t\tthis.forward(false);\n\t\t\t}\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.back = function() {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tif (this._currentPos === 0) return this.goTo(this._states.length);\n\t\t\treturn this.goTo(this._currentPos - 1);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.state = function() {\n\t\tthis._states.push([]);\n\t\treturn this;\n\t};\n\n\tEventLoopAnimation.prototype.action = function(func) {\n\t\tthis._states[this._states.length - 1].push(func);\n\t\treturn this;\n\t};\n\n\tEventLoopAnimation.prototype.pushTask = function(activated) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newTask = this._taskRail.children[this._tasksShown];\n\t\t\tthis._tasksShown++;\n\n\t\t\tif (activated) {\n\t\t\t\tnewTask.style.backgroundColor = '#FFDF1E';\n\t\t\t}\n\n\t\t\treturn transition(newTask, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newTask = this._microtaskRail.children[this._microtasksShown];\n\t\t\tthis._microtasksShown++;\n\n\t\t\treturn transition(newTask, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushStack = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = document.createElement('div');\n\t\t\tdiv.className = 'event-loop-item';\n\t\t\tdiv.textContent = text;\n\t\t\tdiv.style.backgroundColor = '#FFDF1E';\n\t\t\tthis._jsStack.appendChild(div);\n\t\t\treturn transition(div, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.popStack = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._jsStack.children[this._jsStack.children.length - 1];\n\t\t\treturn transition(div, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate).then(function() {\n\t\t\t\tthis._jsStack.removeChild(div);\n\t\t\t}.bind(this));\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.showCodeBar = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.hideCodeBar = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushLog = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newLog = this._log.children[this._logsShown];\n\t\t\tthis._logsShown++;\n\n\t\t\treturn transition(newLog, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.moveToLine = function(num) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar barHeight = this._codeBar.getBoundingClientRect().height;\n\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\ttransform: 'translateY(' + ((num - 1) * barHeight) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.commentary = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._commentary.textContent = text;\n\t\t\treturn transition(this._commentary, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.hideCommentary = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._commentary, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.activateMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._microtaskRail.children[this._microtasksRemoved];\n\t\t\treturn transition(div, {\n\t\t\t\t'background-color': '#FFDF1E'\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.shiftMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._microtasksRemoved++;\n\t\t\tvar offset;\n\t\t\tvar offsetEl = this._microtaskRail.children[this._microtasksRemoved];\n\n\t\t\tif (offsetEl) {\n\t\t\t\toffset = offsetEl.offsetLeft;\n\t\t\t} else {\n\t\t\t\toffset = this._microtaskRail.offsetWidth;\n\t\t\t}\n\n\t\t\treturn transition(this._microtaskRail, {\n\t\t\t\t'transform': 'translateX(' + (-offset + 5) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.activateTask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._taskRail.children[this._tasksRemoved];\n\t\t\treturn transition(div, {\n\t\t\t\t'background-color': '#FFDF1E'\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.shiftTask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._tasksRemoved++;\n\t\t\tvar offset;\n\t\t\tvar offsetEl = this._taskRail.children[this._tasksRemoved];\n\n\t\t\tif (offsetEl) {\n\t\t\t\toffset = offsetEl.offsetLeft;\n\t\t\t} else {\n\t\t\t\toffset = this._taskRail.offsetWidth;\n\t\t\t}\n\n\t\t\treturn transition(this._taskRail, {\n\t\t\t\t'transform': 'translateX(' + (-offset + 5) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\twindow.EventLoopAnimation = EventLoopAnimation;\n}());\n\nnew EventLoopAnimation(document.querySelector('.event-loop-walkthrough'))\n\t.state().moveToLine(1).pushTask(true).pushStack('script').showCodeBar()\n\t.state().pushLog()\n\t.state().moveToLine(3)\n\t.state().commentary('setTimeout的回调函数被插入任务队列')\n\t.state().hideCommentary().pushTask()\n\t.state().moveToLine(7)\n\t.state().commentary('Promise的回调函数被插入微任务队列')\n\t.state().hideCommentary().pushMicrotask()\n\t.state().moveToLine(13)\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack()\n\t.state().commentary('执行栈为空，立即检查并处理微任务队列')\n\t.state().hideCommentary().activateMicrotask()\n\t.state().showCodeBar().moveToLine(8).pushStack('Promise callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().commentary('处理过程中产生新的微任务')\n\t.state().hideCommentary().pushMicrotask()\n\t.state().popStack().commentary('新微任务立即入执行栈处理')\n\t.state().hideCommentary()\n\t.state().shiftMicrotask().activateMicrotask()\n\t.state().showCodeBar().moveToLine(10).pushStack('Promise callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack().shiftMicrotask()\n\t.state().commentary('Run script事件结束，开始检查任务队列')\n\t.state().hideCommentary()\n\t.state().shiftTask().activateTask()\n\t.state().showCodeBar().moveToLine(4).pushStack('setTimeout callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack()\n\t.state().shiftTask()\n\t.state().commentary('进行新一轮事件循环');\n</script>\n{% endraw %}\n","source":"_posts/event-loop.md","raw":"---\ntitle: Event Loop事件循环执行过程\ndate: 2019-07-01 00:00:00\ncategories: JavaScript\nkeywords: 事件循环, event Loop, JavaScript\ndescription: 同步任务在主线程上执行，形成stack执行栈，主线程从task queue任务队列中读取事件的过程不断循环的运行机制称为event loop事件循环\n---\n\nJavaScript语言是单线程的，同步任务在主线程上执行，形成一个执行栈(JS stack)。\n\n异步任务，包括setTimeout、setInterval、setImmediate、requestAnimationFrame、I/O、UI rendering等，也被称作宏任务(macrotask)。\n\n主线程之外存在一个先进先出的任务队列(Task queue)，异步任务的运行结果会在任务队列中放置对应事件(callback)。\n\n一旦执行栈中的所有同步任务执行完毕，系统就会读取任务队列的事件并执行之。主线程从任务队列中读取事件的过程是不断重复循环的，这种运行机制便称为事件循环Event Loop。\n\nJavaScript中还存在另外的一类异步任务，包括process.nextTick、Promise、MutationObserver，以及已经废弃的Object.observe，被称做微任务(microtask)，它们的回调函数会被放进微任务队列(Microtask queue)。\n\n执行栈中的当前任务执行结束后，会立即检查并处理微任务队列，处理过程中产生的微任务也会被立即处理掉，而不用等下次事件循环。\n\n通俗来讲，macrotask的规则是等下一班车，microtask的规则是挂在当前车尾，而且允许现做现卖。\n\n下面是JavaScript事件循环Event Loop执行示例：\n\n{% raw %}\n<style>\n.event-loop-walkthrough {\n\tposition: relative;\n\tmargin: 2em 0;\n\tborder-radius: 3px;\n\toverflow: hidden;\n}\n\n.event-loop-walkthrough .highlight,\n.event-loop-walkthrough table {\n\tmargin: 0;\n}\n\n.event-loop-walkthrough table td {\n\tline-height: 1.4em;\n\tpadding: 0 1rem;\n\tvertical-align: top;\n\toverflow: hidden;\n}\n\n.event-loop-walkthrough table td+td {\n\tpadding: 0;\n\tborder-left: 1px solid #d7dcd2;\n}\n\n.event-loop-label {\n\theight: calc(1.4em + 5px);\n\tmargin-top: 5px;\n}\n\n.event-loop-items {\n\tdisplay: flex;\n\tmargin-top: 5px;\n}\n\n.event-loop-log .event-loop-items {\n\tflex-flow: row wrap;\n}\n\n.event-loop-item {\n\tmargin: 0 0 5px 5px;\n\tpadding: 0 5px;\n\tbackground-color: #d7dcd2;\n\twhite-space: nowrap;\n\topacity: 0;\n}\n\n.event-loop-commentary {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\theight: 320px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 0 1rem;\n\tfont-size: 1.25rem;\n\tcolor: #fff;\n}\n\n.event-loop-commentary-item {\n\tpadding: .5rem 1rem;\n\tbackground-color: rgba(0, 0, 0, .8);\n\tborder-radius: 3px;\n\topacity: 0;\n}\n\n.js-source {\n\tposition: relative;\n\tborder-bottom: 1px solid #d7dcd2;\n}\n\n.js-source .line-highlight {\n\tposition: absolute;\n\ttop: 1rem;\n\tright: 0;\n\tleft: 0;\n\tbackground-color: rgba(0, 0, 0, .15);\n\tborder-left: .5em solid rgba(0, 0, 0, .2);\n\tz-index: 1;\n\topacity: 0;\n}\n\n.js-source .line-highlight::after {\n\tcontent: 'yo';\n\tline-height: 1.4em;\n\tcolor: transparent;\n}\n\n.event-loop-controls {\n\tpadding: 1rem 0;\n}\n\n.event-loop-controls button {\n\tposition: relative;\n\tmargin-right: .1em;\n\tpadding: 0 1em;\n\tbackground-color: #f2f6ed;\n\tborder: 1px solid #d7dcd2;\n\tborder-radius: 3px;\n\tcursor: pointer;\n}\n\n.event-loop-walkthrough .prev-btn::after,\n.event-loop-walkthrough .next-btn::after {\n\tcontent: '';\n\tdisplay: block;\n\tposition: absolute;\n\ttop: .3em;\n\twidth: 0;\n\theight: 0;\n\tborder-width: .3em .5em;\n\tborder-style: solid;\n\tborder-color: transparent;\n}\n\n.event-loop-walkthrough .prev-btn::after {\n\tleft: .3em;\n\tborder-right-color: #08a8e6;\n}\n\n.event-loop-walkthrough .next-btn::after {\n\tright: .3em;\n\tborder-left-color: #08a8e6;\n}\n\n.event-loop-controls .prev-btn:hover::after {\n\tborder-right-color: #0791c6;\n}\n\n.event-loop-controls .prev-btn:active::after {\n\tborder-right-color: #0677a2;\n}\n\n.event-loop-controls .next-btn:hover::after {\n\tborder-left-color: #0791c6;\n}\n\n.event-loop-controls .next-btn:active::after {\n\tborder-left-color: #0677a2;\n}\n\n.event-loop-controls span {\n\tmargin: 0 0 0 1em;\n\ttext-align: center;\n\tcolor: #83887c\n}\n</style>\n{% endraw %}\n\n\n{% raw %}\n<div class=\"event-loop-walkthrough content\">\n\t<div class=\"js-source\">\n\t\t<div class=\"line-highlight\"></div>\n\t\t<div class=\"code-highlight\">\n{% endraw %}\n``` JavaScript\nconsole.log('script start')\n\nsetTimeout(function() {\n    console.log('setTimeout')\n}, 0)\n\nPromise.resolve().then(function() {\n    console.log('promise1')\n}).then(function() {\n    console.log('promise2')\n})\n\nconsole.log('script end')\n```\n{% raw %}\n\t\t</div>\n\t</div>\n\t<table>\n\t\t<tr class=\"task-queue\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Task queue</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">Run script</div>\n\t\t\t\t\t<div class=\"event-loop-item\">setTimeout callback</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"microtask-queue\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Microtask queue</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">Promise then</div>\n\t\t\t\t\t<div class=\"event-loop-item\">Promise then</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"js-stack\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">JS stack</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\"></div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"event-loop-log\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Log</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">script start</div>\n\t\t\t\t\t<div class=\"event-loop-item\">script end</div>\n\t\t\t\t\t<div class=\"event-loop-item\">promise1</div>\n\t\t\t\t\t<div class=\"event-loop-item\">promise2</div>\n\t\t\t\t\t<div class=\"event-loop-item\">setTimeout</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<div class=\"event-loop-controls\">\n\t\t<button type=\"button\" class=\"prev-btn\">&nbsp;</button>\n\t\t<button type=\"button\" class=\"next-btn\">&nbsp;</button>\n\t\t<span>点击按钮切换执行步骤</span>\n\t</div>\n\t<div class=\"event-loop-commentary\">\n\t\t<div class=\"event-loop-commentary-item\"></div>\n\t</div>\n</div>\n{% endraw %}\n\n具体执行过程大致如下：\n\n1. JS线程启动，创建事件循环\n2. 当前同步代码Run script为任务队列的第一项\n3. script加入执行栈\n4. 执行`console.log('script start')`，输出日志“script start”\n5. 执行`setTimeout...`，其回调函数被插入任务队列\n6. 执行`Promise.resolve()...`，其回调函数`console.log('promise1')`被插入微任务队列\n7. 执行`console.log('script end')`，输出日志“script end”\n8. script出栈，执行栈为空，立即检查并处理微任务队列\n9. 微任务`console.log('promise1')`入执行栈执行，输出日志“promise1”\n10. 处理过程中产生新的微任务`console.log('promise2')`立即入执行栈处理，输出日志“promise2”\n11. Run script事件结束，开始检查任务队列\n12. `console.log('setTimeout')`入执行栈执行，输出日志“setTimeout”\n13. 进行新一轮事件循环\n\n所以这段代码Log日志的出现顺序为：script start、script end、promise1、promise2、setTimeout。\n\n<cite>参考：\nhttps://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\nhttp://www.ruanyifeng.com/blog/2014/10/event-loop.html\nhttp://www.ayqy.net/blog/javascript-macrotask-vs-microtask/</cite>\n\n\n{% raw %}\n<script>\n(function() {\n\tfunction transition(el, obj, duration) {\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tif (obj.transform) {\n\t\t\t\tobj['-webkit-transform'] = obj.transform;\n\t\t\t}\n\n\t\t\tvar objKeys = Object.keys(obj);\n\n\t\t\tif (duration) {\n\t\t\t\tel.style.transitionProperty = objKeys.join();\n\t\t\t\tel.style.transitionTimingFunction = 'ease-in-out';\n\t\t\t\tel.style.transitionDuration = duration + 's';\n\t\t\t\tel.offsetLeft; // style recalc\n\n\t\t\t\tel.addEventListener('transitionend', function te() {\n\t\t\t\t\tel.style.transitionProperty = '';\n\t\t\t\t\tel.style.transitionTimingFunction = '';\n\t\t\t\t\tel.style.transitionDuration = '';\n\t\t\t\t\tresolve();\n\t\t\t\t\tel.removeEventListener('transitionend', te);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\n\t\t\tobjKeys.forEach(function(key) {\n\t\t\t\tel.style.setProperty(key, obj[key]);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction EventLoopAnimation(el) {\n\t\tthis._initalState = el;\n\t\tthis._states = [];\n\t\tthis._el = el;\n\t\tthis._queue = Promise.resolve();\n\t\tthis._reset();\n\t}\n\n\tEventLoopAnimation.prototype._reset = function() {\n\t\tvar newEl = this._initalState.cloneNode(true);\n\t\tthis._tasksShown = 0;\n\t\tthis._microtasksShown = 0;\n\t\tthis._tasksRemoved = 0;\n\t\tthis._microtasksRemoved = 0;\n\t\tthis._logsShown = 0;\n\t\tthis._currentPos = 0;\n\n\t\tthis._el.parentNode.insertBefore(newEl, this._el);\n\t\tthis._el.parentNode.removeChild(this._el);\n\t\tthis._el = newEl;\n\t\tthis._taskRail = this._el.querySelector('.task-queue .event-loop-items');\n\t\tthis._microtaskRail = this._el.querySelector('.microtask-queue .event-loop-items');\n\t\tthis._jsStack = this._el.querySelector('.js-stack .event-loop-items');\n\t\tthis._log = this._el.querySelector('.event-loop-log .event-loop-items');\n\t\tthis._codeBar = this._el.querySelector('.line-highlight');\n\t\tthis._commentary = this._el.querySelector('.event-loop-commentary-item');\n\n\t\tvar onClick = function(event) {\n\t\t\tvar className = event.target.getAttribute('class');\n\t\t\tif (className === 'prev-btn') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (event.type == 'click') {\n\t\t\t\t\tthis.back();\n\t\t\t\t}\n\t\t\t} else if (className === 'next-btn') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (event.type == 'click') {\n\t\t\t\t\tthis.forward(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\n\t\tthis._el.addEventListener('click', onClick);\n\t};\n\n\tEventLoopAnimation.prototype.forward = function(animate) {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tvar state = this._states[this._currentPos];\n\t\t\tif (!state) return this.goTo(0);\n\t\t\tthis._currentPos++;\n\t\t\treturn Promise.all(\n\t\t\t\tstate.map(function(func) {\n\t\t\t\t\treturn func(animate);\n\t\t\t\t})\n\t\t\t);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.goTo = function(pos) {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tthis._reset();\n\t\t\twhile (pos--) {\n\t\t\t\tthis.forward(false);\n\t\t\t}\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.back = function() {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tif (this._currentPos === 0) return this.goTo(this._states.length);\n\t\t\treturn this.goTo(this._currentPos - 1);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.state = function() {\n\t\tthis._states.push([]);\n\t\treturn this;\n\t};\n\n\tEventLoopAnimation.prototype.action = function(func) {\n\t\tthis._states[this._states.length - 1].push(func);\n\t\treturn this;\n\t};\n\n\tEventLoopAnimation.prototype.pushTask = function(activated) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newTask = this._taskRail.children[this._tasksShown];\n\t\t\tthis._tasksShown++;\n\n\t\t\tif (activated) {\n\t\t\t\tnewTask.style.backgroundColor = '#FFDF1E';\n\t\t\t}\n\n\t\t\treturn transition(newTask, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newTask = this._microtaskRail.children[this._microtasksShown];\n\t\t\tthis._microtasksShown++;\n\n\t\t\treturn transition(newTask, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushStack = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = document.createElement('div');\n\t\t\tdiv.className = 'event-loop-item';\n\t\t\tdiv.textContent = text;\n\t\t\tdiv.style.backgroundColor = '#FFDF1E';\n\t\t\tthis._jsStack.appendChild(div);\n\t\t\treturn transition(div, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.popStack = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._jsStack.children[this._jsStack.children.length - 1];\n\t\t\treturn transition(div, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate).then(function() {\n\t\t\t\tthis._jsStack.removeChild(div);\n\t\t\t}.bind(this));\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.showCodeBar = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.hideCodeBar = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushLog = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newLog = this._log.children[this._logsShown];\n\t\t\tthis._logsShown++;\n\n\t\t\treturn transition(newLog, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.moveToLine = function(num) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar barHeight = this._codeBar.getBoundingClientRect().height;\n\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\ttransform: 'translateY(' + ((num - 1) * barHeight) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.commentary = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._commentary.textContent = text;\n\t\t\treturn transition(this._commentary, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.hideCommentary = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._commentary, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.activateMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._microtaskRail.children[this._microtasksRemoved];\n\t\t\treturn transition(div, {\n\t\t\t\t'background-color': '#FFDF1E'\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.shiftMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._microtasksRemoved++;\n\t\t\tvar offset;\n\t\t\tvar offsetEl = this._microtaskRail.children[this._microtasksRemoved];\n\n\t\t\tif (offsetEl) {\n\t\t\t\toffset = offsetEl.offsetLeft;\n\t\t\t} else {\n\t\t\t\toffset = this._microtaskRail.offsetWidth;\n\t\t\t}\n\n\t\t\treturn transition(this._microtaskRail, {\n\t\t\t\t'transform': 'translateX(' + (-offset + 5) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.activateTask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._taskRail.children[this._tasksRemoved];\n\t\t\treturn transition(div, {\n\t\t\t\t'background-color': '#FFDF1E'\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.shiftTask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._tasksRemoved++;\n\t\t\tvar offset;\n\t\t\tvar offsetEl = this._taskRail.children[this._tasksRemoved];\n\n\t\t\tif (offsetEl) {\n\t\t\t\toffset = offsetEl.offsetLeft;\n\t\t\t} else {\n\t\t\t\toffset = this._taskRail.offsetWidth;\n\t\t\t}\n\n\t\t\treturn transition(this._taskRail, {\n\t\t\t\t'transform': 'translateX(' + (-offset + 5) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\twindow.EventLoopAnimation = EventLoopAnimation;\n}());\n\nnew EventLoopAnimation(document.querySelector('.event-loop-walkthrough'))\n\t.state().moveToLine(1).pushTask(true).pushStack('script').showCodeBar()\n\t.state().pushLog()\n\t.state().moveToLine(3)\n\t.state().commentary('setTimeout的回调函数被插入任务队列')\n\t.state().hideCommentary().pushTask()\n\t.state().moveToLine(7)\n\t.state().commentary('Promise的回调函数被插入微任务队列')\n\t.state().hideCommentary().pushMicrotask()\n\t.state().moveToLine(13)\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack()\n\t.state().commentary('执行栈为空，立即检查并处理微任务队列')\n\t.state().hideCommentary().activateMicrotask()\n\t.state().showCodeBar().moveToLine(8).pushStack('Promise callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().commentary('处理过程中产生新的微任务')\n\t.state().hideCommentary().pushMicrotask()\n\t.state().popStack().commentary('新微任务立即入执行栈处理')\n\t.state().hideCommentary()\n\t.state().shiftMicrotask().activateMicrotask()\n\t.state().showCodeBar().moveToLine(10).pushStack('Promise callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack().shiftMicrotask()\n\t.state().commentary('Run script事件结束，开始检查任务队列')\n\t.state().hideCommentary()\n\t.state().shiftTask().activateTask()\n\t.state().showCodeBar().moveToLine(4).pushStack('setTimeout callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack()\n\t.state().shiftTask()\n\t.state().commentary('进行新一轮事件循环');\n</script>\n{% endraw %}\n","slug":"event-loop","published":1,"updated":"2019-07-01T08:37:07.908Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160en06003i3a8i0lkwx6yb","content":"<p>JavaScript语言是单线程的，同步任务在主线程上执行，形成一个执行栈(JS stack)。</p>\n<p>异步任务，包括setTimeout、setInterval、setImmediate、requestAnimationFrame、I/O、UI rendering等，也被称作宏任务(macrotask)。</p>\n<p>主线程之外存在一个先进先出的任务队列(Task queue)，异步任务的运行结果会在任务队列中放置对应事件(callback)。</p>\n<p>一旦执行栈中的所有同步任务执行完毕，系统就会读取任务队列的事件并执行之。主线程从任务队列中读取事件的过程是不断重复循环的，这种运行机制便称为事件循环Event Loop。</p>\n<p>JavaScript中还存在另外的一类异步任务，包括process.nextTick、Promise、MutationObserver，以及已经废弃的Object.observe，被称做微任务(microtask)，它们的回调函数会被放进微任务队列(Microtask queue)。</p>\n<p>执行栈中的当前任务执行结束后，会立即检查并处理微任务队列，处理过程中产生的微任务也会被立即处理掉，而不用等下次事件循环。</p>\n<p>通俗来讲，macrotask的规则是等下一班车，microtask的规则是挂在当前车尾，而且允许现做现卖。</p>\n<p>下面是JavaScript事件循环Event Loop执行示例：</p>\n\n<style>\n.event-loop-walkthrough {\n\tposition: relative;\n\tmargin: 2em 0;\n\tborder-radius: 3px;\n\toverflow: hidden;\n}\n\n.event-loop-walkthrough .highlight,\n.event-loop-walkthrough table {\n\tmargin: 0;\n}\n\n.event-loop-walkthrough table td {\n\tline-height: 1.4em;\n\tpadding: 0 1rem;\n\tvertical-align: top;\n\toverflow: hidden;\n}\n\n.event-loop-walkthrough table td+td {\n\tpadding: 0;\n\tborder-left: 1px solid #d7dcd2;\n}\n\n.event-loop-label {\n\theight: calc(1.4em + 5px);\n\tmargin-top: 5px;\n}\n\n.event-loop-items {\n\tdisplay: flex;\n\tmargin-top: 5px;\n}\n\n.event-loop-log .event-loop-items {\n\tflex-flow: row wrap;\n}\n\n.event-loop-item {\n\tmargin: 0 0 5px 5px;\n\tpadding: 0 5px;\n\tbackground-color: #d7dcd2;\n\twhite-space: nowrap;\n\topacity: 0;\n}\n\n.event-loop-commentary {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\theight: 320px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 0 1rem;\n\tfont-size: 1.25rem;\n\tcolor: #fff;\n}\n\n.event-loop-commentary-item {\n\tpadding: .5rem 1rem;\n\tbackground-color: rgba(0, 0, 0, .8);\n\tborder-radius: 3px;\n\topacity: 0;\n}\n\n.js-source {\n\tposition: relative;\n\tborder-bottom: 1px solid #d7dcd2;\n}\n\n.js-source .line-highlight {\n\tposition: absolute;\n\ttop: 1rem;\n\tright: 0;\n\tleft: 0;\n\tbackground-color: rgba(0, 0, 0, .15);\n\tborder-left: .5em solid rgba(0, 0, 0, .2);\n\tz-index: 1;\n\topacity: 0;\n}\n\n.js-source .line-highlight::after {\n\tcontent: 'yo';\n\tline-height: 1.4em;\n\tcolor: transparent;\n}\n\n.event-loop-controls {\n\tpadding: 1rem 0;\n}\n\n.event-loop-controls button {\n\tposition: relative;\n\tmargin-right: .1em;\n\tpadding: 0 1em;\n\tbackground-color: #f2f6ed;\n\tborder: 1px solid #d7dcd2;\n\tborder-radius: 3px;\n\tcursor: pointer;\n}\n\n.event-loop-walkthrough .prev-btn::after,\n.event-loop-walkthrough .next-btn::after {\n\tcontent: '';\n\tdisplay: block;\n\tposition: absolute;\n\ttop: .3em;\n\twidth: 0;\n\theight: 0;\n\tborder-width: .3em .5em;\n\tborder-style: solid;\n\tborder-color: transparent;\n}\n\n.event-loop-walkthrough .prev-btn::after {\n\tleft: .3em;\n\tborder-right-color: #08a8e6;\n}\n\n.event-loop-walkthrough .next-btn::after {\n\tright: .3em;\n\tborder-left-color: #08a8e6;\n}\n\n.event-loop-controls .prev-btn:hover::after {\n\tborder-right-color: #0791c6;\n}\n\n.event-loop-controls .prev-btn:active::after {\n\tborder-right-color: #0677a2;\n}\n\n.event-loop-controls .next-btn:hover::after {\n\tborder-left-color: #0791c6;\n}\n\n.event-loop-controls .next-btn:active::after {\n\tborder-left-color: #0677a2;\n}\n\n.event-loop-controls span {\n\tmargin: 0 0 0 1em;\n\ttext-align: center;\n\tcolor: #83887c\n}\n</style>\n\n\n<div class=\"event-loop-walkthrough content\">\n\t<div class=\"js-source\">\n\t\t<div class=\"line-highlight\"></div>\n\t\t<div class=\"code-highlight\">\n\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'script start'</span>)</div><div class=\"line\"><br></div><div class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'setTimeout'</span>)</div><div class=\"line\">&#125;, <span class=\"number\">0</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">Promise</span>.resolve().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'promise1'</span>)</div><div class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'promise2'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'script end'</span>)</div></pre></figure>\n\n\t\t</div>\n\t</div>\n\t<table>\n\t\t<tr class=\"task-queue\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Task queue</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">Run script</div>\n\t\t\t\t\t<div class=\"event-loop-item\">setTimeout callback</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"microtask-queue\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Microtask queue</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">Promise then</div>\n\t\t\t\t\t<div class=\"event-loop-item\">Promise then</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"js-stack\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">JS stack</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\"></div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"event-loop-log\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Log</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">script start</div>\n\t\t\t\t\t<div class=\"event-loop-item\">script end</div>\n\t\t\t\t\t<div class=\"event-loop-item\">promise1</div>\n\t\t\t\t\t<div class=\"event-loop-item\">promise2</div>\n\t\t\t\t\t<div class=\"event-loop-item\">setTimeout</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<div class=\"event-loop-controls\">\n\t\t<button type=\"button\" class=\"prev-btn\">&nbsp;</button>\n\t\t<button type=\"button\" class=\"next-btn\">&nbsp;</button>\n\t\t<span>点击按钮切换执行步骤</span>\n\t</div>\n\t<div class=\"event-loop-commentary\">\n\t\t<div class=\"event-loop-commentary-item\"></div>\n\t</div>\n</div>\n\n<p>具体执行过程大致如下：</p>\n<ol>\n<li>JS线程启动，创建事件循环</li>\n<li>当前同步代码Run script为任务队列的第一项</li>\n<li>script加入执行栈</li>\n<li>执行<code>console.log(&#39;script start&#39;)</code>，输出日志“script start”</li>\n<li>执行<code>setTimeout...</code>，其回调函数被插入任务队列</li>\n<li>执行<code>Promise.resolve()...</code>，其回调函数<code>console.log(&#39;promise1&#39;)</code>被插入微任务队列</li>\n<li>执行<code>console.log(&#39;script end&#39;)</code>，输出日志“script end”</li>\n<li>script出栈，执行栈为空，立即检查并处理微任务队列</li>\n<li>微任务<code>console.log(&#39;promise1&#39;)</code>入执行栈执行，输出日志“promise1”</li>\n<li>处理过程中产生新的微任务<code>console.log(&#39;promise2&#39;)</code>立即入执行栈处理，输出日志“promise2”</li>\n<li>Run script事件结束，开始检查任务队列</li>\n<li><code>console.log(&#39;setTimeout&#39;)</code>入执行栈执行，输出日志“setTimeout”</li>\n<li>进行新一轮事件循环</li>\n</ol>\n<p>所以这段代码Log日志的出现顺序为：script start、script end、promise1、promise2、setTimeout。</p>\n<p><cite>参考：<br><a href=\"https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\" target=\"_blank\" rel=\"noopener\">https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/</a><br><a href=\"http://www.ruanyifeng.com/blog/2014/10/event-loop.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2014/10/event-loop.html</a><br><a href=\"http://www.ayqy.net/blog/javascript-macrotask-vs-microtask/\" target=\"_blank\" rel=\"noopener\">http://www.ayqy.net/blog/javascript-macrotask-vs-microtask/</a></cite></p>\n\n<script>\n(function() {\n\tfunction transition(el, obj, duration) {\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tif (obj.transform) {\n\t\t\t\tobj['-webkit-transform'] = obj.transform;\n\t\t\t}\n\n\t\t\tvar objKeys = Object.keys(obj);\n\n\t\t\tif (duration) {\n\t\t\t\tel.style.transitionProperty = objKeys.join();\n\t\t\t\tel.style.transitionTimingFunction = 'ease-in-out';\n\t\t\t\tel.style.transitionDuration = duration + 's';\n\t\t\t\tel.offsetLeft; // style recalc\n\n\t\t\t\tel.addEventListener('transitionend', function te() {\n\t\t\t\t\tel.style.transitionProperty = '';\n\t\t\t\t\tel.style.transitionTimingFunction = '';\n\t\t\t\t\tel.style.transitionDuration = '';\n\t\t\t\t\tresolve();\n\t\t\t\t\tel.removeEventListener('transitionend', te);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\n\t\t\tobjKeys.forEach(function(key) {\n\t\t\t\tel.style.setProperty(key, obj[key]);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction EventLoopAnimation(el) {\n\t\tthis._initalState = el;\n\t\tthis._states = [];\n\t\tthis._el = el;\n\t\tthis._queue = Promise.resolve();\n\t\tthis._reset();\n\t}\n\n\tEventLoopAnimation.prototype._reset = function() {\n\t\tvar newEl = this._initalState.cloneNode(true);\n\t\tthis._tasksShown = 0;\n\t\tthis._microtasksShown = 0;\n\t\tthis._tasksRemoved = 0;\n\t\tthis._microtasksRemoved = 0;\n\t\tthis._logsShown = 0;\n\t\tthis._currentPos = 0;\n\n\t\tthis._el.parentNode.insertBefore(newEl, this._el);\n\t\tthis._el.parentNode.removeChild(this._el);\n\t\tthis._el = newEl;\n\t\tthis._taskRail = this._el.querySelector('.task-queue .event-loop-items');\n\t\tthis._microtaskRail = this._el.querySelector('.microtask-queue .event-loop-items');\n\t\tthis._jsStack = this._el.querySelector('.js-stack .event-loop-items');\n\t\tthis._log = this._el.querySelector('.event-loop-log .event-loop-items');\n\t\tthis._codeBar = this._el.querySelector('.line-highlight');\n\t\tthis._commentary = this._el.querySelector('.event-loop-commentary-item');\n\n\t\tvar onClick = function(event) {\n\t\t\tvar className = event.target.getAttribute('class');\n\t\t\tif (className === 'prev-btn') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (event.type == 'click') {\n\t\t\t\t\tthis.back();\n\t\t\t\t}\n\t\t\t} else if (className === 'next-btn') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (event.type == 'click') {\n\t\t\t\t\tthis.forward(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\n\t\tthis._el.addEventListener('click', onClick);\n\t};\n\n\tEventLoopAnimation.prototype.forward = function(animate) {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tvar state = this._states[this._currentPos];\n\t\t\tif (!state) return this.goTo(0);\n\t\t\tthis._currentPos++;\n\t\t\treturn Promise.all(\n\t\t\t\tstate.map(function(func) {\n\t\t\t\t\treturn func(animate);\n\t\t\t\t})\n\t\t\t);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.goTo = function(pos) {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tthis._reset();\n\t\t\twhile (pos--) {\n\t\t\t\tthis.forward(false);\n\t\t\t}\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.back = function() {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tif (this._currentPos === 0) return this.goTo(this._states.length);\n\t\t\treturn this.goTo(this._currentPos - 1);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.state = function() {\n\t\tthis._states.push([]);\n\t\treturn this;\n\t};\n\n\tEventLoopAnimation.prototype.action = function(func) {\n\t\tthis._states[this._states.length - 1].push(func);\n\t\treturn this;\n\t};\n\n\tEventLoopAnimation.prototype.pushTask = function(activated) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newTask = this._taskRail.children[this._tasksShown];\n\t\t\tthis._tasksShown++;\n\n\t\t\tif (activated) {\n\t\t\t\tnewTask.style.backgroundColor = '#FFDF1E';\n\t\t\t}\n\n\t\t\treturn transition(newTask, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newTask = this._microtaskRail.children[this._microtasksShown];\n\t\t\tthis._microtasksShown++;\n\n\t\t\treturn transition(newTask, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushStack = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = document.createElement('div');\n\t\t\tdiv.className = 'event-loop-item';\n\t\t\tdiv.textContent = text;\n\t\t\tdiv.style.backgroundColor = '#FFDF1E';\n\t\t\tthis._jsStack.appendChild(div);\n\t\t\treturn transition(div, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.popStack = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._jsStack.children[this._jsStack.children.length - 1];\n\t\t\treturn transition(div, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate).then(function() {\n\t\t\t\tthis._jsStack.removeChild(div);\n\t\t\t}.bind(this));\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.showCodeBar = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.hideCodeBar = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushLog = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newLog = this._log.children[this._logsShown];\n\t\t\tthis._logsShown++;\n\n\t\t\treturn transition(newLog, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.moveToLine = function(num) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar barHeight = this._codeBar.getBoundingClientRect().height;\n\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\ttransform: 'translateY(' + ((num - 1) * barHeight) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.commentary = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._commentary.textContent = text;\n\t\t\treturn transition(this._commentary, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.hideCommentary = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._commentary, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.activateMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._microtaskRail.children[this._microtasksRemoved];\n\t\t\treturn transition(div, {\n\t\t\t\t'background-color': '#FFDF1E'\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.shiftMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._microtasksRemoved++;\n\t\t\tvar offset;\n\t\t\tvar offsetEl = this._microtaskRail.children[this._microtasksRemoved];\n\n\t\t\tif (offsetEl) {\n\t\t\t\toffset = offsetEl.offsetLeft;\n\t\t\t} else {\n\t\t\t\toffset = this._microtaskRail.offsetWidth;\n\t\t\t}\n\n\t\t\treturn transition(this._microtaskRail, {\n\t\t\t\t'transform': 'translateX(' + (-offset + 5) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.activateTask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._taskRail.children[this._tasksRemoved];\n\t\t\treturn transition(div, {\n\t\t\t\t'background-color': '#FFDF1E'\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.shiftTask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._tasksRemoved++;\n\t\t\tvar offset;\n\t\t\tvar offsetEl = this._taskRail.children[this._tasksRemoved];\n\n\t\t\tif (offsetEl) {\n\t\t\t\toffset = offsetEl.offsetLeft;\n\t\t\t} else {\n\t\t\t\toffset = this._taskRail.offsetWidth;\n\t\t\t}\n\n\t\t\treturn transition(this._taskRail, {\n\t\t\t\t'transform': 'translateX(' + (-offset + 5) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\twindow.EventLoopAnimation = EventLoopAnimation;\n}());\n\nnew EventLoopAnimation(document.querySelector('.event-loop-walkthrough'))\n\t.state().moveToLine(1).pushTask(true).pushStack('script').showCodeBar()\n\t.state().pushLog()\n\t.state().moveToLine(3)\n\t.state().commentary('setTimeout的回调函数被插入任务队列')\n\t.state().hideCommentary().pushTask()\n\t.state().moveToLine(7)\n\t.state().commentary('Promise的回调函数被插入微任务队列')\n\t.state().hideCommentary().pushMicrotask()\n\t.state().moveToLine(13)\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack()\n\t.state().commentary('执行栈为空，立即检查并处理微任务队列')\n\t.state().hideCommentary().activateMicrotask()\n\t.state().showCodeBar().moveToLine(8).pushStack('Promise callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().commentary('处理过程中产生新的微任务')\n\t.state().hideCommentary().pushMicrotask()\n\t.state().popStack().commentary('新微任务立即入执行栈处理')\n\t.state().hideCommentary()\n\t.state().shiftMicrotask().activateMicrotask()\n\t.state().showCodeBar().moveToLine(10).pushStack('Promise callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack().shiftMicrotask()\n\t.state().commentary('Run script事件结束，开始检查任务队列')\n\t.state().hideCommentary()\n\t.state().shiftTask().activateTask()\n\t.state().showCodeBar().moveToLine(4).pushStack('setTimeout callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack()\n\t.state().shiftTask()\n\t.state().commentary('进行新一轮事件循环');\n</script>\n\n","site":{"data":{}},"excerpt":"","more":"<p>JavaScript语言是单线程的，同步任务在主线程上执行，形成一个执行栈(JS stack)。</p>\n<p>异步任务，包括setTimeout、setInterval、setImmediate、requestAnimationFrame、I/O、UI rendering等，也被称作宏任务(macrotask)。</p>\n<p>主线程之外存在一个先进先出的任务队列(Task queue)，异步任务的运行结果会在任务队列中放置对应事件(callback)。</p>\n<p>一旦执行栈中的所有同步任务执行完毕，系统就会读取任务队列的事件并执行之。主线程从任务队列中读取事件的过程是不断重复循环的，这种运行机制便称为事件循环Event Loop。</p>\n<p>JavaScript中还存在另外的一类异步任务，包括process.nextTick、Promise、MutationObserver，以及已经废弃的Object.observe，被称做微任务(microtask)，它们的回调函数会被放进微任务队列(Microtask queue)。</p>\n<p>执行栈中的当前任务执行结束后，会立即检查并处理微任务队列，处理过程中产生的微任务也会被立即处理掉，而不用等下次事件循环。</p>\n<p>通俗来讲，macrotask的规则是等下一班车，microtask的规则是挂在当前车尾，而且允许现做现卖。</p>\n<p>下面是JavaScript事件循环Event Loop执行示例：</p>\n\n<style>\n.event-loop-walkthrough {\n\tposition: relative;\n\tmargin: 2em 0;\n\tborder-radius: 3px;\n\toverflow: hidden;\n}\n\n.event-loop-walkthrough .highlight,\n.event-loop-walkthrough table {\n\tmargin: 0;\n}\n\n.event-loop-walkthrough table td {\n\tline-height: 1.4em;\n\tpadding: 0 1rem;\n\tvertical-align: top;\n\toverflow: hidden;\n}\n\n.event-loop-walkthrough table td+td {\n\tpadding: 0;\n\tborder-left: 1px solid #d7dcd2;\n}\n\n.event-loop-label {\n\theight: calc(1.4em + 5px);\n\tmargin-top: 5px;\n}\n\n.event-loop-items {\n\tdisplay: flex;\n\tmargin-top: 5px;\n}\n\n.event-loop-log .event-loop-items {\n\tflex-flow: row wrap;\n}\n\n.event-loop-item {\n\tmargin: 0 0 5px 5px;\n\tpadding: 0 5px;\n\tbackground-color: #d7dcd2;\n\twhite-space: nowrap;\n\topacity: 0;\n}\n\n.event-loop-commentary {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\theight: 320px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 0 1rem;\n\tfont-size: 1.25rem;\n\tcolor: #fff;\n}\n\n.event-loop-commentary-item {\n\tpadding: .5rem 1rem;\n\tbackground-color: rgba(0, 0, 0, .8);\n\tborder-radius: 3px;\n\topacity: 0;\n}\n\n.js-source {\n\tposition: relative;\n\tborder-bottom: 1px solid #d7dcd2;\n}\n\n.js-source .line-highlight {\n\tposition: absolute;\n\ttop: 1rem;\n\tright: 0;\n\tleft: 0;\n\tbackground-color: rgba(0, 0, 0, .15);\n\tborder-left: .5em solid rgba(0, 0, 0, .2);\n\tz-index: 1;\n\topacity: 0;\n}\n\n.js-source .line-highlight::after {\n\tcontent: 'yo';\n\tline-height: 1.4em;\n\tcolor: transparent;\n}\n\n.event-loop-controls {\n\tpadding: 1rem 0;\n}\n\n.event-loop-controls button {\n\tposition: relative;\n\tmargin-right: .1em;\n\tpadding: 0 1em;\n\tbackground-color: #f2f6ed;\n\tborder: 1px solid #d7dcd2;\n\tborder-radius: 3px;\n\tcursor: pointer;\n}\n\n.event-loop-walkthrough .prev-btn::after,\n.event-loop-walkthrough .next-btn::after {\n\tcontent: '';\n\tdisplay: block;\n\tposition: absolute;\n\ttop: .3em;\n\twidth: 0;\n\theight: 0;\n\tborder-width: .3em .5em;\n\tborder-style: solid;\n\tborder-color: transparent;\n}\n\n.event-loop-walkthrough .prev-btn::after {\n\tleft: .3em;\n\tborder-right-color: #08a8e6;\n}\n\n.event-loop-walkthrough .next-btn::after {\n\tright: .3em;\n\tborder-left-color: #08a8e6;\n}\n\n.event-loop-controls .prev-btn:hover::after {\n\tborder-right-color: #0791c6;\n}\n\n.event-loop-controls .prev-btn:active::after {\n\tborder-right-color: #0677a2;\n}\n\n.event-loop-controls .next-btn:hover::after {\n\tborder-left-color: #0791c6;\n}\n\n.event-loop-controls .next-btn:active::after {\n\tborder-left-color: #0677a2;\n}\n\n.event-loop-controls span {\n\tmargin: 0 0 0 1em;\n\ttext-align: center;\n\tcolor: #83887c\n}\n</style>\n\n\n<div class=\"event-loop-walkthrough content\">\n\t<div class=\"js-source\">\n\t\t<div class=\"line-highlight\"></div>\n\t\t<div class=\"code-highlight\">\n\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'script start'</span>)</div><div class=\"line\"><br></div><div class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'setTimeout'</span>)</div><div class=\"line\">&#125;, <span class=\"number\">0</span>)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">Promise</span>.resolve().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'promise1'</span>)</div><div class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'promise2'</span>)</div><div class=\"line\">&#125;)</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'script end'</span>)</div></pre></figure>\n\n\t\t</div>\n\t</div>\n\t<table>\n\t\t<tr class=\"task-queue\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Task queue</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">Run script</div>\n\t\t\t\t\t<div class=\"event-loop-item\">setTimeout callback</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"microtask-queue\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Microtask queue</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">Promise then</div>\n\t\t\t\t\t<div class=\"event-loop-item\">Promise then</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"js-stack\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">JS stack</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\"></div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"event-loop-log\">\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-label\">Log</div>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<div class=\"event-loop-items\">\n\t\t\t\t\t<div class=\"event-loop-item\">script start</div>\n\t\t\t\t\t<div class=\"event-loop-item\">script end</div>\n\t\t\t\t\t<div class=\"event-loop-item\">promise1</div>\n\t\t\t\t\t<div class=\"event-loop-item\">promise2</div>\n\t\t\t\t\t<div class=\"event-loop-item\">setTimeout</div>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<div class=\"event-loop-controls\">\n\t\t<button type=\"button\" class=\"prev-btn\">&nbsp;</button>\n\t\t<button type=\"button\" class=\"next-btn\">&nbsp;</button>\n\t\t<span>点击按钮切换执行步骤</span>\n\t</div>\n\t<div class=\"event-loop-commentary\">\n\t\t<div class=\"event-loop-commentary-item\"></div>\n\t</div>\n</div>\n\n<p>具体执行过程大致如下：</p>\n<ol>\n<li>JS线程启动，创建事件循环</li>\n<li>当前同步代码Run script为任务队列的第一项</li>\n<li>script加入执行栈</li>\n<li>执行<code>console.log(&#39;script start&#39;)</code>，输出日志“script start”</li>\n<li>执行<code>setTimeout...</code>，其回调函数被插入任务队列</li>\n<li>执行<code>Promise.resolve()...</code>，其回调函数<code>console.log(&#39;promise1&#39;)</code>被插入微任务队列</li>\n<li>执行<code>console.log(&#39;script end&#39;)</code>，输出日志“script end”</li>\n<li>script出栈，执行栈为空，立即检查并处理微任务队列</li>\n<li>微任务<code>console.log(&#39;promise1&#39;)</code>入执行栈执行，输出日志“promise1”</li>\n<li>处理过程中产生新的微任务<code>console.log(&#39;promise2&#39;)</code>立即入执行栈处理，输出日志“promise2”</li>\n<li>Run script事件结束，开始检查任务队列</li>\n<li><code>console.log(&#39;setTimeout&#39;)</code>入执行栈执行，输出日志“setTimeout”</li>\n<li>进行新一轮事件循环</li>\n</ol>\n<p>所以这段代码Log日志的出现顺序为：script start、script end、promise1、promise2、setTimeout。</p>\n<p><cite>参考：<br><a href=\"https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\" target=\"_blank\" rel=\"noopener\">https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/</a><br><a href=\"http://www.ruanyifeng.com/blog/2014/10/event-loop.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2014/10/event-loop.html</a><br><a href=\"http://www.ayqy.net/blog/javascript-macrotask-vs-microtask/\" target=\"_blank\" rel=\"noopener\">http://www.ayqy.net/blog/javascript-macrotask-vs-microtask/</a></cite></p>\n\n<script>\n(function() {\n\tfunction transition(el, obj, duration) {\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tif (obj.transform) {\n\t\t\t\tobj['-webkit-transform'] = obj.transform;\n\t\t\t}\n\n\t\t\tvar objKeys = Object.keys(obj);\n\n\t\t\tif (duration) {\n\t\t\t\tel.style.transitionProperty = objKeys.join();\n\t\t\t\tel.style.transitionTimingFunction = 'ease-in-out';\n\t\t\t\tel.style.transitionDuration = duration + 's';\n\t\t\t\tel.offsetLeft; // style recalc\n\n\t\t\t\tel.addEventListener('transitionend', function te() {\n\t\t\t\t\tel.style.transitionProperty = '';\n\t\t\t\t\tel.style.transitionTimingFunction = '';\n\t\t\t\t\tel.style.transitionDuration = '';\n\t\t\t\t\tresolve();\n\t\t\t\t\tel.removeEventListener('transitionend', te);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\n\t\t\tobjKeys.forEach(function(key) {\n\t\t\t\tel.style.setProperty(key, obj[key]);\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction EventLoopAnimation(el) {\n\t\tthis._initalState = el;\n\t\tthis._states = [];\n\t\tthis._el = el;\n\t\tthis._queue = Promise.resolve();\n\t\tthis._reset();\n\t}\n\n\tEventLoopAnimation.prototype._reset = function() {\n\t\tvar newEl = this._initalState.cloneNode(true);\n\t\tthis._tasksShown = 0;\n\t\tthis._microtasksShown = 0;\n\t\tthis._tasksRemoved = 0;\n\t\tthis._microtasksRemoved = 0;\n\t\tthis._logsShown = 0;\n\t\tthis._currentPos = 0;\n\n\t\tthis._el.parentNode.insertBefore(newEl, this._el);\n\t\tthis._el.parentNode.removeChild(this._el);\n\t\tthis._el = newEl;\n\t\tthis._taskRail = this._el.querySelector('.task-queue .event-loop-items');\n\t\tthis._microtaskRail = this._el.querySelector('.microtask-queue .event-loop-items');\n\t\tthis._jsStack = this._el.querySelector('.js-stack .event-loop-items');\n\t\tthis._log = this._el.querySelector('.event-loop-log .event-loop-items');\n\t\tthis._codeBar = this._el.querySelector('.line-highlight');\n\t\tthis._commentary = this._el.querySelector('.event-loop-commentary-item');\n\n\t\tvar onClick = function(event) {\n\t\t\tvar className = event.target.getAttribute('class');\n\t\t\tif (className === 'prev-btn') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (event.type == 'click') {\n\t\t\t\t\tthis.back();\n\t\t\t\t}\n\t\t\t} else if (className === 'next-btn') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif (event.type == 'click') {\n\t\t\t\t\tthis.forward(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\n\t\tthis._el.addEventListener('click', onClick);\n\t};\n\n\tEventLoopAnimation.prototype.forward = function(animate) {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tvar state = this._states[this._currentPos];\n\t\t\tif (!state) return this.goTo(0);\n\t\t\tthis._currentPos++;\n\t\t\treturn Promise.all(\n\t\t\t\tstate.map(function(func) {\n\t\t\t\t\treturn func(animate);\n\t\t\t\t})\n\t\t\t);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.goTo = function(pos) {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tthis._reset();\n\t\t\twhile (pos--) {\n\t\t\t\tthis.forward(false);\n\t\t\t}\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.back = function() {\n\t\tthis._queue = this._queue.then(function() {\n\t\t\tif (this._currentPos === 0) return this.goTo(this._states.length);\n\t\t\treturn this.goTo(this._currentPos - 1);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.state = function() {\n\t\tthis._states.push([]);\n\t\treturn this;\n\t};\n\n\tEventLoopAnimation.prototype.action = function(func) {\n\t\tthis._states[this._states.length - 1].push(func);\n\t\treturn this;\n\t};\n\n\tEventLoopAnimation.prototype.pushTask = function(activated) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newTask = this._taskRail.children[this._tasksShown];\n\t\t\tthis._tasksShown++;\n\n\t\t\tif (activated) {\n\t\t\t\tnewTask.style.backgroundColor = '#FFDF1E';\n\t\t\t}\n\n\t\t\treturn transition(newTask, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newTask = this._microtaskRail.children[this._microtasksShown];\n\t\t\tthis._microtasksShown++;\n\n\t\t\treturn transition(newTask, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushStack = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = document.createElement('div');\n\t\t\tdiv.className = 'event-loop-item';\n\t\t\tdiv.textContent = text;\n\t\t\tdiv.style.backgroundColor = '#FFDF1E';\n\t\t\tthis._jsStack.appendChild(div);\n\t\t\treturn transition(div, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.popStack = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._jsStack.children[this._jsStack.children.length - 1];\n\t\t\treturn transition(div, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate).then(function() {\n\t\t\t\tthis._jsStack.removeChild(div);\n\t\t\t}.bind(this));\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.showCodeBar = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.hideCodeBar = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.pushLog = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar newLog = this._log.children[this._logsShown];\n\t\t\tthis._logsShown++;\n\n\t\t\treturn transition(newLog, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.moveToLine = function(num) {\n\t\treturn this.action(function(animate) {\n\t\t\tvar barHeight = this._codeBar.getBoundingClientRect().height;\n\n\t\t\treturn transition(this._codeBar, {\n\t\t\t\ttransform: 'translateY(' + ((num - 1) * barHeight) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.commentary = function(text) {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._commentary.textContent = text;\n\t\t\treturn transition(this._commentary, {\n\t\t\t\topacity: 1\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.hideCommentary = function() {\n\t\treturn this.action(function(animate) {\n\t\t\treturn transition(this._commentary, {\n\t\t\t\topacity: 0\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.activateMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._microtaskRail.children[this._microtasksRemoved];\n\t\t\treturn transition(div, {\n\t\t\t\t'background-color': '#FFDF1E'\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.shiftMicrotask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._microtasksRemoved++;\n\t\t\tvar offset;\n\t\t\tvar offsetEl = this._microtaskRail.children[this._microtasksRemoved];\n\n\t\t\tif (offsetEl) {\n\t\t\t\toffset = offsetEl.offsetLeft;\n\t\t\t} else {\n\t\t\t\toffset = this._microtaskRail.offsetWidth;\n\t\t\t}\n\n\t\t\treturn transition(this._microtaskRail, {\n\t\t\t\t'transform': 'translateX(' + (-offset + 5) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.activateTask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tvar div = this._taskRail.children[this._tasksRemoved];\n\t\t\treturn transition(div, {\n\t\t\t\t'background-color': '#FFDF1E'\n\t\t\t}, 0.2 * animate);\n\t\t}.bind(this));\n\t};\n\n\tEventLoopAnimation.prototype.shiftTask = function() {\n\t\treturn this.action(function(animate) {\n\t\t\tthis._tasksRemoved++;\n\t\t\tvar offset;\n\t\t\tvar offsetEl = this._taskRail.children[this._tasksRemoved];\n\n\t\t\tif (offsetEl) {\n\t\t\t\toffset = offsetEl.offsetLeft;\n\t\t\t} else {\n\t\t\t\toffset = this._taskRail.offsetWidth;\n\t\t\t}\n\n\t\t\treturn transition(this._taskRail, {\n\t\t\t\t'transform': 'translateX(' + (-offset + 5) + 'px)'\n\t\t\t}, 0.3 * animate);\n\t\t}.bind(this));\n\t};\n\n\twindow.EventLoopAnimation = EventLoopAnimation;\n}());\n\nnew EventLoopAnimation(document.querySelector('.event-loop-walkthrough'))\n\t.state().moveToLine(1).pushTask(true).pushStack('script').showCodeBar()\n\t.state().pushLog()\n\t.state().moveToLine(3)\n\t.state().commentary('setTimeout的回调函数被插入任务队列')\n\t.state().hideCommentary().pushTask()\n\t.state().moveToLine(7)\n\t.state().commentary('Promise的回调函数被插入微任务队列')\n\t.state().hideCommentary().pushMicrotask()\n\t.state().moveToLine(13)\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack()\n\t.state().commentary('执行栈为空，立即检查并处理微任务队列')\n\t.state().hideCommentary().activateMicrotask()\n\t.state().showCodeBar().moveToLine(8).pushStack('Promise callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().commentary('处理过程中产生新的微任务')\n\t.state().hideCommentary().pushMicrotask()\n\t.state().popStack().commentary('新微任务立即入执行栈处理')\n\t.state().hideCommentary()\n\t.state().shiftMicrotask().activateMicrotask()\n\t.state().showCodeBar().moveToLine(10).pushStack('Promise callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack().shiftMicrotask()\n\t.state().commentary('Run script事件结束，开始检查任务队列')\n\t.state().hideCommentary()\n\t.state().shiftTask().activateTask()\n\t.state().showCodeBar().moveToLine(4).pushStack('setTimeout callback')\n\t.state().pushLog()\n\t.state().hideCodeBar().popStack()\n\t.state().shiftTask()\n\t.state().commentary('进行新一轮事件循环');\n</script>\n\n"},{"title":"响应鼠标位置的parallax视差效果","date":"2019-07-08T16:00:00.000Z","keywords":"视差, parallax.js","description":"响应鼠标位置的视差效果的具体实现，运动元素各自设置不同的深度值，对鼠标位置作不同程度的响应","_content":"\n{% raw %}\n<style>\n.scene-wrapper { width: 100%; height: auto; margin-bottom: 2em; background-color: #232520; }\n.scene { position: relative; width: 100%; max-width: 300px; margin: 0 auto; }\n.scene > * { position: absolute; }\n.scene > *:nth-child(1) { opacity: .15; }\n.scene > *:nth-child(2) { opacity: .3; }\n.scene > *:nth-child(3) { opacity: .45; }\n.scene > *:nth-child(4) { opacity: .6; }\n.scene > *:nth-child(5) { opacity: .75; }\n.scene > *:nth-child(6) { opacity: .9; }\n.scene img { margin: 0; }\n</style>\n\n<div class=\"scene-wrapper\">\n\t<div class=\"scene\">\n\t\t<div data-depth=\"1.0\"><img src=\"/images/parallax/layer1.png\"></div>\n\t\t<div data-depth=\"0.8\"><img src=\"/images/parallax/layer2.png\"></div>\n\t\t<div data-depth=\"0.6\"><img src=\"/images/parallax/layer3.png\"></div>\n\t\t<div data-depth=\"0.4\"><img src=\"/images/parallax/layer4.png\"></div>\n\t\t<div data-depth=\"0.2\"><img src=\"/images/parallax/layer5.png\"></div>\n\t\t<div data-depth=\"0.0\"><img src=\"/images/parallax/layer6.png\"></div>\n\t</div>\n</div>\n{% endraw %}\n\n网页中的视差效果是指，页面中不同元素以不同的速度运动，形成z方向上接近3D的视觉感受。这里是响应鼠标位置的视差效果的具体实现，运动元素各自设置不同的深度值，对鼠标位置作不同程度的响应。\n\nHTML结构如下，运动元素用data-depth设置不同的深度值。\n\n``` HTML\n<div class=\"scene\">\n    <div data-depth=\"1.0\"><img src=\"layer1.png\"></div>\n    <div data-depth=\"0.8\"><img src=\"layer2.png\"></div>\n    <!-- 省略... -->\n    <div data-depth=\"0.0\"><img src=\"layer6.png\"></div>\n</div>\n```\n\n视差引擎类，指定运动场景，设置响应鼠标的窗口尺寸，绑定事件，使用requestAnimationFrame更新动画。\n\n``` JavaScript\nclass Parallax {\n    constructor(element, options) {\n        this.element = element\n        this.elementWidth = 0\n        this.elementHeight = 0\n        this.depthsX = []\n        this.depthsY = []\n\n        const DEFAULTS = {\n            frictionX: 0.1,\n            frictionY: 0.1,\n            originX: 0.5,\n            originY: 0.5\n        }\n\n        Object.assign(this, DEFAULTS, options)\n\n        this.inputX = 0\n        this.inputY = 0\n\n        this.velocityX = 0\n        this.velocityY = 0\n\n        this.windowWidth = 0\n        this.windowHeight = 0\n        this.windowCenterX = 0\n        this.windowCenterY = 0\n        this.windowRadiusX = 0\n        this.windowRadiusY = 0\n\n        this.raf = null\n\n        this.onWindowResize = this.onWindowResize.bind(this)\n        this.onMouseMove = this.onMouseMove.bind(this)\n        this.onAnimationFrame = this.onAnimationFrame.bind(this)\n\n        this.initialise()\n    }\n\n    initialise() {\n        helpers.accelerate(this.element)\n\n        let style = window.getComputedStyle(this.element)\n        if (style.getPropertyValue('position') === 'static') {\n            this.element.style.position = 'relative'\n        }\n        this.element.style.pointerEvents = 'none'\n\n        this.updateLayers()\n        window.onload = () => {\n            this.updateDimensions()\n        }\n\n        window.addEventListener('resize', this.onWindowResize)\n        window.addEventListener('mousemove', this.onMouseMove)\n        this.raf = requestAnimationFrame(this.onAnimationFrame)\n    }\n\n    updateLayers() {\n        this.layers = this.element.children\n\n        for (let index = 0; index < this.layers.length; index++) {\n            let layer = this.layers[index]\n\n            helpers.accelerate(layer)\n\n            layer.style.position = index ? 'absolute' : 'relative'\n            layer.style.display = 'block'\n            layer.style.left = 0\n            layer.style.top = 0\n\n            let depth = helpers.data(layer, 'depth') || 0\n            this.depthsX.push(helpers.data(layer, 'depth-x') || depth)\n            this.depthsY.push(helpers.data(layer, 'depth-y') || depth)\n        }\n    }\n\n    updateDimensions() {\n        this.windowWidth = window.innerWidth\n        this.windowHeight = window.innerHeight\n        this.windowCenterX = this.windowWidth * this.originX\n        this.windowCenterY = this.windowHeight * this.originY\n        this.windowRadiusX = Math.max(this.windowCenterX, this.windowWidth - this.windowCenterX)\n        this.windowRadiusY = Math.max(this.windowCenterY, this.windowHeight - this.windowCenterY)\n\n        const bounds = this.element.getBoundingClientRect()\n        this.elementWidth = bounds.width\n        this.elementHeight = bounds.height\n    }\n\n    setPosition(element, x, y) {\n        x = x.toFixed(1) + 'px'\n        y = y.toFixed(1) + 'px'\n        helpers.css(element, 'transform', 'translate3d(' + x + ',' + y + ',0)')\n    }\n\n    onWindowResize() {\n        this.updateDimensions()\n    }\n\n    onMouseMove(event) {\n        let clientX = event.clientX,\n            clientY = event.clientY\n\n        if (this.windowRadiusX && this.windowRadiusY) {\n            this.inputX = (clientX - this.windowCenterX) / this.windowRadiusX\n            this.inputY = (clientY - this.windowCenterY) / this.windowRadiusY\n        }\n    }\n\n    onAnimationFrame() {\n        this.velocityX += (this.inputX * this.elementWidth * 0.1 - this.velocityX) * this.frictionX\n        this.velocityY += (this.inputY * this.elementHeight * 0.1 - this.velocityY) * this.frictionY\n        for (let index = 0; index < this.layers.length; index++) {\n            let layer = this.layers[index],\n                xOffset = -this.velocityX * this.depthsX[index],\n                yOffset = -this.velocityY * this.depthsY[index]\n            this.setPosition(layer, xOffset, yOffset)\n        }\n        this.raf = requestAnimationFrame(this.onAnimationFrame)\n    }\n}\n```\n\n实例化，指定响应场景元素。\n\n``` JavaScript\nconst scene = document.querySelector('.scene')\nnew Parallax(scene)\n```\n\n除了PC端的鼠标事件，也可监听移动设备方向和运动相关的事件deviceorientation和devicemotion。\n\n<cite>参考：https://github.com/wagerfield/parallax</cite>\n\n\n{% raw %}\n<script>\nconst helpers = {\n\tpropertyCache: {},\n\n\tdata(element, name) {\n\t\treturn parseFloat(element.getAttribute('data-' + name) || 0)\n\t},\n\n\tcamelCase(value) {\n\t\treturn value.replace(/-+(.)?/g, (match, character) => {\n\t\t\treturn character ? character.toUpperCase() : ''\n\t\t})\n\t},\n\n\tcss(element, property, value) {\n\t\tconst vendors = [null, 'webkit', 'Moz', 'O', 'ms']\n\t\tlet jsProperty = helpers.propertyCache[property]\n\t\tif (!jsProperty) {\n\t\t\tfor (let i = 0, l = vendors.length; i < l; i++) {\n\t\t\t\tif (vendors[i] !== null) {\n\t\t\t\t\tjsProperty = helpers.camelCase(vendors[i] + '-' + property)\n\t\t\t\t} else {\n\t\t\t\t\tjsProperty = property\n\t\t\t\t}\n\t\t\t\tif (element.style[jsProperty] !== undefined) {\n\t\t\t\t\thelpers.propertyCache[property] = jsProperty\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telement.style[jsProperty] = value\n\t},\n\n\taccelerate(element) {\n\t\thelpers.css(element, 'transform', 'translate3d(0,0,0)')\n\t\thelpers.css(element, 'transform-style', 'preserve-3d')\n\t\thelpers.css(element, 'backface-visibility', 'hidden')\n\t}\n}\n\n\nclass Parallax {\n\tconstructor(element, options) {\n\t\tthis.element = element\n\t\tthis.elementWidth = 0\n\t\tthis.elementHeight = 0\n\t\tthis.depthsX = []\n\t\tthis.depthsY = []\n\n\t\tconst DEFAULTS = {\n\t\t\tfrictionX: 0.1,\n\t\t\tfrictionY: 0.1,\n\t\t\toriginX: 0.5,\n\t\t\toriginY: 0.5\n\t\t}\n\n\t\tObject.assign(this, DEFAULTS, options)\n\n\t\tthis.inputX = 0\n\t\tthis.inputY = 0\n\n\t\tthis.velocityX = 0\n\t\tthis.velocityY = 0\n\n\t\tthis.windowWidth = 0\n\t\tthis.windowHeight = 0\n\t\tthis.windowCenterX = 0\n\t\tthis.windowCenterY = 0\n\t\tthis.windowRadiusX = 0\n\t\tthis.windowRadiusY = 0\n\n\t\tthis.raf = null\n\n\t\tthis.onWindowResize = this.onWindowResize.bind(this)\n\t\tthis.onMouseMove = this.onMouseMove.bind(this)\n\t\tthis.onAnimationFrame = this.onAnimationFrame.bind(this)\n\n\t\tthis.initialise()\n\t}\n\n\tinitialise() {\n\t\thelpers.accelerate(this.element)\n\n\t\tlet style = window.getComputedStyle(this.element)\n\t\tif (style.getPropertyValue('position') === 'static') {\n\t\t\tthis.element.style.position = 'relative'\n\t\t}\n\t\tthis.element.style.pointerEvents = 'none'\n\n\t\tthis.updateLayers()\n\t\twindow.onload = () => {\n\t\t\tthis.updateDimensions()\n\t\t}\n\n\t\twindow.addEventListener('resize', this.onWindowResize)\n\t\twindow.addEventListener('mousemove', this.onMouseMove)\n\t\tthis.raf = requestAnimationFrame(this.onAnimationFrame)\n\t}\n\n\tupdateLayers() {\n\t\tthis.layers = this.element.children\n\n\t\tfor (let index = 0; index < this.layers.length; index++) {\n\t\t\tlet layer = this.layers[index]\n\n\t\t\thelpers.accelerate(layer)\n\n\t\t\tlayer.style.position = index ? 'absolute' : 'relative'\n\t\t\tlayer.style.display = 'block'\n\t\t\tlayer.style.left = 0\n\t\t\tlayer.style.top = 0\n\n\t\t\tlet depth = helpers.data(layer, 'depth') || 0\n\t\t\tthis.depthsX.push(helpers.data(layer, 'depth-x') || depth)\n\t\t\tthis.depthsY.push(helpers.data(layer, 'depth-y') || depth)\n\t\t}\n\t}\n\n\tupdateDimensions() {\n\t\tthis.windowWidth = window.innerWidth\n\t\tthis.windowHeight = window.innerHeight\n\t\tthis.windowCenterX = this.windowWidth * this.originX\n\t\tthis.windowCenterY = this.windowHeight * this.originY\n\t\tthis.windowRadiusX = Math.max(this.windowCenterX, this.windowWidth - this.windowCenterX)\n\t\tthis.windowRadiusY = Math.max(this.windowCenterY, this.windowHeight - this.windowCenterY)\n\n\t\tconst bounds = this.element.getBoundingClientRect()\n\t\tthis.elementWidth = bounds.width\n\t\tthis.elementHeight = bounds.height\n\t}\n\n\tsetPosition(element, x, y) {\n\t\tx = x.toFixed(1) + 'px'\n\t\ty = y.toFixed(1) + 'px'\n\t\thelpers.css(element, 'transform', 'translate3d(' + x + ',' + y + ',0)')\n\t}\n\n\tonWindowResize() {\n\t\tthis.updateDimensions()\n\t}\n\n\tonMouseMove(event) {\n\t\tlet clientX = event.clientX,\n\t\t\tclientY = event.clientY\n\n\t\tif (this.windowRadiusX && this.windowRadiusY) {\n\t\t\tthis.inputX = (clientX - this.windowCenterX) / this.windowRadiusX\n\t\t\tthis.inputY = (clientY - this.windowCenterY) / this.windowRadiusY\n\t\t}\n\t}\n\n\tonAnimationFrame() {\n\t\tthis.velocityX += (this.inputX * this.elementWidth * 0.1 - this.velocityX) * this.frictionX\n\t\tthis.velocityY += (this.inputY * this.elementHeight * 0.1 - this.velocityY) * this.frictionY\n\t\tfor (let index = 0; index < this.layers.length; index++) {\n\t\t\tlet layer = this.layers[index],\n\t\t\t\txOffset = -this.velocityX * this.depthsX[index],\n\t\t\t\tyOffset = -this.velocityY * this.depthsY[index]\n\t\t\tthis.setPosition(layer, xOffset, yOffset)\n\t\t}\n\t\tthis.raf = requestAnimationFrame(this.onAnimationFrame)\n\t}\n}\n\n\nconst scene = document.querySelector('.scene')\nnew Parallax(scene)\n</script>\n{% endraw %}\n","source":"_posts/parallax.md","raw":"---\ntitle: 响应鼠标位置的parallax视差效果\ndate: 2019-07-09 00:00:00\ncategories: Uncategorized\nkeywords: 视差, parallax.js\ndescription: 响应鼠标位置的视差效果的具体实现，运动元素各自设置不同的深度值，对鼠标位置作不同程度的响应\n---\n\n{% raw %}\n<style>\n.scene-wrapper { width: 100%; height: auto; margin-bottom: 2em; background-color: #232520; }\n.scene { position: relative; width: 100%; max-width: 300px; margin: 0 auto; }\n.scene > * { position: absolute; }\n.scene > *:nth-child(1) { opacity: .15; }\n.scene > *:nth-child(2) { opacity: .3; }\n.scene > *:nth-child(3) { opacity: .45; }\n.scene > *:nth-child(4) { opacity: .6; }\n.scene > *:nth-child(5) { opacity: .75; }\n.scene > *:nth-child(6) { opacity: .9; }\n.scene img { margin: 0; }\n</style>\n\n<div class=\"scene-wrapper\">\n\t<div class=\"scene\">\n\t\t<div data-depth=\"1.0\"><img src=\"/images/parallax/layer1.png\"></div>\n\t\t<div data-depth=\"0.8\"><img src=\"/images/parallax/layer2.png\"></div>\n\t\t<div data-depth=\"0.6\"><img src=\"/images/parallax/layer3.png\"></div>\n\t\t<div data-depth=\"0.4\"><img src=\"/images/parallax/layer4.png\"></div>\n\t\t<div data-depth=\"0.2\"><img src=\"/images/parallax/layer5.png\"></div>\n\t\t<div data-depth=\"0.0\"><img src=\"/images/parallax/layer6.png\"></div>\n\t</div>\n</div>\n{% endraw %}\n\n网页中的视差效果是指，页面中不同元素以不同的速度运动，形成z方向上接近3D的视觉感受。这里是响应鼠标位置的视差效果的具体实现，运动元素各自设置不同的深度值，对鼠标位置作不同程度的响应。\n\nHTML结构如下，运动元素用data-depth设置不同的深度值。\n\n``` HTML\n<div class=\"scene\">\n    <div data-depth=\"1.0\"><img src=\"layer1.png\"></div>\n    <div data-depth=\"0.8\"><img src=\"layer2.png\"></div>\n    <!-- 省略... -->\n    <div data-depth=\"0.0\"><img src=\"layer6.png\"></div>\n</div>\n```\n\n视差引擎类，指定运动场景，设置响应鼠标的窗口尺寸，绑定事件，使用requestAnimationFrame更新动画。\n\n``` JavaScript\nclass Parallax {\n    constructor(element, options) {\n        this.element = element\n        this.elementWidth = 0\n        this.elementHeight = 0\n        this.depthsX = []\n        this.depthsY = []\n\n        const DEFAULTS = {\n            frictionX: 0.1,\n            frictionY: 0.1,\n            originX: 0.5,\n            originY: 0.5\n        }\n\n        Object.assign(this, DEFAULTS, options)\n\n        this.inputX = 0\n        this.inputY = 0\n\n        this.velocityX = 0\n        this.velocityY = 0\n\n        this.windowWidth = 0\n        this.windowHeight = 0\n        this.windowCenterX = 0\n        this.windowCenterY = 0\n        this.windowRadiusX = 0\n        this.windowRadiusY = 0\n\n        this.raf = null\n\n        this.onWindowResize = this.onWindowResize.bind(this)\n        this.onMouseMove = this.onMouseMove.bind(this)\n        this.onAnimationFrame = this.onAnimationFrame.bind(this)\n\n        this.initialise()\n    }\n\n    initialise() {\n        helpers.accelerate(this.element)\n\n        let style = window.getComputedStyle(this.element)\n        if (style.getPropertyValue('position') === 'static') {\n            this.element.style.position = 'relative'\n        }\n        this.element.style.pointerEvents = 'none'\n\n        this.updateLayers()\n        window.onload = () => {\n            this.updateDimensions()\n        }\n\n        window.addEventListener('resize', this.onWindowResize)\n        window.addEventListener('mousemove', this.onMouseMove)\n        this.raf = requestAnimationFrame(this.onAnimationFrame)\n    }\n\n    updateLayers() {\n        this.layers = this.element.children\n\n        for (let index = 0; index < this.layers.length; index++) {\n            let layer = this.layers[index]\n\n            helpers.accelerate(layer)\n\n            layer.style.position = index ? 'absolute' : 'relative'\n            layer.style.display = 'block'\n            layer.style.left = 0\n            layer.style.top = 0\n\n            let depth = helpers.data(layer, 'depth') || 0\n            this.depthsX.push(helpers.data(layer, 'depth-x') || depth)\n            this.depthsY.push(helpers.data(layer, 'depth-y') || depth)\n        }\n    }\n\n    updateDimensions() {\n        this.windowWidth = window.innerWidth\n        this.windowHeight = window.innerHeight\n        this.windowCenterX = this.windowWidth * this.originX\n        this.windowCenterY = this.windowHeight * this.originY\n        this.windowRadiusX = Math.max(this.windowCenterX, this.windowWidth - this.windowCenterX)\n        this.windowRadiusY = Math.max(this.windowCenterY, this.windowHeight - this.windowCenterY)\n\n        const bounds = this.element.getBoundingClientRect()\n        this.elementWidth = bounds.width\n        this.elementHeight = bounds.height\n    }\n\n    setPosition(element, x, y) {\n        x = x.toFixed(1) + 'px'\n        y = y.toFixed(1) + 'px'\n        helpers.css(element, 'transform', 'translate3d(' + x + ',' + y + ',0)')\n    }\n\n    onWindowResize() {\n        this.updateDimensions()\n    }\n\n    onMouseMove(event) {\n        let clientX = event.clientX,\n            clientY = event.clientY\n\n        if (this.windowRadiusX && this.windowRadiusY) {\n            this.inputX = (clientX - this.windowCenterX) / this.windowRadiusX\n            this.inputY = (clientY - this.windowCenterY) / this.windowRadiusY\n        }\n    }\n\n    onAnimationFrame() {\n        this.velocityX += (this.inputX * this.elementWidth * 0.1 - this.velocityX) * this.frictionX\n        this.velocityY += (this.inputY * this.elementHeight * 0.1 - this.velocityY) * this.frictionY\n        for (let index = 0; index < this.layers.length; index++) {\n            let layer = this.layers[index],\n                xOffset = -this.velocityX * this.depthsX[index],\n                yOffset = -this.velocityY * this.depthsY[index]\n            this.setPosition(layer, xOffset, yOffset)\n        }\n        this.raf = requestAnimationFrame(this.onAnimationFrame)\n    }\n}\n```\n\n实例化，指定响应场景元素。\n\n``` JavaScript\nconst scene = document.querySelector('.scene')\nnew Parallax(scene)\n```\n\n除了PC端的鼠标事件，也可监听移动设备方向和运动相关的事件deviceorientation和devicemotion。\n\n<cite>参考：https://github.com/wagerfield/parallax</cite>\n\n\n{% raw %}\n<script>\nconst helpers = {\n\tpropertyCache: {},\n\n\tdata(element, name) {\n\t\treturn parseFloat(element.getAttribute('data-' + name) || 0)\n\t},\n\n\tcamelCase(value) {\n\t\treturn value.replace(/-+(.)?/g, (match, character) => {\n\t\t\treturn character ? character.toUpperCase() : ''\n\t\t})\n\t},\n\n\tcss(element, property, value) {\n\t\tconst vendors = [null, 'webkit', 'Moz', 'O', 'ms']\n\t\tlet jsProperty = helpers.propertyCache[property]\n\t\tif (!jsProperty) {\n\t\t\tfor (let i = 0, l = vendors.length; i < l; i++) {\n\t\t\t\tif (vendors[i] !== null) {\n\t\t\t\t\tjsProperty = helpers.camelCase(vendors[i] + '-' + property)\n\t\t\t\t} else {\n\t\t\t\t\tjsProperty = property\n\t\t\t\t}\n\t\t\t\tif (element.style[jsProperty] !== undefined) {\n\t\t\t\t\thelpers.propertyCache[property] = jsProperty\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telement.style[jsProperty] = value\n\t},\n\n\taccelerate(element) {\n\t\thelpers.css(element, 'transform', 'translate3d(0,0,0)')\n\t\thelpers.css(element, 'transform-style', 'preserve-3d')\n\t\thelpers.css(element, 'backface-visibility', 'hidden')\n\t}\n}\n\n\nclass Parallax {\n\tconstructor(element, options) {\n\t\tthis.element = element\n\t\tthis.elementWidth = 0\n\t\tthis.elementHeight = 0\n\t\tthis.depthsX = []\n\t\tthis.depthsY = []\n\n\t\tconst DEFAULTS = {\n\t\t\tfrictionX: 0.1,\n\t\t\tfrictionY: 0.1,\n\t\t\toriginX: 0.5,\n\t\t\toriginY: 0.5\n\t\t}\n\n\t\tObject.assign(this, DEFAULTS, options)\n\n\t\tthis.inputX = 0\n\t\tthis.inputY = 0\n\n\t\tthis.velocityX = 0\n\t\tthis.velocityY = 0\n\n\t\tthis.windowWidth = 0\n\t\tthis.windowHeight = 0\n\t\tthis.windowCenterX = 0\n\t\tthis.windowCenterY = 0\n\t\tthis.windowRadiusX = 0\n\t\tthis.windowRadiusY = 0\n\n\t\tthis.raf = null\n\n\t\tthis.onWindowResize = this.onWindowResize.bind(this)\n\t\tthis.onMouseMove = this.onMouseMove.bind(this)\n\t\tthis.onAnimationFrame = this.onAnimationFrame.bind(this)\n\n\t\tthis.initialise()\n\t}\n\n\tinitialise() {\n\t\thelpers.accelerate(this.element)\n\n\t\tlet style = window.getComputedStyle(this.element)\n\t\tif (style.getPropertyValue('position') === 'static') {\n\t\t\tthis.element.style.position = 'relative'\n\t\t}\n\t\tthis.element.style.pointerEvents = 'none'\n\n\t\tthis.updateLayers()\n\t\twindow.onload = () => {\n\t\t\tthis.updateDimensions()\n\t\t}\n\n\t\twindow.addEventListener('resize', this.onWindowResize)\n\t\twindow.addEventListener('mousemove', this.onMouseMove)\n\t\tthis.raf = requestAnimationFrame(this.onAnimationFrame)\n\t}\n\n\tupdateLayers() {\n\t\tthis.layers = this.element.children\n\n\t\tfor (let index = 0; index < this.layers.length; index++) {\n\t\t\tlet layer = this.layers[index]\n\n\t\t\thelpers.accelerate(layer)\n\n\t\t\tlayer.style.position = index ? 'absolute' : 'relative'\n\t\t\tlayer.style.display = 'block'\n\t\t\tlayer.style.left = 0\n\t\t\tlayer.style.top = 0\n\n\t\t\tlet depth = helpers.data(layer, 'depth') || 0\n\t\t\tthis.depthsX.push(helpers.data(layer, 'depth-x') || depth)\n\t\t\tthis.depthsY.push(helpers.data(layer, 'depth-y') || depth)\n\t\t}\n\t}\n\n\tupdateDimensions() {\n\t\tthis.windowWidth = window.innerWidth\n\t\tthis.windowHeight = window.innerHeight\n\t\tthis.windowCenterX = this.windowWidth * this.originX\n\t\tthis.windowCenterY = this.windowHeight * this.originY\n\t\tthis.windowRadiusX = Math.max(this.windowCenterX, this.windowWidth - this.windowCenterX)\n\t\tthis.windowRadiusY = Math.max(this.windowCenterY, this.windowHeight - this.windowCenterY)\n\n\t\tconst bounds = this.element.getBoundingClientRect()\n\t\tthis.elementWidth = bounds.width\n\t\tthis.elementHeight = bounds.height\n\t}\n\n\tsetPosition(element, x, y) {\n\t\tx = x.toFixed(1) + 'px'\n\t\ty = y.toFixed(1) + 'px'\n\t\thelpers.css(element, 'transform', 'translate3d(' + x + ',' + y + ',0)')\n\t}\n\n\tonWindowResize() {\n\t\tthis.updateDimensions()\n\t}\n\n\tonMouseMove(event) {\n\t\tlet clientX = event.clientX,\n\t\t\tclientY = event.clientY\n\n\t\tif (this.windowRadiusX && this.windowRadiusY) {\n\t\t\tthis.inputX = (clientX - this.windowCenterX) / this.windowRadiusX\n\t\t\tthis.inputY = (clientY - this.windowCenterY) / this.windowRadiusY\n\t\t}\n\t}\n\n\tonAnimationFrame() {\n\t\tthis.velocityX += (this.inputX * this.elementWidth * 0.1 - this.velocityX) * this.frictionX\n\t\tthis.velocityY += (this.inputY * this.elementHeight * 0.1 - this.velocityY) * this.frictionY\n\t\tfor (let index = 0; index < this.layers.length; index++) {\n\t\t\tlet layer = this.layers[index],\n\t\t\t\txOffset = -this.velocityX * this.depthsX[index],\n\t\t\t\tyOffset = -this.velocityY * this.depthsY[index]\n\t\t\tthis.setPosition(layer, xOffset, yOffset)\n\t\t}\n\t\tthis.raf = requestAnimationFrame(this.onAnimationFrame)\n\t}\n}\n\n\nconst scene = document.querySelector('.scene')\nnew Parallax(scene)\n</script>\n{% endraw %}\n","slug":"parallax","published":1,"updated":"2019-07-09T06:05:01.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160en07003j3a8ipoit4nca","content":"\n<style>\n.scene-wrapper { width: 100%; height: auto; margin-bottom: 2em; background-color: #232520; }\n.scene { position: relative; width: 100%; max-width: 300px; margin: 0 auto; }\n.scene > * { position: absolute; }\n.scene > *:nth-child(1) { opacity: .15; }\n.scene > *:nth-child(2) { opacity: .3; }\n.scene > *:nth-child(3) { opacity: .45; }\n.scene > *:nth-child(4) { opacity: .6; }\n.scene > *:nth-child(5) { opacity: .75; }\n.scene > *:nth-child(6) { opacity: .9; }\n.scene img { margin: 0; }\n</style>\n\n<div class=\"scene-wrapper\">\n\t<div class=\"scene\">\n\t\t<div data-depth=\"1.0\"><img src=\"/images/parallax/layer1.png\"></div>\n\t\t<div data-depth=\"0.8\"><img src=\"/images/parallax/layer2.png\"></div>\n\t\t<div data-depth=\"0.6\"><img src=\"/images/parallax/layer3.png\"></div>\n\t\t<div data-depth=\"0.4\"><img src=\"/images/parallax/layer4.png\"></div>\n\t\t<div data-depth=\"0.2\"><img src=\"/images/parallax/layer5.png\"></div>\n\t\t<div data-depth=\"0.0\"><img src=\"/images/parallax/layer6.png\"></div>\n\t</div>\n</div>\n\n<p>网页中的视差效果是指，页面中不同元素以不同的速度运动，形成z方向上接近3D的视觉感受。这里是响应鼠标位置的视差效果的具体实现，运动元素各自设置不同的深度值，对鼠标位置作不同程度的响应。</p>\n<p>HTML结构如下，运动元素用data-depth设置不同的深度值。</p>\n<figure class=\"highlight html\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"scene\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-depth</span>=<span class=\"string\">\"1.0\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"layer1.png\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-depth</span>=<span class=\"string\">\"0.8\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"layer2.png\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 省略... --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-depth</span>=<span class=\"string\">\"0.0\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"layer6.png\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></figure>\n<p>视差引擎类，指定运动场景，设置响应鼠标的窗口尺寸，绑定事件，使用requestAnimationFrame更新动画。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Parallax</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(element, options) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.element = element</div><div class=\"line\">        <span class=\"keyword\">this</span>.elementWidth = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.elementHeight = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.depthsX = []</div><div class=\"line\">        <span class=\"keyword\">this</span>.depthsY = []</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> DEFAULTS = &#123;</div><div class=\"line\">            frictionX: <span class=\"number\">0.1</span>,</div><div class=\"line\">            frictionY: <span class=\"number\">0.1</span>,</div><div class=\"line\">            originX: <span class=\"number\">0.5</span>,</div><div class=\"line\">            originY: <span class=\"number\">0.5</span></div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"built_in\">Object</span>.assign(<span class=\"keyword\">this</span>, DEFAULTS, options)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.inputX = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.inputY = <span class=\"number\">0</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.velocityX = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.velocityY = <span class=\"number\">0</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowWidth = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowHeight = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowCenterX = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowCenterY = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowRadiusX = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowRadiusY = <span class=\"number\">0</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.raf = <span class=\"literal\">null</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.onWindowResize = <span class=\"keyword\">this</span>.onWindowResize.bind(<span class=\"keyword\">this</span>)</div><div class=\"line\">        <span class=\"keyword\">this</span>.onMouseMove = <span class=\"keyword\">this</span>.onMouseMove.bind(<span class=\"keyword\">this</span>)</div><div class=\"line\">        <span class=\"keyword\">this</span>.onAnimationFrame = <span class=\"keyword\">this</span>.onAnimationFrame.bind(<span class=\"keyword\">this</span>)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.initialise()</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    initialise() &#123;</div><div class=\"line\">        helpers.accelerate(<span class=\"keyword\">this</span>.element)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">let</span> style = <span class=\"built_in\">window</span>.getComputedStyle(<span class=\"keyword\">this</span>.element)</div><div class=\"line\">        <span class=\"keyword\">if</span> (style.getPropertyValue(<span class=\"string\">'position'</span>) === <span class=\"string\">'static'</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.element.style.position = <span class=\"string\">'relative'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.element.style.pointerEvents = <span class=\"string\">'none'</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.updateLayers()</div><div class=\"line\">        <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.updateDimensions()</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'resize'</span>, <span class=\"keyword\">this</span>.onWindowResize)</div><div class=\"line\">        <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'mousemove'</span>, <span class=\"keyword\">this</span>.onMouseMove)</div><div class=\"line\">        <span class=\"keyword\">this</span>.raf = requestAnimationFrame(<span class=\"keyword\">this</span>.onAnimationFrame)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    updateLayers() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.layers = <span class=\"keyword\">this</span>.element.children</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>; index &lt; <span class=\"keyword\">this</span>.layers.length; index++) &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> layer = <span class=\"keyword\">this</span>.layers[index]</div><div class=\"line\"><br></div><div class=\"line\">            helpers.accelerate(layer)</div><div class=\"line\"><br></div><div class=\"line\">            layer.style.position = index ? <span class=\"string\">'absolute'</span> : <span class=\"string\">'relative'</span></div><div class=\"line\">            layer.style.display = <span class=\"string\">'block'</span></div><div class=\"line\">            layer.style.left = <span class=\"number\">0</span></div><div class=\"line\">            layer.style.top = <span class=\"number\">0</span></div><div class=\"line\"><br></div><div class=\"line\">            <span class=\"keyword\">let</span> depth = helpers.data(layer, <span class=\"string\">'depth'</span>) || <span class=\"number\">0</span></div><div class=\"line\">            <span class=\"keyword\">this</span>.depthsX.push(helpers.data(layer, <span class=\"string\">'depth-x'</span>) || depth)</div><div class=\"line\">            <span class=\"keyword\">this</span>.depthsY.push(helpers.data(layer, <span class=\"string\">'depth-y'</span>) || depth)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    updateDimensions() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowWidth = <span class=\"built_in\">window</span>.innerWidth</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowHeight = <span class=\"built_in\">window</span>.innerHeight</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowCenterX = <span class=\"keyword\">this</span>.windowWidth * <span class=\"keyword\">this</span>.originX</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowCenterY = <span class=\"keyword\">this</span>.windowHeight * <span class=\"keyword\">this</span>.originY</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowRadiusX = <span class=\"built_in\">Math</span>.max(<span class=\"keyword\">this</span>.windowCenterX, <span class=\"keyword\">this</span>.windowWidth - <span class=\"keyword\">this</span>.windowCenterX)</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowRadiusY = <span class=\"built_in\">Math</span>.max(<span class=\"keyword\">this</span>.windowCenterY, <span class=\"keyword\">this</span>.windowHeight - <span class=\"keyword\">this</span>.windowCenterY)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> bounds = <span class=\"keyword\">this</span>.element.getBoundingClientRect()</div><div class=\"line\">        <span class=\"keyword\">this</span>.elementWidth = bounds.width</div><div class=\"line\">        <span class=\"keyword\">this</span>.elementHeight = bounds.height</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    setPosition(element, x, y) &#123;</div><div class=\"line\">        x = x.toFixed(<span class=\"number\">1</span>) + <span class=\"string\">'px'</span></div><div class=\"line\">        y = y.toFixed(<span class=\"number\">1</span>) + <span class=\"string\">'px'</span></div><div class=\"line\">        helpers.css(element, <span class=\"string\">'transform'</span>, <span class=\"string\">'translate3d('</span> + x + <span class=\"string\">','</span> + y + <span class=\"string\">',0)'</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    onWindowResize() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.updateDimensions()</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    onMouseMove(event) &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> clientX = event.clientX,</div><div class=\"line\">            clientY = event.clientY</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.windowRadiusX &amp;&amp; <span class=\"keyword\">this</span>.windowRadiusY) &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.inputX = (clientX - <span class=\"keyword\">this</span>.windowCenterX) / <span class=\"keyword\">this</span>.windowRadiusX</div><div class=\"line\">            <span class=\"keyword\">this</span>.inputY = (clientY - <span class=\"keyword\">this</span>.windowCenterY) / <span class=\"keyword\">this</span>.windowRadiusY</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    onAnimationFrame() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.velocityX += (<span class=\"keyword\">this</span>.inputX * <span class=\"keyword\">this</span>.elementWidth * <span class=\"number\">0.1</span> - <span class=\"keyword\">this</span>.velocityX) * <span class=\"keyword\">this</span>.frictionX</div><div class=\"line\">        <span class=\"keyword\">this</span>.velocityY += (<span class=\"keyword\">this</span>.inputY * <span class=\"keyword\">this</span>.elementHeight * <span class=\"number\">0.1</span> - <span class=\"keyword\">this</span>.velocityY) * <span class=\"keyword\">this</span>.frictionY</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>; index &lt; <span class=\"keyword\">this</span>.layers.length; index++) &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> layer = <span class=\"keyword\">this</span>.layers[index],</div><div class=\"line\">                xOffset = -<span class=\"keyword\">this</span>.velocityX * <span class=\"keyword\">this</span>.depthsX[index],</div><div class=\"line\">                yOffset = -<span class=\"keyword\">this</span>.velocityY * <span class=\"keyword\">this</span>.depthsY[index]</div><div class=\"line\">            <span class=\"keyword\">this</span>.setPosition(layer, xOffset, yOffset)</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.raf = requestAnimationFrame(<span class=\"keyword\">this</span>.onAnimationFrame)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>实例化，指定响应场景元素。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> scene = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.scene'</span>)</div><div class=\"line\"><span class=\"keyword\">new</span> Parallax(scene)</div></pre></figure>\n<p>除了PC端的鼠标事件，也可监听移动设备方向和运动相关的事件deviceorientation和devicemotion。</p>\n<p><cite>参考：<a href=\"https://github.com/wagerfield/parallax\" target=\"_blank\" rel=\"noopener\">https://github.com/wagerfield/parallax</a></cite></p>\n\n<script>\nconst helpers = {\n\tpropertyCache: {},\n\n\tdata(element, name) {\n\t\treturn parseFloat(element.getAttribute('data-' + name) || 0)\n\t},\n\n\tcamelCase(value) {\n\t\treturn value.replace(/-+(.)?/g, (match, character) => {\n\t\t\treturn character ? character.toUpperCase() : ''\n\t\t})\n\t},\n\n\tcss(element, property, value) {\n\t\tconst vendors = [null, 'webkit', 'Moz', 'O', 'ms']\n\t\tlet jsProperty = helpers.propertyCache[property]\n\t\tif (!jsProperty) {\n\t\t\tfor (let i = 0, l = vendors.length; i < l; i++) {\n\t\t\t\tif (vendors[i] !== null) {\n\t\t\t\t\tjsProperty = helpers.camelCase(vendors[i] + '-' + property)\n\t\t\t\t} else {\n\t\t\t\t\tjsProperty = property\n\t\t\t\t}\n\t\t\t\tif (element.style[jsProperty] !== undefined) {\n\t\t\t\t\thelpers.propertyCache[property] = jsProperty\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telement.style[jsProperty] = value\n\t},\n\n\taccelerate(element) {\n\t\thelpers.css(element, 'transform', 'translate3d(0,0,0)')\n\t\thelpers.css(element, 'transform-style', 'preserve-3d')\n\t\thelpers.css(element, 'backface-visibility', 'hidden')\n\t}\n}\n\n\nclass Parallax {\n\tconstructor(element, options) {\n\t\tthis.element = element\n\t\tthis.elementWidth = 0\n\t\tthis.elementHeight = 0\n\t\tthis.depthsX = []\n\t\tthis.depthsY = []\n\n\t\tconst DEFAULTS = {\n\t\t\tfrictionX: 0.1,\n\t\t\tfrictionY: 0.1,\n\t\t\toriginX: 0.5,\n\t\t\toriginY: 0.5\n\t\t}\n\n\t\tObject.assign(this, DEFAULTS, options)\n\n\t\tthis.inputX = 0\n\t\tthis.inputY = 0\n\n\t\tthis.velocityX = 0\n\t\tthis.velocityY = 0\n\n\t\tthis.windowWidth = 0\n\t\tthis.windowHeight = 0\n\t\tthis.windowCenterX = 0\n\t\tthis.windowCenterY = 0\n\t\tthis.windowRadiusX = 0\n\t\tthis.windowRadiusY = 0\n\n\t\tthis.raf = null\n\n\t\tthis.onWindowResize = this.onWindowResize.bind(this)\n\t\tthis.onMouseMove = this.onMouseMove.bind(this)\n\t\tthis.onAnimationFrame = this.onAnimationFrame.bind(this)\n\n\t\tthis.initialise()\n\t}\n\n\tinitialise() {\n\t\thelpers.accelerate(this.element)\n\n\t\tlet style = window.getComputedStyle(this.element)\n\t\tif (style.getPropertyValue('position') === 'static') {\n\t\t\tthis.element.style.position = 'relative'\n\t\t}\n\t\tthis.element.style.pointerEvents = 'none'\n\n\t\tthis.updateLayers()\n\t\twindow.onload = () => {\n\t\t\tthis.updateDimensions()\n\t\t}\n\n\t\twindow.addEventListener('resize', this.onWindowResize)\n\t\twindow.addEventListener('mousemove', this.onMouseMove)\n\t\tthis.raf = requestAnimationFrame(this.onAnimationFrame)\n\t}\n\n\tupdateLayers() {\n\t\tthis.layers = this.element.children\n\n\t\tfor (let index = 0; index < this.layers.length; index++) {\n\t\t\tlet layer = this.layers[index]\n\n\t\t\thelpers.accelerate(layer)\n\n\t\t\tlayer.style.position = index ? 'absolute' : 'relative'\n\t\t\tlayer.style.display = 'block'\n\t\t\tlayer.style.left = 0\n\t\t\tlayer.style.top = 0\n\n\t\t\tlet depth = helpers.data(layer, 'depth') || 0\n\t\t\tthis.depthsX.push(helpers.data(layer, 'depth-x') || depth)\n\t\t\tthis.depthsY.push(helpers.data(layer, 'depth-y') || depth)\n\t\t}\n\t}\n\n\tupdateDimensions() {\n\t\tthis.windowWidth = window.innerWidth\n\t\tthis.windowHeight = window.innerHeight\n\t\tthis.windowCenterX = this.windowWidth * this.originX\n\t\tthis.windowCenterY = this.windowHeight * this.originY\n\t\tthis.windowRadiusX = Math.max(this.windowCenterX, this.windowWidth - this.windowCenterX)\n\t\tthis.windowRadiusY = Math.max(this.windowCenterY, this.windowHeight - this.windowCenterY)\n\n\t\tconst bounds = this.element.getBoundingClientRect()\n\t\tthis.elementWidth = bounds.width\n\t\tthis.elementHeight = bounds.height\n\t}\n\n\tsetPosition(element, x, y) {\n\t\tx = x.toFixed(1) + 'px'\n\t\ty = y.toFixed(1) + 'px'\n\t\thelpers.css(element, 'transform', 'translate3d(' + x + ',' + y + ',0)')\n\t}\n\n\tonWindowResize() {\n\t\tthis.updateDimensions()\n\t}\n\n\tonMouseMove(event) {\n\t\tlet clientX = event.clientX,\n\t\t\tclientY = event.clientY\n\n\t\tif (this.windowRadiusX && this.windowRadiusY) {\n\t\t\tthis.inputX = (clientX - this.windowCenterX) / this.windowRadiusX\n\t\t\tthis.inputY = (clientY - this.windowCenterY) / this.windowRadiusY\n\t\t}\n\t}\n\n\tonAnimationFrame() {\n\t\tthis.velocityX += (this.inputX * this.elementWidth * 0.1 - this.velocityX) * this.frictionX\n\t\tthis.velocityY += (this.inputY * this.elementHeight * 0.1 - this.velocityY) * this.frictionY\n\t\tfor (let index = 0; index < this.layers.length; index++) {\n\t\t\tlet layer = this.layers[index],\n\t\t\t\txOffset = -this.velocityX * this.depthsX[index],\n\t\t\t\tyOffset = -this.velocityY * this.depthsY[index]\n\t\t\tthis.setPosition(layer, xOffset, yOffset)\n\t\t}\n\t\tthis.raf = requestAnimationFrame(this.onAnimationFrame)\n\t}\n}\n\n\nconst scene = document.querySelector('.scene')\nnew Parallax(scene)\n</script>\n\n","site":{"data":{}},"excerpt":"","more":"\n<style>\n.scene-wrapper { width: 100%; height: auto; margin-bottom: 2em; background-color: #232520; }\n.scene { position: relative; width: 100%; max-width: 300px; margin: 0 auto; }\n.scene > * { position: absolute; }\n.scene > *:nth-child(1) { opacity: .15; }\n.scene > *:nth-child(2) { opacity: .3; }\n.scene > *:nth-child(3) { opacity: .45; }\n.scene > *:nth-child(4) { opacity: .6; }\n.scene > *:nth-child(5) { opacity: .75; }\n.scene > *:nth-child(6) { opacity: .9; }\n.scene img { margin: 0; }\n</style>\n\n<div class=\"scene-wrapper\">\n\t<div class=\"scene\">\n\t\t<div data-depth=\"1.0\"><img src=\"/images/parallax/layer1.png\"></div>\n\t\t<div data-depth=\"0.8\"><img src=\"/images/parallax/layer2.png\"></div>\n\t\t<div data-depth=\"0.6\"><img src=\"/images/parallax/layer3.png\"></div>\n\t\t<div data-depth=\"0.4\"><img src=\"/images/parallax/layer4.png\"></div>\n\t\t<div data-depth=\"0.2\"><img src=\"/images/parallax/layer5.png\"></div>\n\t\t<div data-depth=\"0.0\"><img src=\"/images/parallax/layer6.png\"></div>\n\t</div>\n</div>\n\n<p>网页中的视差效果是指，页面中不同元素以不同的速度运动，形成z方向上接近3D的视觉感受。这里是响应鼠标位置的视差效果的具体实现，运动元素各自设置不同的深度值，对鼠标位置作不同程度的响应。</p>\n<p>HTML结构如下，运动元素用data-depth设置不同的深度值。</p>\n<figure class=\"highlight html\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"scene\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-depth</span>=<span class=\"string\">\"1.0\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"layer1.png\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-depth</span>=<span class=\"string\">\"0.8\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"layer2.png\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 省略... --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-depth</span>=<span class=\"string\">\"0.0\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"layer6.png\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></figure>\n<p>视差引擎类，指定运动场景，设置响应鼠标的窗口尺寸，绑定事件，使用requestAnimationFrame更新动画。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Parallax</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(element, options) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.element = element</div><div class=\"line\">        <span class=\"keyword\">this</span>.elementWidth = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.elementHeight = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.depthsX = []</div><div class=\"line\">        <span class=\"keyword\">this</span>.depthsY = []</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> DEFAULTS = &#123;</div><div class=\"line\">            frictionX: <span class=\"number\">0.1</span>,</div><div class=\"line\">            frictionY: <span class=\"number\">0.1</span>,</div><div class=\"line\">            originX: <span class=\"number\">0.5</span>,</div><div class=\"line\">            originY: <span class=\"number\">0.5</span></div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"built_in\">Object</span>.assign(<span class=\"keyword\">this</span>, DEFAULTS, options)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.inputX = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.inputY = <span class=\"number\">0</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.velocityX = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.velocityY = <span class=\"number\">0</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowWidth = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowHeight = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowCenterX = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowCenterY = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowRadiusX = <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.windowRadiusY = <span class=\"number\">0</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.raf = <span class=\"literal\">null</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.onWindowResize = <span class=\"keyword\">this</span>.onWindowResize.bind(<span class=\"keyword\">this</span>)</div><div class=\"line\">        <span class=\"keyword\">this</span>.onMouseMove = <span class=\"keyword\">this</span>.onMouseMove.bind(<span class=\"keyword\">this</span>)</div><div class=\"line\">        <span class=\"keyword\">this</span>.onAnimationFrame = <span class=\"keyword\">this</span>.onAnimationFrame.bind(<span class=\"keyword\">this</span>)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.initialise()</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    initialise() &#123;</div><div class=\"line\">        helpers.accelerate(<span class=\"keyword\">this</span>.element)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">let</span> style = <span class=\"built_in\">window</span>.getComputedStyle(<span class=\"keyword\">this</span>.element)</div><div class=\"line\">        <span class=\"keyword\">if</span> (style.getPropertyValue(<span class=\"string\">'position'</span>) === <span class=\"string\">'static'</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.element.style.position = <span class=\"string\">'relative'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.element.style.pointerEvents = <span class=\"string\">'none'</span></div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.updateLayers()</div><div class=\"line\">        <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.updateDimensions()</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'resize'</span>, <span class=\"keyword\">this</span>.onWindowResize)</div><div class=\"line\">        <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'mousemove'</span>, <span class=\"keyword\">this</span>.onMouseMove)</div><div class=\"line\">        <span class=\"keyword\">this</span>.raf = requestAnimationFrame(<span class=\"keyword\">this</span>.onAnimationFrame)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    updateLayers() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.layers = <span class=\"keyword\">this</span>.element.children</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>; index &lt; <span class=\"keyword\">this</span>.layers.length; index++) &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> layer = <span class=\"keyword\">this</span>.layers[index]</div><div class=\"line\"><br></div><div class=\"line\">            helpers.accelerate(layer)</div><div class=\"line\"><br></div><div class=\"line\">            layer.style.position = index ? <span class=\"string\">'absolute'</span> : <span class=\"string\">'relative'</span></div><div class=\"line\">            layer.style.display = <span class=\"string\">'block'</span></div><div class=\"line\">            layer.style.left = <span class=\"number\">0</span></div><div class=\"line\">            layer.style.top = <span class=\"number\">0</span></div><div class=\"line\"><br></div><div class=\"line\">            <span class=\"keyword\">let</span> depth = helpers.data(layer, <span class=\"string\">'depth'</span>) || <span class=\"number\">0</span></div><div class=\"line\">            <span class=\"keyword\">this</span>.depthsX.push(helpers.data(layer, <span class=\"string\">'depth-x'</span>) || depth)</div><div class=\"line\">            <span class=\"keyword\">this</span>.depthsY.push(helpers.data(layer, <span class=\"string\">'depth-y'</span>) || depth)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    updateDimensions() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowWidth = <span class=\"built_in\">window</span>.innerWidth</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowHeight = <span class=\"built_in\">window</span>.innerHeight</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowCenterX = <span class=\"keyword\">this</span>.windowWidth * <span class=\"keyword\">this</span>.originX</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowCenterY = <span class=\"keyword\">this</span>.windowHeight * <span class=\"keyword\">this</span>.originY</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowRadiusX = <span class=\"built_in\">Math</span>.max(<span class=\"keyword\">this</span>.windowCenterX, <span class=\"keyword\">this</span>.windowWidth - <span class=\"keyword\">this</span>.windowCenterX)</div><div class=\"line\">        <span class=\"keyword\">this</span>.windowRadiusY = <span class=\"built_in\">Math</span>.max(<span class=\"keyword\">this</span>.windowCenterY, <span class=\"keyword\">this</span>.windowHeight - <span class=\"keyword\">this</span>.windowCenterY)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">const</span> bounds = <span class=\"keyword\">this</span>.element.getBoundingClientRect()</div><div class=\"line\">        <span class=\"keyword\">this</span>.elementWidth = bounds.width</div><div class=\"line\">        <span class=\"keyword\">this</span>.elementHeight = bounds.height</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    setPosition(element, x, y) &#123;</div><div class=\"line\">        x = x.toFixed(<span class=\"number\">1</span>) + <span class=\"string\">'px'</span></div><div class=\"line\">        y = y.toFixed(<span class=\"number\">1</span>) + <span class=\"string\">'px'</span></div><div class=\"line\">        helpers.css(element, <span class=\"string\">'transform'</span>, <span class=\"string\">'translate3d('</span> + x + <span class=\"string\">','</span> + y + <span class=\"string\">',0)'</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    onWindowResize() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.updateDimensions()</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    onMouseMove(event) &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> clientX = event.clientX,</div><div class=\"line\">            clientY = event.clientY</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.windowRadiusX &amp;&amp; <span class=\"keyword\">this</span>.windowRadiusY) &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.inputX = (clientX - <span class=\"keyword\">this</span>.windowCenterX) / <span class=\"keyword\">this</span>.windowRadiusX</div><div class=\"line\">            <span class=\"keyword\">this</span>.inputY = (clientY - <span class=\"keyword\">this</span>.windowCenterY) / <span class=\"keyword\">this</span>.windowRadiusY</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    onAnimationFrame() &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.velocityX += (<span class=\"keyword\">this</span>.inputX * <span class=\"keyword\">this</span>.elementWidth * <span class=\"number\">0.1</span> - <span class=\"keyword\">this</span>.velocityX) * <span class=\"keyword\">this</span>.frictionX</div><div class=\"line\">        <span class=\"keyword\">this</span>.velocityY += (<span class=\"keyword\">this</span>.inputY * <span class=\"keyword\">this</span>.elementHeight * <span class=\"number\">0.1</span> - <span class=\"keyword\">this</span>.velocityY) * <span class=\"keyword\">this</span>.frictionY</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> index = <span class=\"number\">0</span>; index &lt; <span class=\"keyword\">this</span>.layers.length; index++) &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> layer = <span class=\"keyword\">this</span>.layers[index],</div><div class=\"line\">                xOffset = -<span class=\"keyword\">this</span>.velocityX * <span class=\"keyword\">this</span>.depthsX[index],</div><div class=\"line\">                yOffset = -<span class=\"keyword\">this</span>.velocityY * <span class=\"keyword\">this</span>.depthsY[index]</div><div class=\"line\">            <span class=\"keyword\">this</span>.setPosition(layer, xOffset, yOffset)</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.raf = requestAnimationFrame(<span class=\"keyword\">this</span>.onAnimationFrame)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<p>实例化，指定响应场景元素。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> scene = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'.scene'</span>)</div><div class=\"line\"><span class=\"keyword\">new</span> Parallax(scene)</div></pre></figure>\n<p>除了PC端的鼠标事件，也可监听移动设备方向和运动相关的事件deviceorientation和devicemotion。</p>\n<p><cite>参考：<a href=\"https://github.com/wagerfield/parallax\" target=\"_blank\" rel=\"noopener\">https://github.com/wagerfield/parallax</a></cite></p>\n\n<script>\nconst helpers = {\n\tpropertyCache: {},\n\n\tdata(element, name) {\n\t\treturn parseFloat(element.getAttribute('data-' + name) || 0)\n\t},\n\n\tcamelCase(value) {\n\t\treturn value.replace(/-+(.)?/g, (match, character) => {\n\t\t\treturn character ? character.toUpperCase() : ''\n\t\t})\n\t},\n\n\tcss(element, property, value) {\n\t\tconst vendors = [null, 'webkit', 'Moz', 'O', 'ms']\n\t\tlet jsProperty = helpers.propertyCache[property]\n\t\tif (!jsProperty) {\n\t\t\tfor (let i = 0, l = vendors.length; i < l; i++) {\n\t\t\t\tif (vendors[i] !== null) {\n\t\t\t\t\tjsProperty = helpers.camelCase(vendors[i] + '-' + property)\n\t\t\t\t} else {\n\t\t\t\t\tjsProperty = property\n\t\t\t\t}\n\t\t\t\tif (element.style[jsProperty] !== undefined) {\n\t\t\t\t\thelpers.propertyCache[property] = jsProperty\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telement.style[jsProperty] = value\n\t},\n\n\taccelerate(element) {\n\t\thelpers.css(element, 'transform', 'translate3d(0,0,0)')\n\t\thelpers.css(element, 'transform-style', 'preserve-3d')\n\t\thelpers.css(element, 'backface-visibility', 'hidden')\n\t}\n}\n\n\nclass Parallax {\n\tconstructor(element, options) {\n\t\tthis.element = element\n\t\tthis.elementWidth = 0\n\t\tthis.elementHeight = 0\n\t\tthis.depthsX = []\n\t\tthis.depthsY = []\n\n\t\tconst DEFAULTS = {\n\t\t\tfrictionX: 0.1,\n\t\t\tfrictionY: 0.1,\n\t\t\toriginX: 0.5,\n\t\t\toriginY: 0.5\n\t\t}\n\n\t\tObject.assign(this, DEFAULTS, options)\n\n\t\tthis.inputX = 0\n\t\tthis.inputY = 0\n\n\t\tthis.velocityX = 0\n\t\tthis.velocityY = 0\n\n\t\tthis.windowWidth = 0\n\t\tthis.windowHeight = 0\n\t\tthis.windowCenterX = 0\n\t\tthis.windowCenterY = 0\n\t\tthis.windowRadiusX = 0\n\t\tthis.windowRadiusY = 0\n\n\t\tthis.raf = null\n\n\t\tthis.onWindowResize = this.onWindowResize.bind(this)\n\t\tthis.onMouseMove = this.onMouseMove.bind(this)\n\t\tthis.onAnimationFrame = this.onAnimationFrame.bind(this)\n\n\t\tthis.initialise()\n\t}\n\n\tinitialise() {\n\t\thelpers.accelerate(this.element)\n\n\t\tlet style = window.getComputedStyle(this.element)\n\t\tif (style.getPropertyValue('position') === 'static') {\n\t\t\tthis.element.style.position = 'relative'\n\t\t}\n\t\tthis.element.style.pointerEvents = 'none'\n\n\t\tthis.updateLayers()\n\t\twindow.onload = () => {\n\t\t\tthis.updateDimensions()\n\t\t}\n\n\t\twindow.addEventListener('resize', this.onWindowResize)\n\t\twindow.addEventListener('mousemove', this.onMouseMove)\n\t\tthis.raf = requestAnimationFrame(this.onAnimationFrame)\n\t}\n\n\tupdateLayers() {\n\t\tthis.layers = this.element.children\n\n\t\tfor (let index = 0; index < this.layers.length; index++) {\n\t\t\tlet layer = this.layers[index]\n\n\t\t\thelpers.accelerate(layer)\n\n\t\t\tlayer.style.position = index ? 'absolute' : 'relative'\n\t\t\tlayer.style.display = 'block'\n\t\t\tlayer.style.left = 0\n\t\t\tlayer.style.top = 0\n\n\t\t\tlet depth = helpers.data(layer, 'depth') || 0\n\t\t\tthis.depthsX.push(helpers.data(layer, 'depth-x') || depth)\n\t\t\tthis.depthsY.push(helpers.data(layer, 'depth-y') || depth)\n\t\t}\n\t}\n\n\tupdateDimensions() {\n\t\tthis.windowWidth = window.innerWidth\n\t\tthis.windowHeight = window.innerHeight\n\t\tthis.windowCenterX = this.windowWidth * this.originX\n\t\tthis.windowCenterY = this.windowHeight * this.originY\n\t\tthis.windowRadiusX = Math.max(this.windowCenterX, this.windowWidth - this.windowCenterX)\n\t\tthis.windowRadiusY = Math.max(this.windowCenterY, this.windowHeight - this.windowCenterY)\n\n\t\tconst bounds = this.element.getBoundingClientRect()\n\t\tthis.elementWidth = bounds.width\n\t\tthis.elementHeight = bounds.height\n\t}\n\n\tsetPosition(element, x, y) {\n\t\tx = x.toFixed(1) + 'px'\n\t\ty = y.toFixed(1) + 'px'\n\t\thelpers.css(element, 'transform', 'translate3d(' + x + ',' + y + ',0)')\n\t}\n\n\tonWindowResize() {\n\t\tthis.updateDimensions()\n\t}\n\n\tonMouseMove(event) {\n\t\tlet clientX = event.clientX,\n\t\t\tclientY = event.clientY\n\n\t\tif (this.windowRadiusX && this.windowRadiusY) {\n\t\t\tthis.inputX = (clientX - this.windowCenterX) / this.windowRadiusX\n\t\t\tthis.inputY = (clientY - this.windowCenterY) / this.windowRadiusY\n\t\t}\n\t}\n\n\tonAnimationFrame() {\n\t\tthis.velocityX += (this.inputX * this.elementWidth * 0.1 - this.velocityX) * this.frictionX\n\t\tthis.velocityY += (this.inputY * this.elementHeight * 0.1 - this.velocityY) * this.frictionY\n\t\tfor (let index = 0; index < this.layers.length; index++) {\n\t\t\tlet layer = this.layers[index],\n\t\t\t\txOffset = -this.velocityX * this.depthsX[index],\n\t\t\t\tyOffset = -this.velocityY * this.depthsY[index]\n\t\t\tthis.setPosition(layer, xOffset, yOffset)\n\t\t}\n\t\tthis.raf = requestAnimationFrame(this.onAnimationFrame)\n\t}\n}\n\n\nconst scene = document.querySelector('.scene')\nnew Parallax(scene)\n</script>\n\n"},{"title":"Promise, async/await","date":"2019-03-10T16:00:00.000Z","keywords":"Promise, async, await, JavaScript","description":"ES6原生提供Promise对象，避免回调函数的层层嵌套，ES8标准引入的async函数使得异步操作变得更加方便","_content":"\n## 异步回调嵌套\n\nJavaScript中存在异步操作，对其有依赖的动作需在回调函数中处理。如下示例，要执行待加载脚本中的函数，需要等待脚本加载完成后在回调函数中进行。如果多个异步操作逐一依赖，会形成层层嵌套的回调函数，即“回调地狱”。\n\n``` JavaScript\nfunction loadScript(src, callback) {\n    let script = document.createElement('script')\n    script.src = src\n    script.onload = () => callback(null, script)\n    script.onerror = () => callback(new Error(`Script load error: ${src}`))\n    document.head.append(script)\n}\n\nloadScript('http://no-such-url', (error, script) => {\n    if (error) {\n        // 处理错误\n    } else {\n        // 成功加载脚本\n    }\n})\n```\n\n## Promise对象\n\nES6原生提供Promise对象，将异步操作以同步操作的流程表达出来，避免回调函数的层层嵌套。Promise对象代表一个异步操作，有三种状态：初始pending、成功fulfilled或失败rejected。只有异步操作的结果，可以决定初始状态变为成功或失败最终态。传给new Promise的控制函数会立即被自动调用，此函数接受两个参数resolve和reject，分别会在Promise对象状态变为成功或失败时被执行。\n\n``` JavaScript\nfunction loadScript(src) {\n    return new Promise((resolve, reject) => {\n        let script = document.createElement('script')\n        script.src = src\n        script.onload = () => resolve(script)\n        script.onerror = () => reject(new Error(`Script load error: ${src}`))\n        document.head.append(script)\n    })\n}\n\nlet promise = loadScript('https://cdn.bootcss.com/lodash.js/4.17.11/lodash.min.js')\npromise.then(\n    script => console.log(`${script.src} is loaded`),\n    error => console.log(`Error: ${error.message}`)\n)\npromise.then(script => console.log('One more handler'))\n```\n\n## Promise处理链\n\npromise.then会返回一个promise，可以用它调用下一个then。当then中的控制函数返回一个值时，它会变成当前promise的result，下一个处理程序会使用这个返回值运行。\n\n``` JavaScript\nnew Promise(function(resolve, reject) {\n    setTimeout(() => resolve(1), 1000)\n}).then(function(result) {\n    console.log(result) // 1\n    return result * 2\n}).then(function(result) {\n    console.log(result) // 2\n    return result * 2\n}).then(function(result) {\n    console.log(result) // 4\n    return result * 2\n})\n```\n\n如果then中的控制函数返回的值是一个promise，那么直到它结束之前，下一步执行会一直被暂停。在结束之后，该promise的结果会传递给下一个then中的处理程序。\n\n``` JavaScript\nfetch('https://api.github.com/users/YopheeHsin')\n    .then(response => response.json())\n    .then(githubUser => new Promise((resolve, reject) => {\n        let img = document.createElement('img')\n        img.src = githubUser.avatar_url\n        document.body.append(img)\n\n        setTimeout(() => {\n            img.remove()\n            resolve(githubUser)\n        }, 3000)\n    }))\n    // 3秒后执行\n    .then(githubUser => console.log(`Finished showing ${githubUser.name}`))\n```\n\n把代码分割成几个可复用的函数。使用catch来处理Promise链中的所有错误，如果上面任一promise被reject，那么catch中的错误处理程序便会执行。除了明确的rejected失败状态，catch也适用于throw new Error和包括代码错误在内的任何错误。\n\n``` JavaScript\nfunction loadJson(url) {\n    return fetch(url).then(response => response.json())\n}\n\nfunction showAvatar(githubUser) {\n    return new Promise((resolve, reject) => {\n        let img = document.createElement('img')\n        img.src = githubUser.avatar_url\n        document.body.append(img)\n\n        setTimeout(() => {\n            img.remove()\n            resolve(githubUser)\n        }, 3000)\n    })\n}\n\nloadJson('https://api.github.com/users/YopheeHsin')\n    .then(showAvatar)\n    .then(githubUser => console.log(`Finished showing ${githubUser.name}`))\n    .catch(err => console.log(err))\n```\n\n## Promise静态方法\n\nPromise类中有4个静态方法。\n\nPromise.resolve根据给定的value值返回resolved promise。\n\n``` JavaScript\nlet promise = Promise.resolve(value)\n// 等价于\nlet promise = new Promise(resolve => resolve(value))\n```\n\n用来将已有的值“封装”进promise，确保接口统一性。\n\n``` JavaScript\nfunction loadCached(url) {\n    let cache = loadCached.cache || (loadCached.cache = new Map())\n    if (cache.has(url)) return Promise.resolve(cache.get(url))\n    return fetch(url)\n        .then(response => response.text())\n        .then(text => {\n            cache.set(url, text)\n            return text\n        })\n}\n```\n\nPromise.reject创建带有error的rejected promise。\n\n``` JavaScript\nlet promise = Promise.reject(error)\n// 等价于\nlet promise = new Promise((resolve, reject) => reject(error))\n```\n\nPromise.all并行运行多个promise，并等待所有promise准备就绪。\n\n``` JavaScript\nlet names = ['remy', 'jeresig', 'iliakan']\nlet requests = names.map(name => fetch(`https://api.github.com/users/${name}`))\nPromise.all(requests)\n    .then(responses => {\n        responses.forEach(response => console.log(`${response.url}: ${response.status}`))\n        return responses\n    })\n    .then(responses => Promise.all(responses.map(r => r.json())))\n    .then(users => console.log(users.map(user => user.name)))\n```\n\nPromise.all使用下面这样的容错机制。catch会对异常promise产生error并返回，根据promise工作原理，只要then/catch处理器返回了值，执行流程就会“正常”进行。\n\n``` JavaScript\nlet urls = [\n    'https://api.github.com/users/YopheeHsin',\n    '/',\n    'http://no-such-url'\n]\n\nPromise.all(urls.map(url => fetch(url).catch(err => err)))\n    .then(responses => Promise.all(\n        responses.map(r => r instanceof Error ? r : r.json().catch(err => err))\n    ))\n    .then(results => {\n        console.log(results[0].name)\n        console.log(results[1])\n        console.log(results[2])\n    })\n```\n\nPromise.race与Promise.all类似，但不会等待所有promise都完成，只等待第一个promise完成后即继续执行。\n\n## async/await\n\nES8标准引入的async函数使得异步操作变得更加方便。\n\n将async关键字放在函数前，意味着该函数总是会返回promise。如果代码return非promise值，会自动将其封装到resolved promise中。\n\n``` JavaScript\nasync function f() {\n    return 1\n}\n// 等价于\nasync function f() {\n    return Promise.resolve(1)\n}\n\nf().then(r => console.log(r))\n```\n\nawait只在async函数中工作，作用是等待promise，直到其解决并返回其结果。这样的语法比promise.then更优雅地获取结果，也更容易阅读和编写。\n\n``` JavaScript\nasync function showAvatar() {\n    let response = await fetch('https://api.github.com/users/YopheeHsin')\n    let githubUser = await response.json()\n    let img = document.createElement('img')\n    img.src = githubUser.avatar_url\n    document.body.append(img)\n    await new Promise(resolve => setTimeout(resolve, 3000))\n    img.remove()\n    return githubUser\n}\n\nshowAvatar()\n    .then(githubUser => console.log(`Finished showing ${githubUser.name}`))\n```\n\n当await的promise失败reject时，它会抛出error，就像该行上有常规throw语句一样，可以使用try...catch来捕获这个error。\n\n``` JavaScript\nasync function f() {\n    await Promise.reject(new Error('Whoops!'))\n}\n// 等价于\nasync function f() {\n    throw new Error('Whoops!')\n}\n\n// 出错时，控制权会进入catch块，可以多行封装\nasync function f() {\n    try {\n        let response = await fetch('/no-user-here')\n        let user = await response.json()\n    } catch (err) {\n        console.log(err)\n    }\n}\n\n// 也可以通过追加catch来处理\nasync function f() {\n    let response = await fetch('http://no-such-url')\n}\nf().catch(err => console.log(err))\n```\n\n<cite>参考：\nhttp://es6.ruanyifeng.com/#docs/promise\nhttp://es6.ruanyifeng.com/#docs/async\nhttps://javascript.info/async</cite>\n","source":"_posts/promise.md","raw":"---\ntitle: Promise, async/await\ndate: 2019-03-11 00:00:00\ncategories: JavaScript\nkeywords: Promise, async, await, JavaScript\ndescription: ES6原生提供Promise对象，避免回调函数的层层嵌套，ES8标准引入的async函数使得异步操作变得更加方便\n---\n\n## 异步回调嵌套\n\nJavaScript中存在异步操作，对其有依赖的动作需在回调函数中处理。如下示例，要执行待加载脚本中的函数，需要等待脚本加载完成后在回调函数中进行。如果多个异步操作逐一依赖，会形成层层嵌套的回调函数，即“回调地狱”。\n\n``` JavaScript\nfunction loadScript(src, callback) {\n    let script = document.createElement('script')\n    script.src = src\n    script.onload = () => callback(null, script)\n    script.onerror = () => callback(new Error(`Script load error: ${src}`))\n    document.head.append(script)\n}\n\nloadScript('http://no-such-url', (error, script) => {\n    if (error) {\n        // 处理错误\n    } else {\n        // 成功加载脚本\n    }\n})\n```\n\n## Promise对象\n\nES6原生提供Promise对象，将异步操作以同步操作的流程表达出来，避免回调函数的层层嵌套。Promise对象代表一个异步操作，有三种状态：初始pending、成功fulfilled或失败rejected。只有异步操作的结果，可以决定初始状态变为成功或失败最终态。传给new Promise的控制函数会立即被自动调用，此函数接受两个参数resolve和reject，分别会在Promise对象状态变为成功或失败时被执行。\n\n``` JavaScript\nfunction loadScript(src) {\n    return new Promise((resolve, reject) => {\n        let script = document.createElement('script')\n        script.src = src\n        script.onload = () => resolve(script)\n        script.onerror = () => reject(new Error(`Script load error: ${src}`))\n        document.head.append(script)\n    })\n}\n\nlet promise = loadScript('https://cdn.bootcss.com/lodash.js/4.17.11/lodash.min.js')\npromise.then(\n    script => console.log(`${script.src} is loaded`),\n    error => console.log(`Error: ${error.message}`)\n)\npromise.then(script => console.log('One more handler'))\n```\n\n## Promise处理链\n\npromise.then会返回一个promise，可以用它调用下一个then。当then中的控制函数返回一个值时，它会变成当前promise的result，下一个处理程序会使用这个返回值运行。\n\n``` JavaScript\nnew Promise(function(resolve, reject) {\n    setTimeout(() => resolve(1), 1000)\n}).then(function(result) {\n    console.log(result) // 1\n    return result * 2\n}).then(function(result) {\n    console.log(result) // 2\n    return result * 2\n}).then(function(result) {\n    console.log(result) // 4\n    return result * 2\n})\n```\n\n如果then中的控制函数返回的值是一个promise，那么直到它结束之前，下一步执行会一直被暂停。在结束之后，该promise的结果会传递给下一个then中的处理程序。\n\n``` JavaScript\nfetch('https://api.github.com/users/YopheeHsin')\n    .then(response => response.json())\n    .then(githubUser => new Promise((resolve, reject) => {\n        let img = document.createElement('img')\n        img.src = githubUser.avatar_url\n        document.body.append(img)\n\n        setTimeout(() => {\n            img.remove()\n            resolve(githubUser)\n        }, 3000)\n    }))\n    // 3秒后执行\n    .then(githubUser => console.log(`Finished showing ${githubUser.name}`))\n```\n\n把代码分割成几个可复用的函数。使用catch来处理Promise链中的所有错误，如果上面任一promise被reject，那么catch中的错误处理程序便会执行。除了明确的rejected失败状态，catch也适用于throw new Error和包括代码错误在内的任何错误。\n\n``` JavaScript\nfunction loadJson(url) {\n    return fetch(url).then(response => response.json())\n}\n\nfunction showAvatar(githubUser) {\n    return new Promise((resolve, reject) => {\n        let img = document.createElement('img')\n        img.src = githubUser.avatar_url\n        document.body.append(img)\n\n        setTimeout(() => {\n            img.remove()\n            resolve(githubUser)\n        }, 3000)\n    })\n}\n\nloadJson('https://api.github.com/users/YopheeHsin')\n    .then(showAvatar)\n    .then(githubUser => console.log(`Finished showing ${githubUser.name}`))\n    .catch(err => console.log(err))\n```\n\n## Promise静态方法\n\nPromise类中有4个静态方法。\n\nPromise.resolve根据给定的value值返回resolved promise。\n\n``` JavaScript\nlet promise = Promise.resolve(value)\n// 等价于\nlet promise = new Promise(resolve => resolve(value))\n```\n\n用来将已有的值“封装”进promise，确保接口统一性。\n\n``` JavaScript\nfunction loadCached(url) {\n    let cache = loadCached.cache || (loadCached.cache = new Map())\n    if (cache.has(url)) return Promise.resolve(cache.get(url))\n    return fetch(url)\n        .then(response => response.text())\n        .then(text => {\n            cache.set(url, text)\n            return text\n        })\n}\n```\n\nPromise.reject创建带有error的rejected promise。\n\n``` JavaScript\nlet promise = Promise.reject(error)\n// 等价于\nlet promise = new Promise((resolve, reject) => reject(error))\n```\n\nPromise.all并行运行多个promise，并等待所有promise准备就绪。\n\n``` JavaScript\nlet names = ['remy', 'jeresig', 'iliakan']\nlet requests = names.map(name => fetch(`https://api.github.com/users/${name}`))\nPromise.all(requests)\n    .then(responses => {\n        responses.forEach(response => console.log(`${response.url}: ${response.status}`))\n        return responses\n    })\n    .then(responses => Promise.all(responses.map(r => r.json())))\n    .then(users => console.log(users.map(user => user.name)))\n```\n\nPromise.all使用下面这样的容错机制。catch会对异常promise产生error并返回，根据promise工作原理，只要then/catch处理器返回了值，执行流程就会“正常”进行。\n\n``` JavaScript\nlet urls = [\n    'https://api.github.com/users/YopheeHsin',\n    '/',\n    'http://no-such-url'\n]\n\nPromise.all(urls.map(url => fetch(url).catch(err => err)))\n    .then(responses => Promise.all(\n        responses.map(r => r instanceof Error ? r : r.json().catch(err => err))\n    ))\n    .then(results => {\n        console.log(results[0].name)\n        console.log(results[1])\n        console.log(results[2])\n    })\n```\n\nPromise.race与Promise.all类似，但不会等待所有promise都完成，只等待第一个promise完成后即继续执行。\n\n## async/await\n\nES8标准引入的async函数使得异步操作变得更加方便。\n\n将async关键字放在函数前，意味着该函数总是会返回promise。如果代码return非promise值，会自动将其封装到resolved promise中。\n\n``` JavaScript\nasync function f() {\n    return 1\n}\n// 等价于\nasync function f() {\n    return Promise.resolve(1)\n}\n\nf().then(r => console.log(r))\n```\n\nawait只在async函数中工作，作用是等待promise，直到其解决并返回其结果。这样的语法比promise.then更优雅地获取结果，也更容易阅读和编写。\n\n``` JavaScript\nasync function showAvatar() {\n    let response = await fetch('https://api.github.com/users/YopheeHsin')\n    let githubUser = await response.json()\n    let img = document.createElement('img')\n    img.src = githubUser.avatar_url\n    document.body.append(img)\n    await new Promise(resolve => setTimeout(resolve, 3000))\n    img.remove()\n    return githubUser\n}\n\nshowAvatar()\n    .then(githubUser => console.log(`Finished showing ${githubUser.name}`))\n```\n\n当await的promise失败reject时，它会抛出error，就像该行上有常规throw语句一样，可以使用try...catch来捕获这个error。\n\n``` JavaScript\nasync function f() {\n    await Promise.reject(new Error('Whoops!'))\n}\n// 等价于\nasync function f() {\n    throw new Error('Whoops!')\n}\n\n// 出错时，控制权会进入catch块，可以多行封装\nasync function f() {\n    try {\n        let response = await fetch('/no-user-here')\n        let user = await response.json()\n    } catch (err) {\n        console.log(err)\n    }\n}\n\n// 也可以通过追加catch来处理\nasync function f() {\n    let response = await fetch('http://no-such-url')\n}\nf().catch(err => console.log(err))\n```\n\n<cite>参考：\nhttp://es6.ruanyifeng.com/#docs/promise\nhttp://es6.ruanyifeng.com/#docs/async\nhttps://javascript.info/async</cite>\n","slug":"promise","published":1,"updated":"2019-03-11T09:00:15.136Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160en08003l3a8i21zphgao","content":"<h2 id=\"异步回调嵌套\"><a href=\"#异步回调嵌套\" class=\"headerlink\" title=\"异步回调嵌套\"></a>异步回调嵌套</h2><p>JavaScript中存在异步操作，对其有依赖的动作需在回调函数中处理。如下示例，要执行待加载脚本中的函数，需要等待脚本加载完成后在回调函数中进行。如果多个异步操作逐一依赖，会形成层层嵌套的回调函数，即“回调地狱”。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadScript</span>(<span class=\"params\">src, callback</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> script = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>)</div><div class=\"line\">    script.src = src</div><div class=\"line\">    script.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> callback(<span class=\"literal\">null</span>, script)</div><div class=\"line\">    script.onerror = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">`Script load error: <span class=\"subst\">$&#123;src&#125;</span>`</span>))</div><div class=\"line\">    <span class=\"built_in\">document</span>.head.append(script)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">loadScript(<span class=\"string\">'http://no-such-url'</span>, (error, script) =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (error) &#123;</div><div class=\"line\">        <span class=\"comment\">// 处理错误</span></div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"comment\">// 成功加载脚本</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></figure>\n<h2 id=\"Promise对象\"><a href=\"#Promise对象\" class=\"headerlink\" title=\"Promise对象\"></a>Promise对象</h2><p>ES6原生提供Promise对象，将异步操作以同步操作的流程表达出来，避免回调函数的层层嵌套。Promise对象代表一个异步操作，有三种状态：初始pending、成功fulfilled或失败rejected。只有异步操作的结果，可以决定初始状态变为成功或失败最终态。传给new Promise的控制函数会立即被自动调用，此函数接受两个参数resolve和reject，分别会在Promise对象状态变为成功或失败时被执行。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadScript</span>(<span class=\"params\">src</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> script = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>)</div><div class=\"line\">        script.src = src</div><div class=\"line\">        script.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> resolve(script)</div><div class=\"line\">        script.onerror = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> reject(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">`Script load error: <span class=\"subst\">$&#123;src&#125;</span>`</span>))</div><div class=\"line\">        <span class=\"built_in\">document</span>.head.append(script)</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">let</span> promise = loadScript(<span class=\"string\">'https://cdn.bootcss.com/lodash.js/4.17.11/lodash.min.js'</span>)</div><div class=\"line\">promise.then(</div><div class=\"line\">    script =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;script.src&#125;</span> is loaded`</span>),</div><div class=\"line\">    error =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">`Error: <span class=\"subst\">$&#123;error.message&#125;</span>`</span>)</div><div class=\"line\">)</div><div class=\"line\">promise.then(<span class=\"function\"><span class=\"params\">script</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'One more handler'</span>))</div></pre></figure>\n<h2 id=\"Promise处理链\"><a href=\"#Promise处理链\" class=\"headerlink\" title=\"Promise处理链\"></a>Promise处理链</h2><p>promise.then会返回一个promise，可以用它调用下一个then。当then中的控制函数返回一个值时，它会变成当前promise的result，下一个处理程序会使用这个返回值运行。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>) </span>&#123;</div><div class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> resolve(<span class=\"number\">1</span>), <span class=\"number\">1000</span>)</div><div class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(result) <span class=\"comment\">// 1</span></div><div class=\"line\">    <span class=\"keyword\">return</span> result * <span class=\"number\">2</span></div><div class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(result) <span class=\"comment\">// 2</span></div><div class=\"line\">    <span class=\"keyword\">return</span> result * <span class=\"number\">2</span></div><div class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(result) <span class=\"comment\">// 4</span></div><div class=\"line\">    <span class=\"keyword\">return</span> result * <span class=\"number\">2</span></div><div class=\"line\">&#125;)</div></pre></figure>\n<p>如果then中的控制函数返回的值是一个promise，那么直到它结束之前，下一步执行会一直被暂停。在结束之后，该promise的结果会传递给下一个then中的处理程序。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">fetch(<span class=\"string\">'https://api.github.com/users/YopheeHsin'</span>)</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.json())</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">githubUser</span> =&gt;</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> img = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'img'</span>)</div><div class=\"line\">        img.src = githubUser.avatar_url</div><div class=\"line\">        <span class=\"built_in\">document</span>.body.append(img)</div><div class=\"line\"><br></div><div class=\"line\">        setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            img.remove()</div><div class=\"line\">            resolve(githubUser)</div><div class=\"line\">        &#125;, <span class=\"number\">3000</span>)</div><div class=\"line\">    &#125;))</div><div class=\"line\">    <span class=\"comment\">// 3秒后执行</span></div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">githubUser</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">`Finished showing <span class=\"subst\">$&#123;githubUser.name&#125;</span>`</span>))</div></pre></figure>\n<p>把代码分割成几个可复用的函数。使用catch来处理Promise链中的所有错误，如果上面任一promise被reject，那么catch中的错误处理程序便会执行。除了明确的rejected失败状态，catch也适用于throw new Error和包括代码错误在内的任何错误。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadJson</span>(<span class=\"params\">url</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> fetch(url).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.json())</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showAvatar</span>(<span class=\"params\">githubUser</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> img = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'img'</span>)</div><div class=\"line\">        img.src = githubUser.avatar_url</div><div class=\"line\">        <span class=\"built_in\">document</span>.body.append(img)</div><div class=\"line\"><br></div><div class=\"line\">        setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            img.remove()</div><div class=\"line\">            resolve(githubUser)</div><div class=\"line\">        &#125;, <span class=\"number\">3000</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">loadJson(<span class=\"string\">'https://api.github.com/users/YopheeHsin'</span>)</div><div class=\"line\">    .then(showAvatar)</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">githubUser</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">`Finished showing <span class=\"subst\">$&#123;githubUser.name&#125;</span>`</span>))</div><div class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> <span class=\"built_in\">console</span>.log(err))</div></pre></figure>\n<h2 id=\"Promise静态方法\"><a href=\"#Promise静态方法\" class=\"headerlink\" title=\"Promise静态方法\"></a>Promise静态方法</h2><p>Promise类中有4个静态方法。</p>\n<p>Promise.resolve根据给定的value值返回resolved promise。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> promise = <span class=\"built_in\">Promise</span>.resolve(value)</div><div class=\"line\"><span class=\"comment\">// 等价于</span></div><div class=\"line\"><span class=\"keyword\">let</span> promise = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> resolve(value))</div></pre></figure>\n<p>用来将已有的值“封装”进promise，确保接口统一性。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadCached</span>(<span class=\"params\">url</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> cache = loadCached.cache || (loadCached.cache = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>())</div><div class=\"line\">    <span class=\"keyword\">if</span> (cache.has(url)) <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(cache.get(url))</div><div class=\"line\">    <span class=\"keyword\">return</span> fetch(url)</div><div class=\"line\">        .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.text())</div><div class=\"line\">        .then(<span class=\"function\"><span class=\"params\">text</span> =&gt;</span> &#123;</div><div class=\"line\">            cache.set(url, text)</div><div class=\"line\">            <span class=\"keyword\">return</span> text</div><div class=\"line\">        &#125;)</div><div class=\"line\">&#125;</div></pre></figure>\n<p>Promise.reject创建带有error的rejected promise。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> promise = <span class=\"built_in\">Promise</span>.reject(error)</div><div class=\"line\"><span class=\"comment\">// 等价于</span></div><div class=\"line\"><span class=\"keyword\">let</span> promise = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> reject(error))</div></pre></figure>\n<p>Promise.all并行运行多个promise，并等待所有promise准备就绪。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> names = [<span class=\"string\">'remy'</span>, <span class=\"string\">'jeresig'</span>, <span class=\"string\">'iliakan'</span>]</div><div class=\"line\"><span class=\"keyword\">let</span> requests = names.map(<span class=\"function\"><span class=\"params\">name</span> =&gt;</span> fetch(<span class=\"string\">`https://api.github.com/users/<span class=\"subst\">$&#123;name&#125;</span>`</span>))</div><div class=\"line\"><span class=\"built_in\">Promise</span>.all(requests)</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">responses</span> =&gt;</span> &#123;</div><div class=\"line\">        responses.forEach(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;response.url&#125;</span>: <span class=\"subst\">$&#123;response.status&#125;</span>`</span>))</div><div class=\"line\">        <span class=\"keyword\">return</span> responses</div><div class=\"line\">    &#125;)</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">responses</span> =&gt;</span> <span class=\"built_in\">Promise</span>.all(responses.map(<span class=\"function\"><span class=\"params\">r</span> =&gt;</span> r.json())))</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">users</span> =&gt;</span> <span class=\"built_in\">console</span>.log(users.map(<span class=\"function\"><span class=\"params\">user</span> =&gt;</span> user.name)))</div></pre></figure>\n<p>Promise.all使用下面这样的容错机制。catch会对异常promise产生error并返回，根据promise工作原理，只要then/catch处理器返回了值，执行流程就会“正常”进行。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> urls = [</div><div class=\"line\">    <span class=\"string\">'https://api.github.com/users/YopheeHsin'</span>,</div><div class=\"line\">    <span class=\"string\">'/'</span>,</div><div class=\"line\">    <span class=\"string\">'http://no-such-url'</span></div><div class=\"line\">]</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">Promise</span>.all(urls.map(<span class=\"function\"><span class=\"params\">url</span> =&gt;</span> fetch(url).catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> err)))</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">responses</span> =&gt;</span> <span class=\"built_in\">Promise</span>.all(</div><div class=\"line\">        responses.map(<span class=\"function\"><span class=\"params\">r</span> =&gt;</span> r <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Error</span> ? r : r.json().catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> err))</div><div class=\"line\">    ))</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">results</span> =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(results[<span class=\"number\">0</span>].name)</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(results[<span class=\"number\">1</span>])</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(results[<span class=\"number\">2</span>])</div><div class=\"line\">    &#125;)</div></pre></figure>\n<p>Promise.race与Promise.all类似，但不会等待所有promise都完成，只等待第一个promise完成后即继续执行。</p>\n<h2 id=\"async-await\"><a href=\"#async-await\" class=\"headerlink\" title=\"async/await\"></a>async/await</h2><p>ES8标准引入的async函数使得异步操作变得更加方便。</p>\n<p>将async关键字放在函数前，意味着该函数总是会返回promise。如果代码return非promise值，会自动将其封装到resolved promise中。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">// 等价于</span></div><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"number\">1</span>)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">f().then(<span class=\"function\"><span class=\"params\">r</span> =&gt;</span> <span class=\"built_in\">console</span>.log(r))</div></pre></figure>\n<p>await只在async函数中工作，作用是等待promise，直到其解决并返回其结果。这样的语法比promise.then更优雅地获取结果，也更容易阅读和编写。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showAvatar</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> response = <span class=\"keyword\">await</span> fetch(<span class=\"string\">'https://api.github.com/users/YopheeHsin'</span>)</div><div class=\"line\">    <span class=\"keyword\">let</span> githubUser = <span class=\"keyword\">await</span> response.json()</div><div class=\"line\">    <span class=\"keyword\">let</span> img = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'img'</span>)</div><div class=\"line\">    img.src = githubUser.avatar_url</div><div class=\"line\">    <span class=\"built_in\">document</span>.body.append(img)</div><div class=\"line\">    <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> setTimeout(resolve, <span class=\"number\">3000</span>))</div><div class=\"line\">    img.remove()</div><div class=\"line\">    <span class=\"keyword\">return</span> githubUser</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">showAvatar()</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">githubUser</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">`Finished showing <span class=\"subst\">$&#123;githubUser.name&#125;</span>`</span>))</div></pre></figure>\n<p>当await的promise失败reject时，它会抛出error，就像该行上有常规throw语句一样，可以使用try…catch来捕获这个error。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.reject(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Whoops!'</span>))</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">// 等价于</span></div><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Whoops!'</span>)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 出错时，控制权会进入catch块，可以多行封装</span></div><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> response = <span class=\"keyword\">await</span> fetch(<span class=\"string\">'/no-user-here'</span>)</div><div class=\"line\">        <span class=\"keyword\">let</span> user = <span class=\"keyword\">await</span> response.json()</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(err)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 也可以通过追加catch来处理</span></div><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> response = <span class=\"keyword\">await</span> fetch(<span class=\"string\">'http://no-such-url'</span>)</div><div class=\"line\">&#125;</div><div class=\"line\">f().catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> <span class=\"built_in\">console</span>.log(err))</div></pre></figure>\n<p><cite>参考：<br><a href=\"http://es6.ruanyifeng.com/#docs/promise\" target=\"_blank\" rel=\"noopener\">http://es6.ruanyifeng.com/#docs/promise</a><br><a href=\"http://es6.ruanyifeng.com/#docs/async\" target=\"_blank\" rel=\"noopener\">http://es6.ruanyifeng.com/#docs/async</a><br><a href=\"https://javascript.info/async\" target=\"_blank\" rel=\"noopener\">https://javascript.info/async</a></cite></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"异步回调嵌套\"><a href=\"#异步回调嵌套\" class=\"headerlink\" title=\"异步回调嵌套\"></a>异步回调嵌套</h2><p>JavaScript中存在异步操作，对其有依赖的动作需在回调函数中处理。如下示例，要执行待加载脚本中的函数，需要等待脚本加载完成后在回调函数中进行。如果多个异步操作逐一依赖，会形成层层嵌套的回调函数，即“回调地狱”。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadScript</span>(<span class=\"params\">src, callback</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> script = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>)</div><div class=\"line\">    script.src = src</div><div class=\"line\">    script.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> callback(<span class=\"literal\">null</span>, script)</div><div class=\"line\">    script.onerror = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">`Script load error: <span class=\"subst\">$&#123;src&#125;</span>`</span>))</div><div class=\"line\">    <span class=\"built_in\">document</span>.head.append(script)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">loadScript(<span class=\"string\">'http://no-such-url'</span>, (error, script) =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (error) &#123;</div><div class=\"line\">        <span class=\"comment\">// 处理错误</span></div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"comment\">// 成功加载脚本</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></figure>\n<h2 id=\"Promise对象\"><a href=\"#Promise对象\" class=\"headerlink\" title=\"Promise对象\"></a>Promise对象</h2><p>ES6原生提供Promise对象，将异步操作以同步操作的流程表达出来，避免回调函数的层层嵌套。Promise对象代表一个异步操作，有三种状态：初始pending、成功fulfilled或失败rejected。只有异步操作的结果，可以决定初始状态变为成功或失败最终态。传给new Promise的控制函数会立即被自动调用，此函数接受两个参数resolve和reject，分别会在Promise对象状态变为成功或失败时被执行。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadScript</span>(<span class=\"params\">src</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> script = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'script'</span>)</div><div class=\"line\">        script.src = src</div><div class=\"line\">        script.onload = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> resolve(script)</div><div class=\"line\">        script.onerror = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> reject(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">`Script load error: <span class=\"subst\">$&#123;src&#125;</span>`</span>))</div><div class=\"line\">        <span class=\"built_in\">document</span>.head.append(script)</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">let</span> promise = loadScript(<span class=\"string\">'https://cdn.bootcss.com/lodash.js/4.17.11/lodash.min.js'</span>)</div><div class=\"line\">promise.then(</div><div class=\"line\">    script =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;script.src&#125;</span> is loaded`</span>),</div><div class=\"line\">    error =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">`Error: <span class=\"subst\">$&#123;error.message&#125;</span>`</span>)</div><div class=\"line\">)</div><div class=\"line\">promise.then(<span class=\"function\"><span class=\"params\">script</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'One more handler'</span>))</div></pre></figure>\n<h2 id=\"Promise处理链\"><a href=\"#Promise处理链\" class=\"headerlink\" title=\"Promise处理链\"></a>Promise处理链</h2><p>promise.then会返回一个promise，可以用它调用下一个then。当then中的控制函数返回一个值时，它会变成当前promise的result，下一个处理程序会使用这个返回值运行。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>) </span>&#123;</div><div class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> resolve(<span class=\"number\">1</span>), <span class=\"number\">1000</span>)</div><div class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(result) <span class=\"comment\">// 1</span></div><div class=\"line\">    <span class=\"keyword\">return</span> result * <span class=\"number\">2</span></div><div class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(result) <span class=\"comment\">// 2</span></div><div class=\"line\">    <span class=\"keyword\">return</span> result * <span class=\"number\">2</span></div><div class=\"line\">&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(result) <span class=\"comment\">// 4</span></div><div class=\"line\">    <span class=\"keyword\">return</span> result * <span class=\"number\">2</span></div><div class=\"line\">&#125;)</div></pre></figure>\n<p>如果then中的控制函数返回的值是一个promise，那么直到它结束之前，下一步执行会一直被暂停。在结束之后，该promise的结果会传递给下一个then中的处理程序。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">fetch(<span class=\"string\">'https://api.github.com/users/YopheeHsin'</span>)</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.json())</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">githubUser</span> =&gt;</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> img = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'img'</span>)</div><div class=\"line\">        img.src = githubUser.avatar_url</div><div class=\"line\">        <span class=\"built_in\">document</span>.body.append(img)</div><div class=\"line\"><br></div><div class=\"line\">        setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            img.remove()</div><div class=\"line\">            resolve(githubUser)</div><div class=\"line\">        &#125;, <span class=\"number\">3000</span>)</div><div class=\"line\">    &#125;))</div><div class=\"line\">    <span class=\"comment\">// 3秒后执行</span></div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">githubUser</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">`Finished showing <span class=\"subst\">$&#123;githubUser.name&#125;</span>`</span>))</div></pre></figure>\n<p>把代码分割成几个可复用的函数。使用catch来处理Promise链中的所有错误，如果上面任一promise被reject，那么catch中的错误处理程序便会执行。除了明确的rejected失败状态，catch也适用于throw new Error和包括代码错误在内的任何错误。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadJson</span>(<span class=\"params\">url</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> fetch(url).then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.json())</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showAvatar</span>(<span class=\"params\">githubUser</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> img = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'img'</span>)</div><div class=\"line\">        img.src = githubUser.avatar_url</div><div class=\"line\">        <span class=\"built_in\">document</span>.body.append(img)</div><div class=\"line\"><br></div><div class=\"line\">        setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</div><div class=\"line\">            img.remove()</div><div class=\"line\">            resolve(githubUser)</div><div class=\"line\">        &#125;, <span class=\"number\">3000</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">loadJson(<span class=\"string\">'https://api.github.com/users/YopheeHsin'</span>)</div><div class=\"line\">    .then(showAvatar)</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">githubUser</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">`Finished showing <span class=\"subst\">$&#123;githubUser.name&#125;</span>`</span>))</div><div class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> <span class=\"built_in\">console</span>.log(err))</div></pre></figure>\n<h2 id=\"Promise静态方法\"><a href=\"#Promise静态方法\" class=\"headerlink\" title=\"Promise静态方法\"></a>Promise静态方法</h2><p>Promise类中有4个静态方法。</p>\n<p>Promise.resolve根据给定的value值返回resolved promise。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> promise = <span class=\"built_in\">Promise</span>.resolve(value)</div><div class=\"line\"><span class=\"comment\">// 等价于</span></div><div class=\"line\"><span class=\"keyword\">let</span> promise = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> resolve(value))</div></pre></figure>\n<p>用来将已有的值“封装”进promise，确保接口统一性。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadCached</span>(<span class=\"params\">url</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> cache = loadCached.cache || (loadCached.cache = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>())</div><div class=\"line\">    <span class=\"keyword\">if</span> (cache.has(url)) <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(cache.get(url))</div><div class=\"line\">    <span class=\"keyword\">return</span> fetch(url)</div><div class=\"line\">        .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.text())</div><div class=\"line\">        .then(<span class=\"function\"><span class=\"params\">text</span> =&gt;</span> &#123;</div><div class=\"line\">            cache.set(url, text)</div><div class=\"line\">            <span class=\"keyword\">return</span> text</div><div class=\"line\">        &#125;)</div><div class=\"line\">&#125;</div></pre></figure>\n<p>Promise.reject创建带有error的rejected promise。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> promise = <span class=\"built_in\">Promise</span>.reject(error)</div><div class=\"line\"><span class=\"comment\">// 等价于</span></div><div class=\"line\"><span class=\"keyword\">let</span> promise = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> reject(error))</div></pre></figure>\n<p>Promise.all并行运行多个promise，并等待所有promise准备就绪。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> names = [<span class=\"string\">'remy'</span>, <span class=\"string\">'jeresig'</span>, <span class=\"string\">'iliakan'</span>]</div><div class=\"line\"><span class=\"keyword\">let</span> requests = names.map(<span class=\"function\"><span class=\"params\">name</span> =&gt;</span> fetch(<span class=\"string\">`https://api.github.com/users/<span class=\"subst\">$&#123;name&#125;</span>`</span>))</div><div class=\"line\"><span class=\"built_in\">Promise</span>.all(requests)</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">responses</span> =&gt;</span> &#123;</div><div class=\"line\">        responses.forEach(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;response.url&#125;</span>: <span class=\"subst\">$&#123;response.status&#125;</span>`</span>))</div><div class=\"line\">        <span class=\"keyword\">return</span> responses</div><div class=\"line\">    &#125;)</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">responses</span> =&gt;</span> <span class=\"built_in\">Promise</span>.all(responses.map(<span class=\"function\"><span class=\"params\">r</span> =&gt;</span> r.json())))</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">users</span> =&gt;</span> <span class=\"built_in\">console</span>.log(users.map(<span class=\"function\"><span class=\"params\">user</span> =&gt;</span> user.name)))</div></pre></figure>\n<p>Promise.all使用下面这样的容错机制。catch会对异常promise产生error并返回，根据promise工作原理，只要then/catch处理器返回了值，执行流程就会“正常”进行。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">let</span> urls = [</div><div class=\"line\">    <span class=\"string\">'https://api.github.com/users/YopheeHsin'</span>,</div><div class=\"line\">    <span class=\"string\">'/'</span>,</div><div class=\"line\">    <span class=\"string\">'http://no-such-url'</span></div><div class=\"line\">]</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">Promise</span>.all(urls.map(<span class=\"function\"><span class=\"params\">url</span> =&gt;</span> fetch(url).catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> err)))</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">responses</span> =&gt;</span> <span class=\"built_in\">Promise</span>.all(</div><div class=\"line\">        responses.map(<span class=\"function\"><span class=\"params\">r</span> =&gt;</span> r <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Error</span> ? r : r.json().catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> err))</div><div class=\"line\">    ))</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">results</span> =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(results[<span class=\"number\">0</span>].name)</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(results[<span class=\"number\">1</span>])</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(results[<span class=\"number\">2</span>])</div><div class=\"line\">    &#125;)</div></pre></figure>\n<p>Promise.race与Promise.all类似，但不会等待所有promise都完成，只等待第一个promise完成后即继续执行。</p>\n<h2 id=\"async-await\"><a href=\"#async-await\" class=\"headerlink\" title=\"async/await\"></a>async/await</h2><p>ES8标准引入的async函数使得异步操作变得更加方便。</p>\n<p>将async关键字放在函数前，意味着该函数总是会返回promise。如果代码return非promise值，会自动将其封装到resolved promise中。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">// 等价于</span></div><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(<span class=\"number\">1</span>)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">f().then(<span class=\"function\"><span class=\"params\">r</span> =&gt;</span> <span class=\"built_in\">console</span>.log(r))</div></pre></figure>\n<p>await只在async函数中工作，作用是等待promise，直到其解决并返回其结果。这样的语法比promise.then更优雅地获取结果，也更容易阅读和编写。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showAvatar</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> response = <span class=\"keyword\">await</span> fetch(<span class=\"string\">'https://api.github.com/users/YopheeHsin'</span>)</div><div class=\"line\">    <span class=\"keyword\">let</span> githubUser = <span class=\"keyword\">await</span> response.json()</div><div class=\"line\">    <span class=\"keyword\">let</span> img = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'img'</span>)</div><div class=\"line\">    img.src = githubUser.avatar_url</div><div class=\"line\">    <span class=\"built_in\">document</span>.body.append(img)</div><div class=\"line\">    <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> setTimeout(resolve, <span class=\"number\">3000</span>))</div><div class=\"line\">    img.remove()</div><div class=\"line\">    <span class=\"keyword\">return</span> githubUser</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\">showAvatar()</div><div class=\"line\">    .then(<span class=\"function\"><span class=\"params\">githubUser</span> =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">`Finished showing <span class=\"subst\">$&#123;githubUser.name&#125;</span>`</span>))</div></pre></figure>\n<p>当await的promise失败reject时，它会抛出error，就像该行上有常规throw语句一样，可以使用try…catch来捕获这个error。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">await</span> <span class=\"built_in\">Promise</span>.reject(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Whoops!'</span>))</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">// 等价于</span></div><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Whoops!'</span>)</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 出错时，控制权会进入catch块，可以多行封装</span></div><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> response = <span class=\"keyword\">await</span> fetch(<span class=\"string\">'/no-user-here'</span>)</div><div class=\"line\">        <span class=\"keyword\">let</span> user = <span class=\"keyword\">await</span> response.json()</div><div class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(err)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"comment\">// 也可以通过追加catch来处理</span></div><div class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> response = <span class=\"keyword\">await</span> fetch(<span class=\"string\">'http://no-such-url'</span>)</div><div class=\"line\">&#125;</div><div class=\"line\">f().catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> <span class=\"built_in\">console</span>.log(err))</div></pre></figure>\n<p><cite>参考：<br><a href=\"http://es6.ruanyifeng.com/#docs/promise\" target=\"_blank\" rel=\"noopener\">http://es6.ruanyifeng.com/#docs/promise</a><br><a href=\"http://es6.ruanyifeng.com/#docs/async\" target=\"_blank\" rel=\"noopener\">http://es6.ruanyifeng.com/#docs/async</a><br><a href=\"https://javascript.info/async\" target=\"_blank\" rel=\"noopener\">https://javascript.info/async</a></cite></p>\n"},{"title":"绘制D3树状图tree和集群图cluster","date":"2018-12-07T16:00:00.000Z","keywords":"D3树状图, D3 tree, D3集群图, D3 cluster, D3","description":"绘制D3树状图tree和集群图cluster的详细步骤","_content":"\n<div class=\"scrollable-wrapper\"><svg id=\"d3\"></svg></div>\n\n## 画布\n\nD3可以使用HTML、SVG或者Canvas展示数据，这里使用SVG。\n\n``` HTML\n<svg id=\"d3\"></svg>\n```\n\n## 数据\n\nJSON格式的初始层次结构数据，name是节点名称，children是子节点，没有children的是叶子节点。\n\n``` JavaScript\nconst data = {\n    name: '贾家',\n    children: [{\n        name: '宁国公',\n        children: [{\n            name: '贾代化',\n            children: [{\n                name: '贾敬',\n                children: [{\n                    name: '贾珍(妻尤氏)',\n                    children: [{\n                        name: '贾蓉(妻可卿)'\n                    }]\n                }, {\n                    name: '惜春'\n                }]\n            }]\n        }]\n    }, {\n        name: '荣国公',\n        children: [{\n            name: '贾代善(妻贾母)',\n            children: [{\n                // 省略...\n            }]\n        }]\n    }]\n}\n```\n\n## 尺寸\n\nSVG画布的宽度width固定，使用同父元素相同的宽度，而高度height根据树状图的节点层次动态计算。\n\nD3树状图的默认布局是纵向的，是将各节点坐标安排成一颗由上到下逐渐展开的竖直的树。而这里要绘制的树是由左至右横向展开的，所以树状图中的x，y坐标需要跟画布对掉。dx表示树状图纵向的节点尺寸固定为20，dy表示横向的节点尺寸，dy根据SVG画布的宽度和树状图横向最深节点的数目计算。\n\n``` JavaScript\n// SVG画布的宽度最少为600\nconst width = Math.max(document.querySelector('svg#d3').parentNode.clientWidth, 600)\nlet height\nconst dx = 20\nlet dy\n```\n\n## 层次化\n\n使用hierarchy方法对层次数据进行处理，并设置横向节点尺寸dy。\n\n``` JavaScript\nconst hierarchy = d3.hierarchy(data)\n// 如果需要对同级数据排序\n// hierarchy.sort((a, b) => (a.height - b.height) || a.data.name.localeCompare(b.data.name))\n\ndy = width / (hierarchy.height + 1) - 5\n```\n\nhierarchy方法返回的根节点和每个后代节点都会被附加如下属性：\n\n- node.data 当前节点关联的原始数据\n- node.depth 当前节点的深度，根节点为0\n- node.height 当前节点的高度，叶节点为0\n- node.parent 当前节点的父节点，根节点为null\n- node.children 当前节点的子节点，叶节点为undefined\n\n## 树布局\n\n使用tree方法创建树布局，并设置节点尺寸。D3会自动计算并为每个节点设置位置属性(x,y)，根节点的位置为(0,0)。设置画布的高度为树状图纵向的最大值与最小值的差值加上一定的边距。\n\n集群图cluster与树状图tree类似，不同点是cluster的所有的叶子节点都在相同的深度上，tree布局在空间上更紧凑一些。\n\n``` JavaScript\nconst root = d3.tree().nodeSize([dx, dy])(hierarchy)\n// 集群图 const root = d3.cluster()\n\nlet min = Infinity\nlet max = -min\nroot.each(d => {\n    if (d.x > max) max = d.x\n    if (d.x < min) min = d.x\n})\nheight = max - min + dx * 2\n```\n\n## 绘图\n\n选择SVG画布，设置其宽度和高度。\n\n``` JavaScript\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n```\n\n建立分组，统一设置字体大小，调整绘图元素位置。\n\n``` JavaScript\nconst g = svg.append('g')\n    .attr('font-size', 12)\n    .attr('transform', `translate(${dy / 3}, ${dx - min})`)\n```\n\nroot.links()返回树的连线links数组，每个link是定义了source和target属性的对象，source为父节点，target为子节点。使用SVG的三次贝塞尔曲线C命令连接各组links。\n\n用C命令创建三次贝塞尔曲线，需要设置三组坐标参数：C x1,y1 x2,y2 x,y，最后一组坐标(x,y)表示的是曲线的终点，另外两组坐标是控制点，(x1,y1)是起点的控制点，(x2,y2)是终点的控制点。\n\n使用M命令移动画笔到target点，曲线沿着起点到第一控制点的方向伸出，逐渐弯曲，然后沿着第二控制点到终点的方向结束。\n\n``` JavaScript\nconst link = g.append('g')\n    .attr('fill', 'none')\n    .attr('stroke', '#83887c')\n    .attr('stroke-width', 1.5)\n    .selectAll('path')\n    .data(root.links())\n    .enter().append('path')\n    .attr('d', d => `\n        M${d.target.y}, ${d.target.x}\n        C${d.source.y + dy / 2}, ${d.target.x}\n        ${d.source.y + dy / 2}, ${d.source.x}\n        ${d.source.y}, ${d.source.x}\n    `)\n```\n\nroot.descendants()返回树的所有节点数组，用分组将每个节点移动到对应位置。所有节点的公共分组，设置路径转角stroke-linejoin为圆形，轮廓厚度为3，这两个设置用于改善节点间连线上覆盖文字的显示效果。\n\n``` JavaScript\nconst node = g.append('g')\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-width', 3)\n    .selectAll('g')\n    .data(root.descendants())\n    .enter().append('g')\n    .attr('transform', d => `translate(${d.y},${d.x})`)\n```\n\n节点处画实心圆。\n\n``` JavaScript\nnode.append('circle')\n    .attr('fill', '#83887c')\n    .attr('r', 2.5)\n```\n\nSVG文字text的(x,y)表示基点坐标，(dx,dy)是相对于基点的偏移距离，text-anchor用来定义文本和基点的相对性。\n\n节点处绘制文字，无children的叶节点，文字在圆圈右边，其他节点的文字则在圆圈左边。在圆圈左边的文字会覆盖在连线上，为了改善显示效果，使用clone命令复制文字并填充浅色用作背景。SVG中，后绘制的元素会覆盖先绘制的元素，所以需要使用lower命令将复制出来的背景文字元素移动到其父元素的第一个子元素位置。\n\n``` JavaScript\nnode.append('text')\n    .attr('dy', '0.3em')\n    .attr('x', d => d.children ? -6 : 6)\n    .text(d => d.data.name)\n    .filter(d => d.children)\n    .attr('text-anchor', 'end')\n    .clone(true).lower()\n    .attr('stroke', '#f2f6ed')\n```\n\n<cite>参考：https://observablehq.com/@d3/cluster-dendrogram</cite>\n\n\n{% raw %}\n<script src='/scripts/d3.v5.min.js'></script>\n<script>\nconst data = {\n    name: '贾家',\n    children: [{\n        name: '宁国公',\n        children: [{\n            name: '贾代化',\n            children: [{\n                name: '贾敬',\n                children: [{\n                    name: '贾珍(妻尤氏)',\n                    children: [{\n                        name: '贾蓉(妻可卿)'\n                    }]\n                }, {\n                    name: '惜春'\n                }]\n            }]\n        }]\n    }, {\n        name: '荣国公',\n        children: [{\n            name: '贾代善(妻贾母)',\n            children: [{\n                name: '贾赦(妻邢夫人)',\n                children: [{\n                    name: '贾琏(妻王熙凤)',\n                    children: [{\n                        name: '巧姐'\n                    }]\n                }, {\n                    name: '迎春'\n                }, {\n                    name: '贾琮'\n                }]\n            }, {\n                name: '贾政(妻王夫人)',\n                children: [{\n                    name: '贾珠(妻李纨)',\n                    children: [{\n                        name: '贾兰'\n                    }]\n                }, {\n                    name: '元春'\n                }, {\n                    name: '宝玉'\n                }, {\n                    name: '贾环'\n                }, {\n                    name: '探春'\n                }]\n            }]\n        }]\n    }]\n}\n\nconst width = Math.max(document.querySelector('svg#d3').parentNode.clientWidth, 600)\nlet height\nconst dx = 20\nlet dy\n\nconst hierarchy = d3.hierarchy(data)\n// hierarchy.sort((a, b) => (a.height - b.height) || a.data.name.localeCompare(b.data.name))\n\ndy = width / (hierarchy.height + 1) - 5\n\nconst root = d3.tree().nodeSize([dx, dy])(hierarchy)\n// const root = d3.cluster()\n\nlet min = Infinity\nlet max = -min\nroot.each(d => {\n    if (d.x > max) max = d.x\n    if (d.x < min) min = d.x\n})\nheight = max - min + dx * 2\n\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n\nconst g = svg.append('g')\n    .attr('font-size', 12)\n    .attr('transform', `translate(${dy / 3}, ${dx - min})`)\n\nconst link = g.append('g')\n    .attr('fill', 'none')\n    .attr('stroke', '#83887c')\n    .attr('stroke-width', 1.5)\n    .selectAll('path')\n    .data(root.links())\n    .enter().append('path')\n    .attr('d', d => `\n        M${d.target.y}, ${d.target.x}\n        C${d.source.y + dy / 2}, ${d.target.x}\n        ${d.source.y + dy / 2}, ${d.source.x}\n        ${d.source.y}, ${d.source.x}\n    `)\n\nconst node = g.append('g')\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-width', 3)\n    .selectAll('g')\n    .data(root.descendants())\n    .enter().append('g')\n    .attr('transform', d => `translate(${d.y},${d.x})`)\n\nnode.append('circle')\n    .attr('fill', '#83887c')\n    .attr('r', 2.5)\n\nnode.append('text')\n    .attr('dy', '0.3em')\n    .attr('x', d => d.children ? -6 : 6)\n    .text(d => d.data.name)\n    .filter(d => d.children)\n    .attr('text-anchor', 'end')\n    .clone(true).lower()\n    .attr('stroke', '#f2f6ed')\n</script>\n{% endraw %}\n","source":"_posts/tree-cluster.md","raw":"---\ntitle: 绘制D3树状图tree和集群图cluster\ndate: 2018-12-08 00:00:00\ncategories: D3.js\nkeywords: D3树状图, D3 tree, D3集群图, D3 cluster, D3\ndescription: 绘制D3树状图tree和集群图cluster的详细步骤\n---\n\n<div class=\"scrollable-wrapper\"><svg id=\"d3\"></svg></div>\n\n## 画布\n\nD3可以使用HTML、SVG或者Canvas展示数据，这里使用SVG。\n\n``` HTML\n<svg id=\"d3\"></svg>\n```\n\n## 数据\n\nJSON格式的初始层次结构数据，name是节点名称，children是子节点，没有children的是叶子节点。\n\n``` JavaScript\nconst data = {\n    name: '贾家',\n    children: [{\n        name: '宁国公',\n        children: [{\n            name: '贾代化',\n            children: [{\n                name: '贾敬',\n                children: [{\n                    name: '贾珍(妻尤氏)',\n                    children: [{\n                        name: '贾蓉(妻可卿)'\n                    }]\n                }, {\n                    name: '惜春'\n                }]\n            }]\n        }]\n    }, {\n        name: '荣国公',\n        children: [{\n            name: '贾代善(妻贾母)',\n            children: [{\n                // 省略...\n            }]\n        }]\n    }]\n}\n```\n\n## 尺寸\n\nSVG画布的宽度width固定，使用同父元素相同的宽度，而高度height根据树状图的节点层次动态计算。\n\nD3树状图的默认布局是纵向的，是将各节点坐标安排成一颗由上到下逐渐展开的竖直的树。而这里要绘制的树是由左至右横向展开的，所以树状图中的x，y坐标需要跟画布对掉。dx表示树状图纵向的节点尺寸固定为20，dy表示横向的节点尺寸，dy根据SVG画布的宽度和树状图横向最深节点的数目计算。\n\n``` JavaScript\n// SVG画布的宽度最少为600\nconst width = Math.max(document.querySelector('svg#d3').parentNode.clientWidth, 600)\nlet height\nconst dx = 20\nlet dy\n```\n\n## 层次化\n\n使用hierarchy方法对层次数据进行处理，并设置横向节点尺寸dy。\n\n``` JavaScript\nconst hierarchy = d3.hierarchy(data)\n// 如果需要对同级数据排序\n// hierarchy.sort((a, b) => (a.height - b.height) || a.data.name.localeCompare(b.data.name))\n\ndy = width / (hierarchy.height + 1) - 5\n```\n\nhierarchy方法返回的根节点和每个后代节点都会被附加如下属性：\n\n- node.data 当前节点关联的原始数据\n- node.depth 当前节点的深度，根节点为0\n- node.height 当前节点的高度，叶节点为0\n- node.parent 当前节点的父节点，根节点为null\n- node.children 当前节点的子节点，叶节点为undefined\n\n## 树布局\n\n使用tree方法创建树布局，并设置节点尺寸。D3会自动计算并为每个节点设置位置属性(x,y)，根节点的位置为(0,0)。设置画布的高度为树状图纵向的最大值与最小值的差值加上一定的边距。\n\n集群图cluster与树状图tree类似，不同点是cluster的所有的叶子节点都在相同的深度上，tree布局在空间上更紧凑一些。\n\n``` JavaScript\nconst root = d3.tree().nodeSize([dx, dy])(hierarchy)\n// 集群图 const root = d3.cluster()\n\nlet min = Infinity\nlet max = -min\nroot.each(d => {\n    if (d.x > max) max = d.x\n    if (d.x < min) min = d.x\n})\nheight = max - min + dx * 2\n```\n\n## 绘图\n\n选择SVG画布，设置其宽度和高度。\n\n``` JavaScript\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n```\n\n建立分组，统一设置字体大小，调整绘图元素位置。\n\n``` JavaScript\nconst g = svg.append('g')\n    .attr('font-size', 12)\n    .attr('transform', `translate(${dy / 3}, ${dx - min})`)\n```\n\nroot.links()返回树的连线links数组，每个link是定义了source和target属性的对象，source为父节点，target为子节点。使用SVG的三次贝塞尔曲线C命令连接各组links。\n\n用C命令创建三次贝塞尔曲线，需要设置三组坐标参数：C x1,y1 x2,y2 x,y，最后一组坐标(x,y)表示的是曲线的终点，另外两组坐标是控制点，(x1,y1)是起点的控制点，(x2,y2)是终点的控制点。\n\n使用M命令移动画笔到target点，曲线沿着起点到第一控制点的方向伸出，逐渐弯曲，然后沿着第二控制点到终点的方向结束。\n\n``` JavaScript\nconst link = g.append('g')\n    .attr('fill', 'none')\n    .attr('stroke', '#83887c')\n    .attr('stroke-width', 1.5)\n    .selectAll('path')\n    .data(root.links())\n    .enter().append('path')\n    .attr('d', d => `\n        M${d.target.y}, ${d.target.x}\n        C${d.source.y + dy / 2}, ${d.target.x}\n        ${d.source.y + dy / 2}, ${d.source.x}\n        ${d.source.y}, ${d.source.x}\n    `)\n```\n\nroot.descendants()返回树的所有节点数组，用分组将每个节点移动到对应位置。所有节点的公共分组，设置路径转角stroke-linejoin为圆形，轮廓厚度为3，这两个设置用于改善节点间连线上覆盖文字的显示效果。\n\n``` JavaScript\nconst node = g.append('g')\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-width', 3)\n    .selectAll('g')\n    .data(root.descendants())\n    .enter().append('g')\n    .attr('transform', d => `translate(${d.y},${d.x})`)\n```\n\n节点处画实心圆。\n\n``` JavaScript\nnode.append('circle')\n    .attr('fill', '#83887c')\n    .attr('r', 2.5)\n```\n\nSVG文字text的(x,y)表示基点坐标，(dx,dy)是相对于基点的偏移距离，text-anchor用来定义文本和基点的相对性。\n\n节点处绘制文字，无children的叶节点，文字在圆圈右边，其他节点的文字则在圆圈左边。在圆圈左边的文字会覆盖在连线上，为了改善显示效果，使用clone命令复制文字并填充浅色用作背景。SVG中，后绘制的元素会覆盖先绘制的元素，所以需要使用lower命令将复制出来的背景文字元素移动到其父元素的第一个子元素位置。\n\n``` JavaScript\nnode.append('text')\n    .attr('dy', '0.3em')\n    .attr('x', d => d.children ? -6 : 6)\n    .text(d => d.data.name)\n    .filter(d => d.children)\n    .attr('text-anchor', 'end')\n    .clone(true).lower()\n    .attr('stroke', '#f2f6ed')\n```\n\n<cite>参考：https://observablehq.com/@d3/cluster-dendrogram</cite>\n\n\n{% raw %}\n<script src='/scripts/d3.v5.min.js'></script>\n<script>\nconst data = {\n    name: '贾家',\n    children: [{\n        name: '宁国公',\n        children: [{\n            name: '贾代化',\n            children: [{\n                name: '贾敬',\n                children: [{\n                    name: '贾珍(妻尤氏)',\n                    children: [{\n                        name: '贾蓉(妻可卿)'\n                    }]\n                }, {\n                    name: '惜春'\n                }]\n            }]\n        }]\n    }, {\n        name: '荣国公',\n        children: [{\n            name: '贾代善(妻贾母)',\n            children: [{\n                name: '贾赦(妻邢夫人)',\n                children: [{\n                    name: '贾琏(妻王熙凤)',\n                    children: [{\n                        name: '巧姐'\n                    }]\n                }, {\n                    name: '迎春'\n                }, {\n                    name: '贾琮'\n                }]\n            }, {\n                name: '贾政(妻王夫人)',\n                children: [{\n                    name: '贾珠(妻李纨)',\n                    children: [{\n                        name: '贾兰'\n                    }]\n                }, {\n                    name: '元春'\n                }, {\n                    name: '宝玉'\n                }, {\n                    name: '贾环'\n                }, {\n                    name: '探春'\n                }]\n            }]\n        }]\n    }]\n}\n\nconst width = Math.max(document.querySelector('svg#d3').parentNode.clientWidth, 600)\nlet height\nconst dx = 20\nlet dy\n\nconst hierarchy = d3.hierarchy(data)\n// hierarchy.sort((a, b) => (a.height - b.height) || a.data.name.localeCompare(b.data.name))\n\ndy = width / (hierarchy.height + 1) - 5\n\nconst root = d3.tree().nodeSize([dx, dy])(hierarchy)\n// const root = d3.cluster()\n\nlet min = Infinity\nlet max = -min\nroot.each(d => {\n    if (d.x > max) max = d.x\n    if (d.x < min) min = d.x\n})\nheight = max - min + dx * 2\n\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n\nconst g = svg.append('g')\n    .attr('font-size', 12)\n    .attr('transform', `translate(${dy / 3}, ${dx - min})`)\n\nconst link = g.append('g')\n    .attr('fill', 'none')\n    .attr('stroke', '#83887c')\n    .attr('stroke-width', 1.5)\n    .selectAll('path')\n    .data(root.links())\n    .enter().append('path')\n    .attr('d', d => `\n        M${d.target.y}, ${d.target.x}\n        C${d.source.y + dy / 2}, ${d.target.x}\n        ${d.source.y + dy / 2}, ${d.source.x}\n        ${d.source.y}, ${d.source.x}\n    `)\n\nconst node = g.append('g')\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-width', 3)\n    .selectAll('g')\n    .data(root.descendants())\n    .enter().append('g')\n    .attr('transform', d => `translate(${d.y},${d.x})`)\n\nnode.append('circle')\n    .attr('fill', '#83887c')\n    .attr('r', 2.5)\n\nnode.append('text')\n    .attr('dy', '0.3em')\n    .attr('x', d => d.children ? -6 : 6)\n    .text(d => d.data.name)\n    .filter(d => d.children)\n    .attr('text-anchor', 'end')\n    .clone(true).lower()\n    .attr('stroke', '#f2f6ed')\n</script>\n{% endraw %}\n","slug":"tree-cluster","published":1,"updated":"2019-03-22T10:40:18.430Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160en0a003n3a8iyo69tf0t","content":"<div class=\"scrollable-wrapper\"><svg id=\"d3\"/></div>\n\n<h2 id=\"画布\"><a href=\"#画布\" class=\"headerlink\" title=\"画布\"></a>画布</h2><p>D3可以使用HTML、SVG或者Canvas展示数据，这里使用SVG。</p>\n<figure class=\"highlight html\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">id</span>=<span class=\"string\">\"d3\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></div></pre></figure>\n<h2 id=\"数据\"><a href=\"#数据\" class=\"headerlink\" title=\"数据\"></a>数据</h2><p>JSON格式的初始层次结构数据，name是节点名称，children是子节点，没有children的是叶子节点。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> data = &#123;</div><div class=\"line\">    name: <span class=\"string\">'贾家'</span>,</div><div class=\"line\">    children: [&#123;</div><div class=\"line\">        name: <span class=\"string\">'宁国公'</span>,</div><div class=\"line\">        children: [&#123;</div><div class=\"line\">            name: <span class=\"string\">'贾代化'</span>,</div><div class=\"line\">            children: [&#123;</div><div class=\"line\">                name: <span class=\"string\">'贾敬'</span>,</div><div class=\"line\">                children: [&#123;</div><div class=\"line\">                    name: <span class=\"string\">'贾珍(妻尤氏)'</span>,</div><div class=\"line\">                    children: [&#123;</div><div class=\"line\">                        name: <span class=\"string\">'贾蓉(妻可卿)'</span></div><div class=\"line\">                    &#125;]</div><div class=\"line\">                &#125;, &#123;</div><div class=\"line\">                    name: <span class=\"string\">'惜春'</span></div><div class=\"line\">                &#125;]</div><div class=\"line\">            &#125;]</div><div class=\"line\">        &#125;]</div><div class=\"line\">    &#125;, &#123;</div><div class=\"line\">        name: <span class=\"string\">'荣国公'</span>,</div><div class=\"line\">        children: [&#123;</div><div class=\"line\">            name: <span class=\"string\">'贾代善(妻贾母)'</span>,</div><div class=\"line\">            children: [&#123;</div><div class=\"line\">                <span class=\"comment\">// 省略...</span></div><div class=\"line\">            &#125;]</div><div class=\"line\">        &#125;]</div><div class=\"line\">    &#125;]</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"尺寸\"><a href=\"#尺寸\" class=\"headerlink\" title=\"尺寸\"></a>尺寸</h2><p>SVG画布的宽度width固定，使用同父元素相同的宽度，而高度height根据树状图的节点层次动态计算。</p>\n<p>D3树状图的默认布局是纵向的，是将各节点坐标安排成一颗由上到下逐渐展开的竖直的树。而这里要绘制的树是由左至右横向展开的，所以树状图中的x，y坐标需要跟画布对掉。dx表示树状图纵向的节点尺寸固定为20，dy表示横向的节点尺寸，dy根据SVG画布的宽度和树状图横向最深节点的数目计算。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// SVG画布的宽度最少为600</span></div><div class=\"line\"><span class=\"keyword\">const</span> width = <span class=\"built_in\">Math</span>.max(<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'svg#d3'</span>).parentNode.clientWidth, <span class=\"number\">600</span>)</div><div class=\"line\"><span class=\"keyword\">let</span> height</div><div class=\"line\"><span class=\"keyword\">const</span> dx = <span class=\"number\">20</span></div><div class=\"line\"><span class=\"keyword\">let</span> dy</div></pre></figure>\n<h2 id=\"层次化\"><a href=\"#层次化\" class=\"headerlink\" title=\"层次化\"></a>层次化</h2><p>使用hierarchy方法对层次数据进行处理，并设置横向节点尺寸dy。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> hierarchy = d3.hierarchy(data)</div><div class=\"line\"><span class=\"comment\">// 如果需要对同级数据排序</span></div><div class=\"line\"><span class=\"comment\">// hierarchy.sort((a, b) =&gt; (a.height - b.height) || a.data.name.localeCompare(b.data.name))</span></div><div class=\"line\"><br></div><div class=\"line\">dy = width / (hierarchy.height + <span class=\"number\">1</span>) - <span class=\"number\">5</span></div></pre></figure>\n<p>hierarchy方法返回的根节点和每个后代节点都会被附加如下属性：</p>\n<ul>\n<li>node.data 当前节点关联的原始数据</li>\n<li>node.depth 当前节点的深度，根节点为0</li>\n<li>node.height 当前节点的高度，叶节点为0</li>\n<li>node.parent 当前节点的父节点，根节点为null</li>\n<li>node.children 当前节点的子节点，叶节点为undefined</li>\n</ul>\n<h2 id=\"树布局\"><a href=\"#树布局\" class=\"headerlink\" title=\"树布局\"></a>树布局</h2><p>使用tree方法创建树布局，并设置节点尺寸。D3会自动计算并为每个节点设置位置属性(x,y)，根节点的位置为(0,0)。设置画布的高度为树状图纵向的最大值与最小值的差值加上一定的边距。</p>\n<p>集群图cluster与树状图tree类似，不同点是cluster的所有的叶子节点都在相同的深度上，tree布局在空间上更紧凑一些。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> root = d3.tree().nodeSize([dx, dy])(hierarchy)</div><div class=\"line\"><span class=\"comment\">// 集群图 const root = d3.cluster()</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">let</span> min = <span class=\"literal\">Infinity</span></div><div class=\"line\"><span class=\"keyword\">let</span> max = -min</div><div class=\"line\">root.each(<span class=\"function\"><span class=\"params\">d</span> =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (d.x &gt; max) max = d.x</div><div class=\"line\">    <span class=\"keyword\">if</span> (d.x &lt; min) min = d.x</div><div class=\"line\">&#125;)</div><div class=\"line\">height = max - min + dx * <span class=\"number\">2</span></div></pre></figure>\n<h2 id=\"绘图\"><a href=\"#绘图\" class=\"headerlink\" title=\"绘图\"></a>绘图</h2><p>选择SVG画布，设置其宽度和高度。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> svg = d3.select(<span class=\"string\">'svg#d3'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'width'</span>, width)</div><div class=\"line\">    .attr(<span class=\"string\">'height'</span>, height)</div><div class=\"line\">    .attr(<span class=\"string\">'viewBox'</span>, <span class=\"string\">`0 0 <span class=\"subst\">$&#123;width&#125;</span> <span class=\"subst\">$&#123;height&#125;</span>`</span>)</div></pre></figure>\n<p>建立分组，统一设置字体大小，调整绘图元素位置。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> g = svg.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'font-size'</span>, <span class=\"number\">12</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'transform'</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;dy <span class=\"regexp\">/ 3&#125;, $&#123;dx - min&#125;)`)</span></span></span></div></pre></figure>\n<p>root.links()返回树的连线links数组，每个link是定义了source和target属性的对象，source为父节点，target为子节点。使用SVG的三次贝塞尔曲线C命令连接各组links。</p>\n<p>用C命令创建三次贝塞尔曲线，需要设置三组坐标参数：C x1,y1 x2,y2 x,y，最后一组坐标(x,y)表示的是曲线的终点，另外两组坐标是控制点，(x1,y1)是起点的控制点，(x2,y2)是终点的控制点。</p>\n<p>使用M命令移动画笔到target点，曲线沿着起点到第一控制点的方向伸出，逐渐弯曲，然后沿着第二控制点到终点的方向结束。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> link = g.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'fill'</span>, <span class=\"string\">'none'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'stroke'</span>, <span class=\"string\">'#83887c'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'stroke-width'</span>, <span class=\"number\">1.5</span>)</div><div class=\"line\">    .selectAll(<span class=\"string\">'path'</span>)</div><div class=\"line\">    .data(root.links())</div><div class=\"line\">    .enter().append(<span class=\"string\">'path'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'d'</span>, d =&gt; <span class=\"string\">`</span></div><div class=\"line\"><span class=\"string\">        M<span class=\"subst\">$&#123;d.target.y&#125;</span>, <span class=\"subst\">$&#123;d.target.x&#125;</span></span></div><div class=\"line\"><span class=\"string\">        C<span class=\"subst\">$&#123;d.source.y + dy <span class=\"regexp\">/ 2&#125;, $&#123;d.target.x&#125;</span></span></span></div><div class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">        $&#123;d.source.y + dy /</span> <span class=\"number\">2</span>&#125;</span>, <span class=\"subst\">$&#123;d.source.x&#125;</span></span></div><div class=\"line\"><span class=\"string\">        <span class=\"subst\">$&#123;d.source.y&#125;</span>, <span class=\"subst\">$&#123;d.source.x&#125;</span></span></div><div class=\"line\"><span class=\"string\">    `</span>)</div></pre></figure>\n<p>root.descendants()返回树的所有节点数组，用分组将每个节点移动到对应位置。所有节点的公共分组，设置路径转角stroke-linejoin为圆形，轮廓厚度为3，这两个设置用于改善节点间连线上覆盖文字的显示效果。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> node = g.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'stroke-linejoin'</span>, <span class=\"string\">'round'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'stroke-width'</span>, <span class=\"number\">3</span>)</div><div class=\"line\">    .selectAll(<span class=\"string\">'g'</span>)</div><div class=\"line\">    .data(root.descendants())</div><div class=\"line\">    .enter().append(<span class=\"string\">'g'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'transform'</span>, d =&gt; <span class=\"string\">`translate(<span class=\"subst\">$&#123;d.y&#125;</span>,<span class=\"subst\">$&#123;d.x&#125;</span>)`</span>)</div></pre></figure>\n<p>节点处画实心圆。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">node.append(<span class=\"string\">'circle'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'fill'</span>, <span class=\"string\">'#83887c'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'r'</span>, <span class=\"number\">2.5</span>)</div></pre></figure>\n<p>SVG文字text的(x,y)表示基点坐标，(dx,dy)是相对于基点的偏移距离，text-anchor用来定义文本和基点的相对性。</p>\n<p>节点处绘制文字，无children的叶节点，文字在圆圈右边，其他节点的文字则在圆圈左边。在圆圈左边的文字会覆盖在连线上，为了改善显示效果，使用clone命令复制文字并填充浅色用作背景。SVG中，后绘制的元素会覆盖先绘制的元素，所以需要使用lower命令将复制出来的背景文字元素移动到其父元素的第一个子元素位置。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">node.append(<span class=\"string\">'text'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'dy'</span>, <span class=\"string\">'0.3em'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'x'</span>, d =&gt; d.children ? <span class=\"number\">-6</span> : <span class=\"number\">6</span>)</div><div class=\"line\">    .text(<span class=\"function\"><span class=\"params\">d</span> =&gt;</span> d.data.name)</div><div class=\"line\">    .filter(<span class=\"function\"><span class=\"params\">d</span> =&gt;</span> d.children)</div><div class=\"line\">    .attr(<span class=\"string\">'text-anchor'</span>, <span class=\"string\">'end'</span>)</div><div class=\"line\">    .clone(<span class=\"literal\">true</span>).lower()</div><div class=\"line\">    .attr(<span class=\"string\">'stroke'</span>, <span class=\"string\">'#f2f6ed'</span>)</div></pre></figure>\n<p><cite>参考：<a href=\"https://observablehq.com/@d3/cluster-dendrogram\" target=\"_blank\" rel=\"noopener\">https://observablehq.com/@d3/cluster-dendrogram</a></cite></p>\n\n<script src=\"/scripts/d3.v5.min.js\"></script>\n<script>\nconst data = {\n    name: '贾家',\n    children: [{\n        name: '宁国公',\n        children: [{\n            name: '贾代化',\n            children: [{\n                name: '贾敬',\n                children: [{\n                    name: '贾珍(妻尤氏)',\n                    children: [{\n                        name: '贾蓉(妻可卿)'\n                    }]\n                }, {\n                    name: '惜春'\n                }]\n            }]\n        }]\n    }, {\n        name: '荣国公',\n        children: [{\n            name: '贾代善(妻贾母)',\n            children: [{\n                name: '贾赦(妻邢夫人)',\n                children: [{\n                    name: '贾琏(妻王熙凤)',\n                    children: [{\n                        name: '巧姐'\n                    }]\n                }, {\n                    name: '迎春'\n                }, {\n                    name: '贾琮'\n                }]\n            }, {\n                name: '贾政(妻王夫人)',\n                children: [{\n                    name: '贾珠(妻李纨)',\n                    children: [{\n                        name: '贾兰'\n                    }]\n                }, {\n                    name: '元春'\n                }, {\n                    name: '宝玉'\n                }, {\n                    name: '贾环'\n                }, {\n                    name: '探春'\n                }]\n            }]\n        }]\n    }]\n}\n\nconst width = Math.max(document.querySelector('svg#d3').parentNode.clientWidth, 600)\nlet height\nconst dx = 20\nlet dy\n\nconst hierarchy = d3.hierarchy(data)\n// hierarchy.sort((a, b) => (a.height - b.height) || a.data.name.localeCompare(b.data.name))\n\ndy = width / (hierarchy.height + 1) - 5\n\nconst root = d3.tree().nodeSize([dx, dy])(hierarchy)\n// const root = d3.cluster()\n\nlet min = Infinity\nlet max = -min\nroot.each(d => {\n    if (d.x > max) max = d.x\n    if (d.x < min) min = d.x\n})\nheight = max - min + dx * 2\n\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n\nconst g = svg.append('g')\n    .attr('font-size', 12)\n    .attr('transform', `translate(${dy / 3}, ${dx - min})`)\n\nconst link = g.append('g')\n    .attr('fill', 'none')\n    .attr('stroke', '#83887c')\n    .attr('stroke-width', 1.5)\n    .selectAll('path')\n    .data(root.links())\n    .enter().append('path')\n    .attr('d', d => `\n        M${d.target.y}, ${d.target.x}\n        C${d.source.y + dy / 2}, ${d.target.x}\n        ${d.source.y + dy / 2}, ${d.source.x}\n        ${d.source.y}, ${d.source.x}\n    `)\n\nconst node = g.append('g')\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-width', 3)\n    .selectAll('g')\n    .data(root.descendants())\n    .enter().append('g')\n    .attr('transform', d => `translate(${d.y},${d.x})`)\n\nnode.append('circle')\n    .attr('fill', '#83887c')\n    .attr('r', 2.5)\n\nnode.append('text')\n    .attr('dy', '0.3em')\n    .attr('x', d => d.children ? -6 : 6)\n    .text(d => d.data.name)\n    .filter(d => d.children)\n    .attr('text-anchor', 'end')\n    .clone(true).lower()\n    .attr('stroke', '#f2f6ed')\n</script>\n\n","site":{"data":{}},"excerpt":"","more":"<div class=\"scrollable-wrapper\"><svg id=\"d3\"/></div>\n\n<h2 id=\"画布\"><a href=\"#画布\" class=\"headerlink\" title=\"画布\"></a>画布</h2><p>D3可以使用HTML、SVG或者Canvas展示数据，这里使用SVG。</p>\n<figure class=\"highlight html\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">id</span>=<span class=\"string\">\"d3\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></div></pre></figure>\n<h2 id=\"数据\"><a href=\"#数据\" class=\"headerlink\" title=\"数据\"></a>数据</h2><p>JSON格式的初始层次结构数据，name是节点名称，children是子节点，没有children的是叶子节点。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> data = &#123;</div><div class=\"line\">    name: <span class=\"string\">'贾家'</span>,</div><div class=\"line\">    children: [&#123;</div><div class=\"line\">        name: <span class=\"string\">'宁国公'</span>,</div><div class=\"line\">        children: [&#123;</div><div class=\"line\">            name: <span class=\"string\">'贾代化'</span>,</div><div class=\"line\">            children: [&#123;</div><div class=\"line\">                name: <span class=\"string\">'贾敬'</span>,</div><div class=\"line\">                children: [&#123;</div><div class=\"line\">                    name: <span class=\"string\">'贾珍(妻尤氏)'</span>,</div><div class=\"line\">                    children: [&#123;</div><div class=\"line\">                        name: <span class=\"string\">'贾蓉(妻可卿)'</span></div><div class=\"line\">                    &#125;]</div><div class=\"line\">                &#125;, &#123;</div><div class=\"line\">                    name: <span class=\"string\">'惜春'</span></div><div class=\"line\">                &#125;]</div><div class=\"line\">            &#125;]</div><div class=\"line\">        &#125;]</div><div class=\"line\">    &#125;, &#123;</div><div class=\"line\">        name: <span class=\"string\">'荣国公'</span>,</div><div class=\"line\">        children: [&#123;</div><div class=\"line\">            name: <span class=\"string\">'贾代善(妻贾母)'</span>,</div><div class=\"line\">            children: [&#123;</div><div class=\"line\">                <span class=\"comment\">// 省略...</span></div><div class=\"line\">            &#125;]</div><div class=\"line\">        &#125;]</div><div class=\"line\">    &#125;]</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"尺寸\"><a href=\"#尺寸\" class=\"headerlink\" title=\"尺寸\"></a>尺寸</h2><p>SVG画布的宽度width固定，使用同父元素相同的宽度，而高度height根据树状图的节点层次动态计算。</p>\n<p>D3树状图的默认布局是纵向的，是将各节点坐标安排成一颗由上到下逐渐展开的竖直的树。而这里要绘制的树是由左至右横向展开的，所以树状图中的x，y坐标需要跟画布对掉。dx表示树状图纵向的节点尺寸固定为20，dy表示横向的节点尺寸，dy根据SVG画布的宽度和树状图横向最深节点的数目计算。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"comment\">// SVG画布的宽度最少为600</span></div><div class=\"line\"><span class=\"keyword\">const</span> width = <span class=\"built_in\">Math</span>.max(<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'svg#d3'</span>).parentNode.clientWidth, <span class=\"number\">600</span>)</div><div class=\"line\"><span class=\"keyword\">let</span> height</div><div class=\"line\"><span class=\"keyword\">const</span> dx = <span class=\"number\">20</span></div><div class=\"line\"><span class=\"keyword\">let</span> dy</div></pre></figure>\n<h2 id=\"层次化\"><a href=\"#层次化\" class=\"headerlink\" title=\"层次化\"></a>层次化</h2><p>使用hierarchy方法对层次数据进行处理，并设置横向节点尺寸dy。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> hierarchy = d3.hierarchy(data)</div><div class=\"line\"><span class=\"comment\">// 如果需要对同级数据排序</span></div><div class=\"line\"><span class=\"comment\">// hierarchy.sort((a, b) =&gt; (a.height - b.height) || a.data.name.localeCompare(b.data.name))</span></div><div class=\"line\"><br></div><div class=\"line\">dy = width / (hierarchy.height + <span class=\"number\">1</span>) - <span class=\"number\">5</span></div></pre></figure>\n<p>hierarchy方法返回的根节点和每个后代节点都会被附加如下属性：</p>\n<ul>\n<li>node.data 当前节点关联的原始数据</li>\n<li>node.depth 当前节点的深度，根节点为0</li>\n<li>node.height 当前节点的高度，叶节点为0</li>\n<li>node.parent 当前节点的父节点，根节点为null</li>\n<li>node.children 当前节点的子节点，叶节点为undefined</li>\n</ul>\n<h2 id=\"树布局\"><a href=\"#树布局\" class=\"headerlink\" title=\"树布局\"></a>树布局</h2><p>使用tree方法创建树布局，并设置节点尺寸。D3会自动计算并为每个节点设置位置属性(x,y)，根节点的位置为(0,0)。设置画布的高度为树状图纵向的最大值与最小值的差值加上一定的边距。</p>\n<p>集群图cluster与树状图tree类似，不同点是cluster的所有的叶子节点都在相同的深度上，tree布局在空间上更紧凑一些。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> root = d3.tree().nodeSize([dx, dy])(hierarchy)</div><div class=\"line\"><span class=\"comment\">// 集群图 const root = d3.cluster()</span></div><div class=\"line\"><br></div><div class=\"line\"><span class=\"keyword\">let</span> min = <span class=\"literal\">Infinity</span></div><div class=\"line\"><span class=\"keyword\">let</span> max = -min</div><div class=\"line\">root.each(<span class=\"function\"><span class=\"params\">d</span> =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (d.x &gt; max) max = d.x</div><div class=\"line\">    <span class=\"keyword\">if</span> (d.x &lt; min) min = d.x</div><div class=\"line\">&#125;)</div><div class=\"line\">height = max - min + dx * <span class=\"number\">2</span></div></pre></figure>\n<h2 id=\"绘图\"><a href=\"#绘图\" class=\"headerlink\" title=\"绘图\"></a>绘图</h2><p>选择SVG画布，设置其宽度和高度。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> svg = d3.select(<span class=\"string\">'svg#d3'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'width'</span>, width)</div><div class=\"line\">    .attr(<span class=\"string\">'height'</span>, height)</div><div class=\"line\">    .attr(<span class=\"string\">'viewBox'</span>, <span class=\"string\">`0 0 <span class=\"subst\">$&#123;width&#125;</span> <span class=\"subst\">$&#123;height&#125;</span>`</span>)</div></pre></figure>\n<p>建立分组，统一设置字体大小，调整绘图元素位置。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> g = svg.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'font-size'</span>, <span class=\"number\">12</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'transform'</span>, <span class=\"string\">`translate(<span class=\"subst\">$&#123;dy <span class=\"regexp\">/ 3&#125;, $&#123;dx - min&#125;)`)</span></span></span></div></pre></figure>\n<p>root.links()返回树的连线links数组，每个link是定义了source和target属性的对象，source为父节点，target为子节点。使用SVG的三次贝塞尔曲线C命令连接各组links。</p>\n<p>用C命令创建三次贝塞尔曲线，需要设置三组坐标参数：C x1,y1 x2,y2 x,y，最后一组坐标(x,y)表示的是曲线的终点，另外两组坐标是控制点，(x1,y1)是起点的控制点，(x2,y2)是终点的控制点。</p>\n<p>使用M命令移动画笔到target点，曲线沿着起点到第一控制点的方向伸出，逐渐弯曲，然后沿着第二控制点到终点的方向结束。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> link = g.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'fill'</span>, <span class=\"string\">'none'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'stroke'</span>, <span class=\"string\">'#83887c'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'stroke-width'</span>, <span class=\"number\">1.5</span>)</div><div class=\"line\">    .selectAll(<span class=\"string\">'path'</span>)</div><div class=\"line\">    .data(root.links())</div><div class=\"line\">    .enter().append(<span class=\"string\">'path'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'d'</span>, d =&gt; <span class=\"string\">`</span></div><div class=\"line\"><span class=\"string\">        M<span class=\"subst\">$&#123;d.target.y&#125;</span>, <span class=\"subst\">$&#123;d.target.x&#125;</span></span></div><div class=\"line\"><span class=\"string\">        C<span class=\"subst\">$&#123;d.source.y + dy <span class=\"regexp\">/ 2&#125;, $&#123;d.target.x&#125;</span></span></span></div><div class=\"line\"><span class=\"string\"><span class=\"subst\"><span class=\"regexp\">        $&#123;d.source.y + dy /</span> <span class=\"number\">2</span>&#125;</span>, <span class=\"subst\">$&#123;d.source.x&#125;</span></span></div><div class=\"line\"><span class=\"string\">        <span class=\"subst\">$&#123;d.source.y&#125;</span>, <span class=\"subst\">$&#123;d.source.x&#125;</span></span></div><div class=\"line\"><span class=\"string\">    `</span>)</div></pre></figure>\n<p>root.descendants()返回树的所有节点数组，用分组将每个节点移动到对应位置。所有节点的公共分组，设置路径转角stroke-linejoin为圆形，轮廓厚度为3，这两个设置用于改善节点间连线上覆盖文字的显示效果。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> node = g.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'stroke-linejoin'</span>, <span class=\"string\">'round'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'stroke-width'</span>, <span class=\"number\">3</span>)</div><div class=\"line\">    .selectAll(<span class=\"string\">'g'</span>)</div><div class=\"line\">    .data(root.descendants())</div><div class=\"line\">    .enter().append(<span class=\"string\">'g'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'transform'</span>, d =&gt; <span class=\"string\">`translate(<span class=\"subst\">$&#123;d.y&#125;</span>,<span class=\"subst\">$&#123;d.x&#125;</span>)`</span>)</div></pre></figure>\n<p>节点处画实心圆。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">node.append(<span class=\"string\">'circle'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'fill'</span>, <span class=\"string\">'#83887c'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'r'</span>, <span class=\"number\">2.5</span>)</div></pre></figure>\n<p>SVG文字text的(x,y)表示基点坐标，(dx,dy)是相对于基点的偏移距离，text-anchor用来定义文本和基点的相对性。</p>\n<p>节点处绘制文字，无children的叶节点，文字在圆圈右边，其他节点的文字则在圆圈左边。在圆圈左边的文字会覆盖在连线上，为了改善显示效果，使用clone命令复制文字并填充浅色用作背景。SVG中，后绘制的元素会覆盖先绘制的元素，所以需要使用lower命令将复制出来的背景文字元素移动到其父元素的第一个子元素位置。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\">node.append(<span class=\"string\">'text'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'dy'</span>, <span class=\"string\">'0.3em'</span>)</div><div class=\"line\">    .attr(<span class=\"string\">'x'</span>, d =&gt; d.children ? <span class=\"number\">-6</span> : <span class=\"number\">6</span>)</div><div class=\"line\">    .text(<span class=\"function\"><span class=\"params\">d</span> =&gt;</span> d.data.name)</div><div class=\"line\">    .filter(<span class=\"function\"><span class=\"params\">d</span> =&gt;</span> d.children)</div><div class=\"line\">    .attr(<span class=\"string\">'text-anchor'</span>, <span class=\"string\">'end'</span>)</div><div class=\"line\">    .clone(<span class=\"literal\">true</span>).lower()</div><div class=\"line\">    .attr(<span class=\"string\">'stroke'</span>, <span class=\"string\">'#f2f6ed'</span>)</div></pre></figure>\n<p><cite>参考：<a href=\"https://observablehq.com/@d3/cluster-dendrogram\" target=\"_blank\" rel=\"noopener\">https://observablehq.com/@d3/cluster-dendrogram</a></cite></p>\n\n<script src=\"/scripts/d3.v5.min.js\"></script>\n<script>\nconst data = {\n    name: '贾家',\n    children: [{\n        name: '宁国公',\n        children: [{\n            name: '贾代化',\n            children: [{\n                name: '贾敬',\n                children: [{\n                    name: '贾珍(妻尤氏)',\n                    children: [{\n                        name: '贾蓉(妻可卿)'\n                    }]\n                }, {\n                    name: '惜春'\n                }]\n            }]\n        }]\n    }, {\n        name: '荣国公',\n        children: [{\n            name: '贾代善(妻贾母)',\n            children: [{\n                name: '贾赦(妻邢夫人)',\n                children: [{\n                    name: '贾琏(妻王熙凤)',\n                    children: [{\n                        name: '巧姐'\n                    }]\n                }, {\n                    name: '迎春'\n                }, {\n                    name: '贾琮'\n                }]\n            }, {\n                name: '贾政(妻王夫人)',\n                children: [{\n                    name: '贾珠(妻李纨)',\n                    children: [{\n                        name: '贾兰'\n                    }]\n                }, {\n                    name: '元春'\n                }, {\n                    name: '宝玉'\n                }, {\n                    name: '贾环'\n                }, {\n                    name: '探春'\n                }]\n            }]\n        }]\n    }]\n}\n\nconst width = Math.max(document.querySelector('svg#d3').parentNode.clientWidth, 600)\nlet height\nconst dx = 20\nlet dy\n\nconst hierarchy = d3.hierarchy(data)\n// hierarchy.sort((a, b) => (a.height - b.height) || a.data.name.localeCompare(b.data.name))\n\ndy = width / (hierarchy.height + 1) - 5\n\nconst root = d3.tree().nodeSize([dx, dy])(hierarchy)\n// const root = d3.cluster()\n\nlet min = Infinity\nlet max = -min\nroot.each(d => {\n    if (d.x > max) max = d.x\n    if (d.x < min) min = d.x\n})\nheight = max - min + dx * 2\n\nconst svg = d3.select('svg#d3')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', `0 0 ${width} ${height}`)\n\nconst g = svg.append('g')\n    .attr('font-size', 12)\n    .attr('transform', `translate(${dy / 3}, ${dx - min})`)\n\nconst link = g.append('g')\n    .attr('fill', 'none')\n    .attr('stroke', '#83887c')\n    .attr('stroke-width', 1.5)\n    .selectAll('path')\n    .data(root.links())\n    .enter().append('path')\n    .attr('d', d => `\n        M${d.target.y}, ${d.target.x}\n        C${d.source.y + dy / 2}, ${d.target.x}\n        ${d.source.y + dy / 2}, ${d.source.x}\n        ${d.source.y}, ${d.source.x}\n    `)\n\nconst node = g.append('g')\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-width', 3)\n    .selectAll('g')\n    .data(root.descendants())\n    .enter().append('g')\n    .attr('transform', d => `translate(${d.y},${d.x})`)\n\nnode.append('circle')\n    .attr('fill', '#83887c')\n    .attr('r', 2.5)\n\nnode.append('text')\n    .attr('dy', '0.3em')\n    .attr('x', d => d.children ? -6 : 6)\n    .text(d => d.data.name)\n    .filter(d => d.children)\n    .attr('text-anchor', 'end')\n    .clone(true).lower()\n    .attr('stroke', '#f2f6ed')\n</script>\n\n"},{"title":"使用预定义图案pattern填充SVG元素","date":"2018-12-26T16:00:00.000Z","keywords":"pattern, defs, SVG","description":"在defs中预定义pattern图案元素，在图形元素上使用属性fill或stroke来引用填充或描边的图案","_content":"\n{% raw %}\n<div class=\"scrollable-wrapper\">\n\t<svg id=\"tibet\" viewBox=\"0 0 820 440\">\n\t\t<defs></defs>\n\t\t<g stroke=\"#83887c\" stroke-width=\"2\" transform=\"translate(10, 10)\" fill=\"#f2f6ed\">\n\t\t\t<path d=\"M779.93,363.16L781.97,356.67L782.5,349.04L783.37,344.63L787.29,343.93L791.26,351.61L793.44,348.53L792.75,344.25L796.27,340.65L795.55,334.97L799.04,330.51L798.26,325.8L797.63,319.67L795.81,313.03L796.43,307.38L797.78,302.7L797.45,298.24L796.47,293.53L794.99,288.34L794.82,283.65L793.72,276.79L793.05,271.87L793.65,265.73L790.48,261.74L787.61,255.48L784.68,249.66L781.71,245.72L780.85,241.33L784.22,239.8L787.54,241.36L790.11,236.27L787.35,232.75L784.25,230.08L781.38,227.21L778.3,222.76L774.52,217.26L773.52,210.1L769.55,203.26L766.21,197.84L764.85,192.85L761.26,190.55L757.29,188.03L751.47,186.04L748,184.84L743.28,186.38L738.74,186.04L734.3,185.38L732.3,188.51L733.34,194.81L730.27,195.3L729.36,201.91L727.01,205.37L723.65,206.91L717.72,206.83L712.23,208.81L708.9,209.86L710.08,214.88L711.56,220.02L709.5,223.47L705.85,221.71L702.3,221.32L698.94,219.62L695.47,216.28L691.38,211.44L686.81,215.56L688.56,220.37L688.34,227.4L685.06,223.44L679.93,221.94L673.71,221.74L669.91,219.68L662.93,219.64L659.17,217.73L656.63,211.22L658.03,206.88L656.22,200.9L653.34,197.9L643.6,196.43L637.75,192.71L635.06,197.16L631.12,199.83L630.53,204.44L628.91,209.63L628.57,215.24L632.04,218.91L631.21,224.82L633.81,228.75L637.44,231.5L636.84,235.53L640.05,238.51L640.38,246.4L635.34,249.26L631.06,248.27L630.6,243.91L630.25,239.2L626.27,238.98L624.91,235.44L621.86,237.1L617.98,239.39L614.41,241.17L613.05,245.04L611.76,249.75L613.68,253.93L615.01,259.21L610.75,260.12L606.29,260.14L602.15,260.41L598.48,259.59L595.27,258.51L591.98,257.7L588.49,259.23L591.3,264.28L595.76,269.31L600.37,271.53L603.86,274.46L607.79,277.45L611.84,275.03L616.07,273.15L621.62,274.1L626.03,273.2L629.78,271.46L633.62,272L636.99,272.24L640.79,273.13L645.18,270.82L650.69,270.31L654.91,272.61L658.47,272.16L662,272.33L665.53,273.45L668.83,276.36L671.1,279.93L675.23,284.87L679.02,287.98L682.74,287.88L686.49,289.01L690.34,285.41L693.93,282.71L698,284.74L701.87,288.24L704.09,292.83L704.48,297.11L702.22,301.06L700.47,304.67L698.92,308.45L700.84,311.65L703.43,313.97L707.64,313.63L710.69,315.16L715.69,314.16L721.11,313.67L722.68,319.31L726.28,322.93L730.13,323.67L732.77,321.63L733.59,328.23L734.86,333.98L735.22,337.95L738.94,338.34L740.23,332.22L745.72,332.11L749.43,335.97L752.5,338.53L757.13,338.16L762.86,338.34L762.43,341.97L760.57,343.24L763.04,348.17L766.58,347.76L769.78,351.41L773.87,353.65L776.01,358.64L779.93,363.16z\"></path>\n\t\t\t<path d=\"M549.47,287.6L544.52,287.92L539.56,287.16L534.93,285.99L531.41,289.31L527.81,289.58L524.44,289.98L521.37,286.19L518.97,280.08L520.7,275.52L518.57,271.17L515.23,268.25L511.12,268.5L506.97,268.97L503.24,264.37L501.53,258.83L500.65,254.39L496.9,252.49L492.52,254.26L489.28,258.06L484.31,255.18L478.86,253.66L476.1,257.29L475.37,262.8L474.02,267.46L471.91,272.75L472.87,277.46L470.18,280.27L466.56,281.9L462.52,285.15L457.36,287.96L454.8,293.66L451.4,299.37L446.84,300.79L443.31,298.85L442.03,303.42L443.27,309.22L441.44,313.16L439.8,316.74L440.25,322.9L443.58,326.75L447.1,328.25L450.94,327.98L456.14,328.21L460.12,329.57L463.01,330.52L466.54,332.23L470.94,331.34L474.43,329.1L478.36,328.45L483.78,327.23L488.9,324.56L493.18,321.42L500.5,320.86L504.34,320.05L508.06,318.22L512.8,319.16L518.19,318.23L522.42,317.84L526.52,318.7L531.6,318.17L535.85,318L539.57,314.92L539.94,310.58L539.41,307.49L535.68,305.91L532.82,302.79L536.43,300.68L539.82,299.17L542.35,296.57L546.33,293.8L549.47,287.6z\"></path>\n\t\t\t<path d=\"M384.88,0L379.38,0.55L376.15,1.98L369.65,2.33L366.2,4.56L361.95,4.5L354.38,6.02L350.3,3.82L345.48,3.88L338.94,7.02L333.72,7.87L327.83,8.93L322.9,8.88L318.47,11.54L313.94,12.24L308.98,13.42L302.62,15.63L300.47,21.63L297.28,24.03L296.88,29.26L293,31.73L287.01,33.2L281.2,35.21L278.2,39.26L274.68,36.88L269.75,34.83L262.67,34.03L255.28,35.52L250.77,38.07L244.54,40.8L234.42,45.54L228.53,50.56L222.62,52.47L217.7,50.36L212.99,52.64L212.67,60.46L213.79,67.87L218.54,72.24L222.56,74.08L226.97,75.88L227.66,81.55L231.81,84.63L236.44,87.76L235.35,94.21L233.64,101.42L231.52,106.96L232.17,112.09L235.79,114.25L239.78,118.09L244.45,118.82L249.61,118.9L254.43,121.16L259,122.62L263.7,122.1L266.39,126.89L271.07,130.58L274.66,132.9L279.28,134.64L283.75,137.66L285.11,141.52L287.41,145.01L292.18,146.99L294.77,151.49L294.93,157.92L295.54,164.59L296.89,171.03L293.06,173.55L289.94,176.38L283.56,177.8L278.66,179.67L273.19,181.98L268.67,184.4L265.34,186.5L264.05,190.52L262.53,195.7L259.89,200.54L258.1,205.69L260.78,210.04L260.97,217.36L261.44,223.68L265.37,224.82L268.85,227.86L273.2,229.82L276.92,233.43L279.43,237.75L284.76,240.18L289.51,242.47L292.78,243.75L297.37,244.62L300.3,247L301.27,252.18L305.19,256.41L307.47,263.11L309.76,269.54L310.83,275.87L315.6,279.38L320.6,278.49L320.99,275.2L325.57,274.02L329.62,275.14L328.54,270.82L324.69,268.57L323.42,263.82L324.12,259.37L328.94,258.2L331.62,261.43L335.5,257.73L336.94,262.13L338.55,268.08L340.21,273.7L347.39,274.82L352.05,276.21L353.46,280.77L357.11,282.42L360.63,283.4L364.85,281.98L370.66,282.27L374.28,282.41L376.06,285.86L380.24,288.47L385.57,287.95L389.33,291.89L391.3,294.88L395.92,290.01L400.64,289.16L404.88,289.35L409.01,288.63L413.75,286.97L418.43,286.34L423.07,287.87L427.63,287.72L431.82,288.7L435.7,289.42L438.73,291.4L441.48,294.54L443.31,298.85L446.84,300.79L451.4,299.37L454.8,293.66L457.36,287.96L462.52,285.15L466.56,281.9L470.18,280.27L472.87,277.46L471.91,272.75L474.02,267.46L475.37,262.8L476.1,257.29L478.86,253.66L484.31,255.18L489.28,258.06L492.52,254.26L496.9,252.49L500.65,254.39L501.53,258.83L503.24,264.37L506.97,268.97L511.12,268.5L515.23,268.25L518.57,271.17L520.7,275.52L518.97,280.08L521.37,286.19L524.44,289.98L527.81,289.58L531.41,289.31L534.93,285.99L539.56,287.16L544.52,287.92L549.47,287.6L553.63,283.7L555.83,277.01L559.64,273.41L564.31,273.2L566.6,276.95L569.79,280.03L573.43,277.79L578.16,278.33L580.93,282.93L585.61,285.68L589.07,285.72L593.45,285.82L597.52,284.65L602.01,285.05L605.58,281.74L607.79,277.45L603.86,274.46L600.37,271.53L595.76,269.31L591.3,264.28L588.49,259.23L591.98,257.7L595.27,258.51L598.48,259.59L602.15,260.41L606.29,260.14L610.75,260.12L615.01,259.21L613.68,253.93L611.76,249.75L613.05,245.04L614.41,241.17L617.98,239.39L621.86,237.1L624.91,235.44L626.27,238.98L630.25,239.2L630.6,243.91L631.06,248.27L635.34,249.26L640.38,246.4L640.05,238.51L636.84,235.53L637.44,231.5L633.81,228.75L631.21,224.82L632.04,218.91L628.57,215.24L628.91,209.63L630.53,204.44L631.12,199.83L635.06,197.16L637.75,192.71L636.5,187.56L632.96,184.78L629.91,181.23L625.87,179.05L622.07,181.3L617.79,183.15L612.82,185.53L609.43,186.91L603.55,187.42L598.83,187.21L596.26,184.68L590.74,182.47L587.78,185.02L582.64,184.8L578.81,184.02L574.67,180.01L570.35,178.92L566.61,180.05L563.79,175.39L558.84,176.23L553.71,174.54L548.2,175.24L542.81,174.31L538.62,174.38L534.03,173.38L530.68,169.13L525.14,170.52L521.52,168.16L518.61,165.45L508.34,159.7L505.02,156.74L501.79,150.74L495.21,148.83L492.4,151.84L487.66,152.69L482.02,156.51L476.09,156.63L469.78,152.43L466.46,150.85L463.17,150.7L457.94,144.86L455.87,138.49L452.42,135.97L448.83,134.57L447.6,129.98L444.97,127.2L439.92,121.87L436.59,118.11L435.71,112.4L440.34,108.8L442.38,102.06L441.11,96.87L441.14,91.27L439.69,87.46L438.99,82.43L442.45,79.08L441.23,75.06L437.69,74.04L433.46,74.75L432.09,69.24L431.13,64.04L427.21,59.02L429.41,54.95L432.26,51.79L435.28,50.08L437.95,44.78L438.06,38.89L439.29,33.32L440.3,29.33L435.89,29.68L430.59,28.55L426.2,25.59L427.11,21.48L433.6,17.93L428.49,15.19L424.06,11.51L419.41,9.11L415.32,9.93L411.06,7.34L407.46,6.06L403.97,5.61L401.14,7.81L397.61,4.8L394.17,1.67L389.67,0.19L384.88,0L384.88,0z\"></path>\n\t\t\t<path d=\"M164.17,37.61L159.9,36.63L156.2,36.33L153.2,39.52L151.39,43.46L147.21,45.84L141.97,48.44L140.21,53.95L136.08,55.87L131.86,56.89L128.03,58.27L122.77,58.66L119.23,54.84L114.69,53.86L109.14,53.43L105.31,51.6L102.25,53.11L98.08,54.73L94.85,53.59L91.6,54.11L88.23,52.47L83.44,49.57L78.83,49.38L73.43,54.78L73.81,59.84L70.79,62.99L67.06,65.77L63.85,68.93L61.82,75.21L57.84,78.55L57.97,85.53L56.43,91.75L53.53,94.46L50.07,95.03L45.41,95.23L38.82,96.14L32.51,96.77L25.91,98.93L22.72,104.08L19.83,109.21L14.98,111.6L12.11,115.06L13.99,121.09L14.63,127.27L12.59,133.48L17.13,142.13L21.66,146.17L24.92,149.46L27.58,153.18L29.71,156.47L30.12,162.84L32.53,166.79L33.44,172.97L34.73,178.06L34.78,182.18L32.46,185.15L28.5,188.63L23.27,192.43L18.73,190.49L15.4,186.33L13.83,179.65L8.88,180.77L4.66,181.59L0.96,183.98L2.6,187.67L3.58,192.75L6.4,198.57L8.84,202.06L11.98,205.36L14.32,211.2L13.04,219.84L16.14,225.21L13.94,231.21L15.09,236.41L19.32,239.93L23.99,236.98L26.95,234.09L30.23,236.62L32.97,240.91L35.86,246.4L39.07,249.39L42.26,253.16L45.8,256.05L49.12,255.61L52.48,254.67L56.01,255.51L59.73,258.84L63.29,260.83L67.58,263.37L70.84,267.16L70.59,271.22L74.25,274.34L79.23,276.36L84.31,278.24L88.56,279.83L92.32,282.92L97.48,286.12L101.77,288.53L104.34,294.25L108.71,298.21L111.9,294.45L115.59,289.92L116.67,285.65L117.16,281.33L121.55,281.61L124.69,279.78L128.08,280.36L131.88,281.84L135.31,282.79L138.83,283.75L143.34,284.7L145.81,288.92L149.39,285.81L151.62,280.71L156.31,281.35L163.07,281.81L163.49,276.27L164.76,271.54L165.36,265.95L170.02,265.18L174.58,269.77L176,274.05L179.71,275.39L183.22,271.81L184.64,267.2L183.11,263.17L179.22,261.88L176.55,258.51L172.96,257.47L169.04,254.4L166.56,248.53L170.51,247.17L174.91,245.18L176.17,241.5L175.82,236.71L176.65,231.97L180.13,227.29L184.77,223.59L188.88,224.81L193.6,226.39L197.47,227.39L203.08,227.21L208.31,228.03L213.29,227.58L217.3,226.04L220.92,225.38L224.24,223.85L229.86,224.15L231.66,218.13L234.93,221.9L238.23,222.95L240.95,225.31L238.84,231.14L232.75,233.56L231.16,238.38L236.19,240.29L238.43,244.55L241.13,246.3L242.79,252.31L245.08,258.11L241.87,261.32L239.73,264.31L237.19,267.91L236.34,272.3L238.76,276.38L239.53,280.97L241.01,284.6L243.69,287.99L244.98,291.84L245.67,297.3L251.01,301.85L254.73,306.15L258.13,308.9L262.48,311.64L266.99,312.51L270.21,309.96L272.26,306.08L276.71,307.09L278.68,303.53L282.09,301.49L285.12,298.2L286.13,293.93L286.66,288.09L289.44,283.52L289.58,277.69L288.17,272.62L284.1,270.55L286.64,268.54L287.56,264.84L289.69,259.63L291.33,264.33L295.42,262.38L296.6,257.38L298.61,253.84L298.61,253.84L301.27,252.18L300.3,247L297.37,244.62L292.78,243.75L289.51,242.47L284.76,240.18L279.43,237.75L276.92,233.43L273.2,229.82L268.85,227.86L265.37,224.82L261.44,223.68L260.97,217.36L260.78,210.04L258.1,205.69L259.89,200.54L262.53,195.7L264.05,190.52L265.34,186.5L268.67,184.4L273.19,181.98L278.66,179.67L283.56,177.8L289.94,176.38L293.06,173.55L296.89,171.03L295.54,164.59L294.93,157.92L294.77,151.49L292.18,146.99L287.41,145.01L285.11,141.52L283.75,137.66L279.28,134.64L274.66,132.9L271.07,130.58L266.39,126.89L263.7,122.1L259,122.62L254.43,121.16L249.61,118.9L244.45,118.82L239.78,118.09L235.79,114.25L232.17,112.09L231.52,106.96L233.64,101.42L235.35,94.21L236.44,87.76L231.81,84.63L227.66,81.55L226.97,75.88L222.56,74.08L218.54,72.24L213.79,67.87L212.67,60.46L212.99,52.64L208.72,52.86L202.94,53.19L197.5,52.34L192.4,51.5L188.67,50.53L184.2,51.25L181.06,48.94L178.01,47.01L177.2,43.05L175.14,38.37L168.74,38.82L164.17,37.61zM286.55,256.5L285.68,252.86L289.84,250.78L289.84,250.78L285.69,252.86L286.55,256.49L289.52,259.45L286.55,256.5z\"></path>\n\t\t\t<path d=\"M650.69,270.31L645.18,270.82L640.79,273.13L636.99,272.24L633.62,272L629.78,271.46L626.03,273.2L621.62,274.1L616.07,273.15L611.84,275.03L607.79,277.45L605.58,281.74L602.01,285.05L597.52,284.65L593.45,285.82L589.07,285.72L585.61,285.68L580.93,282.93L578.16,278.33L573.43,277.79L569.79,280.03L566.6,276.95L564.31,273.2L559.64,273.41L555.83,277.01L553.63,283.7L549.47,287.6L546.33,293.8L542.35,296.57L539.82,299.17L536.43,300.68L532.82,302.79L535.68,305.91L539.41,307.49L544.7,309.91L545.23,315.59L548.97,313.75L553.13,313.62L557.04,313.08L560.81,312.26L563.96,315.59L566.29,318.94L567.47,323.73L567.45,328.76L565.06,332.54L562.03,335.83L558.97,338.26L556.38,340.67L555.33,344.83L551.63,347.74L545.99,349.52L542.41,351.99L545.68,353.81L550,353.34L554.41,354.36L559.07,355.78L562.97,354.79L566.36,355.15L570.56,355.1L576.65,354.66L582.99,357.46L589.32,357.98L593.34,357.42L596.81,356.35L600.81,356.16L602.88,351.41L605.35,347.97L609.17,343.65L611.4,339.46L614.18,336.98L617.21,335.49L620.17,333.42L624.16,332.39L626.9,328.79L630.41,330.16L633.89,334.59L637.9,335.81L643.04,336.81L648.61,338.44L652.02,340.12L658.43,341.11L661.68,336.91L663.45,333.22L667.76,330.83L672.49,327.84L675.78,326.08L679.39,325.42L682.72,323.16L686.07,326.42L687.8,330.53L691.54,334.21L689.07,337.04L685.91,339.75L686.49,344.82L689.27,345.75L692.82,342.58L698.88,342.87L701.08,348.32L702.82,354.03L698.98,357.69L696.04,361.58L693.59,364.3L691.43,368.81L695.62,370.92L699.08,368.67L704.91,367.04L709.5,369.73L714.6,370.97L717.63,372.9L721.71,371.71L727.26,374.51L732.51,376.47L736.64,373.8L737.52,370.1L740.03,365.3L744.32,365.61L747.65,369.41L751.59,371.71L755.59,373.27L757.66,376.66L761.76,379.57L765.8,376.51L766.98,371.47L771.03,374.93L772.23,380.2L775.61,381.01L779.98,379.48L784.08,376.59L785.14,370.56L781.73,366.93L779.93,363.16L776.01,358.64L773.87,353.65L769.78,351.41L766.58,347.76L763.04,348.17L760.57,343.24L762.43,341.97L762.86,338.34L757.13,338.16L752.5,338.53L749.43,335.97L745.72,332.11L740.23,332.22L738.94,338.34L735.22,337.95L734.86,333.98L733.59,328.23L732.77,321.63L730.13,323.67L726.28,322.93L722.68,319.31L721.11,313.67L715.69,314.16L710.69,315.16L707.64,313.63L703.43,313.97L700.84,311.65L698.92,308.45L700.47,304.67L702.22,301.06L704.48,297.11L704.09,292.83L701.87,288.24L698,284.74L693.93,282.71L690.34,285.41L686.49,289.01L682.74,287.88L679.02,287.98L675.23,284.87L671.1,279.93L668.83,276.36L665.53,273.45L662,272.33L658.47,272.16L654.91,272.61L650.69,270.31z\"></path>\n\t\t\t<path d=\"M545.23,315.59L544.7,309.91L539.41,307.49L539.94,310.58L539.57,314.92L535.85,318L531.6,318.17L526.52,318.7L522.42,317.84L518.19,318.23L512.8,319.16L508.06,318.22L504.34,320.05L500.5,320.86L493.18,321.42L488.9,324.56L483.78,327.23L478.36,328.45L474.43,329.1L470.94,331.34L466.54,332.23L463.01,330.52L460.12,329.57L458.96,334.89L457.52,339.39L456.22,342.9L454.54,348.67L454.7,354.43L452.11,359.08L452.29,365.92L453.83,371.51L456.56,375.28L453.12,379.78L458.69,380.6L462.59,383.46L466.44,384.69L471.1,385.47L476.23,384.6L482.58,385.46L486.83,386.59L490.61,387.33L495.54,386.29L500.11,384.88L504.64,387.73L509.07,392.18L511.29,396.13L515.57,397.66L521.53,398.69L527.19,396.6L533.1,393.6L538.16,394.96L544.01,394.42L548.34,391.79L552.17,389.28L552.33,384.07L554.27,379.95L558.45,379.04L561.69,377.06L564.21,374.64L568.36,372.18L571.16,366.77L575.03,362.08L578.94,359.45L582.99,357.46L576.65,354.66L570.56,355.1L566.36,355.15L562.97,354.79L559.07,355.78L554.41,354.36L550,353.34L545.68,353.81L542.41,351.99L545.99,349.52L551.63,347.74L555.33,344.83L556.38,340.67L558.97,338.26L562.03,335.83L565.06,332.54L567.45,328.76L567.47,323.73L566.29,318.94L563.96,315.59L560.81,312.26L557.04,313.08L553.13,313.62L548.97,313.75L545.23,315.59z\"></path>\n\t\t\t<path d=\"M407.8,416.48L408.45,411.45L409.55,407.08L413.45,403.89L416.82,400.81L418.53,397.55L421.45,394L425.4,390.76L428.41,385.2L432.16,381.22L435.37,379.6L439.39,378.3L443.85,378.23L447.61,379.49L453.12,379.78L456.56,375.28L453.83,371.51L452.29,365.92L452.11,359.08L454.7,354.43L454.54,348.67L456.22,342.9L457.52,339.39L458.96,334.89L460.12,329.57L456.14,328.21L450.94,327.98L447.1,328.25L443.58,326.75L440.25,322.9L439.8,316.74L441.44,313.16L443.27,309.22L442.03,303.42L443.31,298.85L441.48,294.54L438.73,291.4L435.7,289.42L431.82,288.7L427.63,287.72L423.07,287.87L418.43,286.34L413.75,286.97L409.01,288.63L404.88,289.35L400.64,289.16L395.92,290.01L391.3,294.88L389.33,291.89L385.57,287.95L380.24,288.47L376.06,285.86L374.28,282.41L370.66,282.27L364.85,281.98L360.63,283.4L357.11,282.42L353.46,280.77L352.05,276.21L347.39,274.82L340.21,273.7L338.55,268.08L336.94,262.13L335.5,257.73L331.62,261.43L328.94,258.2L324.12,259.37L323.42,263.82L324.69,268.57L328.54,270.82L329.62,275.14L325.57,274.02L320.99,275.2L320.6,278.49L315.6,279.38L310.83,275.87L309.76,269.54L307.47,263.11L305.19,256.41L301.27,252.18L298.61,253.84L296.61,257.38L295.42,262.38L291.33,264.33L289.69,259.63L287.56,264.84L286.64,268.54L284.1,270.55L288.17,272.62L289.58,277.69L289.44,283.52L286.66,288.09L286.13,293.93L285.12,298.2L282.09,301.49L278.68,303.53L276.71,307.09L272.26,306.08L270.21,309.96L266.99,312.51L262.48,311.64L258.13,308.9L254.73,306.15L251.01,301.85L245.67,297.3L244.98,291.84L243.69,287.99L241.01,284.6L239.53,280.97L238.76,276.38L236.34,272.3L237.19,267.91L239.73,264.31L241.87,261.32L245.08,258.11L242.79,252.31L241.13,246.3L238.43,244.55L236.19,240.29L231.16,238.38L232.75,233.56L238.84,231.14L240.95,225.31L238.23,222.95L234.93,221.9L231.66,218.13L229.86,224.15L224.24,223.85L220.92,225.38L217.3,226.04L213.29,227.58L208.31,228.03L203.08,227.21L197.47,227.39L193.6,226.39L188.88,224.81L184.77,223.59L180.13,227.29L176.65,231.97L175.82,236.71L176.17,241.5L174.91,245.18L170.51,247.17L166.56,248.53L169.04,254.4L172.96,257.47L176.55,258.51L179.22,261.88L183.11,263.17L184.64,267.2L183.22,271.81L179.71,275.39L176,274.05L174.58,269.77L170.02,265.18L165.36,265.95L164.76,271.54L163.49,276.27L163.07,281.81L156.31,281.35L151.62,280.71L149.39,285.81L145.81,288.92L146.61,293.96L150.54,296.51L154.61,298.31L158.62,300.47L162.05,302.54L164.36,305.64L167.43,307.89L171.56,312.26L175.53,312.92L178.83,314.11L181.86,315.88L185.39,316.67L188.71,319.59L192.53,323.59L194.83,328.2L197.16,331.67L199.48,334.39L202.92,335.32L206.98,332.39L211.17,329.7L215.66,329.5L220.68,331.24L223.76,333.8L224.05,338.62L226.06,343.15L226.64,347.83L231.33,349.97L234.76,353.91L239.41,354.94L243.92,358.54L251.24,361.5L254.72,360.65L258.34,357.68L262.15,359.84L262.13,363.94L260.03,367.01L260.46,371.88L264.29,373.33L269.6,374.05L274.29,372.66L277.58,374.06L281.89,372.28L284.35,376.01L287.49,379.32L290.09,383.78L292.14,387.56L294.79,391.07L297.87,388.3L298.01,383.28L300.88,380.84L302.58,386.18L306.11,388.94L309.27,390.55L312.69,389.52L315.35,384.72L320.34,382.87L323.25,384.6L326.32,386.47L330.02,388.48L333.3,389.58L337.19,393.27L341.77,394.4L345.2,394.41L350.12,394.05L355.55,394.28L359.52,395.17L363.92,391.53L370.07,391.34L375.26,391.34L378.95,389.2L382.5,388.76L387.19,387.34L391.96,384.76L395.24,382.7L400.06,384.43L403.52,388.42L405.05,392.72L404.14,398.56L402.98,402.76L401.41,407.01L401.55,410.92L403.78,414.1L407.8,416.48L407.8,416.48z\"></path>\n\t\t</g>\n\t</svg>\n</div>\n{% endraw %}\n\nSVG中的pattern元素，让预定义图形以固定间隔在x轴和y轴上重复或平铺，从而覆盖需要涂色或添加纹理的区域。\n\n在defs中预定义pattern图案元素，在图形元素上使用属性`fill=\"url(#id)\"`或`stroke=\"url(#id)\"`来引用填充或描边的图案。\n\n## DOM工具\n\n操作SVG及其图形元素DOM的方法，包括选择、创建、设置属性等。\n\n``` JavaScript\nconst tool = (root => {\n    const doc = root.document\n    const xlink = 'http://www.w3.org/1999/xlink'\n    const xmlns = 'http://www.w3.org/2000/svg'\n    const tool = {}\n\n    tool.select = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelector(str)\n    }\n\n    tool.selectAll = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelectorAll(str)\n    }\n\n    tool.attr = (el, attr) => {\n        for (let key in attr) {\n            const val = String(attr[key])\n            if (val) {\n                if (key.substring(0, 6) == 'xlink:') {\n                    el.setAttributeNS(xlink, key.substring(6), val)\n                } else if (key.substring(0, 4) == \"xml:\") {\n                    el.setAttributeNS(xmlns, key.substring(4), val)\n                } else {\n                    el.setAttribute(key, val)\n                }\n            } else {\n                el.removeAttribute(key)\n            }\n        }\n    }\n\n    tool.create = el => doc.createElementNS(xmlns, el)\n\n    return tool\n})(window || this)\n```\n\n## 纹理类\n\n``` JavaScript\nclass LineTexture {\n    constructor(args) {\n        this.size = args.size || 20\n        this.stroke = args.stroke || '#a9aca5'\n        this.strokeWidth = args.strokeWidth || 2\n        this.background = args.background || ''\n        this.orientations = args.orientations || ['2/8']\n        this.svg = args.svg\n        this.id = this.random()\n        this.svg && this.init()\n    }\n\n    path(orientation) {\n        const s = this.size\n        switch (orientation) {\n            case '0/8':\n                return `M${s/4},0 l0,${s} M${3/4*s},0 l0,${s}`\n            case '1/8':\n                return `M${s/4},0 l${s/2},${s} M${-s/4},0 l${s/2},${s} M${s*3/4},0 l${s/2},${s}`\n            case '2/8':\n                // 省略...\n        }\n    }\n\n    url() {\n        return `url(#${this.id})`\n    }\n\n    init() {\n        const svg = this.svg.nodeType ? this.svg : tool.select(this.svg)\n        const defs = tool.select(svg, 'defs')\n        const pattern = tool.create('pattern')\n\n        tool.attr(pattern, {\n            id: this.id,\n            width: this.size,\n            height: this.size,\n            patternUnits: 'userSpaceOnUse'\n        })\n\n        if (this.background) {\n            const rect = tool.create('rect')\n            tool.attr(rect, {\n                width: this.size,\n                height: this.size,\n                fill: this.background\n            })\n            pattern.appendChild(rect)\n        }\n\n        this.orientations.forEach(o => {\n            const path = tool.create('path')\n            tool.attr(path, {\n                stroke: this.stroke,\n                'stroke-width': this.strokeWidth,\n                'stroke-linecap': 'square',\n                d: this.path(o)\n            })\n            pattern.appendChild(path)\n        })\n\n        defs.appendChild(pattern)\n    }\n\n    random() {\n        return Math.random().toString(36)\n            .replace(/[^a-z]+/g, '')\n            .slice(0, 5)\n    }\n}\n```\n\n## 实现\n\n选择SVG画布，设置其尺寸；找到全部path路径子元素；为每个path初始化纹理实例对象LineTexture，并设置纹理pattern的id引用填充。\n\n``` JavaScript\nconst svg = tool.select('#tibet')\nconst width = Math.min(svg.parentNode.clientWidth, 410)\nconst height = width * 440 / 820\ntool.attr(svg, {\n    width,\n    height\n})\nconst pathList = tool.selectAll(svg, 'path')\nconst colors = ['#f2f6ed', '#f3f6ee', '#f3f7ef', '#f4f7f0', '#f5f8f1', '#f5f8f2', '#f6f9f3']\n\nArray.prototype.forEach.call(pathList, (path, i) => {\n    const url = new LineTexture({\n        svg,\n        background: colors[i],\n        orientations: [`${i}/8`]\n    }).url()\n\n    tool.attr(path, {\n        fill: url\n    })\n})\n```\n\n<cite>参考：\nhttp://snapsvg.io/\nhttps://riccardoscalco.it/textures/</cite>\n\n\n{% raw %}\n<script>\nconst tool = (root => {\n    const doc = root.document\n    const xlink = 'http://www.w3.org/1999/xlink'\n    const xmlns = 'http://www.w3.org/2000/svg'\n    const tool = {}\n\n    tool.select = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelector(str)\n    }\n\n    tool.selectAll = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelectorAll(str)\n    }\n\n    tool.attr = (el, attr) => {\n        for (let key in attr) {\n            const val = String(attr[key])\n            if (val) {\n                if (key.substring(0, 6) == 'xlink:') {\n                    el.setAttributeNS(xlink, key.substring(6), val)\n                } else if (key.substring(0, 4) == \"xml:\") {\n                    el.setAttributeNS(xmlns, key.substring(4), val)\n                } else {\n                    el.setAttribute(key, val)\n                }\n            } else {\n                el.removeAttribute(key)\n            }\n        }\n    }\n\n    tool.create = el => doc.createElementNS(xmlns, el)\n\n    return tool\n})(window || this)\n\n\nclass LineTexture {\n    constructor(args) {\n        this.size = args.size || 20\n        this.stroke = args.stroke || '#a9aca5'\n        this.strokeWidth = args.strokeWidth || 2\n        this.background = args.background || ''\n        this.orientations = args.orientations || ['2/8']\n        this.svg = args.svg\n        this.id = this.random()\n        this.svg && this.init()\n    }\n\n    path(orientation) {\n        const s = this.size\n        switch (orientation) {\n            case '0/8':\n                return `M${s/4},0 l0,${s} M${3/4*s},0 l0,${s}`\n            case '1/8':\n                return `M${s/4},0 l${s/2},${s} M${-s/4},0 l${s/2},${s} M${s*3/4},0 l${s/2},${s}`\n            case '2/8':\n                return `M0,${s} l${s},${-s} M${-s/4},${s/4} l${s/2},${-s/2} M${3/4*s},${5/4*s} l${s/2},${-s/2}`\n            case '3/8':\n                return `M0,${3/4*s} l${s},${-s/2} M0,${s/4} l${s},${-s/2} M0,${s*5/4} l${s},${-s/2}`\n            case '4/8':\n                return `M0,${s/4} l${s},0 M0,${3/4*s} l${s},0`\n            case '5/8':\n                return `M0,${-s/4} l${s},${s/2} M0,${s/4} l${s},${s/2} M0,${s*3/4} l${s},${s/2}`\n            case '6/8':\n                return `M0,0 l${s},${s} M${-s/4},${3/4*s} l${s/2},${s/2} M${s*3/4},${-s/4} l${s/2},${s/2}`\n            case '7/8':\n                return `M${-s/4},0 l${s/2},${s} M${s/4},0 l${s/2},${s} M${s*3/4},0 l${s/2},${s}`\n            default:\n                return `M${s/2},0 l0,${s}`\n        }\n    }\n\n    url() {\n        return `url(#${this.id})`\n    }\n\n    init() {\n        const svg = this.svg.nodeType ? this.svg : tool.select(this.svg)\n        const defs = tool.select(svg, 'defs')\n        const pattern = tool.create('pattern')\n\n        tool.attr(pattern, {\n            id: this.id,\n            width: this.size,\n            height: this.size,\n            patternUnits: 'userSpaceOnUse'\n        })\n\n        if (this.background) {\n            const rect = tool.create('rect')\n            tool.attr(rect, {\n                width: this.size,\n                height: this.size,\n                fill: this.background\n            })\n            pattern.appendChild(rect)\n        }\n\n        this.orientations.forEach(o => {\n            const path = tool.create('path')\n            tool.attr(path, {\n                stroke: this.stroke,\n                'stroke-width': this.strokeWidth,\n                'stroke-linecap': 'square',\n                d: this.path(o)\n            })\n            pattern.appendChild(path)\n        })\n\n        defs.appendChild(pattern)\n    }\n\n    random() {\n        return Math.random().toString(36)\n            .replace(/[^a-z]+/g, '')\n            .slice(0, 5)\n    }\n}\n\n\nconst svg = tool.select('#tibet')\nconst width = Math.min(svg.parentNode.clientWidth, 410)\nconst height = width * 440 / 820\ntool.attr(svg, {\n    width,\n    height\n})\nconst pathList = tool.selectAll(svg, 'path')\nconst colors = ['#f2f6ed', '#f3f6ee', '#f3f7ef', '#f4f7f0', '#f5f8f1', '#f5f8f2', '#f6f9f3']\n\nArray.prototype.forEach.call(pathList, (path, i) => {\n    const url = new LineTexture({\n        svg,\n        background: colors[i],\n        orientations: [`${i}/8`]\n    }).url()\n\n    tool.attr(path, {\n        fill: url\n    })\n})\n</script>\n{% endraw %}\n","source":"_posts/textures.md","raw":"---\ntitle: 使用预定义图案pattern填充SVG元素\ndate: 2018-12-27 00:00:00\ncategories: SVG\nkeywords: pattern, defs, SVG\ndescription: 在defs中预定义pattern图案元素，在图形元素上使用属性fill或stroke来引用填充或描边的图案\n---\n\n{% raw %}\n<div class=\"scrollable-wrapper\">\n\t<svg id=\"tibet\" viewBox=\"0 0 820 440\">\n\t\t<defs></defs>\n\t\t<g stroke=\"#83887c\" stroke-width=\"2\" transform=\"translate(10, 10)\" fill=\"#f2f6ed\">\n\t\t\t<path d=\"M779.93,363.16L781.97,356.67L782.5,349.04L783.37,344.63L787.29,343.93L791.26,351.61L793.44,348.53L792.75,344.25L796.27,340.65L795.55,334.97L799.04,330.51L798.26,325.8L797.63,319.67L795.81,313.03L796.43,307.38L797.78,302.7L797.45,298.24L796.47,293.53L794.99,288.34L794.82,283.65L793.72,276.79L793.05,271.87L793.65,265.73L790.48,261.74L787.61,255.48L784.68,249.66L781.71,245.72L780.85,241.33L784.22,239.8L787.54,241.36L790.11,236.27L787.35,232.75L784.25,230.08L781.38,227.21L778.3,222.76L774.52,217.26L773.52,210.1L769.55,203.26L766.21,197.84L764.85,192.85L761.26,190.55L757.29,188.03L751.47,186.04L748,184.84L743.28,186.38L738.74,186.04L734.3,185.38L732.3,188.51L733.34,194.81L730.27,195.3L729.36,201.91L727.01,205.37L723.65,206.91L717.72,206.83L712.23,208.81L708.9,209.86L710.08,214.88L711.56,220.02L709.5,223.47L705.85,221.71L702.3,221.32L698.94,219.62L695.47,216.28L691.38,211.44L686.81,215.56L688.56,220.37L688.34,227.4L685.06,223.44L679.93,221.94L673.71,221.74L669.91,219.68L662.93,219.64L659.17,217.73L656.63,211.22L658.03,206.88L656.22,200.9L653.34,197.9L643.6,196.43L637.75,192.71L635.06,197.16L631.12,199.83L630.53,204.44L628.91,209.63L628.57,215.24L632.04,218.91L631.21,224.82L633.81,228.75L637.44,231.5L636.84,235.53L640.05,238.51L640.38,246.4L635.34,249.26L631.06,248.27L630.6,243.91L630.25,239.2L626.27,238.98L624.91,235.44L621.86,237.1L617.98,239.39L614.41,241.17L613.05,245.04L611.76,249.75L613.68,253.93L615.01,259.21L610.75,260.12L606.29,260.14L602.15,260.41L598.48,259.59L595.27,258.51L591.98,257.7L588.49,259.23L591.3,264.28L595.76,269.31L600.37,271.53L603.86,274.46L607.79,277.45L611.84,275.03L616.07,273.15L621.62,274.1L626.03,273.2L629.78,271.46L633.62,272L636.99,272.24L640.79,273.13L645.18,270.82L650.69,270.31L654.91,272.61L658.47,272.16L662,272.33L665.53,273.45L668.83,276.36L671.1,279.93L675.23,284.87L679.02,287.98L682.74,287.88L686.49,289.01L690.34,285.41L693.93,282.71L698,284.74L701.87,288.24L704.09,292.83L704.48,297.11L702.22,301.06L700.47,304.67L698.92,308.45L700.84,311.65L703.43,313.97L707.64,313.63L710.69,315.16L715.69,314.16L721.11,313.67L722.68,319.31L726.28,322.93L730.13,323.67L732.77,321.63L733.59,328.23L734.86,333.98L735.22,337.95L738.94,338.34L740.23,332.22L745.72,332.11L749.43,335.97L752.5,338.53L757.13,338.16L762.86,338.34L762.43,341.97L760.57,343.24L763.04,348.17L766.58,347.76L769.78,351.41L773.87,353.65L776.01,358.64L779.93,363.16z\"></path>\n\t\t\t<path d=\"M549.47,287.6L544.52,287.92L539.56,287.16L534.93,285.99L531.41,289.31L527.81,289.58L524.44,289.98L521.37,286.19L518.97,280.08L520.7,275.52L518.57,271.17L515.23,268.25L511.12,268.5L506.97,268.97L503.24,264.37L501.53,258.83L500.65,254.39L496.9,252.49L492.52,254.26L489.28,258.06L484.31,255.18L478.86,253.66L476.1,257.29L475.37,262.8L474.02,267.46L471.91,272.75L472.87,277.46L470.18,280.27L466.56,281.9L462.52,285.15L457.36,287.96L454.8,293.66L451.4,299.37L446.84,300.79L443.31,298.85L442.03,303.42L443.27,309.22L441.44,313.16L439.8,316.74L440.25,322.9L443.58,326.75L447.1,328.25L450.94,327.98L456.14,328.21L460.12,329.57L463.01,330.52L466.54,332.23L470.94,331.34L474.43,329.1L478.36,328.45L483.78,327.23L488.9,324.56L493.18,321.42L500.5,320.86L504.34,320.05L508.06,318.22L512.8,319.16L518.19,318.23L522.42,317.84L526.52,318.7L531.6,318.17L535.85,318L539.57,314.92L539.94,310.58L539.41,307.49L535.68,305.91L532.82,302.79L536.43,300.68L539.82,299.17L542.35,296.57L546.33,293.8L549.47,287.6z\"></path>\n\t\t\t<path d=\"M384.88,0L379.38,0.55L376.15,1.98L369.65,2.33L366.2,4.56L361.95,4.5L354.38,6.02L350.3,3.82L345.48,3.88L338.94,7.02L333.72,7.87L327.83,8.93L322.9,8.88L318.47,11.54L313.94,12.24L308.98,13.42L302.62,15.63L300.47,21.63L297.28,24.03L296.88,29.26L293,31.73L287.01,33.2L281.2,35.21L278.2,39.26L274.68,36.88L269.75,34.83L262.67,34.03L255.28,35.52L250.77,38.07L244.54,40.8L234.42,45.54L228.53,50.56L222.62,52.47L217.7,50.36L212.99,52.64L212.67,60.46L213.79,67.87L218.54,72.24L222.56,74.08L226.97,75.88L227.66,81.55L231.81,84.63L236.44,87.76L235.35,94.21L233.64,101.42L231.52,106.96L232.17,112.09L235.79,114.25L239.78,118.09L244.45,118.82L249.61,118.9L254.43,121.16L259,122.62L263.7,122.1L266.39,126.89L271.07,130.58L274.66,132.9L279.28,134.64L283.75,137.66L285.11,141.52L287.41,145.01L292.18,146.99L294.77,151.49L294.93,157.92L295.54,164.59L296.89,171.03L293.06,173.55L289.94,176.38L283.56,177.8L278.66,179.67L273.19,181.98L268.67,184.4L265.34,186.5L264.05,190.52L262.53,195.7L259.89,200.54L258.1,205.69L260.78,210.04L260.97,217.36L261.44,223.68L265.37,224.82L268.85,227.86L273.2,229.82L276.92,233.43L279.43,237.75L284.76,240.18L289.51,242.47L292.78,243.75L297.37,244.62L300.3,247L301.27,252.18L305.19,256.41L307.47,263.11L309.76,269.54L310.83,275.87L315.6,279.38L320.6,278.49L320.99,275.2L325.57,274.02L329.62,275.14L328.54,270.82L324.69,268.57L323.42,263.82L324.12,259.37L328.94,258.2L331.62,261.43L335.5,257.73L336.94,262.13L338.55,268.08L340.21,273.7L347.39,274.82L352.05,276.21L353.46,280.77L357.11,282.42L360.63,283.4L364.85,281.98L370.66,282.27L374.28,282.41L376.06,285.86L380.24,288.47L385.57,287.95L389.33,291.89L391.3,294.88L395.92,290.01L400.64,289.16L404.88,289.35L409.01,288.63L413.75,286.97L418.43,286.34L423.07,287.87L427.63,287.72L431.82,288.7L435.7,289.42L438.73,291.4L441.48,294.54L443.31,298.85L446.84,300.79L451.4,299.37L454.8,293.66L457.36,287.96L462.52,285.15L466.56,281.9L470.18,280.27L472.87,277.46L471.91,272.75L474.02,267.46L475.37,262.8L476.1,257.29L478.86,253.66L484.31,255.18L489.28,258.06L492.52,254.26L496.9,252.49L500.65,254.39L501.53,258.83L503.24,264.37L506.97,268.97L511.12,268.5L515.23,268.25L518.57,271.17L520.7,275.52L518.97,280.08L521.37,286.19L524.44,289.98L527.81,289.58L531.41,289.31L534.93,285.99L539.56,287.16L544.52,287.92L549.47,287.6L553.63,283.7L555.83,277.01L559.64,273.41L564.31,273.2L566.6,276.95L569.79,280.03L573.43,277.79L578.16,278.33L580.93,282.93L585.61,285.68L589.07,285.72L593.45,285.82L597.52,284.65L602.01,285.05L605.58,281.74L607.79,277.45L603.86,274.46L600.37,271.53L595.76,269.31L591.3,264.28L588.49,259.23L591.98,257.7L595.27,258.51L598.48,259.59L602.15,260.41L606.29,260.14L610.75,260.12L615.01,259.21L613.68,253.93L611.76,249.75L613.05,245.04L614.41,241.17L617.98,239.39L621.86,237.1L624.91,235.44L626.27,238.98L630.25,239.2L630.6,243.91L631.06,248.27L635.34,249.26L640.38,246.4L640.05,238.51L636.84,235.53L637.44,231.5L633.81,228.75L631.21,224.82L632.04,218.91L628.57,215.24L628.91,209.63L630.53,204.44L631.12,199.83L635.06,197.16L637.75,192.71L636.5,187.56L632.96,184.78L629.91,181.23L625.87,179.05L622.07,181.3L617.79,183.15L612.82,185.53L609.43,186.91L603.55,187.42L598.83,187.21L596.26,184.68L590.74,182.47L587.78,185.02L582.64,184.8L578.81,184.02L574.67,180.01L570.35,178.92L566.61,180.05L563.79,175.39L558.84,176.23L553.71,174.54L548.2,175.24L542.81,174.31L538.62,174.38L534.03,173.38L530.68,169.13L525.14,170.52L521.52,168.16L518.61,165.45L508.34,159.7L505.02,156.74L501.79,150.74L495.21,148.83L492.4,151.84L487.66,152.69L482.02,156.51L476.09,156.63L469.78,152.43L466.46,150.85L463.17,150.7L457.94,144.86L455.87,138.49L452.42,135.97L448.83,134.57L447.6,129.98L444.97,127.2L439.92,121.87L436.59,118.11L435.71,112.4L440.34,108.8L442.38,102.06L441.11,96.87L441.14,91.27L439.69,87.46L438.99,82.43L442.45,79.08L441.23,75.06L437.69,74.04L433.46,74.75L432.09,69.24L431.13,64.04L427.21,59.02L429.41,54.95L432.26,51.79L435.28,50.08L437.95,44.78L438.06,38.89L439.29,33.32L440.3,29.33L435.89,29.68L430.59,28.55L426.2,25.59L427.11,21.48L433.6,17.93L428.49,15.19L424.06,11.51L419.41,9.11L415.32,9.93L411.06,7.34L407.46,6.06L403.97,5.61L401.14,7.81L397.61,4.8L394.17,1.67L389.67,0.19L384.88,0L384.88,0z\"></path>\n\t\t\t<path d=\"M164.17,37.61L159.9,36.63L156.2,36.33L153.2,39.52L151.39,43.46L147.21,45.84L141.97,48.44L140.21,53.95L136.08,55.87L131.86,56.89L128.03,58.27L122.77,58.66L119.23,54.84L114.69,53.86L109.14,53.43L105.31,51.6L102.25,53.11L98.08,54.73L94.85,53.59L91.6,54.11L88.23,52.47L83.44,49.57L78.83,49.38L73.43,54.78L73.81,59.84L70.79,62.99L67.06,65.77L63.85,68.93L61.82,75.21L57.84,78.55L57.97,85.53L56.43,91.75L53.53,94.46L50.07,95.03L45.41,95.23L38.82,96.14L32.51,96.77L25.91,98.93L22.72,104.08L19.83,109.21L14.98,111.6L12.11,115.06L13.99,121.09L14.63,127.27L12.59,133.48L17.13,142.13L21.66,146.17L24.92,149.46L27.58,153.18L29.71,156.47L30.12,162.84L32.53,166.79L33.44,172.97L34.73,178.06L34.78,182.18L32.46,185.15L28.5,188.63L23.27,192.43L18.73,190.49L15.4,186.33L13.83,179.65L8.88,180.77L4.66,181.59L0.96,183.98L2.6,187.67L3.58,192.75L6.4,198.57L8.84,202.06L11.98,205.36L14.32,211.2L13.04,219.84L16.14,225.21L13.94,231.21L15.09,236.41L19.32,239.93L23.99,236.98L26.95,234.09L30.23,236.62L32.97,240.91L35.86,246.4L39.07,249.39L42.26,253.16L45.8,256.05L49.12,255.61L52.48,254.67L56.01,255.51L59.73,258.84L63.29,260.83L67.58,263.37L70.84,267.16L70.59,271.22L74.25,274.34L79.23,276.36L84.31,278.24L88.56,279.83L92.32,282.92L97.48,286.12L101.77,288.53L104.34,294.25L108.71,298.21L111.9,294.45L115.59,289.92L116.67,285.65L117.16,281.33L121.55,281.61L124.69,279.78L128.08,280.36L131.88,281.84L135.31,282.79L138.83,283.75L143.34,284.7L145.81,288.92L149.39,285.81L151.62,280.71L156.31,281.35L163.07,281.81L163.49,276.27L164.76,271.54L165.36,265.95L170.02,265.18L174.58,269.77L176,274.05L179.71,275.39L183.22,271.81L184.64,267.2L183.11,263.17L179.22,261.88L176.55,258.51L172.96,257.47L169.04,254.4L166.56,248.53L170.51,247.17L174.91,245.18L176.17,241.5L175.82,236.71L176.65,231.97L180.13,227.29L184.77,223.59L188.88,224.81L193.6,226.39L197.47,227.39L203.08,227.21L208.31,228.03L213.29,227.58L217.3,226.04L220.92,225.38L224.24,223.85L229.86,224.15L231.66,218.13L234.93,221.9L238.23,222.95L240.95,225.31L238.84,231.14L232.75,233.56L231.16,238.38L236.19,240.29L238.43,244.55L241.13,246.3L242.79,252.31L245.08,258.11L241.87,261.32L239.73,264.31L237.19,267.91L236.34,272.3L238.76,276.38L239.53,280.97L241.01,284.6L243.69,287.99L244.98,291.84L245.67,297.3L251.01,301.85L254.73,306.15L258.13,308.9L262.48,311.64L266.99,312.51L270.21,309.96L272.26,306.08L276.71,307.09L278.68,303.53L282.09,301.49L285.12,298.2L286.13,293.93L286.66,288.09L289.44,283.52L289.58,277.69L288.17,272.62L284.1,270.55L286.64,268.54L287.56,264.84L289.69,259.63L291.33,264.33L295.42,262.38L296.6,257.38L298.61,253.84L298.61,253.84L301.27,252.18L300.3,247L297.37,244.62L292.78,243.75L289.51,242.47L284.76,240.18L279.43,237.75L276.92,233.43L273.2,229.82L268.85,227.86L265.37,224.82L261.44,223.68L260.97,217.36L260.78,210.04L258.1,205.69L259.89,200.54L262.53,195.7L264.05,190.52L265.34,186.5L268.67,184.4L273.19,181.98L278.66,179.67L283.56,177.8L289.94,176.38L293.06,173.55L296.89,171.03L295.54,164.59L294.93,157.92L294.77,151.49L292.18,146.99L287.41,145.01L285.11,141.52L283.75,137.66L279.28,134.64L274.66,132.9L271.07,130.58L266.39,126.89L263.7,122.1L259,122.62L254.43,121.16L249.61,118.9L244.45,118.82L239.78,118.09L235.79,114.25L232.17,112.09L231.52,106.96L233.64,101.42L235.35,94.21L236.44,87.76L231.81,84.63L227.66,81.55L226.97,75.88L222.56,74.08L218.54,72.24L213.79,67.87L212.67,60.46L212.99,52.64L208.72,52.86L202.94,53.19L197.5,52.34L192.4,51.5L188.67,50.53L184.2,51.25L181.06,48.94L178.01,47.01L177.2,43.05L175.14,38.37L168.74,38.82L164.17,37.61zM286.55,256.5L285.68,252.86L289.84,250.78L289.84,250.78L285.69,252.86L286.55,256.49L289.52,259.45L286.55,256.5z\"></path>\n\t\t\t<path d=\"M650.69,270.31L645.18,270.82L640.79,273.13L636.99,272.24L633.62,272L629.78,271.46L626.03,273.2L621.62,274.1L616.07,273.15L611.84,275.03L607.79,277.45L605.58,281.74L602.01,285.05L597.52,284.65L593.45,285.82L589.07,285.72L585.61,285.68L580.93,282.93L578.16,278.33L573.43,277.79L569.79,280.03L566.6,276.95L564.31,273.2L559.64,273.41L555.83,277.01L553.63,283.7L549.47,287.6L546.33,293.8L542.35,296.57L539.82,299.17L536.43,300.68L532.82,302.79L535.68,305.91L539.41,307.49L544.7,309.91L545.23,315.59L548.97,313.75L553.13,313.62L557.04,313.08L560.81,312.26L563.96,315.59L566.29,318.94L567.47,323.73L567.45,328.76L565.06,332.54L562.03,335.83L558.97,338.26L556.38,340.67L555.33,344.83L551.63,347.74L545.99,349.52L542.41,351.99L545.68,353.81L550,353.34L554.41,354.36L559.07,355.78L562.97,354.79L566.36,355.15L570.56,355.1L576.65,354.66L582.99,357.46L589.32,357.98L593.34,357.42L596.81,356.35L600.81,356.16L602.88,351.41L605.35,347.97L609.17,343.65L611.4,339.46L614.18,336.98L617.21,335.49L620.17,333.42L624.16,332.39L626.9,328.79L630.41,330.16L633.89,334.59L637.9,335.81L643.04,336.81L648.61,338.44L652.02,340.12L658.43,341.11L661.68,336.91L663.45,333.22L667.76,330.83L672.49,327.84L675.78,326.08L679.39,325.42L682.72,323.16L686.07,326.42L687.8,330.53L691.54,334.21L689.07,337.04L685.91,339.75L686.49,344.82L689.27,345.75L692.82,342.58L698.88,342.87L701.08,348.32L702.82,354.03L698.98,357.69L696.04,361.58L693.59,364.3L691.43,368.81L695.62,370.92L699.08,368.67L704.91,367.04L709.5,369.73L714.6,370.97L717.63,372.9L721.71,371.71L727.26,374.51L732.51,376.47L736.64,373.8L737.52,370.1L740.03,365.3L744.32,365.61L747.65,369.41L751.59,371.71L755.59,373.27L757.66,376.66L761.76,379.57L765.8,376.51L766.98,371.47L771.03,374.93L772.23,380.2L775.61,381.01L779.98,379.48L784.08,376.59L785.14,370.56L781.73,366.93L779.93,363.16L776.01,358.64L773.87,353.65L769.78,351.41L766.58,347.76L763.04,348.17L760.57,343.24L762.43,341.97L762.86,338.34L757.13,338.16L752.5,338.53L749.43,335.97L745.72,332.11L740.23,332.22L738.94,338.34L735.22,337.95L734.86,333.98L733.59,328.23L732.77,321.63L730.13,323.67L726.28,322.93L722.68,319.31L721.11,313.67L715.69,314.16L710.69,315.16L707.64,313.63L703.43,313.97L700.84,311.65L698.92,308.45L700.47,304.67L702.22,301.06L704.48,297.11L704.09,292.83L701.87,288.24L698,284.74L693.93,282.71L690.34,285.41L686.49,289.01L682.74,287.88L679.02,287.98L675.23,284.87L671.1,279.93L668.83,276.36L665.53,273.45L662,272.33L658.47,272.16L654.91,272.61L650.69,270.31z\"></path>\n\t\t\t<path d=\"M545.23,315.59L544.7,309.91L539.41,307.49L539.94,310.58L539.57,314.92L535.85,318L531.6,318.17L526.52,318.7L522.42,317.84L518.19,318.23L512.8,319.16L508.06,318.22L504.34,320.05L500.5,320.86L493.18,321.42L488.9,324.56L483.78,327.23L478.36,328.45L474.43,329.1L470.94,331.34L466.54,332.23L463.01,330.52L460.12,329.57L458.96,334.89L457.52,339.39L456.22,342.9L454.54,348.67L454.7,354.43L452.11,359.08L452.29,365.92L453.83,371.51L456.56,375.28L453.12,379.78L458.69,380.6L462.59,383.46L466.44,384.69L471.1,385.47L476.23,384.6L482.58,385.46L486.83,386.59L490.61,387.33L495.54,386.29L500.11,384.88L504.64,387.73L509.07,392.18L511.29,396.13L515.57,397.66L521.53,398.69L527.19,396.6L533.1,393.6L538.16,394.96L544.01,394.42L548.34,391.79L552.17,389.28L552.33,384.07L554.27,379.95L558.45,379.04L561.69,377.06L564.21,374.64L568.36,372.18L571.16,366.77L575.03,362.08L578.94,359.45L582.99,357.46L576.65,354.66L570.56,355.1L566.36,355.15L562.97,354.79L559.07,355.78L554.41,354.36L550,353.34L545.68,353.81L542.41,351.99L545.99,349.52L551.63,347.74L555.33,344.83L556.38,340.67L558.97,338.26L562.03,335.83L565.06,332.54L567.45,328.76L567.47,323.73L566.29,318.94L563.96,315.59L560.81,312.26L557.04,313.08L553.13,313.62L548.97,313.75L545.23,315.59z\"></path>\n\t\t\t<path d=\"M407.8,416.48L408.45,411.45L409.55,407.08L413.45,403.89L416.82,400.81L418.53,397.55L421.45,394L425.4,390.76L428.41,385.2L432.16,381.22L435.37,379.6L439.39,378.3L443.85,378.23L447.61,379.49L453.12,379.78L456.56,375.28L453.83,371.51L452.29,365.92L452.11,359.08L454.7,354.43L454.54,348.67L456.22,342.9L457.52,339.39L458.96,334.89L460.12,329.57L456.14,328.21L450.94,327.98L447.1,328.25L443.58,326.75L440.25,322.9L439.8,316.74L441.44,313.16L443.27,309.22L442.03,303.42L443.31,298.85L441.48,294.54L438.73,291.4L435.7,289.42L431.82,288.7L427.63,287.72L423.07,287.87L418.43,286.34L413.75,286.97L409.01,288.63L404.88,289.35L400.64,289.16L395.92,290.01L391.3,294.88L389.33,291.89L385.57,287.95L380.24,288.47L376.06,285.86L374.28,282.41L370.66,282.27L364.85,281.98L360.63,283.4L357.11,282.42L353.46,280.77L352.05,276.21L347.39,274.82L340.21,273.7L338.55,268.08L336.94,262.13L335.5,257.73L331.62,261.43L328.94,258.2L324.12,259.37L323.42,263.82L324.69,268.57L328.54,270.82L329.62,275.14L325.57,274.02L320.99,275.2L320.6,278.49L315.6,279.38L310.83,275.87L309.76,269.54L307.47,263.11L305.19,256.41L301.27,252.18L298.61,253.84L296.61,257.38L295.42,262.38L291.33,264.33L289.69,259.63L287.56,264.84L286.64,268.54L284.1,270.55L288.17,272.62L289.58,277.69L289.44,283.52L286.66,288.09L286.13,293.93L285.12,298.2L282.09,301.49L278.68,303.53L276.71,307.09L272.26,306.08L270.21,309.96L266.99,312.51L262.48,311.64L258.13,308.9L254.73,306.15L251.01,301.85L245.67,297.3L244.98,291.84L243.69,287.99L241.01,284.6L239.53,280.97L238.76,276.38L236.34,272.3L237.19,267.91L239.73,264.31L241.87,261.32L245.08,258.11L242.79,252.31L241.13,246.3L238.43,244.55L236.19,240.29L231.16,238.38L232.75,233.56L238.84,231.14L240.95,225.31L238.23,222.95L234.93,221.9L231.66,218.13L229.86,224.15L224.24,223.85L220.92,225.38L217.3,226.04L213.29,227.58L208.31,228.03L203.08,227.21L197.47,227.39L193.6,226.39L188.88,224.81L184.77,223.59L180.13,227.29L176.65,231.97L175.82,236.71L176.17,241.5L174.91,245.18L170.51,247.17L166.56,248.53L169.04,254.4L172.96,257.47L176.55,258.51L179.22,261.88L183.11,263.17L184.64,267.2L183.22,271.81L179.71,275.39L176,274.05L174.58,269.77L170.02,265.18L165.36,265.95L164.76,271.54L163.49,276.27L163.07,281.81L156.31,281.35L151.62,280.71L149.39,285.81L145.81,288.92L146.61,293.96L150.54,296.51L154.61,298.31L158.62,300.47L162.05,302.54L164.36,305.64L167.43,307.89L171.56,312.26L175.53,312.92L178.83,314.11L181.86,315.88L185.39,316.67L188.71,319.59L192.53,323.59L194.83,328.2L197.16,331.67L199.48,334.39L202.92,335.32L206.98,332.39L211.17,329.7L215.66,329.5L220.68,331.24L223.76,333.8L224.05,338.62L226.06,343.15L226.64,347.83L231.33,349.97L234.76,353.91L239.41,354.94L243.92,358.54L251.24,361.5L254.72,360.65L258.34,357.68L262.15,359.84L262.13,363.94L260.03,367.01L260.46,371.88L264.29,373.33L269.6,374.05L274.29,372.66L277.58,374.06L281.89,372.28L284.35,376.01L287.49,379.32L290.09,383.78L292.14,387.56L294.79,391.07L297.87,388.3L298.01,383.28L300.88,380.84L302.58,386.18L306.11,388.94L309.27,390.55L312.69,389.52L315.35,384.72L320.34,382.87L323.25,384.6L326.32,386.47L330.02,388.48L333.3,389.58L337.19,393.27L341.77,394.4L345.2,394.41L350.12,394.05L355.55,394.28L359.52,395.17L363.92,391.53L370.07,391.34L375.26,391.34L378.95,389.2L382.5,388.76L387.19,387.34L391.96,384.76L395.24,382.7L400.06,384.43L403.52,388.42L405.05,392.72L404.14,398.56L402.98,402.76L401.41,407.01L401.55,410.92L403.78,414.1L407.8,416.48L407.8,416.48z\"></path>\n\t\t</g>\n\t</svg>\n</div>\n{% endraw %}\n\nSVG中的pattern元素，让预定义图形以固定间隔在x轴和y轴上重复或平铺，从而覆盖需要涂色或添加纹理的区域。\n\n在defs中预定义pattern图案元素，在图形元素上使用属性`fill=\"url(#id)\"`或`stroke=\"url(#id)\"`来引用填充或描边的图案。\n\n## DOM工具\n\n操作SVG及其图形元素DOM的方法，包括选择、创建、设置属性等。\n\n``` JavaScript\nconst tool = (root => {\n    const doc = root.document\n    const xlink = 'http://www.w3.org/1999/xlink'\n    const xmlns = 'http://www.w3.org/2000/svg'\n    const tool = {}\n\n    tool.select = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelector(str)\n    }\n\n    tool.selectAll = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelectorAll(str)\n    }\n\n    tool.attr = (el, attr) => {\n        for (let key in attr) {\n            const val = String(attr[key])\n            if (val) {\n                if (key.substring(0, 6) == 'xlink:') {\n                    el.setAttributeNS(xlink, key.substring(6), val)\n                } else if (key.substring(0, 4) == \"xml:\") {\n                    el.setAttributeNS(xmlns, key.substring(4), val)\n                } else {\n                    el.setAttribute(key, val)\n                }\n            } else {\n                el.removeAttribute(key)\n            }\n        }\n    }\n\n    tool.create = el => doc.createElementNS(xmlns, el)\n\n    return tool\n})(window || this)\n```\n\n## 纹理类\n\n``` JavaScript\nclass LineTexture {\n    constructor(args) {\n        this.size = args.size || 20\n        this.stroke = args.stroke || '#a9aca5'\n        this.strokeWidth = args.strokeWidth || 2\n        this.background = args.background || ''\n        this.orientations = args.orientations || ['2/8']\n        this.svg = args.svg\n        this.id = this.random()\n        this.svg && this.init()\n    }\n\n    path(orientation) {\n        const s = this.size\n        switch (orientation) {\n            case '0/8':\n                return `M${s/4},0 l0,${s} M${3/4*s},0 l0,${s}`\n            case '1/8':\n                return `M${s/4},0 l${s/2},${s} M${-s/4},0 l${s/2},${s} M${s*3/4},0 l${s/2},${s}`\n            case '2/8':\n                // 省略...\n        }\n    }\n\n    url() {\n        return `url(#${this.id})`\n    }\n\n    init() {\n        const svg = this.svg.nodeType ? this.svg : tool.select(this.svg)\n        const defs = tool.select(svg, 'defs')\n        const pattern = tool.create('pattern')\n\n        tool.attr(pattern, {\n            id: this.id,\n            width: this.size,\n            height: this.size,\n            patternUnits: 'userSpaceOnUse'\n        })\n\n        if (this.background) {\n            const rect = tool.create('rect')\n            tool.attr(rect, {\n                width: this.size,\n                height: this.size,\n                fill: this.background\n            })\n            pattern.appendChild(rect)\n        }\n\n        this.orientations.forEach(o => {\n            const path = tool.create('path')\n            tool.attr(path, {\n                stroke: this.stroke,\n                'stroke-width': this.strokeWidth,\n                'stroke-linecap': 'square',\n                d: this.path(o)\n            })\n            pattern.appendChild(path)\n        })\n\n        defs.appendChild(pattern)\n    }\n\n    random() {\n        return Math.random().toString(36)\n            .replace(/[^a-z]+/g, '')\n            .slice(0, 5)\n    }\n}\n```\n\n## 实现\n\n选择SVG画布，设置其尺寸；找到全部path路径子元素；为每个path初始化纹理实例对象LineTexture，并设置纹理pattern的id引用填充。\n\n``` JavaScript\nconst svg = tool.select('#tibet')\nconst width = Math.min(svg.parentNode.clientWidth, 410)\nconst height = width * 440 / 820\ntool.attr(svg, {\n    width,\n    height\n})\nconst pathList = tool.selectAll(svg, 'path')\nconst colors = ['#f2f6ed', '#f3f6ee', '#f3f7ef', '#f4f7f0', '#f5f8f1', '#f5f8f2', '#f6f9f3']\n\nArray.prototype.forEach.call(pathList, (path, i) => {\n    const url = new LineTexture({\n        svg,\n        background: colors[i],\n        orientations: [`${i}/8`]\n    }).url()\n\n    tool.attr(path, {\n        fill: url\n    })\n})\n```\n\n<cite>参考：\nhttp://snapsvg.io/\nhttps://riccardoscalco.it/textures/</cite>\n\n\n{% raw %}\n<script>\nconst tool = (root => {\n    const doc = root.document\n    const xlink = 'http://www.w3.org/1999/xlink'\n    const xmlns = 'http://www.w3.org/2000/svg'\n    const tool = {}\n\n    tool.select = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelector(str)\n    }\n\n    tool.selectAll = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelectorAll(str)\n    }\n\n    tool.attr = (el, attr) => {\n        for (let key in attr) {\n            const val = String(attr[key])\n            if (val) {\n                if (key.substring(0, 6) == 'xlink:') {\n                    el.setAttributeNS(xlink, key.substring(6), val)\n                } else if (key.substring(0, 4) == \"xml:\") {\n                    el.setAttributeNS(xmlns, key.substring(4), val)\n                } else {\n                    el.setAttribute(key, val)\n                }\n            } else {\n                el.removeAttribute(key)\n            }\n        }\n    }\n\n    tool.create = el => doc.createElementNS(xmlns, el)\n\n    return tool\n})(window || this)\n\n\nclass LineTexture {\n    constructor(args) {\n        this.size = args.size || 20\n        this.stroke = args.stroke || '#a9aca5'\n        this.strokeWidth = args.strokeWidth || 2\n        this.background = args.background || ''\n        this.orientations = args.orientations || ['2/8']\n        this.svg = args.svg\n        this.id = this.random()\n        this.svg && this.init()\n    }\n\n    path(orientation) {\n        const s = this.size\n        switch (orientation) {\n            case '0/8':\n                return `M${s/4},0 l0,${s} M${3/4*s},0 l0,${s}`\n            case '1/8':\n                return `M${s/4},0 l${s/2},${s} M${-s/4},0 l${s/2},${s} M${s*3/4},0 l${s/2},${s}`\n            case '2/8':\n                return `M0,${s} l${s},${-s} M${-s/4},${s/4} l${s/2},${-s/2} M${3/4*s},${5/4*s} l${s/2},${-s/2}`\n            case '3/8':\n                return `M0,${3/4*s} l${s},${-s/2} M0,${s/4} l${s},${-s/2} M0,${s*5/4} l${s},${-s/2}`\n            case '4/8':\n                return `M0,${s/4} l${s},0 M0,${3/4*s} l${s},0`\n            case '5/8':\n                return `M0,${-s/4} l${s},${s/2} M0,${s/4} l${s},${s/2} M0,${s*3/4} l${s},${s/2}`\n            case '6/8':\n                return `M0,0 l${s},${s} M${-s/4},${3/4*s} l${s/2},${s/2} M${s*3/4},${-s/4} l${s/2},${s/2}`\n            case '7/8':\n                return `M${-s/4},0 l${s/2},${s} M${s/4},0 l${s/2},${s} M${s*3/4},0 l${s/2},${s}`\n            default:\n                return `M${s/2},0 l0,${s}`\n        }\n    }\n\n    url() {\n        return `url(#${this.id})`\n    }\n\n    init() {\n        const svg = this.svg.nodeType ? this.svg : tool.select(this.svg)\n        const defs = tool.select(svg, 'defs')\n        const pattern = tool.create('pattern')\n\n        tool.attr(pattern, {\n            id: this.id,\n            width: this.size,\n            height: this.size,\n            patternUnits: 'userSpaceOnUse'\n        })\n\n        if (this.background) {\n            const rect = tool.create('rect')\n            tool.attr(rect, {\n                width: this.size,\n                height: this.size,\n                fill: this.background\n            })\n            pattern.appendChild(rect)\n        }\n\n        this.orientations.forEach(o => {\n            const path = tool.create('path')\n            tool.attr(path, {\n                stroke: this.stroke,\n                'stroke-width': this.strokeWidth,\n                'stroke-linecap': 'square',\n                d: this.path(o)\n            })\n            pattern.appendChild(path)\n        })\n\n        defs.appendChild(pattern)\n    }\n\n    random() {\n        return Math.random().toString(36)\n            .replace(/[^a-z]+/g, '')\n            .slice(0, 5)\n    }\n}\n\n\nconst svg = tool.select('#tibet')\nconst width = Math.min(svg.parentNode.clientWidth, 410)\nconst height = width * 440 / 820\ntool.attr(svg, {\n    width,\n    height\n})\nconst pathList = tool.selectAll(svg, 'path')\nconst colors = ['#f2f6ed', '#f3f6ee', '#f3f7ef', '#f4f7f0', '#f5f8f1', '#f5f8f2', '#f6f9f3']\n\nArray.prototype.forEach.call(pathList, (path, i) => {\n    const url = new LineTexture({\n        svg,\n        background: colors[i],\n        orientations: [`${i}/8`]\n    }).url()\n\n    tool.attr(path, {\n        fill: url\n    })\n})\n</script>\n{% endraw %}\n","slug":"textures","published":1,"updated":"2018-12-30T02:59:23.927Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck160en1g003s3a8iaithxe1x","content":"\n<div class=\"scrollable-wrapper\">\n\t<svg id=\"tibet\" viewbox=\"0 0 820 440\">\n\t\t<defs/>\n\t\t<g stroke=\"#83887c\" stroke-width=\"2\" transform=\"translate(10, 10)\" fill=\"#f2f6ed\">\n\t\t\t<path d=\"M779.93,363.16L781.97,356.67L782.5,349.04L783.37,344.63L787.29,343.93L791.26,351.61L793.44,348.53L792.75,344.25L796.27,340.65L795.55,334.97L799.04,330.51L798.26,325.8L797.63,319.67L795.81,313.03L796.43,307.38L797.78,302.7L797.45,298.24L796.47,293.53L794.99,288.34L794.82,283.65L793.72,276.79L793.05,271.87L793.65,265.73L790.48,261.74L787.61,255.48L784.68,249.66L781.71,245.72L780.85,241.33L784.22,239.8L787.54,241.36L790.11,236.27L787.35,232.75L784.25,230.08L781.38,227.21L778.3,222.76L774.52,217.26L773.52,210.1L769.55,203.26L766.21,197.84L764.85,192.85L761.26,190.55L757.29,188.03L751.47,186.04L748,184.84L743.28,186.38L738.74,186.04L734.3,185.38L732.3,188.51L733.34,194.81L730.27,195.3L729.36,201.91L727.01,205.37L723.65,206.91L717.72,206.83L712.23,208.81L708.9,209.86L710.08,214.88L711.56,220.02L709.5,223.47L705.85,221.71L702.3,221.32L698.94,219.62L695.47,216.28L691.38,211.44L686.81,215.56L688.56,220.37L688.34,227.4L685.06,223.44L679.93,221.94L673.71,221.74L669.91,219.68L662.93,219.64L659.17,217.73L656.63,211.22L658.03,206.88L656.22,200.9L653.34,197.9L643.6,196.43L637.75,192.71L635.06,197.16L631.12,199.83L630.53,204.44L628.91,209.63L628.57,215.24L632.04,218.91L631.21,224.82L633.81,228.75L637.44,231.5L636.84,235.53L640.05,238.51L640.38,246.4L635.34,249.26L631.06,248.27L630.6,243.91L630.25,239.2L626.27,238.98L624.91,235.44L621.86,237.1L617.98,239.39L614.41,241.17L613.05,245.04L611.76,249.75L613.68,253.93L615.01,259.21L610.75,260.12L606.29,260.14L602.15,260.41L598.48,259.59L595.27,258.51L591.98,257.7L588.49,259.23L591.3,264.28L595.76,269.31L600.37,271.53L603.86,274.46L607.79,277.45L611.84,275.03L616.07,273.15L621.62,274.1L626.03,273.2L629.78,271.46L633.62,272L636.99,272.24L640.79,273.13L645.18,270.82L650.69,270.31L654.91,272.61L658.47,272.16L662,272.33L665.53,273.45L668.83,276.36L671.1,279.93L675.23,284.87L679.02,287.98L682.74,287.88L686.49,289.01L690.34,285.41L693.93,282.71L698,284.74L701.87,288.24L704.09,292.83L704.48,297.11L702.22,301.06L700.47,304.67L698.92,308.45L700.84,311.65L703.43,313.97L707.64,313.63L710.69,315.16L715.69,314.16L721.11,313.67L722.68,319.31L726.28,322.93L730.13,323.67L732.77,321.63L733.59,328.23L734.86,333.98L735.22,337.95L738.94,338.34L740.23,332.22L745.72,332.11L749.43,335.97L752.5,338.53L757.13,338.16L762.86,338.34L762.43,341.97L760.57,343.24L763.04,348.17L766.58,347.76L769.78,351.41L773.87,353.65L776.01,358.64L779.93,363.16z\"/>\n\t\t\t<path d=\"M549.47,287.6L544.52,287.92L539.56,287.16L534.93,285.99L531.41,289.31L527.81,289.58L524.44,289.98L521.37,286.19L518.97,280.08L520.7,275.52L518.57,271.17L515.23,268.25L511.12,268.5L506.97,268.97L503.24,264.37L501.53,258.83L500.65,254.39L496.9,252.49L492.52,254.26L489.28,258.06L484.31,255.18L478.86,253.66L476.1,257.29L475.37,262.8L474.02,267.46L471.91,272.75L472.87,277.46L470.18,280.27L466.56,281.9L462.52,285.15L457.36,287.96L454.8,293.66L451.4,299.37L446.84,300.79L443.31,298.85L442.03,303.42L443.27,309.22L441.44,313.16L439.8,316.74L440.25,322.9L443.58,326.75L447.1,328.25L450.94,327.98L456.14,328.21L460.12,329.57L463.01,330.52L466.54,332.23L470.94,331.34L474.43,329.1L478.36,328.45L483.78,327.23L488.9,324.56L493.18,321.42L500.5,320.86L504.34,320.05L508.06,318.22L512.8,319.16L518.19,318.23L522.42,317.84L526.52,318.7L531.6,318.17L535.85,318L539.57,314.92L539.94,310.58L539.41,307.49L535.68,305.91L532.82,302.79L536.43,300.68L539.82,299.17L542.35,296.57L546.33,293.8L549.47,287.6z\"/>\n\t\t\t<path d=\"M384.88,0L379.38,0.55L376.15,1.98L369.65,2.33L366.2,4.56L361.95,4.5L354.38,6.02L350.3,3.82L345.48,3.88L338.94,7.02L333.72,7.87L327.83,8.93L322.9,8.88L318.47,11.54L313.94,12.24L308.98,13.42L302.62,15.63L300.47,21.63L297.28,24.03L296.88,29.26L293,31.73L287.01,33.2L281.2,35.21L278.2,39.26L274.68,36.88L269.75,34.83L262.67,34.03L255.28,35.52L250.77,38.07L244.54,40.8L234.42,45.54L228.53,50.56L222.62,52.47L217.7,50.36L212.99,52.64L212.67,60.46L213.79,67.87L218.54,72.24L222.56,74.08L226.97,75.88L227.66,81.55L231.81,84.63L236.44,87.76L235.35,94.21L233.64,101.42L231.52,106.96L232.17,112.09L235.79,114.25L239.78,118.09L244.45,118.82L249.61,118.9L254.43,121.16L259,122.62L263.7,122.1L266.39,126.89L271.07,130.58L274.66,132.9L279.28,134.64L283.75,137.66L285.11,141.52L287.41,145.01L292.18,146.99L294.77,151.49L294.93,157.92L295.54,164.59L296.89,171.03L293.06,173.55L289.94,176.38L283.56,177.8L278.66,179.67L273.19,181.98L268.67,184.4L265.34,186.5L264.05,190.52L262.53,195.7L259.89,200.54L258.1,205.69L260.78,210.04L260.97,217.36L261.44,223.68L265.37,224.82L268.85,227.86L273.2,229.82L276.92,233.43L279.43,237.75L284.76,240.18L289.51,242.47L292.78,243.75L297.37,244.62L300.3,247L301.27,252.18L305.19,256.41L307.47,263.11L309.76,269.54L310.83,275.87L315.6,279.38L320.6,278.49L320.99,275.2L325.57,274.02L329.62,275.14L328.54,270.82L324.69,268.57L323.42,263.82L324.12,259.37L328.94,258.2L331.62,261.43L335.5,257.73L336.94,262.13L338.55,268.08L340.21,273.7L347.39,274.82L352.05,276.21L353.46,280.77L357.11,282.42L360.63,283.4L364.85,281.98L370.66,282.27L374.28,282.41L376.06,285.86L380.24,288.47L385.57,287.95L389.33,291.89L391.3,294.88L395.92,290.01L400.64,289.16L404.88,289.35L409.01,288.63L413.75,286.97L418.43,286.34L423.07,287.87L427.63,287.72L431.82,288.7L435.7,289.42L438.73,291.4L441.48,294.54L443.31,298.85L446.84,300.79L451.4,299.37L454.8,293.66L457.36,287.96L462.52,285.15L466.56,281.9L470.18,280.27L472.87,277.46L471.91,272.75L474.02,267.46L475.37,262.8L476.1,257.29L478.86,253.66L484.31,255.18L489.28,258.06L492.52,254.26L496.9,252.49L500.65,254.39L501.53,258.83L503.24,264.37L506.97,268.97L511.12,268.5L515.23,268.25L518.57,271.17L520.7,275.52L518.97,280.08L521.37,286.19L524.44,289.98L527.81,289.58L531.41,289.31L534.93,285.99L539.56,287.16L544.52,287.92L549.47,287.6L553.63,283.7L555.83,277.01L559.64,273.41L564.31,273.2L566.6,276.95L569.79,280.03L573.43,277.79L578.16,278.33L580.93,282.93L585.61,285.68L589.07,285.72L593.45,285.82L597.52,284.65L602.01,285.05L605.58,281.74L607.79,277.45L603.86,274.46L600.37,271.53L595.76,269.31L591.3,264.28L588.49,259.23L591.98,257.7L595.27,258.51L598.48,259.59L602.15,260.41L606.29,260.14L610.75,260.12L615.01,259.21L613.68,253.93L611.76,249.75L613.05,245.04L614.41,241.17L617.98,239.39L621.86,237.1L624.91,235.44L626.27,238.98L630.25,239.2L630.6,243.91L631.06,248.27L635.34,249.26L640.38,246.4L640.05,238.51L636.84,235.53L637.44,231.5L633.81,228.75L631.21,224.82L632.04,218.91L628.57,215.24L628.91,209.63L630.53,204.44L631.12,199.83L635.06,197.16L637.75,192.71L636.5,187.56L632.96,184.78L629.91,181.23L625.87,179.05L622.07,181.3L617.79,183.15L612.82,185.53L609.43,186.91L603.55,187.42L598.83,187.21L596.26,184.68L590.74,182.47L587.78,185.02L582.64,184.8L578.81,184.02L574.67,180.01L570.35,178.92L566.61,180.05L563.79,175.39L558.84,176.23L553.71,174.54L548.2,175.24L542.81,174.31L538.62,174.38L534.03,173.38L530.68,169.13L525.14,170.52L521.52,168.16L518.61,165.45L508.34,159.7L505.02,156.74L501.79,150.74L495.21,148.83L492.4,151.84L487.66,152.69L482.02,156.51L476.09,156.63L469.78,152.43L466.46,150.85L463.17,150.7L457.94,144.86L455.87,138.49L452.42,135.97L448.83,134.57L447.6,129.98L444.97,127.2L439.92,121.87L436.59,118.11L435.71,112.4L440.34,108.8L442.38,102.06L441.11,96.87L441.14,91.27L439.69,87.46L438.99,82.43L442.45,79.08L441.23,75.06L437.69,74.04L433.46,74.75L432.09,69.24L431.13,64.04L427.21,59.02L429.41,54.95L432.26,51.79L435.28,50.08L437.95,44.78L438.06,38.89L439.29,33.32L440.3,29.33L435.89,29.68L430.59,28.55L426.2,25.59L427.11,21.48L433.6,17.93L428.49,15.19L424.06,11.51L419.41,9.11L415.32,9.93L411.06,7.34L407.46,6.06L403.97,5.61L401.14,7.81L397.61,4.8L394.17,1.67L389.67,0.19L384.88,0L384.88,0z\"/>\n\t\t\t<path d=\"M164.17,37.61L159.9,36.63L156.2,36.33L153.2,39.52L151.39,43.46L147.21,45.84L141.97,48.44L140.21,53.95L136.08,55.87L131.86,56.89L128.03,58.27L122.77,58.66L119.23,54.84L114.69,53.86L109.14,53.43L105.31,51.6L102.25,53.11L98.08,54.73L94.85,53.59L91.6,54.11L88.23,52.47L83.44,49.57L78.83,49.38L73.43,54.78L73.81,59.84L70.79,62.99L67.06,65.77L63.85,68.93L61.82,75.21L57.84,78.55L57.97,85.53L56.43,91.75L53.53,94.46L50.07,95.03L45.41,95.23L38.82,96.14L32.51,96.77L25.91,98.93L22.72,104.08L19.83,109.21L14.98,111.6L12.11,115.06L13.99,121.09L14.63,127.27L12.59,133.48L17.13,142.13L21.66,146.17L24.92,149.46L27.58,153.18L29.71,156.47L30.12,162.84L32.53,166.79L33.44,172.97L34.73,178.06L34.78,182.18L32.46,185.15L28.5,188.63L23.27,192.43L18.73,190.49L15.4,186.33L13.83,179.65L8.88,180.77L4.66,181.59L0.96,183.98L2.6,187.67L3.58,192.75L6.4,198.57L8.84,202.06L11.98,205.36L14.32,211.2L13.04,219.84L16.14,225.21L13.94,231.21L15.09,236.41L19.32,239.93L23.99,236.98L26.95,234.09L30.23,236.62L32.97,240.91L35.86,246.4L39.07,249.39L42.26,253.16L45.8,256.05L49.12,255.61L52.48,254.67L56.01,255.51L59.73,258.84L63.29,260.83L67.58,263.37L70.84,267.16L70.59,271.22L74.25,274.34L79.23,276.36L84.31,278.24L88.56,279.83L92.32,282.92L97.48,286.12L101.77,288.53L104.34,294.25L108.71,298.21L111.9,294.45L115.59,289.92L116.67,285.65L117.16,281.33L121.55,281.61L124.69,279.78L128.08,280.36L131.88,281.84L135.31,282.79L138.83,283.75L143.34,284.7L145.81,288.92L149.39,285.81L151.62,280.71L156.31,281.35L163.07,281.81L163.49,276.27L164.76,271.54L165.36,265.95L170.02,265.18L174.58,269.77L176,274.05L179.71,275.39L183.22,271.81L184.64,267.2L183.11,263.17L179.22,261.88L176.55,258.51L172.96,257.47L169.04,254.4L166.56,248.53L170.51,247.17L174.91,245.18L176.17,241.5L175.82,236.71L176.65,231.97L180.13,227.29L184.77,223.59L188.88,224.81L193.6,226.39L197.47,227.39L203.08,227.21L208.31,228.03L213.29,227.58L217.3,226.04L220.92,225.38L224.24,223.85L229.86,224.15L231.66,218.13L234.93,221.9L238.23,222.95L240.95,225.31L238.84,231.14L232.75,233.56L231.16,238.38L236.19,240.29L238.43,244.55L241.13,246.3L242.79,252.31L245.08,258.11L241.87,261.32L239.73,264.31L237.19,267.91L236.34,272.3L238.76,276.38L239.53,280.97L241.01,284.6L243.69,287.99L244.98,291.84L245.67,297.3L251.01,301.85L254.73,306.15L258.13,308.9L262.48,311.64L266.99,312.51L270.21,309.96L272.26,306.08L276.71,307.09L278.68,303.53L282.09,301.49L285.12,298.2L286.13,293.93L286.66,288.09L289.44,283.52L289.58,277.69L288.17,272.62L284.1,270.55L286.64,268.54L287.56,264.84L289.69,259.63L291.33,264.33L295.42,262.38L296.6,257.38L298.61,253.84L298.61,253.84L301.27,252.18L300.3,247L297.37,244.62L292.78,243.75L289.51,242.47L284.76,240.18L279.43,237.75L276.92,233.43L273.2,229.82L268.85,227.86L265.37,224.82L261.44,223.68L260.97,217.36L260.78,210.04L258.1,205.69L259.89,200.54L262.53,195.7L264.05,190.52L265.34,186.5L268.67,184.4L273.19,181.98L278.66,179.67L283.56,177.8L289.94,176.38L293.06,173.55L296.89,171.03L295.54,164.59L294.93,157.92L294.77,151.49L292.18,146.99L287.41,145.01L285.11,141.52L283.75,137.66L279.28,134.64L274.66,132.9L271.07,130.58L266.39,126.89L263.7,122.1L259,122.62L254.43,121.16L249.61,118.9L244.45,118.82L239.78,118.09L235.79,114.25L232.17,112.09L231.52,106.96L233.64,101.42L235.35,94.21L236.44,87.76L231.81,84.63L227.66,81.55L226.97,75.88L222.56,74.08L218.54,72.24L213.79,67.87L212.67,60.46L212.99,52.64L208.72,52.86L202.94,53.19L197.5,52.34L192.4,51.5L188.67,50.53L184.2,51.25L181.06,48.94L178.01,47.01L177.2,43.05L175.14,38.37L168.74,38.82L164.17,37.61zM286.55,256.5L285.68,252.86L289.84,250.78L289.84,250.78L285.69,252.86L286.55,256.49L289.52,259.45L286.55,256.5z\"/>\n\t\t\t<path d=\"M650.69,270.31L645.18,270.82L640.79,273.13L636.99,272.24L633.62,272L629.78,271.46L626.03,273.2L621.62,274.1L616.07,273.15L611.84,275.03L607.79,277.45L605.58,281.74L602.01,285.05L597.52,284.65L593.45,285.82L589.07,285.72L585.61,285.68L580.93,282.93L578.16,278.33L573.43,277.79L569.79,280.03L566.6,276.95L564.31,273.2L559.64,273.41L555.83,277.01L553.63,283.7L549.47,287.6L546.33,293.8L542.35,296.57L539.82,299.17L536.43,300.68L532.82,302.79L535.68,305.91L539.41,307.49L544.7,309.91L545.23,315.59L548.97,313.75L553.13,313.62L557.04,313.08L560.81,312.26L563.96,315.59L566.29,318.94L567.47,323.73L567.45,328.76L565.06,332.54L562.03,335.83L558.97,338.26L556.38,340.67L555.33,344.83L551.63,347.74L545.99,349.52L542.41,351.99L545.68,353.81L550,353.34L554.41,354.36L559.07,355.78L562.97,354.79L566.36,355.15L570.56,355.1L576.65,354.66L582.99,357.46L589.32,357.98L593.34,357.42L596.81,356.35L600.81,356.16L602.88,351.41L605.35,347.97L609.17,343.65L611.4,339.46L614.18,336.98L617.21,335.49L620.17,333.42L624.16,332.39L626.9,328.79L630.41,330.16L633.89,334.59L637.9,335.81L643.04,336.81L648.61,338.44L652.02,340.12L658.43,341.11L661.68,336.91L663.45,333.22L667.76,330.83L672.49,327.84L675.78,326.08L679.39,325.42L682.72,323.16L686.07,326.42L687.8,330.53L691.54,334.21L689.07,337.04L685.91,339.75L686.49,344.82L689.27,345.75L692.82,342.58L698.88,342.87L701.08,348.32L702.82,354.03L698.98,357.69L696.04,361.58L693.59,364.3L691.43,368.81L695.62,370.92L699.08,368.67L704.91,367.04L709.5,369.73L714.6,370.97L717.63,372.9L721.71,371.71L727.26,374.51L732.51,376.47L736.64,373.8L737.52,370.1L740.03,365.3L744.32,365.61L747.65,369.41L751.59,371.71L755.59,373.27L757.66,376.66L761.76,379.57L765.8,376.51L766.98,371.47L771.03,374.93L772.23,380.2L775.61,381.01L779.98,379.48L784.08,376.59L785.14,370.56L781.73,366.93L779.93,363.16L776.01,358.64L773.87,353.65L769.78,351.41L766.58,347.76L763.04,348.17L760.57,343.24L762.43,341.97L762.86,338.34L757.13,338.16L752.5,338.53L749.43,335.97L745.72,332.11L740.23,332.22L738.94,338.34L735.22,337.95L734.86,333.98L733.59,328.23L732.77,321.63L730.13,323.67L726.28,322.93L722.68,319.31L721.11,313.67L715.69,314.16L710.69,315.16L707.64,313.63L703.43,313.97L700.84,311.65L698.92,308.45L700.47,304.67L702.22,301.06L704.48,297.11L704.09,292.83L701.87,288.24L698,284.74L693.93,282.71L690.34,285.41L686.49,289.01L682.74,287.88L679.02,287.98L675.23,284.87L671.1,279.93L668.83,276.36L665.53,273.45L662,272.33L658.47,272.16L654.91,272.61L650.69,270.31z\"/>\n\t\t\t<path d=\"M545.23,315.59L544.7,309.91L539.41,307.49L539.94,310.58L539.57,314.92L535.85,318L531.6,318.17L526.52,318.7L522.42,317.84L518.19,318.23L512.8,319.16L508.06,318.22L504.34,320.05L500.5,320.86L493.18,321.42L488.9,324.56L483.78,327.23L478.36,328.45L474.43,329.1L470.94,331.34L466.54,332.23L463.01,330.52L460.12,329.57L458.96,334.89L457.52,339.39L456.22,342.9L454.54,348.67L454.7,354.43L452.11,359.08L452.29,365.92L453.83,371.51L456.56,375.28L453.12,379.78L458.69,380.6L462.59,383.46L466.44,384.69L471.1,385.47L476.23,384.6L482.58,385.46L486.83,386.59L490.61,387.33L495.54,386.29L500.11,384.88L504.64,387.73L509.07,392.18L511.29,396.13L515.57,397.66L521.53,398.69L527.19,396.6L533.1,393.6L538.16,394.96L544.01,394.42L548.34,391.79L552.17,389.28L552.33,384.07L554.27,379.95L558.45,379.04L561.69,377.06L564.21,374.64L568.36,372.18L571.16,366.77L575.03,362.08L578.94,359.45L582.99,357.46L576.65,354.66L570.56,355.1L566.36,355.15L562.97,354.79L559.07,355.78L554.41,354.36L550,353.34L545.68,353.81L542.41,351.99L545.99,349.52L551.63,347.74L555.33,344.83L556.38,340.67L558.97,338.26L562.03,335.83L565.06,332.54L567.45,328.76L567.47,323.73L566.29,318.94L563.96,315.59L560.81,312.26L557.04,313.08L553.13,313.62L548.97,313.75L545.23,315.59z\"/>\n\t\t\t<path d=\"M407.8,416.48L408.45,411.45L409.55,407.08L413.45,403.89L416.82,400.81L418.53,397.55L421.45,394L425.4,390.76L428.41,385.2L432.16,381.22L435.37,379.6L439.39,378.3L443.85,378.23L447.61,379.49L453.12,379.78L456.56,375.28L453.83,371.51L452.29,365.92L452.11,359.08L454.7,354.43L454.54,348.67L456.22,342.9L457.52,339.39L458.96,334.89L460.12,329.57L456.14,328.21L450.94,327.98L447.1,328.25L443.58,326.75L440.25,322.9L439.8,316.74L441.44,313.16L443.27,309.22L442.03,303.42L443.31,298.85L441.48,294.54L438.73,291.4L435.7,289.42L431.82,288.7L427.63,287.72L423.07,287.87L418.43,286.34L413.75,286.97L409.01,288.63L404.88,289.35L400.64,289.16L395.92,290.01L391.3,294.88L389.33,291.89L385.57,287.95L380.24,288.47L376.06,285.86L374.28,282.41L370.66,282.27L364.85,281.98L360.63,283.4L357.11,282.42L353.46,280.77L352.05,276.21L347.39,274.82L340.21,273.7L338.55,268.08L336.94,262.13L335.5,257.73L331.62,261.43L328.94,258.2L324.12,259.37L323.42,263.82L324.69,268.57L328.54,270.82L329.62,275.14L325.57,274.02L320.99,275.2L320.6,278.49L315.6,279.38L310.83,275.87L309.76,269.54L307.47,263.11L305.19,256.41L301.27,252.18L298.61,253.84L296.61,257.38L295.42,262.38L291.33,264.33L289.69,259.63L287.56,264.84L286.64,268.54L284.1,270.55L288.17,272.62L289.58,277.69L289.44,283.52L286.66,288.09L286.13,293.93L285.12,298.2L282.09,301.49L278.68,303.53L276.71,307.09L272.26,306.08L270.21,309.96L266.99,312.51L262.48,311.64L258.13,308.9L254.73,306.15L251.01,301.85L245.67,297.3L244.98,291.84L243.69,287.99L241.01,284.6L239.53,280.97L238.76,276.38L236.34,272.3L237.19,267.91L239.73,264.31L241.87,261.32L245.08,258.11L242.79,252.31L241.13,246.3L238.43,244.55L236.19,240.29L231.16,238.38L232.75,233.56L238.84,231.14L240.95,225.31L238.23,222.95L234.93,221.9L231.66,218.13L229.86,224.15L224.24,223.85L220.92,225.38L217.3,226.04L213.29,227.58L208.31,228.03L203.08,227.21L197.47,227.39L193.6,226.39L188.88,224.81L184.77,223.59L180.13,227.29L176.65,231.97L175.82,236.71L176.17,241.5L174.91,245.18L170.51,247.17L166.56,248.53L169.04,254.4L172.96,257.47L176.55,258.51L179.22,261.88L183.11,263.17L184.64,267.2L183.22,271.81L179.71,275.39L176,274.05L174.58,269.77L170.02,265.18L165.36,265.95L164.76,271.54L163.49,276.27L163.07,281.81L156.31,281.35L151.62,280.71L149.39,285.81L145.81,288.92L146.61,293.96L150.54,296.51L154.61,298.31L158.62,300.47L162.05,302.54L164.36,305.64L167.43,307.89L171.56,312.26L175.53,312.92L178.83,314.11L181.86,315.88L185.39,316.67L188.71,319.59L192.53,323.59L194.83,328.2L197.16,331.67L199.48,334.39L202.92,335.32L206.98,332.39L211.17,329.7L215.66,329.5L220.68,331.24L223.76,333.8L224.05,338.62L226.06,343.15L226.64,347.83L231.33,349.97L234.76,353.91L239.41,354.94L243.92,358.54L251.24,361.5L254.72,360.65L258.34,357.68L262.15,359.84L262.13,363.94L260.03,367.01L260.46,371.88L264.29,373.33L269.6,374.05L274.29,372.66L277.58,374.06L281.89,372.28L284.35,376.01L287.49,379.32L290.09,383.78L292.14,387.56L294.79,391.07L297.87,388.3L298.01,383.28L300.88,380.84L302.58,386.18L306.11,388.94L309.27,390.55L312.69,389.52L315.35,384.72L320.34,382.87L323.25,384.6L326.32,386.47L330.02,388.48L333.3,389.58L337.19,393.27L341.77,394.4L345.2,394.41L350.12,394.05L355.55,394.28L359.52,395.17L363.92,391.53L370.07,391.34L375.26,391.34L378.95,389.2L382.5,388.76L387.19,387.34L391.96,384.76L395.24,382.7L400.06,384.43L403.52,388.42L405.05,392.72L404.14,398.56L402.98,402.76L401.41,407.01L401.55,410.92L403.78,414.1L407.8,416.48L407.8,416.48z\"/>\n\t\t</g>\n\t</svg>\n</div>\n\n<p>SVG中的pattern元素，让预定义图形以固定间隔在x轴和y轴上重复或平铺，从而覆盖需要涂色或添加纹理的区域。</p>\n<p>在defs中预定义pattern图案元素，在图形元素上使用属性<code>fill=&quot;url(#id)&quot;</code>或<code>stroke=&quot;url(#id)&quot;</code>来引用填充或描边的图案。</p>\n<h2 id=\"DOM工具\"><a href=\"#DOM工具\" class=\"headerlink\" title=\"DOM工具\"></a>DOM工具</h2><p>操作SVG及其图形元素DOM的方法，包括选择、创建、设置属性等。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> tool = (<span class=\"function\"><span class=\"params\">root</span> =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> doc = root.document</div><div class=\"line\">    <span class=\"keyword\">const</span> xlink = <span class=\"string\">'http://www.w3.org/1999/xlink'</span></div><div class=\"line\">    <span class=\"keyword\">const</span> xmlns = <span class=\"string\">'http://www.w3.org/2000/svg'</span></div><div class=\"line\">    <span class=\"keyword\">const</span> tool = &#123;&#125;</div><div class=\"line\"><br></div><div class=\"line\">    tool.select = <span class=\"function\">(<span class=\"params\">el, str</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!str) &#123;</div><div class=\"line\">            str = el</div><div class=\"line\">            el = doc</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> doc.querySelector(str)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    tool.selectAll = <span class=\"function\">(<span class=\"params\">el, str</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!str) &#123;</div><div class=\"line\">            str = el</div><div class=\"line\">            el = doc</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> doc.querySelectorAll(str)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    tool.attr = <span class=\"function\">(<span class=\"params\">el, attr</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> attr) &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> val = <span class=\"built_in\">String</span>(attr[key])</div><div class=\"line\">            <span class=\"keyword\">if</span> (val) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (key.substring(<span class=\"number\">0</span>, <span class=\"number\">6</span>) == <span class=\"string\">'xlink:'</span>) &#123;</div><div class=\"line\">                    el.setAttributeNS(xlink, key.substring(<span class=\"number\">6</span>), val)</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key.substring(<span class=\"number\">0</span>, <span class=\"number\">4</span>) == <span class=\"string\">\"xml:\"</span>) &#123;</div><div class=\"line\">                    el.setAttributeNS(xmlns, key.substring(<span class=\"number\">4</span>), val)</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    el.setAttribute(key, val)</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                el.removeAttribute(key)</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    tool.create = <span class=\"function\"><span class=\"params\">el</span> =&gt;</span> doc.createElementNS(xmlns, el)</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">return</span> tool</div><div class=\"line\">&#125;)(<span class=\"built_in\">window</span> || <span class=\"keyword\">this</span>)</div></pre></figure>\n<h2 id=\"纹理类\"><a href=\"#纹理类\" class=\"headerlink\" title=\"纹理类\"></a>纹理类</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LineTexture</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(args) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.size = args.size || <span class=\"number\">20</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.stroke = args.stroke || <span class=\"string\">'#a9aca5'</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.strokeWidth = args.strokeWidth || <span class=\"number\">2</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.background = args.background || <span class=\"string\">''</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.orientations = args.orientations || [<span class=\"string\">'2/8'</span>]</div><div class=\"line\">        <span class=\"keyword\">this</span>.svg = args.svg</div><div class=\"line\">        <span class=\"keyword\">this</span>.id = <span class=\"keyword\">this</span>.random()</div><div class=\"line\">        <span class=\"keyword\">this</span>.svg &amp;&amp; <span class=\"keyword\">this</span>.init()</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    path(orientation) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> s = <span class=\"keyword\">this</span>.size</div><div class=\"line\">        <span class=\"keyword\">switch</span> (orientation) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'0/8'</span>:</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">`M<span class=\"subst\">$&#123;s<span class=\"regexp\">/4&#125;,0 l0,$&#123;s&#125; M$&#123;3/</span><span class=\"number\">4</span>*s&#125;</span>,0 l0,<span class=\"subst\">$&#123;s&#125;</span>`</span></div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'1/8'</span>:</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">`M<span class=\"subst\">$&#123;s<span class=\"regexp\">/4&#125;,0 l$&#123;s/</span><span class=\"number\">2</span>&#125;</span>,<span class=\"subst\">$&#123;s&#125;</span> M<span class=\"subst\">$&#123;-s<span class=\"regexp\">/4&#125;,0 l$&#123;s/</span><span class=\"number\">2</span>&#125;</span>,<span class=\"subst\">$&#123;s&#125;</span> M<span class=\"subst\">$&#123;s*<span class=\"number\">3</span><span class=\"regexp\">/4&#125;,0 l$&#123;s/</span><span class=\"number\">2</span>&#125;</span>,<span class=\"subst\">$&#123;s&#125;</span>`</span></div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'2/8'</span>:</div><div class=\"line\">                <span class=\"comment\">// 省略...</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    url() &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`url(#<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.id&#125;</span>)`</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    init() &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> svg = <span class=\"keyword\">this</span>.svg.nodeType ? <span class=\"keyword\">this</span>.svg : tool.select(<span class=\"keyword\">this</span>.svg)</div><div class=\"line\">        <span class=\"keyword\">const</span> defs = tool.select(svg, <span class=\"string\">'defs'</span>)</div><div class=\"line\">        <span class=\"keyword\">const</span> pattern = tool.create(<span class=\"string\">'pattern'</span>)</div><div class=\"line\"><br></div><div class=\"line\">        tool.attr(pattern, &#123;</div><div class=\"line\">            id: <span class=\"keyword\">this</span>.id,</div><div class=\"line\">            width: <span class=\"keyword\">this</span>.size,</div><div class=\"line\">            height: <span class=\"keyword\">this</span>.size,</div><div class=\"line\">            patternUnits: <span class=\"string\">'userSpaceOnUse'</span></div><div class=\"line\">        &#125;)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.background) &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> rect = tool.create(<span class=\"string\">'rect'</span>)</div><div class=\"line\">            tool.attr(rect, &#123;</div><div class=\"line\">                width: <span class=\"keyword\">this</span>.size,</div><div class=\"line\">                height: <span class=\"keyword\">this</span>.size,</div><div class=\"line\">                fill: <span class=\"keyword\">this</span>.background</div><div class=\"line\">            &#125;)</div><div class=\"line\">            pattern.appendChild(rect)</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.orientations.forEach(<span class=\"function\"><span class=\"params\">o</span> =&gt;</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> path = tool.create(<span class=\"string\">'path'</span>)</div><div class=\"line\">            tool.attr(path, &#123;</div><div class=\"line\">                stroke: <span class=\"keyword\">this</span>.stroke,</div><div class=\"line\">                <span class=\"string\">'stroke-width'</span>: <span class=\"keyword\">this</span>.strokeWidth,</div><div class=\"line\">                <span class=\"string\">'stroke-linecap'</span>: <span class=\"string\">'square'</span>,</div><div class=\"line\">                d: <span class=\"keyword\">this</span>.path(o)</div><div class=\"line\">            &#125;)</div><div class=\"line\">            pattern.appendChild(path)</div><div class=\"line\">        &#125;)</div><div class=\"line\"><br></div><div class=\"line\">        defs.appendChild(pattern)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    random() &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.random().toString(<span class=\"number\">36</span>)</div><div class=\"line\">            .replace(<span class=\"regexp\">/[^a-z]+/g</span>, <span class=\"string\">''</span>)</div><div class=\"line\">            .slice(<span class=\"number\">0</span>, <span class=\"number\">5</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>选择SVG画布，设置其尺寸；找到全部path路径子元素；为每个path初始化纹理实例对象LineTexture，并设置纹理pattern的id引用填充。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> svg = tool.select(<span class=\"string\">'#tibet'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> width = <span class=\"built_in\">Math</span>.min(svg.parentNode.clientWidth, <span class=\"number\">410</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> height = width * <span class=\"number\">440</span> / <span class=\"number\">820</span></div><div class=\"line\">tool.attr(svg, &#123;</div><div class=\"line\">    width,</div><div class=\"line\">    height</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"keyword\">const</span> pathList = tool.selectAll(svg, <span class=\"string\">'path'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> colors = [<span class=\"string\">'#f2f6ed'</span>, <span class=\"string\">'#f3f6ee'</span>, <span class=\"string\">'#f3f7ef'</span>, <span class=\"string\">'#f4f7f0'</span>, <span class=\"string\">'#f5f8f1'</span>, <span class=\"string\">'#f5f8f2'</span>, <span class=\"string\">'#f6f9f3'</span>]</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.forEach.call(pathList, (path, i) =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> url = <span class=\"keyword\">new</span> LineTexture(&#123;</div><div class=\"line\">        svg,</div><div class=\"line\">        background: colors[i],</div><div class=\"line\">        orientations: [<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>/8`</span>]</div><div class=\"line\">    &#125;).url()</div><div class=\"line\"><br></div><div class=\"line\">    tool.attr(path, &#123;</div><div class=\"line\">        fill: url</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;)</div></pre></figure>\n<p><cite>参考：<br><a href=\"http://snapsvg.io/\" target=\"_blank\" rel=\"noopener\">http://snapsvg.io/</a><br><a href=\"https://riccardoscalco.it/textures/\" target=\"_blank\" rel=\"noopener\">https://riccardoscalco.it/textures/</a></cite></p>\n\n<script>\nconst tool = (root => {\n    const doc = root.document\n    const xlink = 'http://www.w3.org/1999/xlink'\n    const xmlns = 'http://www.w3.org/2000/svg'\n    const tool = {}\n\n    tool.select = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelector(str)\n    }\n\n    tool.selectAll = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelectorAll(str)\n    }\n\n    tool.attr = (el, attr) => {\n        for (let key in attr) {\n            const val = String(attr[key])\n            if (val) {\n                if (key.substring(0, 6) == 'xlink:') {\n                    el.setAttributeNS(xlink, key.substring(6), val)\n                } else if (key.substring(0, 4) == \"xml:\") {\n                    el.setAttributeNS(xmlns, key.substring(4), val)\n                } else {\n                    el.setAttribute(key, val)\n                }\n            } else {\n                el.removeAttribute(key)\n            }\n        }\n    }\n\n    tool.create = el => doc.createElementNS(xmlns, el)\n\n    return tool\n})(window || this)\n\n\nclass LineTexture {\n    constructor(args) {\n        this.size = args.size || 20\n        this.stroke = args.stroke || '#a9aca5'\n        this.strokeWidth = args.strokeWidth || 2\n        this.background = args.background || ''\n        this.orientations = args.orientations || ['2/8']\n        this.svg = args.svg\n        this.id = this.random()\n        this.svg && this.init()\n    }\n\n    path(orientation) {\n        const s = this.size\n        switch (orientation) {\n            case '0/8':\n                return `M${s/4},0 l0,${s} M${3/4*s},0 l0,${s}`\n            case '1/8':\n                return `M${s/4},0 l${s/2},${s} M${-s/4},0 l${s/2},${s} M${s*3/4},0 l${s/2},${s}`\n            case '2/8':\n                return `M0,${s} l${s},${-s} M${-s/4},${s/4} l${s/2},${-s/2} M${3/4*s},${5/4*s} l${s/2},${-s/2}`\n            case '3/8':\n                return `M0,${3/4*s} l${s},${-s/2} M0,${s/4} l${s},${-s/2} M0,${s*5/4} l${s},${-s/2}`\n            case '4/8':\n                return `M0,${s/4} l${s},0 M0,${3/4*s} l${s},0`\n            case '5/8':\n                return `M0,${-s/4} l${s},${s/2} M0,${s/4} l${s},${s/2} M0,${s*3/4} l${s},${s/2}`\n            case '6/8':\n                return `M0,0 l${s},${s} M${-s/4},${3/4*s} l${s/2},${s/2} M${s*3/4},${-s/4} l${s/2},${s/2}`\n            case '7/8':\n                return `M${-s/4},0 l${s/2},${s} M${s/4},0 l${s/2},${s} M${s*3/4},0 l${s/2},${s}`\n            default:\n                return `M${s/2},0 l0,${s}`\n        }\n    }\n\n    url() {\n        return `url(#${this.id})`\n    }\n\n    init() {\n        const svg = this.svg.nodeType ? this.svg : tool.select(this.svg)\n        const defs = tool.select(svg, 'defs')\n        const pattern = tool.create('pattern')\n\n        tool.attr(pattern, {\n            id: this.id,\n            width: this.size,\n            height: this.size,\n            patternUnits: 'userSpaceOnUse'\n        })\n\n        if (this.background) {\n            const rect = tool.create('rect')\n            tool.attr(rect, {\n                width: this.size,\n                height: this.size,\n                fill: this.background\n            })\n            pattern.appendChild(rect)\n        }\n\n        this.orientations.forEach(o => {\n            const path = tool.create('path')\n            tool.attr(path, {\n                stroke: this.stroke,\n                'stroke-width': this.strokeWidth,\n                'stroke-linecap': 'square',\n                d: this.path(o)\n            })\n            pattern.appendChild(path)\n        })\n\n        defs.appendChild(pattern)\n    }\n\n    random() {\n        return Math.random().toString(36)\n            .replace(/[^a-z]+/g, '')\n            .slice(0, 5)\n    }\n}\n\n\nconst svg = tool.select('#tibet')\nconst width = Math.min(svg.parentNode.clientWidth, 410)\nconst height = width * 440 / 820\ntool.attr(svg, {\n    width,\n    height\n})\nconst pathList = tool.selectAll(svg, 'path')\nconst colors = ['#f2f6ed', '#f3f6ee', '#f3f7ef', '#f4f7f0', '#f5f8f1', '#f5f8f2', '#f6f9f3']\n\nArray.prototype.forEach.call(pathList, (path, i) => {\n    const url = new LineTexture({\n        svg,\n        background: colors[i],\n        orientations: [`${i}/8`]\n    }).url()\n\n    tool.attr(path, {\n        fill: url\n    })\n})\n</script>\n\n","site":{"data":{}},"excerpt":"","more":"\n<div class=\"scrollable-wrapper\">\n\t<svg id=\"tibet\" viewbox=\"0 0 820 440\">\n\t\t<defs/>\n\t\t<g stroke=\"#83887c\" stroke-width=\"2\" transform=\"translate(10, 10)\" fill=\"#f2f6ed\">\n\t\t\t<path d=\"M779.93,363.16L781.97,356.67L782.5,349.04L783.37,344.63L787.29,343.93L791.26,351.61L793.44,348.53L792.75,344.25L796.27,340.65L795.55,334.97L799.04,330.51L798.26,325.8L797.63,319.67L795.81,313.03L796.43,307.38L797.78,302.7L797.45,298.24L796.47,293.53L794.99,288.34L794.82,283.65L793.72,276.79L793.05,271.87L793.65,265.73L790.48,261.74L787.61,255.48L784.68,249.66L781.71,245.72L780.85,241.33L784.22,239.8L787.54,241.36L790.11,236.27L787.35,232.75L784.25,230.08L781.38,227.21L778.3,222.76L774.52,217.26L773.52,210.1L769.55,203.26L766.21,197.84L764.85,192.85L761.26,190.55L757.29,188.03L751.47,186.04L748,184.84L743.28,186.38L738.74,186.04L734.3,185.38L732.3,188.51L733.34,194.81L730.27,195.3L729.36,201.91L727.01,205.37L723.65,206.91L717.72,206.83L712.23,208.81L708.9,209.86L710.08,214.88L711.56,220.02L709.5,223.47L705.85,221.71L702.3,221.32L698.94,219.62L695.47,216.28L691.38,211.44L686.81,215.56L688.56,220.37L688.34,227.4L685.06,223.44L679.93,221.94L673.71,221.74L669.91,219.68L662.93,219.64L659.17,217.73L656.63,211.22L658.03,206.88L656.22,200.9L653.34,197.9L643.6,196.43L637.75,192.71L635.06,197.16L631.12,199.83L630.53,204.44L628.91,209.63L628.57,215.24L632.04,218.91L631.21,224.82L633.81,228.75L637.44,231.5L636.84,235.53L640.05,238.51L640.38,246.4L635.34,249.26L631.06,248.27L630.6,243.91L630.25,239.2L626.27,238.98L624.91,235.44L621.86,237.1L617.98,239.39L614.41,241.17L613.05,245.04L611.76,249.75L613.68,253.93L615.01,259.21L610.75,260.12L606.29,260.14L602.15,260.41L598.48,259.59L595.27,258.51L591.98,257.7L588.49,259.23L591.3,264.28L595.76,269.31L600.37,271.53L603.86,274.46L607.79,277.45L611.84,275.03L616.07,273.15L621.62,274.1L626.03,273.2L629.78,271.46L633.62,272L636.99,272.24L640.79,273.13L645.18,270.82L650.69,270.31L654.91,272.61L658.47,272.16L662,272.33L665.53,273.45L668.83,276.36L671.1,279.93L675.23,284.87L679.02,287.98L682.74,287.88L686.49,289.01L690.34,285.41L693.93,282.71L698,284.74L701.87,288.24L704.09,292.83L704.48,297.11L702.22,301.06L700.47,304.67L698.92,308.45L700.84,311.65L703.43,313.97L707.64,313.63L710.69,315.16L715.69,314.16L721.11,313.67L722.68,319.31L726.28,322.93L730.13,323.67L732.77,321.63L733.59,328.23L734.86,333.98L735.22,337.95L738.94,338.34L740.23,332.22L745.72,332.11L749.43,335.97L752.5,338.53L757.13,338.16L762.86,338.34L762.43,341.97L760.57,343.24L763.04,348.17L766.58,347.76L769.78,351.41L773.87,353.65L776.01,358.64L779.93,363.16z\"/>\n\t\t\t<path d=\"M549.47,287.6L544.52,287.92L539.56,287.16L534.93,285.99L531.41,289.31L527.81,289.58L524.44,289.98L521.37,286.19L518.97,280.08L520.7,275.52L518.57,271.17L515.23,268.25L511.12,268.5L506.97,268.97L503.24,264.37L501.53,258.83L500.65,254.39L496.9,252.49L492.52,254.26L489.28,258.06L484.31,255.18L478.86,253.66L476.1,257.29L475.37,262.8L474.02,267.46L471.91,272.75L472.87,277.46L470.18,280.27L466.56,281.9L462.52,285.15L457.36,287.96L454.8,293.66L451.4,299.37L446.84,300.79L443.31,298.85L442.03,303.42L443.27,309.22L441.44,313.16L439.8,316.74L440.25,322.9L443.58,326.75L447.1,328.25L450.94,327.98L456.14,328.21L460.12,329.57L463.01,330.52L466.54,332.23L470.94,331.34L474.43,329.1L478.36,328.45L483.78,327.23L488.9,324.56L493.18,321.42L500.5,320.86L504.34,320.05L508.06,318.22L512.8,319.16L518.19,318.23L522.42,317.84L526.52,318.7L531.6,318.17L535.85,318L539.57,314.92L539.94,310.58L539.41,307.49L535.68,305.91L532.82,302.79L536.43,300.68L539.82,299.17L542.35,296.57L546.33,293.8L549.47,287.6z\"/>\n\t\t\t<path d=\"M384.88,0L379.38,0.55L376.15,1.98L369.65,2.33L366.2,4.56L361.95,4.5L354.38,6.02L350.3,3.82L345.48,3.88L338.94,7.02L333.72,7.87L327.83,8.93L322.9,8.88L318.47,11.54L313.94,12.24L308.98,13.42L302.62,15.63L300.47,21.63L297.28,24.03L296.88,29.26L293,31.73L287.01,33.2L281.2,35.21L278.2,39.26L274.68,36.88L269.75,34.83L262.67,34.03L255.28,35.52L250.77,38.07L244.54,40.8L234.42,45.54L228.53,50.56L222.62,52.47L217.7,50.36L212.99,52.64L212.67,60.46L213.79,67.87L218.54,72.24L222.56,74.08L226.97,75.88L227.66,81.55L231.81,84.63L236.44,87.76L235.35,94.21L233.64,101.42L231.52,106.96L232.17,112.09L235.79,114.25L239.78,118.09L244.45,118.82L249.61,118.9L254.43,121.16L259,122.62L263.7,122.1L266.39,126.89L271.07,130.58L274.66,132.9L279.28,134.64L283.75,137.66L285.11,141.52L287.41,145.01L292.18,146.99L294.77,151.49L294.93,157.92L295.54,164.59L296.89,171.03L293.06,173.55L289.94,176.38L283.56,177.8L278.66,179.67L273.19,181.98L268.67,184.4L265.34,186.5L264.05,190.52L262.53,195.7L259.89,200.54L258.1,205.69L260.78,210.04L260.97,217.36L261.44,223.68L265.37,224.82L268.85,227.86L273.2,229.82L276.92,233.43L279.43,237.75L284.76,240.18L289.51,242.47L292.78,243.75L297.37,244.62L300.3,247L301.27,252.18L305.19,256.41L307.47,263.11L309.76,269.54L310.83,275.87L315.6,279.38L320.6,278.49L320.99,275.2L325.57,274.02L329.62,275.14L328.54,270.82L324.69,268.57L323.42,263.82L324.12,259.37L328.94,258.2L331.62,261.43L335.5,257.73L336.94,262.13L338.55,268.08L340.21,273.7L347.39,274.82L352.05,276.21L353.46,280.77L357.11,282.42L360.63,283.4L364.85,281.98L370.66,282.27L374.28,282.41L376.06,285.86L380.24,288.47L385.57,287.95L389.33,291.89L391.3,294.88L395.92,290.01L400.64,289.16L404.88,289.35L409.01,288.63L413.75,286.97L418.43,286.34L423.07,287.87L427.63,287.72L431.82,288.7L435.7,289.42L438.73,291.4L441.48,294.54L443.31,298.85L446.84,300.79L451.4,299.37L454.8,293.66L457.36,287.96L462.52,285.15L466.56,281.9L470.18,280.27L472.87,277.46L471.91,272.75L474.02,267.46L475.37,262.8L476.1,257.29L478.86,253.66L484.31,255.18L489.28,258.06L492.52,254.26L496.9,252.49L500.65,254.39L501.53,258.83L503.24,264.37L506.97,268.97L511.12,268.5L515.23,268.25L518.57,271.17L520.7,275.52L518.97,280.08L521.37,286.19L524.44,289.98L527.81,289.58L531.41,289.31L534.93,285.99L539.56,287.16L544.52,287.92L549.47,287.6L553.63,283.7L555.83,277.01L559.64,273.41L564.31,273.2L566.6,276.95L569.79,280.03L573.43,277.79L578.16,278.33L580.93,282.93L585.61,285.68L589.07,285.72L593.45,285.82L597.52,284.65L602.01,285.05L605.58,281.74L607.79,277.45L603.86,274.46L600.37,271.53L595.76,269.31L591.3,264.28L588.49,259.23L591.98,257.7L595.27,258.51L598.48,259.59L602.15,260.41L606.29,260.14L610.75,260.12L615.01,259.21L613.68,253.93L611.76,249.75L613.05,245.04L614.41,241.17L617.98,239.39L621.86,237.1L624.91,235.44L626.27,238.98L630.25,239.2L630.6,243.91L631.06,248.27L635.34,249.26L640.38,246.4L640.05,238.51L636.84,235.53L637.44,231.5L633.81,228.75L631.21,224.82L632.04,218.91L628.57,215.24L628.91,209.63L630.53,204.44L631.12,199.83L635.06,197.16L637.75,192.71L636.5,187.56L632.96,184.78L629.91,181.23L625.87,179.05L622.07,181.3L617.79,183.15L612.82,185.53L609.43,186.91L603.55,187.42L598.83,187.21L596.26,184.68L590.74,182.47L587.78,185.02L582.64,184.8L578.81,184.02L574.67,180.01L570.35,178.92L566.61,180.05L563.79,175.39L558.84,176.23L553.71,174.54L548.2,175.24L542.81,174.31L538.62,174.38L534.03,173.38L530.68,169.13L525.14,170.52L521.52,168.16L518.61,165.45L508.34,159.7L505.02,156.74L501.79,150.74L495.21,148.83L492.4,151.84L487.66,152.69L482.02,156.51L476.09,156.63L469.78,152.43L466.46,150.85L463.17,150.7L457.94,144.86L455.87,138.49L452.42,135.97L448.83,134.57L447.6,129.98L444.97,127.2L439.92,121.87L436.59,118.11L435.71,112.4L440.34,108.8L442.38,102.06L441.11,96.87L441.14,91.27L439.69,87.46L438.99,82.43L442.45,79.08L441.23,75.06L437.69,74.04L433.46,74.75L432.09,69.24L431.13,64.04L427.21,59.02L429.41,54.95L432.26,51.79L435.28,50.08L437.95,44.78L438.06,38.89L439.29,33.32L440.3,29.33L435.89,29.68L430.59,28.55L426.2,25.59L427.11,21.48L433.6,17.93L428.49,15.19L424.06,11.51L419.41,9.11L415.32,9.93L411.06,7.34L407.46,6.06L403.97,5.61L401.14,7.81L397.61,4.8L394.17,1.67L389.67,0.19L384.88,0L384.88,0z\"/>\n\t\t\t<path d=\"M164.17,37.61L159.9,36.63L156.2,36.33L153.2,39.52L151.39,43.46L147.21,45.84L141.97,48.44L140.21,53.95L136.08,55.87L131.86,56.89L128.03,58.27L122.77,58.66L119.23,54.84L114.69,53.86L109.14,53.43L105.31,51.6L102.25,53.11L98.08,54.73L94.85,53.59L91.6,54.11L88.23,52.47L83.44,49.57L78.83,49.38L73.43,54.78L73.81,59.84L70.79,62.99L67.06,65.77L63.85,68.93L61.82,75.21L57.84,78.55L57.97,85.53L56.43,91.75L53.53,94.46L50.07,95.03L45.41,95.23L38.82,96.14L32.51,96.77L25.91,98.93L22.72,104.08L19.83,109.21L14.98,111.6L12.11,115.06L13.99,121.09L14.63,127.27L12.59,133.48L17.13,142.13L21.66,146.17L24.92,149.46L27.58,153.18L29.71,156.47L30.12,162.84L32.53,166.79L33.44,172.97L34.73,178.06L34.78,182.18L32.46,185.15L28.5,188.63L23.27,192.43L18.73,190.49L15.4,186.33L13.83,179.65L8.88,180.77L4.66,181.59L0.96,183.98L2.6,187.67L3.58,192.75L6.4,198.57L8.84,202.06L11.98,205.36L14.32,211.2L13.04,219.84L16.14,225.21L13.94,231.21L15.09,236.41L19.32,239.93L23.99,236.98L26.95,234.09L30.23,236.62L32.97,240.91L35.86,246.4L39.07,249.39L42.26,253.16L45.8,256.05L49.12,255.61L52.48,254.67L56.01,255.51L59.73,258.84L63.29,260.83L67.58,263.37L70.84,267.16L70.59,271.22L74.25,274.34L79.23,276.36L84.31,278.24L88.56,279.83L92.32,282.92L97.48,286.12L101.77,288.53L104.34,294.25L108.71,298.21L111.9,294.45L115.59,289.92L116.67,285.65L117.16,281.33L121.55,281.61L124.69,279.78L128.08,280.36L131.88,281.84L135.31,282.79L138.83,283.75L143.34,284.7L145.81,288.92L149.39,285.81L151.62,280.71L156.31,281.35L163.07,281.81L163.49,276.27L164.76,271.54L165.36,265.95L170.02,265.18L174.58,269.77L176,274.05L179.71,275.39L183.22,271.81L184.64,267.2L183.11,263.17L179.22,261.88L176.55,258.51L172.96,257.47L169.04,254.4L166.56,248.53L170.51,247.17L174.91,245.18L176.17,241.5L175.82,236.71L176.65,231.97L180.13,227.29L184.77,223.59L188.88,224.81L193.6,226.39L197.47,227.39L203.08,227.21L208.31,228.03L213.29,227.58L217.3,226.04L220.92,225.38L224.24,223.85L229.86,224.15L231.66,218.13L234.93,221.9L238.23,222.95L240.95,225.31L238.84,231.14L232.75,233.56L231.16,238.38L236.19,240.29L238.43,244.55L241.13,246.3L242.79,252.31L245.08,258.11L241.87,261.32L239.73,264.31L237.19,267.91L236.34,272.3L238.76,276.38L239.53,280.97L241.01,284.6L243.69,287.99L244.98,291.84L245.67,297.3L251.01,301.85L254.73,306.15L258.13,308.9L262.48,311.64L266.99,312.51L270.21,309.96L272.26,306.08L276.71,307.09L278.68,303.53L282.09,301.49L285.12,298.2L286.13,293.93L286.66,288.09L289.44,283.52L289.58,277.69L288.17,272.62L284.1,270.55L286.64,268.54L287.56,264.84L289.69,259.63L291.33,264.33L295.42,262.38L296.6,257.38L298.61,253.84L298.61,253.84L301.27,252.18L300.3,247L297.37,244.62L292.78,243.75L289.51,242.47L284.76,240.18L279.43,237.75L276.92,233.43L273.2,229.82L268.85,227.86L265.37,224.82L261.44,223.68L260.97,217.36L260.78,210.04L258.1,205.69L259.89,200.54L262.53,195.7L264.05,190.52L265.34,186.5L268.67,184.4L273.19,181.98L278.66,179.67L283.56,177.8L289.94,176.38L293.06,173.55L296.89,171.03L295.54,164.59L294.93,157.92L294.77,151.49L292.18,146.99L287.41,145.01L285.11,141.52L283.75,137.66L279.28,134.64L274.66,132.9L271.07,130.58L266.39,126.89L263.7,122.1L259,122.62L254.43,121.16L249.61,118.9L244.45,118.82L239.78,118.09L235.79,114.25L232.17,112.09L231.52,106.96L233.64,101.42L235.35,94.21L236.44,87.76L231.81,84.63L227.66,81.55L226.97,75.88L222.56,74.08L218.54,72.24L213.79,67.87L212.67,60.46L212.99,52.64L208.72,52.86L202.94,53.19L197.5,52.34L192.4,51.5L188.67,50.53L184.2,51.25L181.06,48.94L178.01,47.01L177.2,43.05L175.14,38.37L168.74,38.82L164.17,37.61zM286.55,256.5L285.68,252.86L289.84,250.78L289.84,250.78L285.69,252.86L286.55,256.49L289.52,259.45L286.55,256.5z\"/>\n\t\t\t<path d=\"M650.69,270.31L645.18,270.82L640.79,273.13L636.99,272.24L633.62,272L629.78,271.46L626.03,273.2L621.62,274.1L616.07,273.15L611.84,275.03L607.79,277.45L605.58,281.74L602.01,285.05L597.52,284.65L593.45,285.82L589.07,285.72L585.61,285.68L580.93,282.93L578.16,278.33L573.43,277.79L569.79,280.03L566.6,276.95L564.31,273.2L559.64,273.41L555.83,277.01L553.63,283.7L549.47,287.6L546.33,293.8L542.35,296.57L539.82,299.17L536.43,300.68L532.82,302.79L535.68,305.91L539.41,307.49L544.7,309.91L545.23,315.59L548.97,313.75L553.13,313.62L557.04,313.08L560.81,312.26L563.96,315.59L566.29,318.94L567.47,323.73L567.45,328.76L565.06,332.54L562.03,335.83L558.97,338.26L556.38,340.67L555.33,344.83L551.63,347.74L545.99,349.52L542.41,351.99L545.68,353.81L550,353.34L554.41,354.36L559.07,355.78L562.97,354.79L566.36,355.15L570.56,355.1L576.65,354.66L582.99,357.46L589.32,357.98L593.34,357.42L596.81,356.35L600.81,356.16L602.88,351.41L605.35,347.97L609.17,343.65L611.4,339.46L614.18,336.98L617.21,335.49L620.17,333.42L624.16,332.39L626.9,328.79L630.41,330.16L633.89,334.59L637.9,335.81L643.04,336.81L648.61,338.44L652.02,340.12L658.43,341.11L661.68,336.91L663.45,333.22L667.76,330.83L672.49,327.84L675.78,326.08L679.39,325.42L682.72,323.16L686.07,326.42L687.8,330.53L691.54,334.21L689.07,337.04L685.91,339.75L686.49,344.82L689.27,345.75L692.82,342.58L698.88,342.87L701.08,348.32L702.82,354.03L698.98,357.69L696.04,361.58L693.59,364.3L691.43,368.81L695.62,370.92L699.08,368.67L704.91,367.04L709.5,369.73L714.6,370.97L717.63,372.9L721.71,371.71L727.26,374.51L732.51,376.47L736.64,373.8L737.52,370.1L740.03,365.3L744.32,365.61L747.65,369.41L751.59,371.71L755.59,373.27L757.66,376.66L761.76,379.57L765.8,376.51L766.98,371.47L771.03,374.93L772.23,380.2L775.61,381.01L779.98,379.48L784.08,376.59L785.14,370.56L781.73,366.93L779.93,363.16L776.01,358.64L773.87,353.65L769.78,351.41L766.58,347.76L763.04,348.17L760.57,343.24L762.43,341.97L762.86,338.34L757.13,338.16L752.5,338.53L749.43,335.97L745.72,332.11L740.23,332.22L738.94,338.34L735.22,337.95L734.86,333.98L733.59,328.23L732.77,321.63L730.13,323.67L726.28,322.93L722.68,319.31L721.11,313.67L715.69,314.16L710.69,315.16L707.64,313.63L703.43,313.97L700.84,311.65L698.92,308.45L700.47,304.67L702.22,301.06L704.48,297.11L704.09,292.83L701.87,288.24L698,284.74L693.93,282.71L690.34,285.41L686.49,289.01L682.74,287.88L679.02,287.98L675.23,284.87L671.1,279.93L668.83,276.36L665.53,273.45L662,272.33L658.47,272.16L654.91,272.61L650.69,270.31z\"/>\n\t\t\t<path d=\"M545.23,315.59L544.7,309.91L539.41,307.49L539.94,310.58L539.57,314.92L535.85,318L531.6,318.17L526.52,318.7L522.42,317.84L518.19,318.23L512.8,319.16L508.06,318.22L504.34,320.05L500.5,320.86L493.18,321.42L488.9,324.56L483.78,327.23L478.36,328.45L474.43,329.1L470.94,331.34L466.54,332.23L463.01,330.52L460.12,329.57L458.96,334.89L457.52,339.39L456.22,342.9L454.54,348.67L454.7,354.43L452.11,359.08L452.29,365.92L453.83,371.51L456.56,375.28L453.12,379.78L458.69,380.6L462.59,383.46L466.44,384.69L471.1,385.47L476.23,384.6L482.58,385.46L486.83,386.59L490.61,387.33L495.54,386.29L500.11,384.88L504.64,387.73L509.07,392.18L511.29,396.13L515.57,397.66L521.53,398.69L527.19,396.6L533.1,393.6L538.16,394.96L544.01,394.42L548.34,391.79L552.17,389.28L552.33,384.07L554.27,379.95L558.45,379.04L561.69,377.06L564.21,374.64L568.36,372.18L571.16,366.77L575.03,362.08L578.94,359.45L582.99,357.46L576.65,354.66L570.56,355.1L566.36,355.15L562.97,354.79L559.07,355.78L554.41,354.36L550,353.34L545.68,353.81L542.41,351.99L545.99,349.52L551.63,347.74L555.33,344.83L556.38,340.67L558.97,338.26L562.03,335.83L565.06,332.54L567.45,328.76L567.47,323.73L566.29,318.94L563.96,315.59L560.81,312.26L557.04,313.08L553.13,313.62L548.97,313.75L545.23,315.59z\"/>\n\t\t\t<path d=\"M407.8,416.48L408.45,411.45L409.55,407.08L413.45,403.89L416.82,400.81L418.53,397.55L421.45,394L425.4,390.76L428.41,385.2L432.16,381.22L435.37,379.6L439.39,378.3L443.85,378.23L447.61,379.49L453.12,379.78L456.56,375.28L453.83,371.51L452.29,365.92L452.11,359.08L454.7,354.43L454.54,348.67L456.22,342.9L457.52,339.39L458.96,334.89L460.12,329.57L456.14,328.21L450.94,327.98L447.1,328.25L443.58,326.75L440.25,322.9L439.8,316.74L441.44,313.16L443.27,309.22L442.03,303.42L443.31,298.85L441.48,294.54L438.73,291.4L435.7,289.42L431.82,288.7L427.63,287.72L423.07,287.87L418.43,286.34L413.75,286.97L409.01,288.63L404.88,289.35L400.64,289.16L395.92,290.01L391.3,294.88L389.33,291.89L385.57,287.95L380.24,288.47L376.06,285.86L374.28,282.41L370.66,282.27L364.85,281.98L360.63,283.4L357.11,282.42L353.46,280.77L352.05,276.21L347.39,274.82L340.21,273.7L338.55,268.08L336.94,262.13L335.5,257.73L331.62,261.43L328.94,258.2L324.12,259.37L323.42,263.82L324.69,268.57L328.54,270.82L329.62,275.14L325.57,274.02L320.99,275.2L320.6,278.49L315.6,279.38L310.83,275.87L309.76,269.54L307.47,263.11L305.19,256.41L301.27,252.18L298.61,253.84L296.61,257.38L295.42,262.38L291.33,264.33L289.69,259.63L287.56,264.84L286.64,268.54L284.1,270.55L288.17,272.62L289.58,277.69L289.44,283.52L286.66,288.09L286.13,293.93L285.12,298.2L282.09,301.49L278.68,303.53L276.71,307.09L272.26,306.08L270.21,309.96L266.99,312.51L262.48,311.64L258.13,308.9L254.73,306.15L251.01,301.85L245.67,297.3L244.98,291.84L243.69,287.99L241.01,284.6L239.53,280.97L238.76,276.38L236.34,272.3L237.19,267.91L239.73,264.31L241.87,261.32L245.08,258.11L242.79,252.31L241.13,246.3L238.43,244.55L236.19,240.29L231.16,238.38L232.75,233.56L238.84,231.14L240.95,225.31L238.23,222.95L234.93,221.9L231.66,218.13L229.86,224.15L224.24,223.85L220.92,225.38L217.3,226.04L213.29,227.58L208.31,228.03L203.08,227.21L197.47,227.39L193.6,226.39L188.88,224.81L184.77,223.59L180.13,227.29L176.65,231.97L175.82,236.71L176.17,241.5L174.91,245.18L170.51,247.17L166.56,248.53L169.04,254.4L172.96,257.47L176.55,258.51L179.22,261.88L183.11,263.17L184.64,267.2L183.22,271.81L179.71,275.39L176,274.05L174.58,269.77L170.02,265.18L165.36,265.95L164.76,271.54L163.49,276.27L163.07,281.81L156.31,281.35L151.62,280.71L149.39,285.81L145.81,288.92L146.61,293.96L150.54,296.51L154.61,298.31L158.62,300.47L162.05,302.54L164.36,305.64L167.43,307.89L171.56,312.26L175.53,312.92L178.83,314.11L181.86,315.88L185.39,316.67L188.71,319.59L192.53,323.59L194.83,328.2L197.16,331.67L199.48,334.39L202.92,335.32L206.98,332.39L211.17,329.7L215.66,329.5L220.68,331.24L223.76,333.8L224.05,338.62L226.06,343.15L226.64,347.83L231.33,349.97L234.76,353.91L239.41,354.94L243.92,358.54L251.24,361.5L254.72,360.65L258.34,357.68L262.15,359.84L262.13,363.94L260.03,367.01L260.46,371.88L264.29,373.33L269.6,374.05L274.29,372.66L277.58,374.06L281.89,372.28L284.35,376.01L287.49,379.32L290.09,383.78L292.14,387.56L294.79,391.07L297.87,388.3L298.01,383.28L300.88,380.84L302.58,386.18L306.11,388.94L309.27,390.55L312.69,389.52L315.35,384.72L320.34,382.87L323.25,384.6L326.32,386.47L330.02,388.48L333.3,389.58L337.19,393.27L341.77,394.4L345.2,394.41L350.12,394.05L355.55,394.28L359.52,395.17L363.92,391.53L370.07,391.34L375.26,391.34L378.95,389.2L382.5,388.76L387.19,387.34L391.96,384.76L395.24,382.7L400.06,384.43L403.52,388.42L405.05,392.72L404.14,398.56L402.98,402.76L401.41,407.01L401.55,410.92L403.78,414.1L407.8,416.48L407.8,416.48z\"/>\n\t\t</g>\n\t</svg>\n</div>\n\n<p>SVG中的pattern元素，让预定义图形以固定间隔在x轴和y轴上重复或平铺，从而覆盖需要涂色或添加纹理的区域。</p>\n<p>在defs中预定义pattern图案元素，在图形元素上使用属性<code>fill=&quot;url(#id)&quot;</code>或<code>stroke=&quot;url(#id)&quot;</code>来引用填充或描边的图案。</p>\n<h2 id=\"DOM工具\"><a href=\"#DOM工具\" class=\"headerlink\" title=\"DOM工具\"></a>DOM工具</h2><p>操作SVG及其图形元素DOM的方法，包括选择、创建、设置属性等。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> tool = (<span class=\"function\"><span class=\"params\">root</span> =&gt;</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> doc = root.document</div><div class=\"line\">    <span class=\"keyword\">const</span> xlink = <span class=\"string\">'http://www.w3.org/1999/xlink'</span></div><div class=\"line\">    <span class=\"keyword\">const</span> xmlns = <span class=\"string\">'http://www.w3.org/2000/svg'</span></div><div class=\"line\">    <span class=\"keyword\">const</span> tool = &#123;&#125;</div><div class=\"line\"><br></div><div class=\"line\">    tool.select = <span class=\"function\">(<span class=\"params\">el, str</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!str) &#123;</div><div class=\"line\">            str = el</div><div class=\"line\">            el = doc</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> doc.querySelector(str)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    tool.selectAll = <span class=\"function\">(<span class=\"params\">el, str</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!str) &#123;</div><div class=\"line\">            str = el</div><div class=\"line\">            el = doc</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> doc.querySelectorAll(str)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    tool.attr = <span class=\"function\">(<span class=\"params\">el, attr</span>) =&gt;</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> attr) &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> val = <span class=\"built_in\">String</span>(attr[key])</div><div class=\"line\">            <span class=\"keyword\">if</span> (val) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (key.substring(<span class=\"number\">0</span>, <span class=\"number\">6</span>) == <span class=\"string\">'xlink:'</span>) &#123;</div><div class=\"line\">                    el.setAttributeNS(xlink, key.substring(<span class=\"number\">6</span>), val)</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key.substring(<span class=\"number\">0</span>, <span class=\"number\">4</span>) == <span class=\"string\">\"xml:\"</span>) &#123;</div><div class=\"line\">                    el.setAttributeNS(xmlns, key.substring(<span class=\"number\">4</span>), val)</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    el.setAttribute(key, val)</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                el.removeAttribute(key)</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    tool.create = <span class=\"function\"><span class=\"params\">el</span> =&gt;</span> doc.createElementNS(xmlns, el)</div><div class=\"line\"><br></div><div class=\"line\">    <span class=\"keyword\">return</span> tool</div><div class=\"line\">&#125;)(<span class=\"built_in\">window</span> || <span class=\"keyword\">this</span>)</div></pre></figure>\n<h2 id=\"纹理类\"><a href=\"#纹理类\" class=\"headerlink\" title=\"纹理类\"></a>纹理类</h2><figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LineTexture</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(args) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.size = args.size || <span class=\"number\">20</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.stroke = args.stroke || <span class=\"string\">'#a9aca5'</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.strokeWidth = args.strokeWidth || <span class=\"number\">2</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.background = args.background || <span class=\"string\">''</span></div><div class=\"line\">        <span class=\"keyword\">this</span>.orientations = args.orientations || [<span class=\"string\">'2/8'</span>]</div><div class=\"line\">        <span class=\"keyword\">this</span>.svg = args.svg</div><div class=\"line\">        <span class=\"keyword\">this</span>.id = <span class=\"keyword\">this</span>.random()</div><div class=\"line\">        <span class=\"keyword\">this</span>.svg &amp;&amp; <span class=\"keyword\">this</span>.init()</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    path(orientation) &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> s = <span class=\"keyword\">this</span>.size</div><div class=\"line\">        <span class=\"keyword\">switch</span> (orientation) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'0/8'</span>:</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">`M<span class=\"subst\">$&#123;s<span class=\"regexp\">/4&#125;,0 l0,$&#123;s&#125; M$&#123;3/</span><span class=\"number\">4</span>*s&#125;</span>,0 l0,<span class=\"subst\">$&#123;s&#125;</span>`</span></div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'1/8'</span>:</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">`M<span class=\"subst\">$&#123;s<span class=\"regexp\">/4&#125;,0 l$&#123;s/</span><span class=\"number\">2</span>&#125;</span>,<span class=\"subst\">$&#123;s&#125;</span> M<span class=\"subst\">$&#123;-s<span class=\"regexp\">/4&#125;,0 l$&#123;s/</span><span class=\"number\">2</span>&#125;</span>,<span class=\"subst\">$&#123;s&#125;</span> M<span class=\"subst\">$&#123;s*<span class=\"number\">3</span><span class=\"regexp\">/4&#125;,0 l$&#123;s/</span><span class=\"number\">2</span>&#125;</span>,<span class=\"subst\">$&#123;s&#125;</span>`</span></div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">'2/8'</span>:</div><div class=\"line\">                <span class=\"comment\">// 省略...</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    url() &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`url(#<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.id&#125;</span>)`</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    init() &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> svg = <span class=\"keyword\">this</span>.svg.nodeType ? <span class=\"keyword\">this</span>.svg : tool.select(<span class=\"keyword\">this</span>.svg)</div><div class=\"line\">        <span class=\"keyword\">const</span> defs = tool.select(svg, <span class=\"string\">'defs'</span>)</div><div class=\"line\">        <span class=\"keyword\">const</span> pattern = tool.create(<span class=\"string\">'pattern'</span>)</div><div class=\"line\"><br></div><div class=\"line\">        tool.attr(pattern, &#123;</div><div class=\"line\">            id: <span class=\"keyword\">this</span>.id,</div><div class=\"line\">            width: <span class=\"keyword\">this</span>.size,</div><div class=\"line\">            height: <span class=\"keyword\">this</span>.size,</div><div class=\"line\">            patternUnits: <span class=\"string\">'userSpaceOnUse'</span></div><div class=\"line\">        &#125;)</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.background) &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> rect = tool.create(<span class=\"string\">'rect'</span>)</div><div class=\"line\">            tool.attr(rect, &#123;</div><div class=\"line\">                width: <span class=\"keyword\">this</span>.size,</div><div class=\"line\">                height: <span class=\"keyword\">this</span>.size,</div><div class=\"line\">                fill: <span class=\"keyword\">this</span>.background</div><div class=\"line\">            &#125;)</div><div class=\"line\">            pattern.appendChild(rect)</div><div class=\"line\">        &#125;</div><div class=\"line\"><br></div><div class=\"line\">        <span class=\"keyword\">this</span>.orientations.forEach(<span class=\"function\"><span class=\"params\">o</span> =&gt;</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">const</span> path = tool.create(<span class=\"string\">'path'</span>)</div><div class=\"line\">            tool.attr(path, &#123;</div><div class=\"line\">                stroke: <span class=\"keyword\">this</span>.stroke,</div><div class=\"line\">                <span class=\"string\">'stroke-width'</span>: <span class=\"keyword\">this</span>.strokeWidth,</div><div class=\"line\">                <span class=\"string\">'stroke-linecap'</span>: <span class=\"string\">'square'</span>,</div><div class=\"line\">                d: <span class=\"keyword\">this</span>.path(o)</div><div class=\"line\">            &#125;)</div><div class=\"line\">            pattern.appendChild(path)</div><div class=\"line\">        &#125;)</div><div class=\"line\"><br></div><div class=\"line\">        defs.appendChild(pattern)</div><div class=\"line\">    &#125;</div><div class=\"line\"><br></div><div class=\"line\">    random() &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.random().toString(<span class=\"number\">36</span>)</div><div class=\"line\">            .replace(<span class=\"regexp\">/[^a-z]+/g</span>, <span class=\"string\">''</span>)</div><div class=\"line\">            .slice(<span class=\"number\">0</span>, <span class=\"number\">5</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></figure>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>选择SVG画布，设置其尺寸；找到全部path路径子元素；为每个path初始化纹理实例对象LineTexture，并设置纹理pattern的id引用填充。</p>\n<figure class=\"highlight javascript\"><pre><div class=\"line\"><span class=\"keyword\">const</span> svg = tool.select(<span class=\"string\">'#tibet'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> width = <span class=\"built_in\">Math</span>.min(svg.parentNode.clientWidth, <span class=\"number\">410</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> height = width * <span class=\"number\">440</span> / <span class=\"number\">820</span></div><div class=\"line\">tool.attr(svg, &#123;</div><div class=\"line\">    width,</div><div class=\"line\">    height</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"keyword\">const</span> pathList = tool.selectAll(svg, <span class=\"string\">'path'</span>)</div><div class=\"line\"><span class=\"keyword\">const</span> colors = [<span class=\"string\">'#f2f6ed'</span>, <span class=\"string\">'#f3f6ee'</span>, <span class=\"string\">'#f3f7ef'</span>, <span class=\"string\">'#f4f7f0'</span>, <span class=\"string\">'#f5f8f1'</span>, <span class=\"string\">'#f5f8f2'</span>, <span class=\"string\">'#f6f9f3'</span>]</div><div class=\"line\"><br></div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.forEach.call(pathList, (path, i) =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> url = <span class=\"keyword\">new</span> LineTexture(&#123;</div><div class=\"line\">        svg,</div><div class=\"line\">        background: colors[i],</div><div class=\"line\">        orientations: [<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>/8`</span>]</div><div class=\"line\">    &#125;).url()</div><div class=\"line\"><br></div><div class=\"line\">    tool.attr(path, &#123;</div><div class=\"line\">        fill: url</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;)</div></pre></figure>\n<p><cite>参考：<br><a href=\"http://snapsvg.io/\" target=\"_blank\" rel=\"noopener\">http://snapsvg.io/</a><br><a href=\"https://riccardoscalco.it/textures/\" target=\"_blank\" rel=\"noopener\">https://riccardoscalco.it/textures/</a></cite></p>\n\n<script>\nconst tool = (root => {\n    const doc = root.document\n    const xlink = 'http://www.w3.org/1999/xlink'\n    const xmlns = 'http://www.w3.org/2000/svg'\n    const tool = {}\n\n    tool.select = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelector(str)\n    }\n\n    tool.selectAll = (el, str) => {\n        if (!str) {\n            str = el\n            el = doc\n        }\n        return doc.querySelectorAll(str)\n    }\n\n    tool.attr = (el, attr) => {\n        for (let key in attr) {\n            const val = String(attr[key])\n            if (val) {\n                if (key.substring(0, 6) == 'xlink:') {\n                    el.setAttributeNS(xlink, key.substring(6), val)\n                } else if (key.substring(0, 4) == \"xml:\") {\n                    el.setAttributeNS(xmlns, key.substring(4), val)\n                } else {\n                    el.setAttribute(key, val)\n                }\n            } else {\n                el.removeAttribute(key)\n            }\n        }\n    }\n\n    tool.create = el => doc.createElementNS(xmlns, el)\n\n    return tool\n})(window || this)\n\n\nclass LineTexture {\n    constructor(args) {\n        this.size = args.size || 20\n        this.stroke = args.stroke || '#a9aca5'\n        this.strokeWidth = args.strokeWidth || 2\n        this.background = args.background || ''\n        this.orientations = args.orientations || ['2/8']\n        this.svg = args.svg\n        this.id = this.random()\n        this.svg && this.init()\n    }\n\n    path(orientation) {\n        const s = this.size\n        switch (orientation) {\n            case '0/8':\n                return `M${s/4},0 l0,${s} M${3/4*s},0 l0,${s}`\n            case '1/8':\n                return `M${s/4},0 l${s/2},${s} M${-s/4},0 l${s/2},${s} M${s*3/4},0 l${s/2},${s}`\n            case '2/8':\n                return `M0,${s} l${s},${-s} M${-s/4},${s/4} l${s/2},${-s/2} M${3/4*s},${5/4*s} l${s/2},${-s/2}`\n            case '3/8':\n                return `M0,${3/4*s} l${s},${-s/2} M0,${s/4} l${s},${-s/2} M0,${s*5/4} l${s},${-s/2}`\n            case '4/8':\n                return `M0,${s/4} l${s},0 M0,${3/4*s} l${s},0`\n            case '5/8':\n                return `M0,${-s/4} l${s},${s/2} M0,${s/4} l${s},${s/2} M0,${s*3/4} l${s},${s/2}`\n            case '6/8':\n                return `M0,0 l${s},${s} M${-s/4},${3/4*s} l${s/2},${s/2} M${s*3/4},${-s/4} l${s/2},${s/2}`\n            case '7/8':\n                return `M${-s/4},0 l${s/2},${s} M${s/4},0 l${s/2},${s} M${s*3/4},0 l${s/2},${s}`\n            default:\n                return `M${s/2},0 l0,${s}`\n        }\n    }\n\n    url() {\n        return `url(#${this.id})`\n    }\n\n    init() {\n        const svg = this.svg.nodeType ? this.svg : tool.select(this.svg)\n        const defs = tool.select(svg, 'defs')\n        const pattern = tool.create('pattern')\n\n        tool.attr(pattern, {\n            id: this.id,\n            width: this.size,\n            height: this.size,\n            patternUnits: 'userSpaceOnUse'\n        })\n\n        if (this.background) {\n            const rect = tool.create('rect')\n            tool.attr(rect, {\n                width: this.size,\n                height: this.size,\n                fill: this.background\n            })\n            pattern.appendChild(rect)\n        }\n\n        this.orientations.forEach(o => {\n            const path = tool.create('path')\n            tool.attr(path, {\n                stroke: this.stroke,\n                'stroke-width': this.strokeWidth,\n                'stroke-linecap': 'square',\n                d: this.path(o)\n            })\n            pattern.appendChild(path)\n        })\n\n        defs.appendChild(pattern)\n    }\n\n    random() {\n        return Math.random().toString(36)\n            .replace(/[^a-z]+/g, '')\n            .slice(0, 5)\n    }\n}\n\n\nconst svg = tool.select('#tibet')\nconst width = Math.min(svg.parentNode.clientWidth, 410)\nconst height = width * 440 / 820\ntool.attr(svg, {\n    width,\n    height\n})\nconst pathList = tool.selectAll(svg, 'path')\nconst colors = ['#f2f6ed', '#f3f6ee', '#f3f7ef', '#f4f7f0', '#f5f8f1', '#f5f8f2', '#f6f9f3']\n\nArray.prototype.forEach.call(pathList, (path, i) => {\n    const url = new LineTexture({\n        svg,\n        background: colors[i],\n        orientations: [`${i}/8`]\n    }).url()\n\n    tool.attr(path, {\n        fill: url\n    })\n})\n</script>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck160emxj00003a8i8xl8wjp7","category_id":"ck160emxo00023a8iop15n588","_id":"ck160emxv00093a8i7y6ux0yo"},{"post_id":"ck160emxm00013a8ix8mxv919","category_id":"ck160emxs00063a8ivpufg767","_id":"ck160emy0000d3a8i4zpw4ued"},{"post_id":"ck160emxv00083a8i76nvofsx","category_id":"ck160emxo00023a8iop15n588","_id":"ck160emy3000g3a8i7zpm378t"},{"post_id":"ck160emxy000c3a8i6tc3cx4e","category_id":"ck160emxo00023a8iop15n588","_id":"ck160emy5000j3a8ixcwr4zz6"},{"post_id":"ck160emxt00073a8igwlnhpus","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emy6000m3a8ihjyfq3pt"},{"post_id":"ck160emy3000h3a8ibs0e7t8h","category_id":"ck160emxo00023a8iop15n588","_id":"ck160emy7000o3a8i3lykidnx"},{"post_id":"ck160emxw000b3a8ivmrenvji","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emy8000q3a8ijovw14go"},{"post_id":"ck160emy4000i3a8ikxm8rzwb","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emy9000s3a8iuqqwrfdl"},{"post_id":"ck160emy5000l3a8i4bw9mfue","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyb000u3a8ilqn9cqd7"},{"post_id":"ck160emy0000e3a8if4vt7d4k","category_id":"ck160emy5000k3a8iebq30996","_id":"ck160emye000w3a8i1desi5tc"},{"post_id":"ck160emy6000n3a8isietmzod","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyf000y3a8iyrgjdz4a"},{"post_id":"ck160emy8000p3a8iow9tiab9","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyg00103a8iebi7mlhp"},{"post_id":"ck160emy9000r3a8illwbii51","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyk00123a8izmggjwt9"},{"post_id":"ck160emya000t3a8iiv36fwys","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyl00143a8inzjsq2sz"},{"post_id":"ck160emyd000v3a8i8k4geb27","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emym00163a8ikyc5l1n1"},{"post_id":"ck160emyf000x3a8iezb1z6yo","category_id":"ck160emy5000k3a8iebq30996","_id":"ck160emyn00183a8i6jox8xt3"},{"post_id":"ck160emyg000z3a8is9ffd0vi","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyo001a3a8ikvnaemeq"},{"post_id":"ck160emyh00113a8i1t0nby57","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyp001c3a8imvl5nktl"},{"post_id":"ck160emyl00133a8im2cuke34","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyq001e3a8i1spj5277"},{"post_id":"ck160emym00153a8i7dex20ev","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyr001g3a8ibyfm1jca"},{"post_id":"ck160emym00173a8ib3iwa881","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emys001i3a8i3g7mnppe"},{"post_id":"ck160emyn00193a8iq85zf723","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyt001k3a8i5w0k3914"},{"post_id":"ck160emyo001b3a8i8d05qhn1","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyv001n3a8izamn3944"},{"post_id":"ck160emyp001d3a8iyv21uy00","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyv001p3a8igfy8mytl"},{"post_id":"ck160emyq001f3a8i423n7xzi","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyw001r3a8iglml4z0l"},{"post_id":"ck160emyt001j3a8ikglr7dt4","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyx001t3a8iclpala29"},{"post_id":"ck160emyu001m3a8ihta5xzve","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyy001v3a8i2qkn9ww6"},{"post_id":"ck160emyv001o3a8iukk7tvxn","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emyz001x3a8iw9ly79e4"},{"post_id":"ck160emys001h3a8inhjd3esi","category_id":"ck160emyu001l3a8i44gfxxbw","_id":"ck160emz0001z3a8ig5l5ejte"},{"post_id":"ck160emyw001q3a8i60ibe3u4","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emz100213a8ijb1wpsqo"},{"post_id":"ck160emyx001s3a8iabaawh7i","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emz200233a8idodhelny"},{"post_id":"ck160emyy001u3a8iq705d5ln","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emz300253a8iysn5awlk"},{"post_id":"ck160emyz001w3a8i4jc673d4","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emz300273a8iec4i847x"},{"post_id":"ck160emyz001y3a8i0r2oltvd","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emz400293a8iduqs4d6o"},{"post_id":"ck160emz000203a8i3r37vg8n","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emz6002b3a8ikrguwryw"},{"post_id":"ck160emz100223a8iz5rp27bi","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emz7002d3a8iujqla2ll"},{"post_id":"ck160emz200243a8izbcgl7i1","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emz8002f3a8itga7x4wd"},{"post_id":"ck160emz300263a8ig2qeg5yz","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emza002h3a8ithfewxco"},{"post_id":"ck160emz400283a8il8xcop50","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzc002k3a8igdsf9d2n"},{"post_id":"ck160emz5002a3a8i758bzb3n","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzd002m3a8intluyexq"},{"post_id":"ck160emz6002c3a8izkavet03","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emze002o3a8i0ixbni78"},{"post_id":"ck160emza002g3a8i8rwyhdta","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzf002q3a8i8mzcn3az"},{"post_id":"ck160emzb002j3a8ipg7einvw","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzh002s3a8i4cqdzcrl"},{"post_id":"ck160emzc002l3a8ijy1vgu9z","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzh002u3a8iqbyi64eu"},{"post_id":"ck160emz8002e3a8ipkzculjo","category_id":"ck160emzb002i3a8i5t6ukz2m","_id":"ck160emzi002w3a8igv6kta8x"},{"post_id":"ck160emzd002n3a8i6sfq98m7","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzj002y3a8iuhdcj4xq"},{"post_id":"ck160emzf002p3a8ise883br2","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzk00303a8it8oi0txf"},{"post_id":"ck160emzg002r3a8iqztl6q5i","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzm00323a8igcs52nwt"},{"post_id":"ck160emzh002t3a8izszgcwiz","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzn00343a8iquqnxdm3"},{"post_id":"ck160emzi002v3a8ijdgcwnpm","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzp00363a8iu7zi7rz9"},{"post_id":"ck160emzj002x3a8ih4v82ofj","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzq00383a8iplh4eh3t"},{"post_id":"ck160emzj002z3a8ipnmvdgaf","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzs003a3a8i9mp7dddh"},{"post_id":"ck160emzk00313a8i1im9x5w8","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzs003b3a8ilr1ja44i"},{"post_id":"ck160emzm00333a8iut1wja42","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzs003c3a8ijxnh1i66"},{"post_id":"ck160emzo00353a8i7bccm1db","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzt003d3a8i0364442i"},{"post_id":"ck160emzp00373a8imdi86qx1","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160emzt003e3a8i57cdh1cq"},{"post_id":"ck160emzr00393a8imdgwuew6","category_id":"ck160emyu001l3a8i44gfxxbw","_id":"ck160emzt003f3a8i45ziowz5"},{"post_id":"ck160en02003g3a8iisoatbzu","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160en08003k3a8i2zg8aneh"},{"post_id":"ck160en03003h3a8ihun0aaro","category_id":"ck160emy5000k3a8iebq30996","_id":"ck160en09003m3a8ib5o7eptr"},{"post_id":"ck160en06003i3a8i0lkwx6yb","category_id":"ck160emy5000k3a8iebq30996","_id":"ck160en0a003o3a8it78vh8s1"},{"post_id":"ck160en07003j3a8ipoit4nca","category_id":"ck160emxw000a3a8ipthxfcgz","_id":"ck160en0b003p3a8iwhbxubkg"},{"post_id":"ck160en08003l3a8i21zphgao","category_id":"ck160emy5000k3a8iebq30996","_id":"ck160en0b003q3a8issdjzgs0"},{"post_id":"ck160en0a003n3a8iyo69tf0t","category_id":"ck160emzb002i3a8i5t6ukz2m","_id":"ck160en0b003r3a8i7yc5v85c"},{"post_id":"ck160en1g003s3a8iaithxe1x","category_id":"ck160en1h003t3a8ih1x1i8n6","_id":"ck160en1h003u3a8i4jsif1hb"}],"PostTag":[],"Tag":[]}}