{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yolog/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yolog/source/js/script.js","path":"js/script.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/yolog/_config.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535526300918},{"_id":"source/.DS_Store","hash":"367962a20656ed16008bc3c56712d0b467a98842","modified":1539852002774},{"_id":"themes/yolog/.DS_Store","hash":"cbd5084cfc6f250e4c8195fb6537e7b74b050d75","modified":1539850615516},{"_id":"themes/yolog/languages/default.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535527209469},{"_id":"themes/yolog/scripts/temp","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1535527689803},{"_id":"source/_posts/color-darken-lighten.md","hash":"d369ace997d0ee0352783baf8e530c0f2d5187b6","modified":1539930683345},{"_id":"themes/yolog/layout/_layout.pug","hash":"a552acfc060bb7c92a3a92a3742e06e84d37d5aa","modified":1538975518176},{"_id":"themes/yolog/layout/index.pug","hash":"85a9bca8a22a5cdc38ca6ea1d5815158892d8a6a","modified":1539842417401},{"_id":"themes/yolog/source/.DS_Store","hash":"7da6a245e0bf6c8e7ad4d30aca501d9df39e9c47","modified":1539851702672},{"_id":"themes/yolog/layout/_partial/header.pug","hash":"800b589e289f6d17d951617647aeac29ec2e6114","modified":1538987718198},{"_id":"themes/yolog/layout/_partial/meta.pug","hash":"aa6f4af04edb3257e3b7f2e1ba7f9eda71454728","modified":1538274960258},{"_id":"themes/yolog/layout/_partial/signature.pug","hash":"df6d35ad432c5e8af521efa72125dd5efa7699ec","modified":1538986648433},{"_id":"themes/yolog/layout/_partial/title.pug","hash":"4c58432443004dcf087b33a5548c0b1368ca1f60","modified":1538276062674},{"_id":"themes/yolog/source/css/_base.styl","hash":"f85dd68800737164d744cd0726efab779cc68be5","modified":1539927754573},{"_id":"themes/yolog/source/css/.DS_Store","hash":"9256cb29179ea689147bb719a02503f0aa54cf57","modified":1537843523879},{"_id":"themes/yolog/source/css/_responsive.styl","hash":"33cbbcb5d9d3125c8d40aef76b3eb41a72a6d7ad","modified":1539939236938},{"_id":"themes/yolog/source/css/_variables.styl","hash":"c2972e3a39d5a6f6b0c587a07098dca96d8ad69b","modified":1539931858312},{"_id":"themes/yolog/source/css/style.styl","hash":"93b0722efaebc133c65bd429be4f9c7b13758df8","modified":1539848019993},{"_id":"themes/yolog/source/js/script.js","hash":"302ece64a21eec44ce72d7a00e173633e0eab0e4","modified":1538975814239},{"_id":"themes/yolog/source/css/_partial/article.styl","hash":"03a7c632282f7c872d5f5cadc39228fb9282488b","modified":1539929211650},{"_id":"themes/yolog/source/css/_partial/header.styl","hash":"4ee976c2cbe7703b46f11895971030ca2a56638a","modified":1539840715966},{"_id":"themes/yolog/source/css/_partial/highlight.styl","hash":"6bd5372d4860fe41e2afcc1a0f4002e05b015e5a","modified":1539931994947},{"_id":"themes/yolog/source/css/_partial/list.styl","hash":"d160c47f484fad735a922d3d2c0e0b5c54e4a335","modified":1539841939884},{"_id":"themes/yolog/source/css/_partial/pagination.styl","hash":"e6bf0e419176f11592527938f3588e0324041fb7","modified":1539855150556},{"_id":"themes/yolog/source/css/_partial/signature.styl","hash":"68ee3d64ba28c7ce81e19ae5891e75adbb18e180","modified":1538986785992},{"_id":"public/code-snippets/color-darken-lighten.html","hash":"4a9dde0bc3097b0b4df0a0a3168421b0a0ff6903","modified":1539933208367},{"_id":"public/categories/code-snippets/index.html","hash":"0ea72163983e19d92c02597eb109192657f25949","modified":1539933208367},{"_id":"public/index.html","hash":"62cb36fef8a7ecdaab1905c705c4d52931c8530f","modified":1539933208368},{"_id":"public/js/script.js","hash":"302ece64a21eec44ce72d7a00e173633e0eab0e4","modified":1539933208492},{"_id":"public/css/style.css","hash":"b9cd7aeced45472bd80649e652330c7cb1914826","modified":1539933208492}],"Category":[{"name":"Code Snippets","_id":"cjnfoh0110001kn8i8kupaacm"}],"Data":[],"Page":[],"Post":[{"title":"颜色加深或减淡","date":"2018-10-19T06:26:28.000Z","keywords":"JavaScript, 颜色加深代码, 颜色减淡代码","description":"JavaScript颜色加深或减淡","_content":"\n``` JavaScript\nconst Color = function() {\n    this.HexToRgb = function(str) {\n        str = str.replace('#', '')\n        const hxs = str.match(/../g)\n        for (let i = 0; i < 3; i++) hxs[i] = parseInt(hxs[i], 16)\n        return hxs\n    }\n    this.RgbToHex = function(a, b, c) {\n        const hexs = [a.toString(16), b.toString(16), c.toString(16)]\n        for (let i = 0; i < 3; i++) {\n            if (hexs[i].length === 1) hexs[i] = '0' + hexs[i]\n        }\n        return '#' + hexs.join('')\n    }\n    this.getDarkColor = function(color, level) {\n        const rgbc = this.HexToRgb(color)\n        for (let i = 0; i < 3; i++) rgbc[i] = Math.floor(rgbc[i] * (1 - level))\n        return this.RgbToHex(rgbc[0], rgbc[1], rgbc[2])\n    }\n    this.getLightColor = function(color, level) {\n        const rgbc = this.HexToRgb(color)\n        for (let i = 0; i < 3; i++) rgbc[i] = Math.floor((255 - rgbc[i]) * level + rgbc[i])\n        return this.RgbToHex(rgbc[0], rgbc[1], rgbc[2])\n    }\n}\n\nconst colorFn = new Color()\n\n//colorFn.getDarkColor('#6CA3EF', 0.1)\n```","source":"_posts/color-darken-lighten.md","raw":"---\ntitle: 颜色加深或减淡\ndate: 2018-10-19 14:26:28\ncategories: Code Snippets\nkeywords: JavaScript, 颜色加深代码, 颜色减淡代码\ndescription: JavaScript颜色加深或减淡\n---\n\n``` JavaScript\nconst Color = function() {\n    this.HexToRgb = function(str) {\n        str = str.replace('#', '')\n        const hxs = str.match(/../g)\n        for (let i = 0; i < 3; i++) hxs[i] = parseInt(hxs[i], 16)\n        return hxs\n    }\n    this.RgbToHex = function(a, b, c) {\n        const hexs = [a.toString(16), b.toString(16), c.toString(16)]\n        for (let i = 0; i < 3; i++) {\n            if (hexs[i].length === 1) hexs[i] = '0' + hexs[i]\n        }\n        return '#' + hexs.join('')\n    }\n    this.getDarkColor = function(color, level) {\n        const rgbc = this.HexToRgb(color)\n        for (let i = 0; i < 3; i++) rgbc[i] = Math.floor(rgbc[i] * (1 - level))\n        return this.RgbToHex(rgbc[0], rgbc[1], rgbc[2])\n    }\n    this.getLightColor = function(color, level) {\n        const rgbc = this.HexToRgb(color)\n        for (let i = 0; i < 3; i++) rgbc[i] = Math.floor((255 - rgbc[i]) * level + rgbc[i])\n        return this.RgbToHex(rgbc[0], rgbc[1], rgbc[2])\n    }\n}\n\nconst colorFn = new Color()\n\n//colorFn.getDarkColor('#6CA3EF', 0.1)\n```","slug":"color-darken-lighten","published":1,"updated":"2018-10-19T06:31:23.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnfoh00x0000kn8i91xfama8","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Color = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.HexToRgb = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">        str = str.replace(<span class=\"string\">'#'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">        <span class=\"keyword\">const</span> hxs = str.match(<span class=\"regexp\">/../g</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) hxs[i] = <span class=\"built_in\">parseInt</span>(hxs[i], <span class=\"number\">16</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> hxs</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.RgbToHex = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b, c</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> hexs = [a.toString(<span class=\"number\">16</span>), b.toString(<span class=\"number\">16</span>), c.toString(<span class=\"number\">16</span>)]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (hexs[i].length === <span class=\"number\">1</span>) hexs[i] = <span class=\"string\">'0'</span> + hexs[i]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'#'</span> + hexs.join(<span class=\"string\">''</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getDarkColor = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">color, level</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> rgbc = <span class=\"keyword\">this</span>.HexToRgb(color)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) rgbc[i] = <span class=\"built_in\">Math</span>.floor(rgbc[i] * (<span class=\"number\">1</span> - level))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.RgbToHex(rgbc[<span class=\"number\">0</span>], rgbc[<span class=\"number\">1</span>], rgbc[<span class=\"number\">2</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getLightColor = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">color, level</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> rgbc = <span class=\"keyword\">this</span>.HexToRgb(color)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) rgbc[i] = <span class=\"built_in\">Math</span>.floor((<span class=\"number\">255</span> - rgbc[i]) * level + rgbc[i])</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.RgbToHex(rgbc[<span class=\"number\">0</span>], rgbc[<span class=\"number\">1</span>], rgbc[<span class=\"number\">2</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> colorFn = <span class=\"keyword\">new</span> Color()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//colorFn.getDarkColor('#6CA3EF', 0.1)</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Color = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.HexToRgb = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">        str = str.replace(<span class=\"string\">'#'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">        <span class=\"keyword\">const</span> hxs = str.match(<span class=\"regexp\">/../g</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) hxs[i] = <span class=\"built_in\">parseInt</span>(hxs[i], <span class=\"number\">16</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> hxs</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.RgbToHex = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b, c</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> hexs = [a.toString(<span class=\"number\">16</span>), b.toString(<span class=\"number\">16</span>), c.toString(<span class=\"number\">16</span>)]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (hexs[i].length === <span class=\"number\">1</span>) hexs[i] = <span class=\"string\">'0'</span> + hexs[i]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'#'</span> + hexs.join(<span class=\"string\">''</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getDarkColor = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">color, level</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> rgbc = <span class=\"keyword\">this</span>.HexToRgb(color)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) rgbc[i] = <span class=\"built_in\">Math</span>.floor(rgbc[i] * (<span class=\"number\">1</span> - level))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.RgbToHex(rgbc[<span class=\"number\">0</span>], rgbc[<span class=\"number\">1</span>], rgbc[<span class=\"number\">2</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getLightColor = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">color, level</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> rgbc = <span class=\"keyword\">this</span>.HexToRgb(color)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">3</span>; i++) rgbc[i] = <span class=\"built_in\">Math</span>.floor((<span class=\"number\">255</span> - rgbc[i]) * level + rgbc[i])</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.RgbToHex(rgbc[<span class=\"number\">0</span>], rgbc[<span class=\"number\">1</span>], rgbc[<span class=\"number\">2</span>])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> colorFn = <span class=\"keyword\">new</span> Color()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//colorFn.getDarkColor('#6CA3EF', 0.1)</span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjnfoh00x0000kn8i91xfama8","category_id":"cjnfoh0110001kn8i8kupaacm","_id":"cjnfoh0120002kn8iajus7qsp"}],"PostTag":[],"Tag":[]}}